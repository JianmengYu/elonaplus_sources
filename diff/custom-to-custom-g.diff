diff -U5 --recursive 1.90.4-custom/action.hsp 1.90.4.2-custom-g/action.hsp
--- 1.90.4-custom/action.hsp	2021-09-02 12:55:06.258317100 -0700
+++ 1.90.4.2-custom-g/action.hsp	2021-09-02 12:55:06.745294300 -0700
@@ -379,13 +379,15 @@
 				}
 			}
 			if ( synccheck(tc, -1) ) {
 				txt_hittarget
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_NORMAL_TACTICS, cc) + 1, 5, 80)
-				skillexp SKILL_WEAPON_THROWING, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_WEAPON_THROWING, cc) + 1, 5, 80)
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_NORMAL_TACTICS, cc) + 1, 5, 80)
+					skillexp SKILL_WEAPON_THROWING, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_WEAPON_THROWING, cc) + 1, 5, 80)
+				}
 			}
 			rowact_check tc
 			snd SOUNDLIST_ATK2
 			if ( tc >= MAX_CHARA_FOLLOWER ) {
 				hostileaction cc, tc
@@ -453,13 +455,15 @@
 		if ( map(tlocx, tlocy, 1) != 0 ) {
 			tc = map(tlocx, tlocy, 1) - 1
 			if ( synccheck(tc, -1) ) {
 				txt_hittarget
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_NORMAL_TACTICS, cc) + 1, 5, 80)
-				skillexp SKILL_WEAPON_THROWING, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_WEAPON_THROWING, cc) + 1, 5, 80)
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_NORMAL_TACTICS, cc) + 1, 5, 80)
+					skillexp SKILL_WEAPON_THROWING, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_WEAPON_THROWING, cc) + 1, 5, 80)
+				}
 			}
 			rowact_check tc
 			snd SOUNDLIST_ATK2
 			if ( tc >= MAX_CHARA_FOLLOWER ) {
 				hostileaction cc, tc
@@ -496,13 +500,15 @@
 			if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) != FILTER_ITEM_FOOD ) {
 				if ( synccheck(tc, -1) ) {
 					txt_hittarget
 				}
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_NORMAL_TACTICS, cc) + 1, 5, 80)
-				skillexp SKILL_WEAPON_THROWING, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_WEAPON_THROWING, cc) + 1, 5, 80)
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & tc != CHARA_PLAYER ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_NORMAL_TACTICS, cc) + 1, 5, 80)
+					skillexp SKILL_WEAPON_THROWING, cc, limit(sdata(SKILL_NORMAL_EVASION, tc) * 3 - sdata(SKILL_WEAPON_THROWING, cc) + 1, 5, 80)
+				}
 			}
 			rowact_check tc
 			if ( inv(INV_ITEM_ID, ci) != ITEM_ID_OHUDA ) {
 				snd SOUNDLIST_BASH1
 			}
@@ -884,11 +890,11 @@
 					gdata(GDATA_FLAG_GUILD_THIEF_NORMA) -= sellgold
 					if ( gdata(GDATA_FLAG_GUILD_THIEF_NORMA) < 0 ) {
 						gdata(GDATA_FLAG_GUILD_THIEF_NORMA) = 0
 					}
 					txtmore
-					txt lang("盗賊ギルドのノルマ達成まで、あと金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚相当の盗品を売却する必要がある。", "You still need to sell stuff worth " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "gp in order to advance ranks in the Thieves Guild.")
+					txt lang("盗賊ギルドのノルマ達成まで、あと金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚相当の盗品を売却する必要がある。", "You still need to sell stuff worth " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + " gold pieces in order to advance ranks in the Thieves Guild.")
 				}
 			}
 			snd SOUNDLIST_GETGOLD1
 			cdata(CDATA_GOLD, CHARA_PLAYER) += sellgold
 			cdata(CDATA_GOLD, tc) -= sellgold
@@ -1509,11 +1515,11 @@
 		}
 	}
 	cell_check cdata(CDATA_X_NEW, cc), cdata(CDATA_Y_NEW, cc)
 	if ( cdata(CDATA_BURDEN, CHARA_PLAYER) >= 4 ) {
 		msgdup++
-		txt lang("潰れていて動けない！ ", "You would be crushed if you moved!")
+		txt lang("潰れていて動けない！ ", "You carry too much to move!")
 		gosub *screen_draw
 		goto *pc_turn
 	}
 	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
 		if ( gdata(GDATA_CARGO_WEIGHT) > gdata(GDATA_CARGO_LIMIT) * 2 ) {
@@ -1662,13 +1668,15 @@
 					txtmore
 					dmghp tc, (sdata(SKILL_ACTIVE_RIDING, CHARA_PLAYER) / 4 + 4) * (sdata(SKILL_ATTR_WIL, CHARA_PLAYER) / 4 + 3) + rnd(sdata(SKILL_ATTR_SPD, CHARA_PLAYER) + 5), DAMAGE_FROM_CHARA, SKILL_RESDMG_CRUSH, 1000
 					if ( cdata(CDATA_CONDITION_WINCE, tc) < 0 ) {
 						cdata(CDATA_CONDITION_WINCE, tc) = 1
 					}
-					if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-						skillexp SKILL_ACTIVE_RIDING, CHARA_PLAYER, 30
-						skillexp SKILL_ACTIVE_RIDING, gdata(GDATA_RIDER), 20
+					if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+						if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+							skillexp SKILL_ACTIVE_RIDING, CHARA_PLAYER, 30
+							skillexp SKILL_ACTIVE_RIDING, gdata(GDATA_RIDER), 20
+						}
 					}
 					gosub *cell_info
 					goto *turn_end
 				}
 			}
@@ -1940,11 +1948,11 @@
 		if ( cdata(CDATA_CONDITION_WET, cc) == 0 ) {
 			wet cc, 20
 		}
 		if ( gdata(GDATA_FLAG_CHOCOLATE_KIT_YOURSELF) != 0 ) {
 			txtef COLOR_YELLOW
-			txt lang("付着していたチョコが流れ落ちた。", "Chocolate that adheres body was fell down.")
+			txt lang("付着していたチョコが流れ落ちた。", "Your chocolate coating was washed off.")
 			gdata(GDATA_FLAG_CHOCOLATE_KIT_YOURSELF) = 0
 		}
 	}
 	gosub *cell_info
 	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
@@ -2021,10 +2029,12 @@
 					encounterlv = cdata(CDATA_FAME, CHARA_PLAYER) / 1000
 					levelexitby = 4
 					goto *map_exit
 				}
 				if ( encounter == 3 ) {
+					txt lang("暗殺者につかまった。あなたはクライアントを守らなければならない。", "You are caught by assassins. You have to protect your client.")
+					msg_halt
 					gdata(GDATA_RETURN_AREA) = gdata(GDATA_AREA), gdata(GDATA_LEVEL), cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)
 					levelexitby = 4
 					goto *map_exit
 				}
 				if ( encounter == 2 ) {
@@ -2933,14 +2943,10 @@
 		inv(INV_ITEM_PARAM1, ri) = 0
 		gosub *effect
 		return
 	}
 	p = 3 + rnd(5)
-	if ( breakstr != 0 ) {
-		snd SOUNDLIST_AMMO
-		p = 2 + rnd(5)
-	}
 	if ( inv(INV_ITEM_ID, ri) == ITEM_ID_TREASURE_BALL | inv(INV_ITEM_ID, ri) == ITEM_ID_RARE_TREASURE_BALL | inv(INV_ITEM_ID, ri) == ITEM_ID_SMALL_GAMBLE_CHEST ) {
 		p = 1
 	}
 	randomize inv(INV_ITEM_PARAM3, ri)
 	repeat p
@@ -3735,10 +3741,13 @@
 	}
 	if ( attacknum > 1 | cc != CHARA_PLAYER ) {
 		txtmore
 	}
 	expmodifer = 1 + cbit(CHARA_BIT_SANDBAG, tc) * 1000 + cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) * 1000 + cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) * 1000 + (gdata(GDATA_AREA) == AREA_SHOW_HOUSE) * 1000
+	if ( TweakData(52, 2) == 1 ) {
+		expmodifer = 1 + cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) * 1000 + cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) * 1000 + (gdata(GDATA_AREA) == AREA_SHOW_HOUSE) * 1000
+	}
 	hit = calcattackhit()
 	i = 0
 	if ( hit == 1 ) {
 		dmg = calcattackdmg()
 		if ( cc == CHARA_PLAYER & cfg_attackanime == 1 | (cc < MAX_CHARA_FOLLOWER & cfg_attackanime == 2) | cfg_attackanime == 3 ) {
@@ -4499,13 +4508,10 @@
 					}
 					snd SOUNDLIST_BASH1
 					dmghp tc, sdata(SKILL_ATTR_STR, cc) / 10 * (sdata(SKILL_WEAPON_MARTIAL_ARTS, cc) + 1) / 10 + 5, cc
 					if ( cdata(CDATA_HP, tc) >= 0 ) {
 						chara_vomit tc
-						if ( cdata(CDATA_THIRST, tc) > 12000 ) {
-							chara_morasi tc
-						}
 					}
 					tc = tcbk
 				}
 				bakucut = 100
 				bakuretu = 0
@@ -4770,11 +4776,11 @@
 									extraattack++
 									ele = SKILL_NONE
 									goto *act_attack
 								}
 							}
-							if ( cdatan(CDATAN_CLASS, cc) != "warrior" ) {
+							else {
 								if ( rnd(100) < rnd(cdata(CDATA_EXTRA_MELEE, cc) * 2 + 1) ) {
 									extraattack++
 									ele = SKILL_NONE
 									goto *act_attack
 								}
@@ -5109,10 +5115,18 @@
 				dmghp tc, orgdmg / 30 * (rnd(20) + inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, cw)) / 50 + 1, cc
 				subdmg = 0
 			}
 			continue
 		}
+		if ( enc == ENCHANT_BANE_FLYING ) {
+			if ( cbit(CHARA_BIT_FLOAT, tc) == 1 ) {
+				gdata(GDATA_DMG_TYPE) = 1
+				dmghp tc, orgdmg / 120 * (rnd(10) + inv(STARTING_INV_ITEM_ENCHANT + cnt * 2 + 1, cw)) / 50 + 1, cc
+				subdmg = 0
+			}
+			continue
+		}
 		i = enc / EXT_ENCHANTMENT
 		if ( i != 0 ) {
 			enc = enc \ EXT_ENCHANTMENT
 			if ( i == ENCHANT_ELEMENTAL_DMG ) {
 				if ( orgdmg <= 1 ) {
@@ -5638,58 +5652,53 @@
 	screenupdate = -1
 	gosub *screen_draw
 	tc = cc
 	tlocx = cdata(CDATA_X, cc)
 	tlocy = cdata(CDATA_Y, cc)
-	if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) == FILTER_ITEM_POTION & inv(INV_ITEM_ID, ci) != ITEM_ID_ENCOUNTER_CANCELLER & inv(INV_ITEM_ID, ci) != ITEM_ID_HANDFUL_SNOW ) {
+	if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_TYPE) == FILTER_ITEM_POTION & TweakData(50,1) == 1 ) {
 		kakeru = 100
 		goto *act_throw
 	}
 	if ( ibit(ITEM_BIT_PERIOD, ci) == 1 ) {
 		if ( gdata(GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE) == 100 ) {
 			inv(INV_ITEM_CHARGE, ci) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_PARAM3, ci)
-			if ( inv(INV_ITEM_INTERVAL, ci) >= 24 ) {
-				inv(INV_ITEM_NEED_SLEEP, ci) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12
-			}
+			inv(INV_ITEM_NEED_SLEEP, ci) = 1
+			gdata(STARTING_GDATA_FLAG + 376) = 1
+		}
+		if ( gdata(STARTING_GDATA_FLAG + 376) == 0 ) {
+			inv(INV_ITEM_NEED_SLEEP, ci) = 0
 		}
 
 		/********** ANNA CUSTOM - BEGINNING **********/ // Smart Use of Cooldown Items, will search inventory for others of the same item and use those if available.
 
-		if ( inv(INV_ITEM_NEED_SLEEP, ci) <= 0 | inv(INV_ITEM_NEED_SLEEP, ci) < gdata(STARTING_GDATA_FLAG + 376) ) {
-			repeat SIZE_INV1, 0
-				if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
-					continue
-				}
+		repeat 200, 0
+			if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
+				continue
+			}
 
-				if ( inv(INV_ITEM_ID, cnt) == inv(INV_ITEM_ID, ci) ) {
-					if ( inv(INV_ITEM_CHARGE, cnt) < gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 ) {
-						ci = cnt
-						break
-					}
+			if ( inv(INV_ITEM_ID, cnt) == inv(INV_ITEM_ID, ci) ) {
+				if ( inv(INV_ITEM_CHARGE, cnt) < gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 ) {	
+					ci = cnt
+					break
 				}
-			loop
-		}
+			}
+		loop
 
 		/********** ANNA CUSTOM - ENDING **********/
 
 		if ( gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 < inv(INV_ITEM_NEXT_PERIOD, ci) ) {
 			txt lang("そのアイテムが次に使用できるのは" + cnvdate(inv(INV_ITEM_NEXT_PERIOD, ci), 1) + "だ。", "This item will be useable again at " + cnvdate(inv(INV_ITEM_NEXT_PERIOD, ci), 1) + ".")
 			gosub *screen_draw
 			goto *pc_turn
 		}
-		if ( inv(INV_ITEM_NEED_SLEEP, ci) > 1 ) {
-			if ( inv(INV_ITEM_NEED_SLEEP, ci) >= gdata(STARTING_GDATA_FLAG + 376) ) {
-				txt lang("そのアイテムが次に使用できるのは睡眠後だ。", "This item will be useable again after sleep.")
-				gosub *screen_draw
-				goto *pc_turn
-			}
+		if ( inv(INV_ITEM_NEED_SLEEP, ci) != 0 ) {
+			txt lang("そのアイテムが次に使用できるのは睡眠後だ。", "This item will be useable again after sleep.")
+			gosub *screen_draw
+			goto *pc_turn
 		}
 		item_separate ci
 		inv(INV_ITEM_NEXT_PERIOD, ci) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_INTERVAL, ci)
-		if ( inv(INV_ITEM_INTERVAL, ci) >= 24 ) {
-			inv(INV_ITEM_NEED_SLEEP, ci) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12
-		}
 	}
 	if ( ibit(ITEM_BIT_CHARGE_ITEM, ci) == 1 ) {
 		if ( inv(INV_ITEM_CHARGE, ci) <= 0 ) {
 			txt lang("それはもう使えない。", "It's out of charge.")
 			gosub *screen_draw
@@ -6632,11 +6641,11 @@
 					if ( taiseip == 6 ) {
 						encadd ci, ENCHANT_PIERCING_CHANCE, 80, 0, 1, 0, 1
 					}
 				}
 				txtef COLOR_GREEN
-				txt lang(itemname(ci) + "は嬉しげに震えた。", itemname(ci) + " vibrates as if she is pleased.")
+				txt lang(itemname(ci) + "は嬉しげに震えた。", itemname(ci) + " vibrates as if it is pleased.")
 				randomize inv(INV_ITEM_SUB_NAME, ci)
 				exrand_randomize inv(INV_ITEM_SUB_NAME, ci)
 				if ( inv(INV_ITEM_PARAM1, ci) >= 10 ) {
 					txt lang("その力は次第に脅威になっている。", "Its power is becoming a threat.")
 					encadd ci, ENCHANT_SUCK_BLOOD, 50
@@ -7115,11 +7124,13 @@
 			txt lang(name(tc) + "はタバコに" + toba + "％依存している。", name(tc) + " " + is(tc) + " " + toba + "% addicted to tobacco.")
 			if ( cdata(CDATA_HUNGER, tc) < 10000 ) {
 				cdata(CDATA_HUNGER, tc) += 1000
 			}
 			if ( tc == CHARA_PLAYER ) {
-				gdata(GDATA_FLAG_SLEEP_PREVENTION) += 3 + rnd(3)
+				if ( gdata(GDATA_SLEEP) >= 0 ) {
+					gdata(GDATA_SLEEP) -= 5
+				}
 				gdata(GDATA_FLAG_SMOKING_FREQUENCY)++
 				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_CIGARETTE ) {
 					skillexp SKILL_ATTR_PER, tc, 3000 + inv(INV_ITEM_LEVEL, ci) * 200
 				}
 				if ( inv(INV_ITEM_ID, ci) == ITEM_ID_HAMAKI ) {
@@ -7808,11 +7819,11 @@
 				f = 1
 				if ( cdatan(CDATAN_RACE, tc) == "snail" ) {
 					if ( synccheck(tc, -1) ) {
 						txtef COLOR_RED
 						txtmore
-						txt lang("こうかはてきめんだ！", "Now that worked wonders!")
+						txt lang("こうかはてきめんだ！", "..." + name(tc) + " start" + _s(tc) + " to melt.")
 					}
 					if ( cdata(CDATA_HP, tc) > 10 ) {
 						dmghp tc, cdata(CDATA_HP, tc) - rnd(10), DAMAGE_FROM_ACID
 					}
 					else {
@@ -9724,11 +9735,11 @@
 			txt lang("金貨が足りない…", "You count your coins and sigh...")
 			gosub *screen_draw
 			goto *pc_turn
 		}
 		if ( inv(INV_ITEM_PARAM1, ci) >= 1000000000 ) {
-			txt lang("貯金箱は一杯だ。", "The piggy bank is full.")
+			txt lang("貯金箱は一杯だ。", "The money box is full.")
 			gosub *screen_draw
 			goto *pc_turn
 		}
 		item_separate ci
 		snd SOUNDLIST_PAYGOLD1
@@ -9785,11 +9796,11 @@
 		}
 		if ( rtval == 1 ) {
 			inv(INV_ITEM_CHARGE, ci) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12
 			if ( inv(INV_ITEM_PARAM1, ci) == 0 ) {
 				inv(INV_ITEM_PARAM1, ci) = 0
-				txt lang("「これぞ金を産むガチョウ…って空っぽやんか！」", cnvtalk("This is the goose that gives birth to gol..d... what? empty!?"))
+				txt lang("「これぞ金を産むガチョウ…って空っぽやんか！」", cnvtalk("This is the goose that gives birth to go...ld... What? Empty!?"))
 			}
 			if ( inv(INV_ITEM_PARAM1, ci) > 0 ) {
 				kane = inv(INV_ITEM_PARAM1, ci)
 				inv(INV_ITEM_PARAM1, ci) = 0
 				txt lang("「よいしょ…なかなか貯まっとるみたいやな」", cnvtalk("Nice... My savings are piling up inside here!"))
@@ -10102,11 +10113,11 @@
 			}
 			if ( gdata(GDATA_WEATHER) != p ) {
 				break
 			}
 		loop
-		txt lang("ルルウィ「あらあら、定命の分際でそんなおねだりするの？ウフフ…今回は特別よ」", "Lulwy: \"Ah you ask too much for a mortal. Still, it is hard to refuse a call from such a pretty slave like you.\"")
+		txt lang("ルルウィ「あらあら、定命の分際でそんなおねだりするの？ウフフ…今回は特別よ」", "Lulwy: \"Ah, you ask too much for a mortal. Still, it is hard to refuse a call from such a pretty slave as you...\"")
 		txtmore
 		txt lang("天候が変わった。", "The weather changes.")
 		envonly = 1
 		gosub *music_play
 		goto *act_use_SWEND1
@@ -10500,11 +10511,11 @@
 		goto *pc_turn
 	}
 	if ( _switch_val == EFFECT_SATELLITE_SHOOTER | _switch_sw ) {
 		_switch_sw = 0
 		txtef COLOR_BLUE
-		txt lang("衛星軌道上から荷電粒子砲が発射された！", "A charged particle cannon fired from the satellite orbit!")
+		txt lang("衛星軌道上から荷電粒子砲が発射された！", "Destruction rains from the heavens!")
 		gdata(GDATA_TEMPORARY_FLAGS3) = 777
 		animeid = ANIMATION_HOLY
 		animode = 0
 		gosub *anime
 		gdata(GDATA_TEMPORARY_FLAGS3) = 0
@@ -13711,11 +13722,11 @@
 					cell_refresh inv(INV_ITEM_X, ci), inv(INV_ITEM_Y, ci)
 					cdata(CDATA_EVOLUTION_STAGE, tc) += 1
 					evmode = 0
 					goto *turn_end
 				}
-				txt lang("組み合わせが違うようだ。", "The combination seems to be wrong.")
+				txt lang("組み合わせが違うようだ。", "Doesn't seem to be a valid combination.")
 				evmode = 0
 				goto *turn_end
 			}
 		}
 		if ( f == 0 ) {
diff -U5 --recursive 1.90.4-custom/ai.hsp 1.90.4.2-custom-g/ai.hsp
--- 1.90.4-custom/ai.hsp	2021-09-02 12:55:06.265600400 -0700
+++ 1.90.4.2-custom-g/ai.hsp	2021-09-02 12:55:06.750428900 -0700
@@ -49,13 +49,10 @@
 		return 1
 	}
 	return 0
 
 *ai_turn
-	if ( cdata(CDATA_CHAIN_ATTACK_COUNT, cc) != 0 ) {
-		cdata(CDATA_CHAIN_ATTACK_COUNT, cc) = 0
-	}
 	if ( cc < MAX_CHARA_FOLLOWER ) {
 		if ( cdata(CDATA_ALLIED, cc) == 0 ) {
 			cdata(CDATA_ALLIED, cc) = 100
 		}
 	}
@@ -1091,27 +1088,27 @@
 			if ( cdatan(CDATAN_RACE, cc) == "cat" ) {
 				if ( cdata(CDATA_CONDITION_DRUNK, cc) < 5 ) {
 					cdata(CDATA_CONDITION_DRUNK, cc) += 40
 				}
 				if ( rnd(3) == 0 ) {
-					txt lang("「米さ米種だろ♪」", cnvtalk("Riiice, rice seeeed...♪")), lang("「飲ま飲まイェイ！！」", cnvtalk("Drink, drink, yeah!!")), lang("「飲ま飲ま飲まイェイ！！」", cnvtalk("Drink, drink, drink, yeah!!"))
+					txt lang("「米さ米種だろ♪」", cnvtalk("Vrei sa pleci dar♪")), lang("「飲ま飲まイェイ！！」", cnvtalk("Numa numa yay!!")), lang("「飲ま飲ま飲まイェイ！！」", cnvtalk("Numa numa numa yay!!"))
 					goto *ai_calmMove_WEND1
 				}
 				if ( rnd(4) == 0 ) {
-					txt lang("「字ベロ♪指♪ラマ♪ｸﾏｰ!!して♪パンチラ♪」", cnvtalk("Word♪ Tongue♪ Finger♪ Llama♪ Beeear!! Do it♪ Show your underwear♪")), lang("「アロー♪アーロン♪スゲェ♪ピカソ♪算段ビーフ♪」", cnvtalk("Arrow♪ Aaron♪ Amazing♪ Picaso♪ Contriving Beef♪")), lang("「キスすごい肉♪脱線してんの♪さらに肉♪」", cnvtalk("Kiss amazing meat♪ I'm derailed♪ Also meat♪"))
+					txt lang("「字ベロ♪指♪ラマ♪ｸﾏｰ!!して♪パンチラ♪」", cnvtalk("Vrei sa pleci dar♪")), lang("「アロー♪アーロン♪スゲェ♪ピカソ♪算段ビーフ♪」", cnvtalk("Numa numa yay!!")), lang("「キスすごい肉♪脱線してんの♪さらに肉♪」", cnvtalk("Numa numa numa yay!!"))
 					goto *ai_calmMove_WEND1
 				}
 				if ( rnd(4) == 0 ) {
-					txt lang("「キープダルシム♪アゴスタディーイェイ♪並フェイスで大きい筆入れ♪」", cnvtalk("Keep Dhalsim♪ A goto study yay♪ Ordinary face on your pencil case♪")), lang("「ハロー♪猿ー♪すげー♪うん入る♪」", cnvtalk("Hello♪ Monkey♪ Amazing♪ I'm going in♪"))
+					txt lang("「キープダルシム♪アゴスタディーイェイ♪並フェイスで大きい筆入れ♪」", cnvtalk("Numa numa yay!!")), lang("「ハロー♪猿ー♪すげー♪うん入る♪」", cnvtalk("Numa numa numa yay!!"))
 					goto *ai_calmMove_WEND1
 				}
 				if ( rnd(4) == 0 ) {
 					txtef COLOR_BLUE
 					txt lang(" *ﾋﾟﾛﾘ〜ﾋﾟﾛﾘ〜* ", " *whistle-whistle* ")
 					goto *ai_calmMove_WEND1
 				}
-				txt lang("「マイアヒー♪」", cnvtalk("Miami♪")), lang("「マイアフゥー♪」", cnvtalk("Miafuu♪")), lang("「マイアホー♪」", cnvtalk("Miahoo♪"))
+				txt lang("「マイアヒー♪」", cnvtalk("Mai-Ya-Hi♪")), lang("「マイアフゥー♪」", cnvtalk("Mai-Ya-Hoo♪")), lang("「マイアホー♪」", cnvtalk("Mai-Ya-Ha Ma Mi A♪"))
 				goto *ai_calmMove_WEND1
 			}
 		}
 	}
 *ai_calmMove_WEND1
@@ -1224,13 +1221,10 @@
 						cdata(CDATA_HUNGER, cc) += 5000
 					}
 					else {
 						cdata(CDATA_HUNGER, cc) -= 3000
 					}
-					if ( cdata(CDATA_THIRST, cc) <= 6000 ) {
-						cdata(CDATA_THIRST, cc) += 5000
-					}
 				}
 				else {
 					flt 20
 					p = rnd(4), 0
 					if ( p == 0 | cbit(CHARA_BIT_ANOREXIA, cc) ) {
@@ -1255,13 +1249,10 @@
 								cdata(CDATA_HUNGER, cc) += 5000
 							}
 							else {
 								cdata(CDATA_HUNGER, cc) -= 3000
 							}
-							if ( cdata(CDATA_THIRST, cc) <= 6000 ) {
-								cdata(CDATA_THIRST, cc) += 5000
-							}
 						}
 					}
 				}
 			}
 		}
@@ -1467,11 +1458,11 @@
 						cdata(CDATA_GOLD, cc) += p
 					}
 				loop
 				if ( sell != 0 ) {
 					txtef COLOR_SKY_BLUE
-					txt lang(name(cc) + "は" + sell + "個のアイテムを売りさばき" + sell(1) + "goldを稼いだ。", name(cc) + " sells " + sell + " items and earns " + sell(1) + "gp.")
+					txt lang(name(cc) + "は" + sell + "個のアイテムを売りさばき" + sell(1) + "goldを稼いだ。", name(cc) + " sells " + sell + " items and earns " + sell(1) + " gold pieces.")
 				}
 				if ( sell != 0 ) {
 					if ( cdata(CDATA_ALLIED, cc) == 100 ) {
 						if ( cdata(CDATA_IN_TAGTEAM, cc) != 0 ) {
 							if ( cdata(CDATA_TAGTEAM_PARTNER, cc) != 0 ) {
@@ -1602,14 +1593,16 @@
 			txt lang(name(cc) + "は" + name(tc) + "を轢いた。", name(cc) + " ran over " + name(tc) + ".")
 			dmghp tc, (sdata(SKILL_ACTIVE_RIDING, cc) / 4 + 4) * (sdata(SKILL_ATTR_WIL, cc) / 4 + 3) + rnd(sdata(SKILL_ATTR_SPD, cc) + 5), cc, SKILL_RESDMG_CRUSH, 1000
 			if ( cdata(CDATA_CONDITION_WINCE, tc) < 0 ) {
 				cdata(CDATA_CONDITION_WINCE, tc) = 1
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-				skillexp SKILL_ACTIVE_RIDING, cc, 30
-				if ( cdata(CDATA_IN_TAGTEAM, cc) != 0 ) {
-					skillexp SKILL_ACTIVE_RIDING, cdata(CDATA_TAGTEAM_PARTNER, cc), 30
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					skillexp SKILL_ACTIVE_RIDING, cc, 30
+					if ( cdata(CDATA_IN_TAGTEAM, cc) != 0 ) {
+						skillexp SKILL_ACTIVE_RIDING, cdata(CDATA_TAGTEAM_PARTNER, cc), 30
+					}
 				}
 			}
 			ride = 0
 			goto *turn_end
 		}
@@ -3388,19 +3381,10 @@
 	if ( cdata(CDATA_ID, cc) == CREATURE_ID_SPIRAL_KING ) {
 		if ( act == SKILL_SPELL_MUTATION ) {
 			act = SKILL_SPELL_DARK_EYE
 		}
 	}
-	if ( cdata(CDATA_ID, cc) == CREATURE_ID_LAST_DANCER ) {
-		if ( cdata(CDATA_ALLIED, cc) == 0 ) {
-			if ( gdata(STARTING_GDATA_FLAG + 373) < 0 ) {
-				if ( cdata(CDATA_EXIST, CHARA_PLAYER) == CHAR_STATE_ALIVE ) {
-					act = SKILL_SPACT_GRAND_FINALE
-				}
-			}
-		}
-	}
 	if ( cdata(CDATA_ALLIED, cc) == 100 ) {
 		if ( act == SKILL_SPELL_SUMMON_MONSTERS | act == SKILL_SPELL_SUMMON_WILD | act == SKILL_SPACT_SUMMON_FIRE | act == SKILL_SPACT_SUMMON_PAWN | act == SKILL_SPACT_SUMMON_CATS | act == SKILL_SPACT_SUMMON_YEEK | act == SKILL_SPACT_SUMMON_SISTER | act == SKILL_SPELL_SUMMON_SPIRIT | act == SKILL_SPACT_SUMMON_CHAOS ) {
 			act = ACTION_MELEE
 		}
 	}
diff -U5 --recursive 1.90.4-custom/blend.hsp 1.90.4.2-custom-g/blend.hsp
--- 1.90.4-custom/blend.hsp	2021-09-02 12:55:06.271319000 -0700
+++ 1.90.4.2-custom-g/blend.hsp	2021-09-02 12:55:06.754407400 -0700
@@ -170,15 +170,10 @@
 					continue
 				}
 				if ( ibit(ITEM_BIT_NO_DROP, cnt) ) {
 					continue
 				}
-				if ( rpdata(RPDATA_ITEM, rpid) == ITEM_ID_WORTHLESS_FAKE_GOLD_BAR ) {
-					if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_HANDFUL_SNOW | inv(INV_ITEM_ID, cnt) == ITEM_ID_LITTLE_BALL ) {
-						continue
-					}
-				}
 				if ( locvar_blendcheckmat_o == (-1) ) {
 					if ( dist(inv(INV_ITEM_X, cnt), inv(INV_ITEM_Y, cnt), cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)) > 4 ) {
 						continue
 					}
 				}
@@ -243,15 +238,10 @@
 				continue
 			}
 			if ( ibit(ITEM_BIT_NO_DROP, cnt) ) {
 				continue
 			}
-			if ( rpdata(RPDATA_ITEM, rpid) == ITEM_ID_WORTHLESS_FAKE_GOLD_BAR ) {
-				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_HANDFUL_SNOW | inv(INV_ITEM_ID, cnt) == ITEM_ID_LITTLE_BALL ) {
-					continue
-				}
-			}
 			if ( locvar_blendmatnum_o == (-1) ) {
 				if ( dist(inv(INV_ITEM_X, cnt), inv(INV_ITEM_Y, cnt), cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)) > 4 ) {
 					continue
 				}
 			}
@@ -311,15 +301,10 @@
 				continue
 			}
 			if ( ibit(ITEM_BIT_NO_DROP, cnt) ) {
 				continue
 			}
-			if ( rpdata(RPDATA_ITEM, rpid) == ITEM_ID_WORTHLESS_FAKE_GOLD_BAR ) {
-				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_HANDFUL_SNOW | inv(INV_ITEM_ID, cnt) == ITEM_ID_LITTLE_BALL ) {
-					continue
-				}
-			}
 			if ( locvar_blendlist_o == (-1) ) {
 				if ( dist(inv(INV_ITEM_X, cnt), inv(INV_ITEM_Y, cnt), cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER)) > 4 ) {
 					continue
 				}
 			}
@@ -584,11 +569,11 @@
 	rpid = STARTING_RPID
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
 	rpdatan(rpid) = lang("がらくた錬成", "junk make")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_WORTHLESS_FAKE_GOLD_BAR, 1
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_ALCHEMY, 1
-	rpdata(RPDATA_MAT + 0, rpid) = RF_ANY, RF_ANY, RF_ANY, RF_ANY, RF_ANY
+	rpdata(RPDATA_MAT + 0, rpid) = RF_ANY, RF_ANY, RF_ANY, RF_ANY
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
 	rpdatan(rpid) = lang("不等価交換", "Inexpensive exchange")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_GOLD_PIECE, 10
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_ALCHEMY, 18, SKILL_NORMAL_NEGOTIATION, 10
@@ -623,16 +608,10 @@
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_DISINFECTANT, 1
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_GENE_ENGINEER, 8, SKILL_NORMAL_MAGIC_DEVICE, 4
 	rpdata(RPDATA_MAT + 0, rpid) = RF_ALE, RF_DISINFECTANT
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
-	rpdatan(rpid) = lang("魔物よけ", "encounter canceller")
-	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_ENCOUNTER_CANCELLER, 15
-	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_GENE_ENGINEER, 13, SKILL_NORMAL_ALCHEMY, 13
-	rpdata(RPDATA_MAT + 0, rpid) = ITEM_ID_URINE, RF_POISON
-	rpid++
-	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
 	rpdatan(rpid) = lang("精油抽出", "essential oil")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_ESSENTIAL_OIL, 30
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_ALCHEMY, 15
 	rpdata(RPDATA_MAT + 0, rpid) = RF_FRUIT, RF_ALE
 	rpid++
@@ -644,11 +623,11 @@
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
 	rpdatan(rpid) = lang("手作りボール", "ball making")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_MONSTER_BALL, 50
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_CARPENTRY, 20
-	rpdata(RPDATA_MAT + 0, rpid) = ITEM_ID_4D_MIRROR, FILTER_CONTAINER
+	rpdata(RPDATA_MAT + 0, rpid) = ITEM_ID_API_NUT, ITEM_ID_4D_MIRROR, FILTER_CONTAINER
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
 	rpdatan(rpid) = lang("誰かの日記", "mysterious diary")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_MYSTERIOUS_DIARY, 10
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_LITERACY, 10
@@ -797,11 +776,11 @@
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
 	rpdatan(rpid) = lang("たる爆弾", "barrel bomb")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_BOMB_BARREL, 25 + 1 * 10000
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_DISARM_TRAP, 20, SKILL_NORMAL_GENE_ENGINEER, 20
-	rpdata(RPDATA_MAT + 0, rpid) = ITEM_ID_BOTTLE_SULFURIC, ITEM_ID_CLAY, ITEM_ID_URINE, RF_BARREL
+	rpdata(RPDATA_MAT + 0, rpid) = ITEM_ID_GASOLINE, ITEM_ID_BOTTLE_SULFURIC, ITEM_ID_ORGANIC_FERTILIZER, RF_BARREL
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
 	rpdatan(rpid) = lang("魔力爆弾", "crystal bomb")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_MAGISTUS, 10
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_ALCHEMY, 4, SKILL_NORMAL_CONTROL_MAGIC, 4
@@ -812,17 +791,17 @@
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_TRISMAGISTUS, 50
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_ALCHEMY, 60, SKILL_NORMAL_CONTROL_MAGIC, 30
 	rpdata(RPDATA_MAT + 0, rpid) = RF_MAGI, RF_MAGI, RF_MAGI, ITEM_ID_MAGATAMA
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
-	rpdatan(rpid) = lang("魔剣転生", "makenn tensei")
+	rpdatan(rpid) = lang("魔剣転生", "evil sword")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_SKULL_SWORD, 20 + 1 * 10000
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_ANATOMY, 2, SKILL_NORMAL_ALCHEMY, 6
 	rpdata(RPDATA_MAT + 0, rpid) = ITEM_ID_BROKEN_SWORD, ITEM_ID_BONE_FRAGMENT
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
-	rpdatan(rpid) = lang("真・魔剣転生", "shin makenn tensei")
+	rpdatan(rpid) = lang("真・魔剣転生", "true evil sword")
 	rpdata(RPDATA_ITEM, rpid) = ITEM_ID_VIOLENT_SKULL_SWORD, 30 + 1 * 10000
 	rpdata(RPDATA_SKILL + 0 * 2, rpid) = SKILL_NORMAL_ANATOMY, 30, SKILL_NORMAL_ALCHEMY, 45
 	rpdata(RPDATA_MAT + 0, rpid) = RF_MAKENN, RF_MAKENN, ITEM_ID_ORE_PIECE
 	rpid++
 	rplistdef(length(rplistdef)) = 1 * EXT_RECIPES + rpid
@@ -1024,21 +1003,21 @@
 	rfnameorg(RFNAMEORG_ID, RF_POISON - EXT_RF) = "poison", lang("状態異常薬", "nega potion")
 	rfnameorg(RFNAMEORG_ID, RF_FRUIT - EXT_RF) = "fruit", lang("適当な果物", "any fruit")
 	rfnameorg(RFNAMEORG_ID, RF_BREAD - EXT_RF) = "bread", lang("パン類", "any bread")
 	rfnameorg(RFNAMEORG_ID, RF_ALE - EXT_RF) = "ale", lang("適当なアルコール", "any alcohol")
 	rfnameorg(RFNAMEORG_ID, RF_MAGI - EXT_RF) = "magi", lang("魔力爆弾", "any crystal bomb")
-	rfnameorg(RFNAMEORG_ID, RF_MAKENN - EXT_RF) = "makenn", lang("暴魔剣", "any makenn")
+	rfnameorg(RFNAMEORG_ID, RF_MAKENN - EXT_RF) = "makenn", lang("暴魔剣", "any evil sword")
 	rfnameorg(RFNAMEORG_ID, RF_FLOWER - EXT_RF) = "hana", lang("適当な花", "any flower")
 	rfnameorg(RFNAMEORG_ID, RF_BONE - EXT_RF) = "bone", lang("適当な頭の骨", "any head bone")
 	rfnameorg(RFNAMEORG_ID, RF_METAL - EXT_RF) = "metal", lang("適当な剛武具", "any hard equip")
 	rfnameorg(RFNAMEORG_ID, RF_SOFT - EXT_RF) = "soft", lang("適当な柔武具", "any soft equip")
 	rfnameorg(RFNAMEORG_ID, RF_SHARP - EXT_RF) = "sharp", lang("適当な鋭武具", "any sharp equip")
 	rfnameorg(RFNAMEORG_ID, RF_COFFIN - EXT_RF) = "coffin", lang("適当な棺", "any coffin")
 	rfnameorg(RFNAMEORG_ID, RF_BAIT - EXT_RF) = "bait", lang("適当な釣り餌", "any bait")
 	rfnameorg(RFNAMEORG_ID, RF_BARREL - EXT_RF) = "taru", lang("適当なタル", "any barrel")
 	rfnameorg(RFNAMEORG_ID, RF_LEAF - EXT_RF) = "kusuri", lang("薬草類", "any healthy leaf")
-	rfnameorg(RFNAMEORG_ID, RF_DISINFECTANT - EXT_RF) = "holy", lang("適当な浄化アイテム", "any purificatation item")
+	rfnameorg(RFNAMEORG_ID, RF_DISINFECTANT - EXT_RF) = "holy", lang("適当な浄化アイテム", "any holy item")
 	return
 
 *com_blend
 	procid = (procid + 1) \ 4
 	proclist(procid) = "com_blend" + " ct:" + ct
diff -U5 --recursive 1.90.4-custom/calculation.hsp 1.90.4.2-custom-g/calculation.hsp
--- 1.90.4-custom/calculation.hsp	2021-09-02 12:55:06.276655900 -0700
+++ 1.90.4.2-custom-g/calculation.hsp	2021-09-02 12:55:06.757851200 -0700
@@ -105,10 +105,13 @@
 		return 8000
 	}
 	if ( inv(INV_ITEM_ID, calcmusicticketvalue_itemid) == ITEM_ID_STRADIVARIUS ) {
 		return 9000
 	}
+	if ( inv(INV_ITEM_ID, calcmusicticketvalue_itemid) == ITEM_ID_SUPER_LURE ) {
+		return 10000
+	}
 	if ( inv(INV_ITEM_ID, calcmusicticketvalue_itemid) == ITEM_ID_VALKOINEN_KUOLEMA ) {
 		return 10000
 	}
 	if ( inv(INV_ITEM_ID, calcmusicticketvalue_itemid) == ITEM_ID_HERO_CHEESE ) {
 		return 35000
@@ -1316,11 +1319,13 @@
 *calcTrap
 	if ( feat(2) == CELL_SUB_FEATURE_TRAP_QUEST_MINE ) {
 		return 0
 	}
 	if ( cdata(CDATA_CONDITION_GRAVITY, cc) > 0 ) {
-		return 0
+		if ( findbuff(cc, BUFF_GRAVITY_ACCEL) == (-1) ) {
+			return 0
+		}
 	}
 	if ( cc < MAX_CHARA_FOLLOWER ) {
 		if ( rnd(refdiff + 1) < sdata(SKILL_ATTR_PER, cc) + sdata(SKILL_NORMAL_DETECTION, cc) * 4 ) {
 			return 1
 		}
@@ -1399,43 +1404,10 @@
 		}
 		refreshspeed r1
 	}
 	return
 
-*calcThirst
-	if ( cdata(CDATA_THIRST, r1) <= 0 ) {
-		cdata(CDATA_THIRST, r1) = 1
-	}
-	p = cdata(CDATA_THIRST, r1) / 1000
-	if ( cdata(CDATA_CONDITION_WET, r1) <= 0 ) {
-		cdata(CDATA_THIRST, r1) -= 8 / 2
-	}
-	if ( cdata(CDATA_CONDITION_WET, r1) > 0 ) {
-		if ( cdata(CDATA_THIRST, r1) < 5000 ) {
-			cdata(CDATA_THIRST, r1) += 8
-		}
-	}
-	if ( findbuff(r1, BUFF_CURSE_OF_HUNGER) != (-1) ) {
-		cdata(CDATA_THIRST, r1) -= 8 / 2
-	}
-	if ( cdata(CDATA_THIRST, r1) / 1000 != p ) {
-		if ( p == 1000 / 1000 ) {
-			msgalert = 1
-			txt lang("このままだと脱水症状で倒れてしまう！", "You are drying!"), lang("水分不足で干物になりそうだ。", "You are almost a mummy.")
-		}
-		if ( p == 2000 / 1000 ) {
-			msgalert = 1
-			txt lang("水分不足で目が回りだした…", "Your thirst makes you dizzy."), lang("すぐに何かを飲まなくては…", "You have to drink something NOW.")
-		}
-		if ( p == 5000 / 1000 ) {
-			msgalert = 1
-			txt lang("喉がカラカラだ。", "You are getting thirsty."), lang("喉が渇いた。", "You feel thirsty."), lang("さて何を飲もうか。", "Now what shall I drink?")
-		}
-		refreshspeed r1
-	}
-	return
-
 *calcCondition
 	if ( tarudmg != 0 ) {
 		repeat MAX_CHARA_TOTAL
 			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 				continue
@@ -1481,11 +1453,11 @@
 			}
 		}
 		cdata(CDATA_CONDITION_SUFFOCATION, r1) -= rnd(3)
 		if ( cdata(CDATA_CONDITION_SUFFOCATION, r1) <= 0 ) {
 			if ( synccheck(r1, -1) ) {
-				txt lang(name(r1) + "は気道を確保した。「げほっげほっ！」", name(cc) + " stopped suffocating.")
+				txt lang(name(r1) + "は気道を確保した。「げほっげほっ！」", name(cc) + " stopped choking.")
 			}
 			cdata(CDATA_CONDITION_SUFFOCATION, r1) = 0
 		}
 		else {
 			dmghp r1, rnd(50 + sdata(SKILL_ATTR_CON, r1)) + 50, DAMAGE_FROM_SUFFOCATION
@@ -1880,23 +1852,10 @@
 					}
 				}
 			}
 			regen = 0
 		}
-		if ( cdata(CDATA_THIRST, r1) < 2000 ) {
-			if ( cdata(CDATA_CONDITION_WET, r1) <= 0 ) {
-				if ( cdata(CDATA_THIRST, r1) < 1000 ) {
-					if ( tc == CHARA_PLAYER ) {
-						dmgsp CHARA_PLAYER, rnd(10) + 10
-					}
-					if ( tc != CHARA_PLAYER ) {
-						dmgspt tc, rnd(10) + 10
-					}
-				}
-				regen = 0
-			}
-		}
 		if ( gdata(GDATA_SLEEP) >= 30 ) {
 			if ( gdata(GDATA_TURN) \ 100 == 0 ) {
 				txt lang("あなたは眠りを必要としている。", "You need to sleep.")
 			}
 			if ( rnd(2) ) {
diff -U5 --recursive 1.90.4-custom/chara.hsp 1.90.4.2-custom-g/chara.hsp
--- 1.90.4-custom/chara.hsp	2021-09-02 12:55:06.283753700 -0700
+++ 1.90.4.2-custom-g/chara.hsp	2021-09-02 12:55:06.763390500 -0700
@@ -2011,16 +2011,10 @@
 		cdata(CDATA_HUNGER, rc) = 9000
 	}
 	else {
 		cdata(CDATA_HUNGER, rc) = 6000 - 1000 + rnd(4000)
 	}
-	if ( rc == CHARA_PLAYER ) {
-		cdata(CDATA_THIRST, rc) = 9000
-	}
-	else {
-		cdata(CDATA_THIRST, rc) = 6000 - 1000 + rnd(4000)
-	}
 	cdata(CDATA_HEIGHT, rc) = cdata(CDATA_HEIGHT, rc) + rnd(cdata(CDATA_HEIGHT, rc) / 5 + 1) - rnd(cdata(CDATA_HEIGHT, rc) / 5 + 1)
 	cdata(CDATA_WEIGHT, rc) = cdata(CDATA_HEIGHT, rc) * cdata(CDATA_HEIGHT, rc) * (rnd(6) + 18) / 10000
 	if ( cdata(CDATA_ID, rc) == CREATURE_ID_SPACE_ZILLA | cdata(CDATA_ID, rc) == CREATURE_ID_DHOLE | cdata(CDATA_ID, rc) == CREATURE_ID_CLOUD_BEAST | cdata(CDATA_ID, rc) == CREATURE_ID_METAL_ZILLA | cdata(CDATA_ID, rc) == CREATURE_ID_GRAND_LEECH | cdata(CDATA_ID, rc) == CREATURE_ID_SIN_GORILLA | cdata(CDATA_ID, rc) == CREATURE_ID_SUNRISE_THE_ARCHIPELAGO_DRAGON ) {
 		cdata(CDATA_HEIGHT, rc) += rnd(4000) + 8000
 		cdata(CDATA_WEIGHT, rc) += rnd(500000) + 7000000
@@ -2518,11 +2512,10 @@
 	cdata(CDATA_SANITY, rc) = 0
 	cdata(CDATA_EXIST, rc) = CHAR_STATE_ALIVE
 	cdata(CDATA_AREA, rc) = AREA_NONE
 	cdata(CDATA_RELATION, rc) = cdata(CDATA_RELATION_ORG, rc)
 	cdata(CDATA_HUNGER, rc) = 8000
-	cdata(CDATA_THIRST, rc) = 8000
 *renewStatus
 	cbitmod CHARA_BIT_CONTINGENCY, rc, 0
 	rowactend rc
 	cdata(CDATA_CONDITION_POISON, rc) = 0
 	cdata(CDATA_CONDITION_MPOISON, rc) = 0
@@ -2597,10 +2590,27 @@
 		gdata(GDATA_WIZARD) = 1
 	}
 	if ( geneuse != "" ) {
 		gosub *load_gene
 	}
+	if ( dbg_skipCm ) {
+		cmRace	="elea"
+		cmClass	="warrior"
+		cmName	="Noa"
+		cmAka	="デベロッパー"
+		repeat 8
+		cmStats(cnt)=18*1000000
+		loop
+		ohanasi1 = 0
+		ohanasi2 = 0
+		ohanasi3 = 0
+		ohanasi4 = 0
+		ohanasi5 = 0
+		gdata(GDATA_FLAG_GAME_MODE) = GAMEMODE_OVERDOSE
+		playerID="sav_"+cmName
+		goto *cm_birth
+	}
 	redraw 0
 	rc = CHARA_PLAYER
 	mode = MODELIST_CHARA_CREATION
 	cm = 1
 	gsel 4
@@ -3330,11 +3340,11 @@
 	pagesize = 0
 	gmode 0
 	pos 0, 0
 	gcopy 4, 0, 0, windoww, windowh
 	gmode 2
-	s = lang("死にたくないなら、ある程度の能力は必要だね。", "You should prepare well, if you want to survive long enough in Ylva.")
+	s = lang("死にたくないなら、ある程度の能力は必要だね。", "You should prepare well, if you want to survive long enough in Irva.")
 	gosub *screen_drawMsg2
 	font lang(cfg_font1, cfg_font2), 13 - en * 2, 1
 	pos 20, windowh - 20
 	color 0, 0, 0
 	mes "Press F1 to show help."
diff -U5 --recursive 1.90.4-custom/chara_func.hsp 1.90.4.2-custom-g/chara_func.hsp
--- 1.90.4-custom/chara_func.hsp	2021-09-02 12:55:06.289150300 -0700
+++ 1.90.4.2-custom-g/chara_func.hsp	2021-09-02 12:55:06.770031000 -0700
@@ -2302,11 +2302,11 @@
 		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
 			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 2 + 1) ) {
 				f@con = 0
 			}
 		}
-		res@con = 53
+		res@con = SKILL_RES_DARKNESS
 		gosub *conCalc
 		if ( f@con == 0 ) {
 			return 0
 		}
 		p@con = p@con / 6
@@ -2329,11 +2329,11 @@
 			if ( cdata(CDATA_CONDITION_INVERT, dmgcon_charid) == 0 ) {
 				cdata(CDATA_CONDITION_INVERT, dmgcon_charid) = 2
 				if ( synccheck(dmgcon_charid, -1) ) {
 					txtmore
 					txtef COLOR_PURPLE
-					txt lang(name(dmgcon_charid) + "は転倒した。", name(dmgcon_charid) + " tumbled down.")
+					txt lang(name(dmgcon_charid) + "は転倒した。", name(dmgcon_charid) + " " + was(dmgcon_charid) + " knocked down.")
 				}
 			}
 			rowactend dmgcon_charid
 		}
 		return 1
@@ -2354,11 +2354,11 @@
 		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
 			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 2 + 1) ) {
 				f@con = 0
 			}
 		}
-		res@con = 54
+		res@con = SKILL_RES_MIND
 		gosub *conCalc
 		if ( f@con == 0 ) {
 			return 0
 		}
 		p@con = p@con / 7
@@ -2385,11 +2385,11 @@
 		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
 			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) + 1) ) {
 				f@con = 0
 			}
 		}
-		res@con = 58
+		res@con = SKILL_RES_NERVE
 		gosub *conCalc
 		if ( f@con == 0 ) {
 			return 0
 		}
 		p@con = p@con / 10
@@ -2440,11 +2440,11 @@
 			}
 		}
 		if ( findbuff(dmgcon_charid, BUFF_DISINFECTION) != (-1) ) {
 			f@con = 0
 		}
-		res@con = 55
+		res@con = SKILL_RES_POISON
 		gosub *conCalc
 		if ( f@con == 0 ) {
 			return 0
 		}
 		p@con = p@con / 5
@@ -2474,11 +2474,11 @@
 		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
 			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 5 + 1) ) {
 				f@con = 0
 			}
 		}
-		res@con = 58
+		res@con = SKILL_RES_NERVE
 		gosub *conCalc
 		if ( f@con == 0 ) {
 			return 0
 		}
 		p@con = p@con / 4
@@ -2508,11 +2508,11 @@
 		if ( cdata(CDATA_QUALITY, dmgcon_charid) > FIX_QUALITY_GREAT | cdata(CDATA_ID, dmgcon_charid) == CREATURE_ID_AILE_THE_ATTENDANT ) {
 			if ( rnd(cdata(CDATA_LEVEL, dmgcon_charid) / 5 + 1) ) {
 				f@con = 0
 			}
 		}
-		res@con = 54
+		res@con = SKILL_RES_MIND
 		gosub *conCalc
 		if ( f@con == 0 ) {
 			return 0
 		}
 		p@con = p@con / 7
@@ -2522,32 +2522,10 @@
 			}
 			if ( synccheck(dmgcon_charid, -1) ) {
 				txtmore
 				txt lang(name(dmgcon_charid) + "は恐怖に侵された。", name(dmgcon_charid) + " " + is(dmgcon_charid) + " frightened.")
 			}
-			if ( cdata(CDATA_THIRST, dmgcon_charid) > 12000 ) {
-				if ( synccheck(dmgcon_charid, -1) ) {
-					snd SOUNDLIST_WATERM
-					txt lang(name(dmgcon_charid) + "は漏らした。", name(dmgcon_charid) + " is incontinent.")
-					if ( dmgcon_charid != CHARA_PLAYER ) {
-						txt lang("「…スッキリ！」", cnvtalk("Do not look at me!"))
-					}
-				}
-				if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
-					if ( cfg_dust_select == 0 ) {
-						flt
-						itemcreate -1, ITEM_ID_URINE, cdata(CDATA_X, dmgcon_charid), cdata(CDATA_Y, dmgcon_charid), 0
-						if ( stat != 0 ) {
-							if ( dmgcon_charid != CHARA_PLAYER ) {
-								inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, dmgcon_charid)
-								item_stack -1, ci
-							}
-						}
-					}
-				}
-				cdata(CDATA_THIRST, dmgcon_charid) = 5000
-			}
 		}
 		return 1
 	}
 	if ( dmgcon_cond == CONDITION_DIM ) {
 		if ( findbuff(dmgcon_charid, BUFF_SUPER_ARMOR) != (-1) ) {
@@ -2559,11 +2537,11 @@
 			}
 		}
 		if ( cdatan(CDATAN_RACE, dmgcon_charid) == "golem" ) {
 			f@con = 0
 		}
-		res@con = 57
+		res@con = SKILL_RES_SOUND
 		gosub *conCalc
 		if ( f@con == 0 ) {
 			return 0
 		}
 		p@con = p@con / 8
@@ -3157,35 +3135,10 @@
 					}
 				}
 			}
 		}
 	}
-	locvar_check_talk_exp = limit(cdata(CDATA_LEVEL, check_talk_arg2), 1, 400) * limit(cdata(CDATA_LEVEL, check_talk_arg2) + 1, 1, 400) * limit(cdata(CDATA_LEVEL, check_talk_arg2) + 2, 1, 400) / 10 + 8
-	if ( check_talk_arg1 == 0 ) {
-		if ( cdata(CDATA_LEVEL, check_talk_arg2) < cdata(CDATA_LEVEL, check_talk_arg1) ) {
-			locvar_check_talk_exp *= 1 / 100 + 10
-		}
-	}
-	if ( check_talk_arg1 == 0 ) {
-		if ( cdata(CDATA_LEVEL, check_talk_arg2) > cdata(CDATA_LEVEL, check_talk_arg1) ) {
-			locvar_check_talk_exp *= limit(cdata(CDATA_LEVEL, check_talk_arg2) * 2 / cdata(CDATA_LEVEL, 0), 1, 10)
-		}
-	}
-	if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, check_talk_arg2) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, check_talk_arg2) ) {
-		locvar_check_talk_exp = 0
-	}
-	cdata(CDATA_EXP, check_talk_arg1) += locvar_check_talk_exp
-	if ( check_talk_arg1 == 0 ) {
-		if ( gdata(GDATA_SLEEP_EXP) > 1000000000 ) {
-			gdata(GDATA_SLEEP_EXP) = 1000000000
-		}
-		gdata(GDATA_SLEEP_EXP) += locvar_check_talk_exp
-		if ( gdata(GDATA_SLEEP_EXP) > 1000000000 ) {
-			gdata(GDATA_SLEEP_EXP) = 1000000000
-		}
-	}
-	cdata(CDATA_AI_AGGRO, check_talk_arg1) = 0
 	return
 
 #deffunc check_kill int check_kill_arg1, int check_kill_arg2
 	if ( check_kill_arg1 >= 0 ) {
 		if ( check_kill_arg1 == 0 | cdata(CDATA_RELATION, check_kill_arg1) >= 10 ) {
@@ -4303,19 +4256,10 @@
 		locvar_dmghp_dmg = locvar_dmghp_dmg / 3 + 1
 	}
 	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 1200 ) {
 		locvar_dmghp_dmg = locvar_dmghp_dmg * 1 / 6 + 1
 	}
-	if ( cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid) >= 50 ) {
-		locvar_dmghp_dmg = locvar_dmghp_dmg / 10 * (10 - cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid) / 20)
-		if ( cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid) >= 200 ) {
-			locvar_dmghp_dmg = 1
-		}
-	}
-	if ( gdata(GDATA_TEMPORARY_FLAGS2) == 0 ) {
-		cdata(CDATA_CHAIN_ATTACK_COUNT, dmghp_charid)++
-	}
 	if ( cbit(CHARA_BIT_CONTINGENCY, dmghp_charid) ) {
 		if ( cdata(CDATA_HP, dmghp_charid) - locvar_dmghp_dmg <= 0 ) {
 			if ( limit(25 + cdata(STARTING_CDATA_BUFF + findbuff(dmghp_charid, BUFF_CONTINGENCY) * ARRAY_CDATA_BUFF + 1, dmghp_charid) / 17, 25, 80) >= rnd(100) ) {
 				if ( cdata(CDATA_ID, dmghp_charid) == CREATURE_ID_DEATH_HAMSTER ) {
 					locvar_dmghp_dmg *= -1
@@ -4491,10 +4435,13 @@
 	}
 	if ( dmghp_charid == CHARA_PLAYER ) {
 		if ( dmghp_source == DAMAGE_FROM_CHARA ) {
 			lasttc = dmghp_charid
 		}
+        if ( dbg_hpAlwaysFull ) {
+            cdata(CDATA_HP, dmghp_charid) = cdata(CDATA_MAX_HP, dmghp_charid)
+        }
 		gdata(GDATA_RUN) = 0
 		if ( cdata(CDATA_HP, dmghp_charid) < 0 ) {
 			if ( evid() != (-1) ) {
 				if ( evid() != EVENT_NUKE ) {
 					cdata(CDATA_HP, dmghp_charid) = 1
@@ -4786,32 +4733,10 @@
 							cdata(CDATA_CONDITION_FEAR, dmghp_charid) = rnd(20) + 5
 							if ( synccheck(dmghp_charid, -1) ) {
 								txtmore
 								txtef COLOR_BLUE
 								txt lang(name(dmghp_charid) + "は恐怖して逃げ出した。", name(dmghp_charid) + " run" + _s(dmghp_charid) + " away in terror.")
-								if ( cdata(CDATA_THIRST, dmghp_charid) > 12000 ) {
-									if ( synccheck(dmghp_charid, -1) ) {
-										snd SOUNDLIST_WATERM
-										txt lang(name(dmghp_charid) + "は漏らした。", name(dmghp_charid) + " is incontinent.")
-										if ( dmghp_charid != CHARA_PLAYER ) {
-											txt lang("「…スッキリ！」", cnvtalk("Do not look at me!"))
-										}
-									}
-									if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
-										if ( cfg_dust_select == 0 ) {
-											flt
-											itemcreate -1, ITEM_ID_URINE, cdata(CDATA_X, dmghp_charid), cdata(CDATA_Y, dmghp_charid), 0
-											if ( stat != 0 ) {
-												if ( dmghp_charid != CHARA_PLAYER ) {
-													inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, dmghp_charid)
-													item_stack -1, ci
-												}
-											}
-										}
-									}
-									cdata(CDATA_THIRST, dmghp_charid) = 5000
-								}
 							}
 						}
 					}
 				}
 			}
@@ -5182,19 +5107,19 @@
 				if ( dmghp_charid == CHARA_PLAYER ) {
 					ndeathcause = lang("毒にもがき苦しみながら死んだ。", "miserably died from poison")
 				}
 			}
 			if ( dmghp_source == DAMAGE_FROM_BLEED ) {
-				txt lang(name(dmghp_charid) + "は出血多量で死んだ。", name(dmghp_charid) + " die" + _s(dmghp_charid) + " from loss of blood")
+				txt lang(name(dmghp_charid) + "は出血多量で死んだ。", name(dmghp_charid) + " die" + _s(dmghp_charid) + " from loss of blood.")
 				if ( dmghp_charid == CHARA_PLAYER ) {
 					ndeathcause = lang("血を流しすぎて死んだ。", "died from loss of blood")
 				}
 			}
 			if ( dmghp_source == DAMAGE_FROM_DESERT ) {
-				txt lang(name(dmghp_charid) + "は干からびて死んだ。", name(dmghp_charid) + " die" + _s(dmghp_charid) + " dried up in the desert.")
+				txt lang(name(dmghp_charid) + "は干からびて死んだ。", name(dmghp_charid) + " dried up in the desert and die" + _s(dmghp_charid) + ".")
 				if ( dmghp_charid == CHARA_PLAYER ) {
-					ndeathcause = lang("干からびて死んだ。", "died dried up in the desert.")
+					ndeathcause = lang("干からびて死んだ。", "dried up in the desert")
 				}
 			}
 			if ( dmghp_source == DAMAGE_FROM_CHOCO ) {
 				txt lang(name(dmghp_charid) + "は熱したチョコレートで火傷して死んだ。", name(dmghp_charid) + " melt" + _s(dmghp_charid) + " down.")
 				if ( dmghp_charid == CHARA_PLAYER ) {
@@ -5278,13 +5203,13 @@
 				if ( dmghp_charid == CHARA_PLAYER ) {
 					ndeathcause = lang("首を吊った。", "committed suicide by hanging")
 				}
 			}
 			if ( dmghp_source == DAMAGE_FROM_SUFFOCATION ) {
-				txt lang(name(dmghp_charid) + "は窒息して死んだ", name(dmghp_charid) + " suffocated and died.")
+				txt lang(name(dmghp_charid) + "は窒息して死んだ", name(dmghp_charid) + " choke" + _s(dmghp_charid) + " to death.")
 				if ( dmghp_charid == CHARA_PLAYER ) {
-					ndeathcause = lang("窒息して死んだ", "suffocated and died")
+					ndeathcause = lang("窒息して死んだ", "choked to death")
 				}
 			}
 			if ( dmghp_source == DAMAGE_FROM_BURDEN ) {
 				inv_getheader 0
 				locvar_dmghp_p = -1, 0
@@ -5402,11 +5327,12 @@
 			customtalk dmghp_source, DBMODE_FLAVOR_KILL
 			gosub *convert_word
 			locvar_dmghp_exp = limit(cdata(CDATA_LEVEL, dmghp_charid), 1, 400) * limit(cdata(CDATA_LEVEL, dmghp_charid) + 1, 1, 400) * limit(cdata(CDATA_LEVEL, dmghp_charid) + 2, 1, 400) / 10 + 8
 			if ( dmghp_source == DAMAGE_FROM_CHARA ) {
 				if ( cdata(CDATA_LEVEL, dmghp_charid) < cdata(CDATA_LEVEL, dmghp_source) ) {
-					locvar_dmghp_exp *= 1 / 100 + 10
+					locvar_dmghp_exp *= 1 / 100
+					locvar_dmghp_exp += 10
 				}
 			}
 			if ( dmghp_source == DAMAGE_FROM_CHARA ) {
 				if ( cdata(CDATA_LEVEL, dmghp_charid) > cdata(CDATA_LEVEL, dmghp_source) ) {
 					locvar_dmghp_exp *= limit(cdata(CDATA_LEVEL, dmghp_charid) * 2 / cdata(CDATA_LEVEL, CHARA_PLAYER), 1, 10)
@@ -6362,34 +6288,10 @@
 		else {
 			dmghp chara_vomit_charid, 10 + sdata(SKILL_ATTR_CON, chara_vomit_charid) * 3, DAMAGE_FROM_HUNGER
 		}
 	}
 	cdata(CDATA_HUNGER, chara_vomit_charid) -= 3000
-	cdata(CDATA_THIRST, chara_vomit_charid) -= 1000
-	return
-
-#deffunc chara_morasi int chara_morasi_arg1
-	if ( synccheck(chara_morasi_arg1, -1) ) {
-		snd SOUNDLIST_WATERM
-		txt lang(name(chara_morasi_arg1) + "は漏らした。", name(chara_morasi_arg1) + " is incontinent.")
-		if ( chara_morasi_arg1 != 0 ) {
-			txt lang("「…スッキリ！」", cnvtalk("Do not look at me!"))
-		}
-	}
-	if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
-		if ( cfg_dust_select == 0 ) {
-			flt
-			itemcreate -1, ITEM_ID_URINE, cdata(CDATA_X, chara_morasi_arg1), cdata(CDATA_Y, chara_morasi_arg1), 0
-			if ( stat != 0 ) {
-				if ( chara_morasi_arg1 != 0 ) {
-					inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, chara_morasi_arg1)
-					item_stack -1, ci
-				}
-			}
-		}
-	}
-	cdata(CDATA_THIRST, chara_morasi_arg1) = 5000
 	return
 
 #deffunc eatstatus int eatstatus_arg1, int eatstatus_arg2
 	if ( cdata(CDATA_EXIST, eatstatus_arg2) != CHAR_STATE_ALIVE ) {
 		return
diff -U5 --recursive 1.90.4-custom/chat.hsp 1.90.4.2-custom-g/chat.hsp
--- 1.90.4-custom/chat.hsp	2021-09-02 12:55:06.330718300 -0700
+++ 1.90.4.2-custom-g/chat.hsp	2021-09-02 12:55:06.796274600 -0700
@@ -50,11 +50,11 @@
 	loop
 	return locvar_clientguide_j
 
 *chat_refresh
 	gsel 4
-	buffer 4, windoww, 720
+	buffer 4, windoww, windowh
 	if ( cdata(CDATA_PORTRAIT, tc) < 80 ) {
 		picload exedir + "graphic\\face1.bmp", 1
 	}
 	else {
 		picload exedir + "graphic\\face2.bmp", 1
@@ -127,11 +127,11 @@
 	cs = 0
 	chatflag = 0
 	chatesc = 1
 	if ( cbit(CHARA_BIT_LIVESTOCK, tc) == 1 & gdata(GDATA_AREA) == AREA_DOJO ) {
 		if ( evnum == 0 ) {
-			txt lang(name(tc) + "は修行で忙しい。", name(tc) + " is busy training.")
+			txt lang(name(tc) + "は修行で忙しい。", name(tc) + " is busy with training.")
 			questteleport = 0
 			gosub *screen_draw
 			return
 		}
 	}
@@ -143,11 +143,11 @@
 			return
 		}
 	}
 	if ( cdata(CDATA_RELATION, tc) <= (-1) ) {
 		if ( evnum == 0 ) {
-			if ( cbit(CHARA_BIT_LIVESTOCK, tc) != 1 ) {
+			if ( TweakData(54, 2) == 0 | cbit(CHARA_BIT_LIVESTOCK, tc) != 1 ) {
 				txt lang(name(tc) + "は耳を貸さない。", name(tc) + " won't listen.")
 				questteleport = 0
 				gosub *screen_draw
 				return
 			}
@@ -343,17 +343,17 @@
 						advfavoritestat tc
 						csskill = stat
 					}
 				}
 				if ( sorg(csskill, CHARA_PLAYER) == 0 ) {
-					buff = lang(skillname(csskill) + "のスキルを、友達価格の" + calclearncost(csskill, cc, 1) + strplat + "で教えてあげてもいい" + _ga(3) + "どう" + _kana(1), "I can teach you the art of " + skillname(csskill) + " for a friendly price of " + calclearncost(csskill, cc, 1) + "pp. Do you want me to train you?")
+					buff = lang(skillname(csskill) + "のスキルを、友達価格の" + calclearncost(csskill, cc, 1) + strplat + "で教えてあげてもいい" + _ga(3) + "どう" + _kana(1), "I can teach you the art of " + skillname(csskill) + " for a friendly price of " + calclearncost(csskill, cc, 1) + " platinum pieces. Do you want me to train you?")
 					if ( cdata(CDATA_PLATINUM, CHARA_PLAYER) >= calclearncost(csskill, cc, 1) ) {
 						chatList 1, lang("習得する", "Teach me the skill.")
 					}
 				}
 				else {
-					buff = lang(skillname(csskill) + "のスキルを、友達価格の" + calctraincost(csskill, cc, 1) + strplat + "で訓練してもいい" + _ga(3) + "どう" + _kana(1), "I can train your " + skillname(csskill) + " skill for a friendly price of " + calctraincost(csskill, cc, 1) + "pp. Do you want me to train you?")
+					buff = lang(skillname(csskill) + "のスキルを、友達価格の" + calctraincost(csskill, cc, 1) + strplat + "で訓練してもいい" + _ga(3) + "どう" + _kana(1), "I can train your " + skillname(csskill) + " skill for a friendly price of " + calctraincost(csskill, cc, 1) + " platinum pieces. Do you want me to train you?")
 					if ( cdata(CDATA_PLATINUM, CHARA_PLAYER) >= calctraincost(csskill, cc, 1) ) {
 						chatList 2, lang("訓練する", "Train me.")
 					}
 				}
 				chatList 0, lang("遠慮しとく", "I think I'll pass.")
@@ -526,11 +526,11 @@
 		chatList 0, lang("だめ", "No.")
 		buff = lang("パンを買う金さえない" + _nda() + "恵んで" + _kure(3) + "、おねがい" + _da(2), "I got no money to buy food. Will you spare me some coins?")
 		gosub *chat_select
 		if ( chatval == 1 ) {
 			p = cdata(CDATA_GOLD, CHARA_PLAYER) / 20 + 1
-			txt lang("あなたは" + p + "goldを乞食に渡した。", "You spare " + him(tc) + " " + p + "gp.")
+			txt lang("あなたは" + p + "goldを乞食に渡した。", "You spare " + him(tc) + " " + p + " gold pieces.")
 			cdata(CDATA_GOLD, CHARA_PLAYER) -= p
 			snd SOUNDLIST_PAYGOLD1
 			cdata(CDATA_GOLD, tc) += p
 			modkarma CHARA_PLAYER, 2
 			chatMore lang(_thanks(2) + "この恩は一生忘れない" + _yo(), "Thanks! I'll never forget this.")
@@ -762,11 +762,11 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_ORPHE_THE_CHAOS_CHILD | _switch_sw ) {
 		_switch_sw = 0
 		if ( evid() == EVENT_WIN_LESIMAS ) {
-			chatMore lang("ああ、聡明なるレシマスの常闇の眼よ！ 新しい主は、どうやらお前の本当の価値を知らないようだぞ。…だが、心配しなくてもいい。この" + _sex(cdata(CDATA_SEX, CHARA_PLAYER)) + "は、そこで死んでいる老人のように、たまに本を開いては下界の嘘に満ちた歴史を嘲笑い、自己満足にふける以外の使い方を、きっと見つけてくれるだろう。", "Oh omnipotent Lesimas' <Origin of Vice>! It seems your new master knows not your true worth... But don't worry. While your former master was content to gaze upon your pages and sneer at peoples' lies, this one will doubtless find a more interesting use for your powers...")
+			chatMore lang("ああ、聡明なるレシマスの常闇の眼よ！ 新しい主は、どうやらお前の本当の価値を知らないようだぞ。…だが、心配しなくてもいい。この" + _sex(cdata(CDATA_SEX, CHARA_PLAYER)) + "は、そこで死んでいる老人のように、たまに本を開いては下界の嘘に満ちた歴史を嘲笑い、自己満足にふける以外の使い方を、きっと見つけてくれるだろう。", "Oh omnipotent <Origin of Vice>! It seems your new master knows not your true worth... But don't worry. While your former master was content to gaze upon your pages and sneer at peoples' lies, this one will doubtless find a more interesting use for your powers...")
 			chatMore lang("(青年は見下したような笑い声をあげ、あなたに向き直った) さあ、これ以上愚かな詮索の表情を続けて私を落胆させないでくれ。お前が眺めている本には、真実の歴史を刻み、過去の文明の歩みを記録する魔力が秘められていると知ったのなら。", "(The young man laughs haughtily and turns toward you.) Now, please, stop looking at me with that foolish questioning gaze. The book you see here contains the true history of this world, recorded by the magical power of an ancient civilization.")
 			chatMore lang("そう。この本に書かれていることは、全て偽りなき歴史。シエラ・テールの、そして過去の偉大なる文明の栄光と衰退の軌跡が記されている。その価値を、わざわざ説明する必要もあるまい？", "Yes, this book contains this world's complete and unvarnished history. The glory and decline of Sierre Terre, Rehm-Ido, Eyth Terre, and all the great civilizations of the past are written within. I trust you understand the value of that?")
 			chatMore lang("ひとつ警告しよう。台座から離れた時、それは魔力を失い、変哲の無い一冊の本と化すのだ。新たな歴史が刻まれることはなく、正当性を証明するすべもなくなるだろう。", "One warning: if removed from its pedestal, it loses its magic and becomes an ordinary book. No new history will be recorded and there will be no proof of its legitimacy.")
 			chatMore lang("本を所有する者はまた、偽りの歴史を動かす勢力から、自らの命を守る必要にも迫られるだろう。このアーティファクトには、それだけの価値があるということだ。そしてお前には…エレアの風を聴く者と出会い、言葉を交じあわせたお前には…それがどれほどの意味を持つことか、理解していなくてもだ…そうだな、少なくとも我々を楽しませてくれるような使い方を期待しているよ。", "Those who safeguard this book will be targeted by those who falsify history, since it would be their undoing. Also, you... who met and spoke with the Elea, Listener of Wind... What meaning that has, even if you don't understand... Yes, that's right, you'll at least entertain me...")
 			chatMore lang("もちろん、本を下界に持ち出すかどうかはお前次第だ…少なくとも、選択という行為に、私が予期できない偶然がある可能性を、お前が信じるのなら。", "Of course if you wish to bring the book to your lower world, that's your choice... That is, if you believe that you can make a choice I have not already foreseen...")
@@ -821,20 +821,20 @@
 			kaiwa = rnd(5)
 			if ( kaiwa == 0 ) {
 				chatMore lang("ユーリ…せめて貴様が首を吊らなければな。おおかた獣に喰われてアリシアを忘れるのを恐れたのだろうが…。ザレッタは今でもあの場所で、貴様のことを心配しているだろうよ…！", "Yuri... you should be hanged, or worse. I fear you have even forgotten Alicia, eaten by wild animals. Even now, back there, Zaletta still worries over you!")
 			}
 			if ( kaiwa == 1 ) {
-				chatMore lang("大丈夫だ、ドールのことをまだ全部は忘れていない…。つまり国はどうにか持ちこたえているということだ。", "It’s alright, not all of Dole has been forgotten. Ultimately, the nation will endure one way or another.")
+				chatMore lang("大丈夫だ、ドールのことをまだ全部は忘れていない…。つまり国はどうにか持ちこたえているということだ。", "It's alright, not all of Dole has been forgotten. Ultimately, the nation will endure one way or another.")
 			}
 			if ( kaiwa == 2 ) {
-				chatMore lang("こんなことになるのなら、ドールを発つ前にザレッタと話をしておくべきだった。…そうか。まだ俺はあいつに未練があったのか。我ながら女々しいことだ。", "If it’s come to this, then I should have talked with Zaletta before I left Dole. Oh, is that so?... I still had some feelings left after all? How feminine of me.")
+				chatMore lang("こんなことになるのなら、ドールを発つ前にザレッタと話をしておくべきだった。…そうか。まだ俺はあいつに未練があったのか。我ながら女々しいことだ。", "If it's come to this, then I should have talked with Zaletta before I left Dole. ...Really, I still had some feelings left after all? How womanish of me.")
 			}
 			if ( kaiwa == 3 ) {
-				chatMore lang("今思えばオズム皇子はエルシアを共通の敵に仕立て上げるのが目的のようだった。青髪のルーファスと結託して何か企んでいたのかもしれん。だが今となってはもうどうでもいいことだ…。", "If memory serves, Prince Ozmu aimed to set up the elsians as a common enemy. He conspired with Rufus of the Blue Hair to form some sort of scheme, perhaps. But as for what came of that, none of it matters now...")
+				chatMore lang("今思えばオズム皇子はエルシアを共通の敵に仕立て上げるのが目的のようだった。青髪のルーファスと結託して何か企んでいたのかもしれん。だが今となってはもうどうでもいいことだ…。", "If memory serves, Prince Ozmu aimed to set up the Elsians as a common enemy. He conspired with Rufus of the Blue Hair to form some sort of scheme, perhaps. But as for what came of that, none of it matters now...")
 			}
 			if ( kaiwa == 4 ) {
-				chatMore lang("まさか、このような田舎の町で白い鷹が死に、紅血も死を待つだけになるとはな。おいユーリ…俺たちの歯車はどこで狂ってしまったんだろうな？", "Unbelievable, that in a backwater village like this, with the White Hawk dead, the crimson would simply wait to die. It can’t be possible. Hey Yuri... somewhere, did our gears go askew?")
+				chatMore lang("まさか、このような田舎の町で白い鷹が死に、紅血も死を待つだけになるとはな。おいユーリ…俺たちの歯車はどこで狂ってしまったんだろうな？", "Unbelievable, that in a backwater village like this, with the White Hawk dead, the Crimson would simply wait to die. It can't be possible. Hey Yuri... somewhere, did our gears go askew?")
 			}
 			chatMore lang("…なんだお前は？じろじろ見るな。うせろ。", "...What's with you? Quit staring. Beat it."), strbye
 		}
 		goto *chat_end
 	}
@@ -1071,11 +1071,11 @@
 			if ( gdata(GDATA_FLAG_MAIN) >= 760 ) {
 				chatMore lang("ヴェセル…。", "Bethel...")
 			}
 			else {
 				if ( gdata(STARTING_GDATA_FLAG + 319) == 2 ) {
-					chatMore lang("あなたを見た時は驚いたわ。でもよく考えると、腕の立つ冒険者なのだからロストイルヴァを冒険していてもおかしくないのよね。", "I was surprised when I first saw you, but when I think about it, seeing an adventurer in Lost Ylva isn't that strange.")
+					chatMore lang("あなたを見た時は驚いたわ。でもよく考えると、腕の立つ冒険者なのだからロストイルヴァを冒険していてもおかしくないのよね。", "I was surprised when I first saw you, but when I think about it, seeing an adventurer in Lost Irva isn't that strange.")
 				}
 				if ( gdata(STARTING_GDATA_FLAG + 319) == 1 ) {
 					chatMore lang("あなたは…もしかして" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "？", "Are you " + cdatan(CDATAN_NAME, CHARA_PLAYER) + " by any chance?")
 					chatMore lang("ごめんなさい、別人のように見えてしまって気づかなかったの。また会えて嬉しいわ。メルガスでメシェーラを研究していた時以来ね。", "Forgive me, I was looking at someone else and didn't notice. I'm glad to see you again though. Melugast has been researching the Meshera since last time.")
 					chatMore lang("あれから私達は異形の森の復興に尽力していたのだけれど、ヴェセルを捜しにここまで来たの。もし彼を見かけたら私達がここで待っていることを伝えて欲しいわ。", "After that, we came here to help with restoring the Heretical Forest and searching for Bethel. If you happen to see him I'd like you to come back here and tell us.")
@@ -1098,11 +1098,11 @@
 			chatMore lang("二人は様々な困難を力を合わせ乗り越えて、最後には王子にかけられた呪いがとけ、二人が結婚して幸せな結末を迎えるの。どこにでもある物語ね。", "They surmounted various difficulties throughout their lives and the story comes to an end when the curse set upon the prince finally breaks and the beast returned to his former shape, that of a flawlessly handsome prince. The two of them got along very well from that time on. A happy ending... although just an ordinary story, don't you agree?")
 			chatMore lang("わたしは、小さい頃聞かされたこのおとぎ話が、どうしても好きになれなかった。きっと、醜い姿の男に対する愛が、どこかに置き去りにされた気がしたのね。", "The elders of Vindale used to tell me this kind of story. But I never liked this one. Perhaps it is because I felt like the beast that she loved despite the fact that his ugliness had been left behind somewhere.")
 			goto *chat_unique
 		}
 		if ( chatval == 2 ) {
-			chatMore lang("アセリア大陸から大洋を隔たち、ティリス大陸の北に位置するのがノースティリスよ。自由と平和の国パルミアの統治の下、古代の遺跡群ネフィアを巡り、多くの旅人や商人がこの地を訪れるの。あなたも、そんな旅人の一人かしら？", "North Tyris is a continent in the western hemisphere of Ylva. Lots of merchants and travelers set foot on North Tyris' soil with the dream of making a fortune in the ancient ruins of Nefia.")
+			chatMore lang("アセリア大陸から大洋を隔たち、ティリス大陸の北に位置するのがノースティリスよ。自由と平和の国パルミアの統治の下、古代の遺跡群ネフィアを巡り、多くの旅人や商人がこの地を訪れるの。あなたも、そんな旅人の一人かしら？", "North Tyris is a continent in the western hemisphere of Irva. Lots of merchants and travelers set foot on North Tyris' soil with the dream of making a fortune in the ancient ruins of Nefia.")
 			chatMore lang("目的が決まっていないのなら、南の炭鉱街ヴェルニースに行くといいわ。あなたの探しているものが、見つかるかもしれない。", "If you haven't set your destination yet, you might want to visit Vernis. It's a mining town located south of here.")
 			goto *chat_unique
 		}
 		if ( chatval == 3 ) {
 			chatMore lang("私達はヴィンデールの森からの使者。公正なるジャビ王と会見し、森とエレアの民に降りかかる嫌疑を晴らすために、王都パルミアに向かっているの。", "We are messengers from Vindale. Our journey ends here in North Tyris at the great city of Palmia where we're supposed to have a talk with King Xabi, a man of fairness and compassion.")
@@ -1112,11 +1112,11 @@
 	}
 	if ( _switch_val == CREATURE_ID_RIANNA_THE_DAYDREAMER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_ULM_LESON ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 760 ) {
-				chatMore lang("ヴェセル！ヴェセル！ヴェセル！ヴェセルぅぅうううわぁああああああああああああああああああああああん！！！あぁああああ…ああ…あっあっー！あぁああああああ！！！ヴェセルヴェセルヴェセルぅううぁわぁああああ！！！妄想に出てくるヴェセルかっこよすぎよぅ！！あぁぁああ…あああ…あっあぁああああ！！ふぁぁあああんんっ！！あぁあああああ！かっこいい！ヴェセルぅ！かっこいい！あっああぁああ！夢でも会えて嬉し…いやぁああああああ！！！にゃああああああああん！！ぎゃああああああああ！！ぐあああああああああああ！！！夢なんて現実じゃない！！！！あ…妄想も夢もよく考えたら…いつも私を愛してくれたヴェセルは現実じゃない？にゃあああああああああああああん！！うぁああああああああああ！！そんなぁああああああ！！いやぁぁぁあああああああああ！！はぁああああああん！！この！ちきしょー！やめてやる！！現実なんかやめてやるわ！！", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("ヴェセル！ヴェセル！ヴェセル！ヴェセルぅぅうううわぁああああああああああああああああああああああん！！！あぁああああ…ああ…あっあっー！あぁああああああ！！！ヴェセルヴェセルヴェセルぅううぁわぁああああ！！！妄想に出てくるヴェセルかっこよすぎよぅ！！あぁぁああ…あああ…あっあぁああああ！！ふぁぁあああんんっ！！あぁあああああ！かっこいい！ヴェセルぅ！かっこいい！あっああぁああ！夢でも会えて嬉し…いやぁああああああ！！！にゃああああああああん！！ぎゃああああああああ！！ぐあああああああああああ！！！夢なんて現実じゃない！！！！あ…妄想も夢もよく考えたら…いつも私を愛してくれたヴェセルは現実じゃない？にゃあああああああああああああん！！うぁああああああああああ！！そんなぁああああああ！！いやぁぁぁあああああああああ！！はぁああああああん！！この！ちきしょー！やめてやる！！現実なんかやめてやるわ！！", "Bethel! Bethel! Bethel! Bethelluuuuuaaaaaaaaaaaaaaaaaaaaaaaaaaa! ! ! Ah ah ah... ah... Aaaaa! Aaaaaaaa!!! Be-thel-be-thel-be-theluuaaaaaaaa!!! Bethel appearing in delusion is too cool!! Aaaa... ah... Aaaaaaa!! Faaaaaaaa!! Oh Oh Oh Oh! Cool! Bethel! Cool! A-aa ~ aa! I'm happy to see you even in my dreams... Wow... ah ah ah!!! Oh ah ah ah ah!! Aaaaaaaaa!! Guaaa ah ah ah ah!!! A dream is not a reality!!!! Ah... if you think delusions and dreams well... Well that you always loved me is not reality? Nyaa ah ah ah ah ah Aan!! Uaa ah ah ah ah!! Ah ah ah ah!! Iyaaaa ah ah ah ah!! Haaaaaaaaaa!! this! Chikusho! I will give up!! I will give up reality!!"), strbye
 			}
 			else {
 				chatMore lang("んもうっ、待ち遠しいわヴェセルぅ！！", "Oh come on! We've been waiting forever for Bethel!"), strbye
 			}
 			goto *chat_end
@@ -1125,11 +1125,11 @@
 	}
 	if ( _switch_val == CREATURE_ID_LOMIAS_THE_MESSENGER_FROM_VINDALE | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_ULM_LESON ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 760 ) {
-			chatMore lang("やれやれ。どうやら私はお邪魔虫のようだ。それにしても、ラーネイレはいつ森に帰るつもりなんだ？", "Whew. Apparently I am like a bug. Anyway, when is Larnneire going to the forest?")
+				chatMore lang("やれやれ。どうやら私はお邪魔虫のようだ。それにしても、ラーネイレはいつ森に帰るつもりなんだ？", "Whew. Apparently I am like a bug. Anyway, when is Larnneire going to the forest?")
 			}
 			else {
 				chatMore lang("はぁ…ヴェセルの奴が来るまで待ちぼうけか。", "Yeah... waiting for that idiot Bethel to come back from his adventure.")
 				chatMore lang("ん？誰だか知らないが、そっとしておいてくれ…。", "Huh? Leave that alone stranger...")
 			}
@@ -1149,11 +1149,11 @@
 				chatList 0, lang("わかった", "Alright.")
 				chatList 3, lang("食べた", "I ate it.")
 			}
 			if ( gdata(GDATA_FLAG_TUTORIAL) == 2 ) {
 				chatMore lang("zキーでは、魔法やスキルを使用したり、体当たりや採掘など、やや特殊な行動を行うことができる。体当たりは、鍵のかかったドアを壊したり、果実を木から落としたい時に実行するといい。", "You can perform skills or other actions including bashing and digging by pressing [z]. Here's a tip: You can bash doors to break locks and trees to get some fruits. It can also be used to wake someone, but surely they won't be happy.")
-				chatMore lang("zキーの他にも、スペースキーの活用法を覚えておこう。スペースキーは、足元にあるものに応じて自動的に行動を選択してくれるキーだ。例えば足元に階段があれば昇り降りを、宝箱があれば「開く」を、祭壇があれば「捧げる」をなど、自動的に選択してくれる便利なキーだ。", "Also, remember that [space] key is a very useful key. When there's an object under your foot, it automatically chooses a suitable action for you.")
+				chatMore lang("zキーの他にも、スペースキーの活用法を覚えておこう。スペースキーは、足元にあるものに応じて自動的に行動を選択してくれるキーだ。例えば足元に階段があれば昇り降りを、宝箱があれば「開く」を、祭壇があれば「捧げる」をなど、自動的に選択してくれる便利なキーだ。", "Also, remember that the [space] bar is a very useful key. When there's an object under your foot, it automatically chooses a suitable action for you.")
 				buff = lang("そうだな… 「穴掘り」実際に試してみようか。穴掘りは、道を短縮したり、鉱石を採掘したり、家のレイアウトを変える時に使う。とりあえず適当な壁の前に立ち、zキーを押して穴を掘ってみてくれ。", "Let's try it now. Try digging some walls by pressing [z] and choosing <dig>.")
 				chatList 0, lang("わかった", "Okay.")
 			}
 			if ( gdata(GDATA_FLAG_TUTORIAL) == 3 ) {
 				txt_questitem
@@ -1450,22 +1450,22 @@
 			txt_questitem
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_MAIN) >= 760 ) {
 			if ( gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_4) >= 100 ) {
-				chatMore lang("混沌の神が倒され、ロスリアに集まっていた混沌の精霊たちも各国の連合軍に鎮圧されました。事実上、混沌の軍勢は滅んだことになりますね。ロストイルヴァの情報も大体集まりましたし、ようやく私も落ち着けます。", "Sorry, this is untranslated sentence.")
+				chatMore lang("混沌の神が倒され、ロスリアに集まっていた混沌の精霊たちも各国の連合軍に鎮圧されました。事実上、混沌の軍勢は滅んだことになりますね。ロストイルヴァの情報も大体集まりましたし、ようやく私も落ち着けます。", "The chaotic gods were overthrown and the chaotic spirits that had gathered in Rosuria were also suppressed by their allied forces. In fact, the chaotic army is going to be destroyed. We gathered the information of Lost Irva, and finally I can calm down.")
 			}
 			if ( gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_4) < 100 ) {
 				chatMore lang("ええっ？混沌の神を倒した…のですか？あなたが？", "What? Defeated the God of Chaos...? You?")
 				chatMore lang("…。", "...")
-				chatMore lang("…あまり、そのことは喋らない方がいいかもしれませんよ。邪神を殺した英雄がそれ以上の危険因子として迫害されることがあるのは、歴史が証明しています。", "Sorry, this is untranslated sentence.")
+				chatMore lang("…あまり、そのことは喋らない方がいいかもしれませんよ。邪神を殺した英雄がそれ以上の危険因子として迫害されることがあるのは、歴史が証明しています。", "...You may not want to talk about that too often. History proves that the hero who killed the evil spirit may be persecuted as a further risk factor.")
 				gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_4) = 100
 			}
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) + gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) + gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) + gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) >= 4000 ) {
-			chatMore lang("私の方では、今のところ新たに依頼する討伐もありません。ロストイルヴァの調査をお願いします。何か新しい発見があれば、内容に応じて報酬を出しましょう。", "I don't have any further requests to eliminate demons at the moment. Please focus on investigating Lost Ylva for now. If you discover something, we may give you a reward based on what it is."), strbye
+			chatMore lang("私の方では、今のところ新たに依頼する討伐もありません。ロストイルヴァの調査をお願いします。何か新しい発見があれば、内容に応じて報酬を出しましょう。", "I don't have any further requests to eliminate demons at the moment. Please focus on investigating Lost Irva for now. If you discover something, we may give you a reward based on what it is."), strbye
 			if ( gdata(GDATA_FLAG_MAIN) <= 470 ) {
 				chatMore lang("ああ、そういえばイェルス軍からご指名がありましたよ。あなたの手が空いたら、メルガスへ来てほしいとのことでした。依頼の内容と指名の理由は明かしてくれませんでしたが…。", "Ah, that reminds me. The Yerles army was looking for you. They wanted you to stop by Melugas when you're free. They didn't inform me of why they were looking for you, however..."), strbye
 			}
 			goto *chat_end
 		}
@@ -1500,29 +1500,29 @@
 				}
 				goto *chat_end
 			}
 			if ( chatval == 2 ) {
 				chatMore lang("ニーサ沿岸部に突如出現したとされる復讐の悪魔は、大陸を東に移動しつつエウダーナ王都に到達。王都は以前から混沌の精霊たちの襲撃を受けており、その度に魔術師団が対応にあたっていました。しかし悪魔到達後に状況は一変。下級・中級の魔術師たちが悪魔にそそのかされ敵に回ったのです。元よりエリート主義のエウダーナにおいて才能に劣る者は辛く惨めな思いをするものだと聞きます。おそらくは悪魔はその心の隅間に付け込んだのでしょう。", "The demon of vengeance that appeared on Niesa's cost has traveled to the east to the Eulderna captial. The capital has been under attack for some time by chaos spirits, which have been repelled by the mage division of their army so far. But things have changed now that this demon has arrived. The lower and mid class mages have been seduced by this demon and have turned on their comrades. From my understanding, the elite in Eulderna look down on and are cruel to the less talented mages. I'm sure the demon took advantage of the resentment this caused.")
-				chatMore lang("ロストイルヴァ探索に出ていたエウダーナの調査部隊が敵勢力に２度挑んでいますが、老魔導士のライゼル以外に渡り合える者がおらず、撤退を繰り返しています。再攻撃を予定している魔導船に乗って最前線に赴き、王宮周辺の結界に籠城している魔術師たちと協力して敵勢力を殲滅…それが今回の国家依頼です。大混戦が予想されるので注意してください。", "The Eulderna investigation team that's on Lost Ylva have attempted to challenge the demon twice. However, the only one that possesses enough power to fight the demon is the old wizard Raizel, so they've had to retreat both times. Your task is to join forces with the magicians and stage an assault again the forces of chaos at the Eulderna capital, and to eliminate the demon of vengeance there... This is an official state request. This will likely be a large fight, so be careful.")
+				chatMore lang("ロストイルヴァ探索に出ていたエウダーナの調査部隊が敵勢力に２度挑んでいますが、老魔導士のライゼル以外に渡り合える者がおらず、撤退を繰り返しています。再攻撃を予定している魔導船に乗って最前線に赴き、王宮周辺の結界に籠城している魔術師たちと協力して敵勢力を殲滅…それが今回の国家依頼です。大混戦が予想されるので注意してください。", "The Eulderna investigation team that's on Lost Irva have attempted to challenge the demon twice. However, the only one that possesses enough power to fight the demon is the old wizard Raizel, so they've had to retreat both times. Your task is to join forces with the magicians and stage an assault again the forces of chaos at the Eulderna capital, and to eliminate the demon of vengeance there... This is an official state request. This will likely be a large fight, so be careful.")
 				if ( gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) == 0 ) {
 					gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) = 1
 				}
 				goto *chat_end
 			}
 			if ( chatval == 3 ) {
 				chatMore lang("キッカス辺境の街が一夜にして地獄に変わりました。疫病の悪魔を名乗る怪物が瘴気で街を包み込んだのです。人々が次々に死亡し、アンデッドに変えられて街を徘徊しているのだとか。街から逃げ出してきた旅人はこの報告直後に全身から血を噴き出して死亡、さらに介抱した周囲の人々も２４時間以内に死亡したそうです。事態を重く見たキッカス政府は周辺を封鎖し、同盟に救援を要請してきました。", "The Kikkasu border town turned in to Hell overnight. A monster calling himself the Demon of Plagues wrapped the town in some sort of miasma. The people died one after the other, and became undead that wander the streets. The traveler that fled the city and reported this to us died from blood pouring out of every orifice, and the people that attempted to nurse him died within another 24 hours. The Kikkasu government blockaded the city and requested help from our alliance.")
-				chatMore lang("今回は歴戦の傭兵部隊に同行することになります。現地へはロストイルヴァ北端に存在する神艦から小型艇で移動する手筈です。詳しくは神艦で準備を進めている傭兵のリーダー、シュライダと打ち合わせをお願いします。", "You'll be cooperating with veteran mercenaries this time. Arrangements have been made for you to leave on a small boat from the God's Warship located in the northern part of Lost Ylva. You should meet up with Shuraida, the head of the mercenaries, for more information.")
+				chatMore lang("今回は歴戦の傭兵部隊に同行することになります。現地へはロストイルヴァ北端に存在する神艦から小型艇で移動する手筈です。詳しくは神艦で準備を進めている傭兵のリーダー、シュライダと打ち合わせをお願いします。", "You'll be cooperating with veteran mercenaries this time. Arrangements have been made for you to leave on a small boat from the God's Warship located in the northern part of Lost Irva. You should meet up with Shuraida, the head of the mercenaries, for more information.")
 				if ( gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) == 0 ) {
 					gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) = 1
 				}
 				goto *chat_end
 			}
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_MAIN) >= 382 ) {
 			if ( gdata(GDATA_FLAG_MAIN) < 404 ) {
-				chatMore lang("今後も何かあったら協力をお願いするかもしれませんね。" + cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "、頼りにしていますよ。", "I'll ask for your help again if anything comes up in the future. We're counting on you, " + cdatan(CDATAN_NAME, CHARA_PLAYER) + ".")
+				chatMore lang("今後も何かあったら協力をお願いするかもしれませんね。" + cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "、頼りにしていますよ。", "I'll ask for your help again if anything comes up in the future. We're counting on you, " + cdatan(CDATAN_NAME, CHARA_PLAYER) + "."), strbye
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_FLAG_MAIN) == 380 ) {
 			chatMore lang("銀熊と遭遇した…？わかりました、一度順を追って報告をお願いします。", "You encountered the Silver Bear...? I understand. Please give me your report.")
@@ -1603,11 +1603,11 @@
 		}
 		if ( gdata(GDATA_FLAG_MAIN) == 360 ) {
 			chatList 0, lang("引き受けよう", "I'll do it.")
 			chatList 1, lang("どうでもいい", "Who cares.")
 			chatList 2, lang("いくら出す？", "How much will you pay me?")
-			buff = lang(cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "…！またあなたの力が必要なのです。あなたもうわさで耳にしたことがあるかもしれませんが、今このイルヴァの各地で行方不明者が続出しています。あなたに頼みたいことは２つ。行方不明者の居所を突き止めること、そして事件の元凶を断つことです。", cdatan(CDATAN_NAME, CHARA_PLAYER) + "...! It's good to see you. We need your power once again. You may have already heard rumors about this, but people have been disappearing all over Ylva. I have two things I want to ask you to do. Find out what has happened to the people who disappeared, and stop those responsible for it.")
+			buff = lang(cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "…！またあなたの力が必要なのです。あなたもうわさで耳にしたことがあるかもしれませんが、今このイルヴァの各地で行方不明者が続出しています。あなたに頼みたいことは２つ。行方不明者の居所を突き止めること、そして事件の元凶を断つことです。", cdatan(CDATAN_NAME, CHARA_PLAYER) + "...! It's good to see you. We need your power once again. You may have already heard rumors about this, but people have been disappearing all over Irva. I have two things I want to ask you to do. Find out what has happened to the people who disappeared, and stop those responsible for it.")
 			gosub *chat_select
 			if ( chatval == 0 ) {
 				chatMore lang("あなたの協力に感謝します。早速、メイルーンへ調査に赴いて欲しいのです。準備が出来たらまた話しかけてください。", "Your cooperation is appreciated. I'd like for you to begin your investigation at once, starting in Mayroon.")
 				chatMore lang("それと…そうですね、報酬は成果に応じて適宜支払いましょう。", "And... Right, I'll reward you based on the outcome."), strbye
 				gdata(GDATA_FLAG_MAIN) = 361
@@ -1648,11 +1648,11 @@
 			gosub *screen_fade
 			gsel 4
 			pos 0, 0
 			picload exedir + "graphic\\face1" + devfile + ".bmp", 1
 			gsel 0
-			chatMore lang("…カラムの言葉、確かに受け取りました。《常闇の眼》という古宝の伝承は、私も本で読んだことがあります。それは、イルヴァの大地の上に築かれた全ての歴史の真相を網羅していると伝えられています。もしカラムが危惧していたように、ザナンのサイモアが自らの説の誤りを葬らんとするためレシマスの秘宝を狙っているとしたら、私達はそれを阻止しなければなりません。", "We'll take Karam's message to heart then... I remember reading about the <Origin of Vice> in one of these books. I believe it referred to the codex as an exhaustive account of the history of all things in Ylva. If, as Karam suspected, Saimore is trying to acquire the codex in order to cover up gaps in his story we can't allow him to succeed.")
+			chatMore lang("…カラムの言葉、確かに受け取りました。《常闇の眼》という古宝の伝承は、私も本で読んだことがあります。それは、イルヴァの大地の上に築かれた全ての歴史の真相を網羅していると伝えられています。もしカラムが危惧していたように、ザナンのサイモアが自らの説の誤りを葬らんとするためレシマスの秘宝を狙っているとしたら、私達はそれを阻止しなければなりません。", "We'll take Karam's message to heart then... I remember reading about the <Origin of Vice> in one of these books. I believe it referred to the codex as an exhaustive account of the history of all things in Irva. If, as Karam suspected, Saimore is trying to acquire the codex in order to cover up gaps in his story, we can't allow him to succeed.")
 			chatMore lang("…王の悲報はもう耳にしているでしょう。都の土は涙で濡れていようとも、今の私達に喪に服している時間はありません。カラムと、そして王の意思を継ぐためにも。", "I'm sure you've already heard the tragic news about the king. All of Palmia is heartbroken by the king's demise, but we can't afford to spend our time mourning right now. We have to push on, for Karam... and for the king's sake.")
 			chatMore lang("あなたの次の任務は、三つの魔石の入手です。魔石には、レシマスの秘密を解く何らかの力が秘められていると伝えられています。魔石の所在は判明していますが、どこも危険な場所ばかり。まずは、各地を探索し、経験を積んでから臨んだほうがいいでしょう。", "Your next task is to retrieve the three magic stones. It's written in several of our historical accounts that the stones are the key to unlocking the secrets of Lesimas. We already know where the stones are located, but actually getting the stones is definitely easier said than done. First, you should scout the areas, gather info, and build your strength.")
 			chatMore lang("探索に必要な情報がある時は、いつでも私に話しかけてくださいね。帰還したばかりなのに酷ですが、あなたに期待しています。", "Please come see me anytime you get information that would be useful to the expedition. I know you've just returned and we're asking an awful lot of you, but I don't have any other choice."), strbye
 			snd SOUNDLIST_WRITE1
 			txtef COLOR_GREEN
@@ -2734,11 +2734,11 @@
 		if ( chatval == 1 ) {
 			if ( get_freeally() == 0 ) {
 				txt lang("仲間の最大数に達しているため、これ以上連れていけない…。", "Your party is already full. You can't invite someone anymore.")
 				goto *chat_end
 			}
-			txt lang(name(tc) + "を保護した。無事に連れて帰らなければ。", name(tc) + " is under your protection. It must be returned home safely.")
+			txt lang(name(tc) + "を保護した。無事に連れて帰らなければ。", name(tc) + " is under your protection. He must be returned home safely.")
 			rc = tc
 			gosub *add_ally
 			cbitmod CHARA_BIT_GUARD_TEMP, rc, 1
 			r1 = rc
 			gosub *charaRefresh
@@ -3196,11 +3196,11 @@
 		}
 		if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= 12000 ) {
 			chatList 1, lang("購入する", "I'll buy.")
 		}
 		chatList 0, strbye
-		buff = lang("ねえ、核爆弾買う？金貨12000枚よ。", "Here, you need a nuke. Only 12000gp.")
+		buff = lang("ねえ、核爆弾買う？金貨12000枚よ。", "Here, you need a nuke. Only 12000 gold pieces.")
 		gosub *chat_select
 		if ( chatval != 1 ) {
 			chatMore lang("あら、そう。", "Then go away."), strbye
 			goto *chat_end
 		}
@@ -4404,11 +4404,11 @@
 		gosub *chat_select
 		if ( chatval == 1 ) {
 			gdata(GDATA_FLAG_SUB_THIEF_1) = 1
 			gdata(GDATA_FLAG_GUILD_THIEF_NORMA) = (10000 - gdata(GDATA_RANK_GUILD)) * 6 + 1000
 			txt_questupdate
-			chatMore lang("良い心がけです。あなたにランク昇格のためのノルマを与えましょう。他人の所有物を奪い取り、盗品を売り払いなさい。金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚相当の盗品を売ったら、昇進のための審査会に報告してあげましょう。", "Alright. The Thieves Guild wants you to put stolen goods into circulation. Steal some goods and sell them to any vendors. When the sum of your earnings reaches " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "gp, we will think about your promotion.")
+			chatMore lang("良い心がけです。あなたにランク昇格のためのノルマを与えましょう。他人の所有物を奪い取り、盗品を売り払いなさい。金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚相当の盗品を売ったら、昇進のための審査会に報告してあげましょう。", "Alright. The Thieves Guild wants you to put stolen goods into circulation. Steal some goods and sell them to any vendors. When the sum of your earnings reaches " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + " gold pieces, we will think about your promotion.")
 			goto *chat_unique
 		}
 		if ( chatval == 2 ) {
 			if ( gdata(GDATA_FLAG_GUILD_THIEF_NORMA) > 0 ) {
 				chatMore lang("どうしました？まだノルマが残っていますよ。", "You have your task to complete.")
@@ -4612,11 +4612,11 @@
 			chatMore lang("チッ、一文無しの乞食" + _ka() + "とっとといっちまい" + _na(), "Bah, a beggar without a penny. What a waste of time! Just go away!")
 			goto *chat_end
 		}
 		chatList 1, lang("返り討ちにする", "Try me.")
 		chatList 0, lang("降参する", "I surrender.")
-		buff = lang("おまえさん、ついてない" + _na() + _ore(3) + "達は泣く子も黙る冷血な盗賊団、その名も" + gdatan(GDATAN_TEAM2) + _da() + "命が惜しければ、おとなしく荷車の積荷と金貨" + cdata(CDATA_GOLD, CHARA_PLAYER) / 5 + "枚を渡すがいい" + _yo(), "Halt, halt, traveler. You're a quite fortunate one. Before you is the renowned band of legendary brigands \"" + gdatan(GDATAN_TEAM2) + "\" that the mere mention of its name is enough to silence a naughty child. Yet we will spare your life for only a toll of " + cdata(CDATA_GOLD, CHARA_PLAYER) / 5 + "gp and your cargos. Quite fortunate indeed.")
+		buff = lang("おまえさん、ついてない" + _na() + _ore(3) + "達は泣く子も黙る冷血な盗賊団、その名も" + gdatan(GDATAN_TEAM2) + _da() + "命が惜しければ、おとなしく荷車の積荷と金貨" + cdata(CDATA_GOLD, CHARA_PLAYER) / 5 + "枚を渡すがいい" + _yo(), "Halt, halt, traveler. You're a quite fortunate one. Before you is the renowned band of legendary brigands \"" + gdatan(GDATAN_TEAM2) + "\" that the mere mention of its name is enough to silence a naughty child. Yet we will spare your life for only a toll of " + cdata(CDATA_GOLD, CHARA_PLAYER) / 5 + " gold pieces and your cargos. Quite fortunate indeed.")
 		chatesc = 0
 		gosub *chat_select
 		if ( chatval == 0 ) {
 			snd SOUNDLIST_PAYGOLD1
 			cdata(CDATA_GOLD, CHARA_PLAYER) -= cdata(CDATA_GOLD, CHARA_PLAYER) / 5
@@ -5775,11 +5775,11 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_SNAIL_THE_ANDROID_RIDER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_FLAG_MAIN) >= 400 ) {
-			chatMore lang("イルヴァ中の国家がまとまったのは単に脅威からそれぞれの身を守るためだ。国々が真に和解する日まで、僕たちの戦いは続くんだ。", "The nations of Ylva only gather to protect themselves against a threat. Until the day the countries truly reconcile with each other, my fight will continue."), strbye
+			chatMore lang("イルヴァ中の国家がまとまったのは単に脅威からそれぞれの身を守るためだ。国々が真に和解する日まで、僕たちの戦いは続くんだ。", "The nations of Irva only gather to protect themselves against a threat. Until the day the countries truly reconcile with each other, my fight will continue."), strbye
 		}
 		if ( gdata(GDATA_FLAG_MAIN) < 400 ) {
 			chatMore lang("イェルスとジューアはそろそろ和解したほうがいいと思うんだ。", "It would be best if Juere and the Yerles reconciled soon."), strbye
 		}
 		goto *chat_end
@@ -6044,11 +6044,11 @@
 			txt_questupdate
 			gdata(GDATA_FLAG_SUB_MANSION_FOR_SALE) = 2
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_SUB_MANSION_FOR_SALE) == 2 ) {
-			chatMore lang("一緒に解雇されたメイド仲間に、雇ってくれるかもしれない人がいるって連絡しないとなぁ。あ、ルードゥスはここからずっと東にある農村ですよ。", "You're still alive I see. Good luck glorious murderer."), strbye
+			chatMore lang("一緒に解雇されたメイド仲間に、雇ってくれるかもしれない人がいるって連絡しないとなぁ。あ、ルードゥスはここからずっと東にある農村ですよ。", "I have to contact the maid friends who were dismissed together that someone might hire them. Oh, Ludus is a rural area ever far from here."), strbye
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_BANKRUPT_GUO | _switch_sw ) {
@@ -6115,30 +6115,30 @@
 	if ( _switch_val == CREATURE_ID_MILOS_OF_THE_FORGOTTEN_WORLD | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(STARTING_GDATA_FLAG + 320) > 0 ) {
 			chatList 0, strbye
 			chatList 1, lang("伝説って？", "What is a legend?")
-			buff = lang("光に包まれてこちらの世界に飛ばされた際、何者かが私たちの前に現れた。声も姿もおぼろげでよくわからなかったが、運命がどうとか言っていた。もしかすると伝説のノルンだったのかもしれないな。", "Okay. Wait here.")
+			buff = lang("光に包まれてこちらの世界に飛ばされた際、何者かが私たちの前に現れた。声も姿もおぼろげでよくわからなかったが、運命がどうとか言っていた。もしかすると伝説のノルンだったのかもしれないな。", "When being blown in the light and being blown to this world, someone appeared in front of us. I could not understand well the voices and the appearances, but I was talking about fate. Perhaps it was a legendary Norne.")
 			gosub *chat_select
 			if ( chatval == 1 ) {
-				chatMore lang("ああ、すまない。こちら側の住人にガイアス・ヴィスの伝説はわからないか。ノルンとは、運命の女神とその末裔…巨人族のアールン、妖精族のエルン、小人族のドヴァルン。その総称だ。古神戦争によって大多数が死滅したが、生き残りが運命を見通し人を導くとされている。", "Okay. Wait here.")
+				chatMore lang("ああ、すまない。こちら側の住人にガイアス・ヴィスの伝説はわからないか。ノルンとは、運命の女神とその末裔…巨人族のアールン、妖精族のエルン、小人族のドヴァルン。その総称だ。古神戦争によって大多数が死滅したが、生き残りが運命を見通し人を導くとされている。", "Oh, sorry. Do not you know the legend of Gaius Vis for the inhabitants of this side? Norn is the goddess of fate and its descendant ... Ahlung of the giants, Ern of the fairy tribe, Dovars of the dwarf. It is a generic term. The vast majority have been killed by the Old God war, but survival is said to lead people outlooking fate.")
 				goto *chat_end
 			}
 			goto *chat_end
 		}
 		else {
 			chatMore lang("パルミア、エウダーナ、エーテルの風…", "Palmia, Eulderna, Etherwind...")
-			chatMore lang("この世界…イルヴァといったか。どうやら我々の世界ガイアス・ヴィスとまったく無関係というわけではなさそうだな。使命さえなければじっくり調査をしたいところだ。", "This world... Ylva, it's called. It appears it's not entirely independent of my own world of Gaius Vis. Despite my mission, I can't help but want to investigate it.")
+			chatMore lang("この世界…イルヴァといったか。どうやら我々の世界ガイアス・ヴィスとまったく無関係というわけではなさそうだな。使命さえなければじっくり調査をしたいところだ。", "This world... Irva, it's called. It appears it's not entirely independent of my own world of Gaius Vis. Despite my mission, I can't help but want to investigate it.")
 			chatMore lang("それにしてもこの世界はどこかおかしい。死人や瀕死の怪我人が、生魂の儀もなしに自然回復するのだから。誰も疑問に思わないのか？", "That said, something about this world is funny. The dead and dying can be recovered without the Healing Ceremony. Doesn't anyone find that odd?"), strbye
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_CARLA_OF_THE_FORGOTTEN_WORLD | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(STARTING_GDATA_FLAG + 320) > 0 ) {
-			chatMore lang("ミロスと合流できたのはいいけれど、こちら側に来てから相当年月が過ぎているわ。もし時間の流れが同じだとしたら…今頃、森の異変はどうなっているのかしら。考えるだけで恐ろしいわ。", "Okay. Wait here.")
+			chatMore lang("ミロスと合流できたのはいいけれど、こちら側に来てから相当年月が過ぎているわ。もし時間の流れが同じだとしたら…今頃、森の異変はどうなっているのかしら。考えるだけで恐ろしいわ。", "It is nice to be able to join with Miros, but it's been a long time since I came here. If the flow of time is the same... I wonder what is going on about the accident in the forest at this time. Just thinking is horrible.")
 			goto *chat_end
 		}
 		else {
 			chatMore lang("あ、あなたは！？", "Y-you are?!")
 			chatMore lang("…ごめんなさい、人違いだわ。昔助けた冒険者と雰囲気が似ていたから間違えてしまったの。", "...I'm sorry. I thought you were someone else. You remind me of an adventurer who helped me out long ago.")
@@ -6168,22 +6168,22 @@
 	}
 	if ( _switch_val == CREATURE_ID_ARMA_THE_TOUR_GUIDE | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 630 ) {
-				chatMore lang("今思うと、イトコのフロンとリアにも来てもらうべきでしたね。下見ついでに混沌の神も倒せて一石二鳥だったかもしれません。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("今思うと、イトコのフロンとリアにも来てもらうべきでしたね。下見ついでに混沌の神も倒せて一石二鳥だったかもしれません。", "I thought now, I should have had it coming back to Flon and Lea of Itoko ne. In addition to the preliminary observation, the chaotic god could beat down and it might have been two stone."), strbye
 				goto *chat_end
 			}
 			else {
-				chatMore lang("妹のエールと一緒にツアーの下見に来たんですが、ここで貧弱なお客様を守りながら戦うのは至難の業ですね…。", "Sorry, this is untranslated sentence.")
-				chatMore lang("というか、妹がどんどん先に行くのではぐれてしまいました。か弱い姉を置きざりにするなんてどんな判断だ！", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("妹のエールと一緒にツアーの下見に来たんですが、ここで貧弱なお客様を守りながら戦うのは至難の業ですね…。", "I came to preview the tour with my sister Aile, but it is a difficult task to fight while protecting poor customers here...")
+				chatMore lang("というか、妹がどんどん先に行くのではぐれてしまいました。か弱い姉を置きざりにするなんてどんな判断だ！", "Or, since my sister goes ahead, I got stranded. What judgment is to leave behind a weaker older sister!"), strbye
 				gdata(GDATA_FLAG_MAIN) = 630
 				goto *chat_end
 			}
 		}
 		else {
-			chatMore lang("ツアーガイドたるもの、どんなところだろうと観光案内できなくてはなりません。あらゆる環境を案内できるように己を鍛え上げ、襲いくる野盗や怪物との戦闘をむしろお客様向けのショーにできるような者だけが、このイルヴァでツアーガイドを務められるのです。", "To be a tour guide, you must be capable of traveling everywhere in Ylva. Only those who have trained their bodies, who are capable of guiding others through any terrain in Ylva, and who are able to fight powerful monsters to put on a show for their customers are fit to be tour guides."), strbye
+			chatMore lang("ツアーガイドたるもの、どんなところだろうと観光案内できなくてはなりません。あらゆる環境を案内できるように己を鍛え上げ、襲いくる野盗や怪物との戦闘をむしろお客様向けのショーにできるような者だけが、このイルヴァでツアーガイドを務められるのです。", "To be a tour guide, you must be capable of traveling everywhere in Irva. Only those who have trained their bodies, who are capable of guiding others through any terrain in Irva, and who are able to fight powerful monsters to put on a show for their customers are fit to be tour guides."), strbye
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_AILE_THE_ATTENDANT | _switch_sw ) {
@@ -6193,11 +6193,11 @@
 				chatMore lang("ネフィア探索は添乗員の専門外なんですけどねぇ…。", "This guide doesn't know where Nefia are..."), strbye
 				goto *chat_end
 			}
 			else {
 				chatMore lang("うーん。気が付いたらお姉ちゃんがいない…。", "Well when she notices it, she'll be gone already...")
-				chatMore lang("お姉ちゃんは昔から私達の中でもどんくさい感じでしたので。ちんたらしてて迷子になったんでしょうね。やれやれ。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("お姉ちゃんは昔から私達の中でもどんくさい感じでしたので。ちんたらしてて迷子になったんでしょうね。やれやれ。", "Because my older sister felt a little dull among us from long ago. I guess I bet you got lost. Whew."), strbye
 				gdata(GDATA_FLAG_MAIN) = 650
 				goto *chat_end
 			}
 		}
 		goto *chat_end
@@ -6222,29 +6222,29 @@
 			chatMore lang("依頼のため、腕試しのため、好奇心のため、世界のため…理由こそ様々だが、精鋭の冒険者たちが巨城の最深部を目指していると聞く。俺は、お前なら一番乗りも充分狙えると思っている。まぁその、なんだ。" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "、無茶しない程度に頑張れよ。", "Because of requests, to test their own power, to satisfy their curiosity, or even for the sake of the world... They all have their own reasons, but the most powerful of the adventurers are heading for the deepest level of the Cradle of Chaos. I think you have a shot at being the first to make it as well. Give it your all, but don't act too rashly."), strbye
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_MAIN) >= 760 ) {
 			if ( gdata(GDATA_FLAG_DIALOG_LEOLD) == 100 ) {
-				chatMore lang("実はAO-Iには隠された機能があったんだ。本当は時間がある時にでも見せたかったんだが…。ブツを神の間に置いておくことになってしまったから無理だ。悪いな。", "Sorry, this is untranslated sentence.")
+				chatMore lang("実はAO-Iには隠された機能があったんだ。本当は時間がある時にでも見せたかったんだが…。ブツを神の間に置いておくことになってしまったから無理だ。悪いな。", "Actually, AO-I had a hidden function. Actually I wanted to show it even when I have time. It is impossible because it was decided to keep a pair among the gods. Sorry.")
 			}
 			if ( gdata(GDATA_FLAG_DIALOG_LEOLD) < 100 ) {
-				chatMore lang("…うん。お前に気の利いたことでも言おうと考えていたんだが、特に思いつかなかったぞ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("…うん。お前に気の利いたことでも言おうと考えていたんだが、特に思いつかなかったぞ。", "...Yup. I thought about saying something I wanted to say, but I could not think of it.")
 				gdata(GDATA_FLAG_DIALOG_LEOLD) = 100
 			}
 		}
 		if ( gdata(GDATA_FLAG_MAIN) >= 455 & gdata(GDATA_FLAG_MAIN) < 760 ) {
-			chatMore lang("しかしこの量産型が受けた空間固定、データを見る限りとても興味深い…次元歪曲航法を応用すれば理論的には再現できそうだ。", "This data we've received from the mass produced melugast is really quite interesting... Theoretically, I think we can replicate the demon's spatial binding powers with our dimensional navigation technology.")
+			chatMore lang("しかしこの量産型が受けた空間固定、データを見る限りとても興味深い…次元歪曲航法を応用すれば理論的には再現できそうだ。", "This data we've received from the mass produced Melugast is really quite interesting... Theoretically, I think we can replicate the demon's spatial binding powers with our dimensional navigation technology.")
 			chatList 1, lang("…", "...")
 			chatList 0, lang("次元歪曲航法って？", "What is this dimensional navigation technology?")
 			buff = lang("追加武装という形でなんとか搭載を…。", "Perhaps we can deploy this as an additional system on the...")
 			gosub *chat_select
 			if ( chatval == 0 ) {
 				chatMore lang("ああ！", "Ah!")
 				chatMore lang("次元歪曲航法について聞きたいか！よし…長くなるから端折って説明してやろう。", "You want to learn about our dimensional navigation technology?! Alright... This will take a while to explain, so take a seat.")
 				chatMore lang("専門外だから魔法の詳しい原理はわからないが、ショートテレポートと帰還、この二つの魔法に似た現象を科学的に引き起こせると思えばいい。ここではそれぞれ空間歪曲方式、次元扉形成方式と分類させてもらう。", "Magic is outside of my expertise so I don't really know the fundamentals behind them, but I believe you could consider it a scientific phenomenon similar to Teleport or Return magic. We could classify all of these as spatial distortion systems, and in the case of Return, specifically a dimensional door system.")
 				chatMore lang("そもそも普通に空間を歪曲させて移動しようとすると、エーテル波の影響で空間均衡が崩れ、移動距離の２乗に比例した大きさの揺らぎが生じる。結果として、予定と異なる方向・距離の地点に出てしまう。ズレが大きくなるだけじゃないぞ、歪曲に使うエネルギーも大きくなる。結論を言えば、空間歪曲方式で正確に長距離を移動することは非常に困難だ。", "When moving using the effect of spatial distortion, the spatial equilibrium in an area proportional to the distance traveled squared collapses due to the effect of ether waves. As a result, you won't always appear at the point - or even the direction - you had planned to travel to. Not only does this distortion grow with distance, but the amount of energy required grows as well. To spare you the rest of the details, accurate travel over long distance with spatial distortion techniques is incredibly difficult.")
-				chatMore lang("次元歪曲航法ではこれを逆手に取っている。揺らぎが小さくなるよう限りなく短い距離を、移動座標をコンピュータで矯正しながら瞬間的にテレポートし続けることで、物体や力場等を擬似的に「すり抜けて移動」できる。ロストイルヴァ周囲に張り巡らされている結界を突破するのに使っているのもこの機能だ。システム負荷の関係上、連続使用は数１０ｍが限度のため地中を潜らせたりはできないが。", "Our dimensional navigation uses this to our advantage. In order to create the minimum distortion possible, each hop is infinitely short. The onboard computer makes corrections for any slips that occur, allowing for near instant constant teleportation even through force fields. This is how it's capable of breaking through the barrier that surrounds Lost Ylva. The maximum distance you can travel before the system overloads is about 10m, so it's not much use for traveling underground.")
+				chatMore lang("次元歪曲航法ではこれを逆手に取っている。揺らぎが小さくなるよう限りなく短い距離を、移動座標をコンピュータで矯正しながら瞬間的にテレポートし続けることで、物体や力場等を擬似的に「すり抜けて移動」できる。ロストイルヴァ周囲に張り巡らされている結界を突破するのに使っているのもこの機能だ。システム負荷の関係上、連続使用は数１０ｍが限度のため地中を潜らせたりはできないが。", "Our dimensional navigation uses this to our advantage. In order to create the minimum distortion possible, each hop is infinitely short. The onboard computer makes corrections for any slips that occur, allowing for near instant constant teleportation even through force fields. This is how it's capable of breaking through the barrier that surrounds Lost Irva. The maximum distance you can travel before the system overloads is about 10m, so it's not much use for traveling underground.")
 				chatMore lang("さて、話はまだ半分だ。続いて次元の扉を形成する方式について話そう。こちらは正確に長距離を移動できる反面、移動先まで続く安定したゲートを形成できる環境が必要になる。つまり、特定地点への移動にしか使えないということだ。", "Okay, I think we're about halfway done. Now let's talk about dimensional doors. These methods allow for accurate teleportation even across long distances, but it requires the capability to form a stable gate at the destination. In other words, it means you can only really teleport to specific points.")
 				chatMore lang("帰還の魔法等の移動先がどのような理によって定められているのかは知らん。気まぐれな時空の管理者とやらが関係しているのかもしれないな。", "As I said though, I don't exactly know the principles behind magic such as Return. Perhaps it uses some kind of... wibbly-wobbly timey-wimey stuff.")
 				chatMore lang("次元歪曲航法では設置した転移拠点へと移動できるようになっているが、これには膨大なエネルギーが必要でな。移動者側からでなく拠点側からエネルギーを供給することで次元の扉を形成している。それでも現時点ではエネルギー供給装置がかなり大型化してしまうため、基地ぐらいにしか設置していない。小型の供給装置が開発できれば、転移拠点を森にでも隠しておいて伏兵を出すのに使えるかもしれないが。それでも移動したい先にあらかじめ装置を設置しなければならないので、攻めるのには向いていない。", "Our spatial navigation system can perform the same sort of teleportation to a specific point, but it requires a massive amount of energy. The dimensional door is supplied energy not from the side of the person teleporting, but from the destination point. Because of the size of the energy storage equipment that's required, we can only install these at our bases. If we can develop smaller energy devices, we might can use them for portable systems or even to set up ambushes. Even then it requires the equipment to be set up beforehand, so it's not really suitable for most offensive maneuvers.")
 				chatMore lang("以上、空間歪曲方式と次元扉形成方式を併せ持つ航法のため、次元歪曲航法と命名したところだ。これは現時点でイェルスの専売特許…と言いたいところだが、成果品の一部が他国に流出しているという噂がある。本国の研究所はスパイ探しに躍起になってるって話だ。原理が理解できなくても「機械を使う」ことはできるからな、他国に利用される可能性はあるだろう。使いこなせるかは別としてな。", "Anyways, this capability of performing both dimensional distortion and dimension door techniques is how we ended up naming our system \"Dimensional Navigation\". Yerles are the only ones capable of this at the moment... Or so I'd like to say, but there are rumors that some of our technology has leaked onto the black market. Our own agents are desperately looking for the spies. Since there's no requirement to understand the principles behind it, it's possible that other nations could use the technology. Though whether they could master it is another matter..")
 				chatList 2, lang("ああ！", "Yeah!")
@@ -6629,27 +6629,27 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_GETUEI_THE_NINJA_MASTER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
-			chatMore lang("才能はあるのに修行を嫌がって何度も家出するもんだから、わざわざ死亡工作までして忍を抜けさせてやったというのに。まさか遊びながら我流で俺より強くなってしまうとはな…。お兄ちゃんは泣きたいぞ。立つ瀬がないぞ。", "Huh.")
-			chatMore lang("…まぁ。反抗期の酷かった妹が、こうして俺を頼ってくれたのはすごく嬉しいがな！お兄ちゃん頑張っちゃうぞ。", "Huh."), strbye
+			chatMore lang("才能はあるのに修行を嫌がって何度も家出するもんだから、わざわざ死亡工作までして忍を抜けさせてやったというのに。まさか遊びながら我流で俺より強くなってしまうとはな…。お兄ちゃんは泣きたいぞ。立つ瀬がないぞ。", "Even though I have a talent but I hate training and I will run away many times, even though I bother to go through all the troubles and let me go through the shinobi. I do not think that I will be getting stronger than I am while playing. My older brother wants to cry. There is no stand up.")
+			chatMore lang("…まぁ。反抗期の酷かった妹が、こうして俺を頼ってくれたのはすごく嬉しいがな！お兄ちゃん頑張っちゃうぞ。", "Well... My sister who was bad at rebellious time, I am very glad that he relied on me like this! My older brother will do my best."), strbye
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_FASHIONABLE_KUNOICHI | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 540 ) {
-				chatMore lang("表向きは、ファッションやおしゃべりを嗜む普通の女の子。しかし裏では、闇に紛れて人々のために忍術を振るう…。くぅ〜！これだよこれ！僕の理想のニンジャ・ライフスタイルは！", "Huh."), strbye
+				chatMore lang("表向きは、ファッションやおしゃべりを嗜む普通の女の子。しかし裏では、闇に紛れて人々のために忍術を振るう…。くぅ〜！これだよこれ！僕の理想のニンジャ・ライフスタイルは！", "Ostensibly, an ordinary girl who likes fashion and chatter. But behind the scenes of the dark, wielding ninjutsu for people... Wow! It's this this! My ideal Ninja lifestyle is!"), strbye
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 535 ) {
-				chatMore lang("あれれ…君もここに来てたの？そうか、冒険者だもんね。", "Huh.")
-				chatMore lang("その節はありがとう。いつか、こっちから話しかけてお礼言わなきゃとは思ってたんだけど…。ほら、人前だと市民として振る舞わなきゃいけないからさ。", "Huh.")
-				chatMore lang("実家の流派はあの時やめたんだけど、今はなんかいろいろ物騒だからさ。我流忍術で混沌と戦ってるんだ！我流は良いよ。どんな格好しても、規律だのなんだのと怒られないし最高だよ！", "Huh."), strbye
+				chatMore lang("あれれ…君もここに来てたの？そうか、冒険者だもんね。", "Okay... were you here too? Well, it is an adventurer.")
+				chatMore lang("その節はありがとう。いつか、こっちから話しかけてお礼言わなきゃとは思ってたんだけど…。ほら、人前だと市民として振る舞わなきゃいけないからさ。", "Thank you for that passage. Someday, I thought I had to tell him to talk to me from here. Here, if you are public you have to act as a citizen.")
+				chatMore lang("実家の流派はあの時やめたんだけど、今はなんかいろいろ物騒だからさ。我流忍術で混沌と戦ってるんだ！我流は良いよ。どんな格好しても、規律だのなんだのと怒られないし最高だよ！", "My parents' school stopped at that time, but now it's a lot of noise. We are fighting chaos with warrior Ninjutsu! My wish is good. Regardless of whatever form it is, I can not get mad at being disciplined and it is the best!"), strbye
 				gdata(GDATA_FLAG_MAIN) = 540
 				goto *chat_end
 			}
 			goto *chat_end
 		}
@@ -6737,11 +6737,11 @@
 				}
 			}
 			buff = lang("ふーむ。エヘカトルの食べ残しやクミロミの抜け羽なんかを拾ってきたら売れるやろか？どうやろ？", "Hmm...I wonder if I could sell Ehekatl's leftovers or Kumiromi's shed feathers for cash. What do you think?")
 			gosub *chat_select
 			if ( chatval == 1 ) {
-				chatMore lang("よっしゃ、お宅拝見と行こか！ふっふっふ、今から片づけようとしても遅いでー？", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("よっしゃ、お宅拝見と行こか！ふっふっふ、今から片づけようとしても遅いでー？", "Okay, seeing you home and seeing! So fluffy, is it too late to try to clean up now?"), strbye
 				gdata(GDATA_FLAG_INVITED_GOD) = CREATURE_ID_YACATECT
 				cdata(CDATA_CHARACTER_TIER, tc) = CHARACTER_TIER_SUMMONED_GOD_HOME
 			}
 			goto *chat_end
 		}
@@ -6766,27 +6766,27 @@
 				}
 			}
 			buff = lang("先代のエヘカトルとテスカトリポカは大層仲が悪く、よく我が仲裁に入ったものだ。", "Ehekatl's and Tezcatlipoca's predecessors had a really bad relationship, so I have been acting as an arbiter.")
 			gosub *chat_select
 			if ( chatval == 1 ) {
-				chatMore lang("ふむ。汝の築き上げし楽園、我が双眸に刻むのもよいだろう。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("ふむ。汝の築き上げし楽園、我が双眸に刻むのもよいだろう。", "HM. It would be a good idea to build up in your twin sprouts, which you build up and paradise."), strbye
 				gdata(GDATA_FLAG_INVITED_GOD) = CREATURE_ID_ITZPALT
 				cdata(CDATA_CHARACTER_TIER, tc) = CHARACTER_TIER_SUMMONED_GOD_HOME
 			}
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_MIZUKI_THE_ABYSS_PRINCESS | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(STARTING_GDATA_FLAG + 275) == 2 ) {
-			chatMore lang("ご先祖様はまた石になって眠っているのう。もう数万年は目覚めることはないじゃろう。わしは…わしは平気じゃよ。じゃから、心配せんでよい。こうして地上から話に来てくれる者がおるだけで…充分じゃ。", "Follow me.")
-			chatMore lang("おぬしには礼をしたかったんじゃが、この城には地上人が喜びそうなものがなくてのう。その…情けない話じゃが、お弁当くらいしか用意できんかったんじゃ。あれだけの大仕事をしてもらっておいて弁当はどうかと思うが、よければ受け取ってくれんか。", "Follow me.")
+			chatMore lang("ご先祖様はまた石になって眠っているのう。もう数万年は目覚めることはないじゃろう。わしは…わしは平気じゃよ。じゃから、心配せんでよい。こうして地上から話に来てくれる者がおるだけで…充分じゃ。", "My ancestors are falling asleep again. They will not reawaken for tens of thousands of years. I am... I am fine. Well then, do not worry. There is only a person who will come to talk from the surface like this... enough.")
+			chatMore lang("おぬしには礼をしたかったんじゃが、この城には地上人が喜びそうなものがなくてのう。その…情けない話じゃが、お弁当くらいしか用意できんかったんじゃ。あれだけの大仕事をしてもらっておいて弁当はどうかと思うが、よければ受け取ってくれんか。", "I wanted to thank you for your aid, but there is nothing in this castle that a surface person would be pleased with. That... ...It's a pitiable story, but I could only prepare a lunch box. I know a lunch box isn't enough after all you've done, but please accept it anyway.")
 			flt
 			itemcreate -1, ITEM_ID_ABYSS_LUNCH, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 1
 			txt_questitem
-			chatMore lang("さぁて！辛気臭い話はやめて、切り替えてゆくぞ！", "Follow me.")
+			chatMore lang("さぁて！辛気臭い話はやめて、切り替えてゆくぞ！", "Come on! Stop smart talking and I will switch over!")
 			gdata(STARTING_GDATA_FLAG + 275) = 3
 		}
 		if ( gdata(GDATA_FLAG_MAIN) == 400 ) {
 			if ( gdata(GDATA_LEVEL) == 30 ) {
 				chatMore lang("よくぞ止めてくれた…おぬしには本当に感謝しておる。この島の人々には本当に悪いことをしたが、わしの力では元通りにできぬ…。せめて今は少しでも早く地上を離れ、城と共に海の底に戻るとしよう。", "You stopped him... I am truly grateful. I feel so bad about the people of this island, but I can't heal them with my power... It may not be much, but at least now I can return to the bottom of the sea along with the castle."), strbye
@@ -7091,12 +7091,12 @@
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_NEW_CITIZEN | _switch_sw ) {
 		_switch_sw = 0
-		chatMore lang("僕になにか…こほん。私に何か用でしょうか。", "Okay. Wait here.")
-		chatMore lang("え…忍者？な、なにそれ？", "Okay. Wait here."), strbye
+		chatMore lang("僕になにか…こほん。私に何か用でしょうか。", "Something to me... this. Is there something for me?")
+		chatMore lang("え…忍者？な、なにそれ？", "Huh... Ninja? What is it?"), strbye
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_MOBILE_COMMUNICATION_EQUIPMENT | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_FLAG_MAIN) >= 265 & gdata(GDATA_FLAG_MAIN) < 266 & gdata(GDATA_LEVEL) == 106 ) {
@@ -7263,22 +7263,22 @@
 				buff = lang("媒体にしたいのはどれだ？どれも魔法としての性能は変わらんぞ！", "Select new cast style!")
 				chatesc = 1
 				gosub *chat_select
 				if ( chatval >= 0 & chatval <= 9 ) {
 					cdata(CDATA_CAST_STYLE, c) = chatval
-					chatMore lang("いいだろう…手短に行くぞ！", "Fine... I'll be going soon!")
+					chatMore lang("いいだろう…手短に行くぞ！", "Well... this shouldn't take long!")
 					snd SOUNDLIST_PAYGOLD1
 					cdata(CDATA_GOLD, CHARA_PLAYER) -= 200
 					redraw 0
 					gosub *screen_draw
 					gosub *screen_fade
 					gsel 4
 					pos 0, 0
 					picload exedir + "graphic\\face1" + devfile + ".bmp", 1
 					gsel 0
 					snd SOUNDLIST_DING3
-					chatMore lang("こんなものだな。後はその辺りで試してこい！", "Didn't find anything here I guess. Let's try that area over there!"), strbye
+					chatMore lang("こんなものだな。後はその辺りで試してこい！", "It's done. Come again!"), strbye
 					goto *chat_end
 				}
 				goto *chat_end
 			}
 			if ( chatval == 4 ) {
@@ -7321,22 +7321,22 @@
 					chatList 13, lang("やっぱり今のままでいい", "do not change")
 					chatesc = 1
 					gosub *chat_select
 					if ( chatval >= 0 & chatval <= 12 ) {
 						cdata(CDATA_MELEE_STYLE, c) = chatval
-						chatMore lang("いいだろう…手短に行くぞ！", "Fine... I'll be going soon!")
+						chatMore lang("いいだろう…手短に行くぞ！", "Well... this shouldn't take long!")
 						snd SOUNDLIST_PAYGOLD1
 						cdata(CDATA_GOLD, CHARA_PLAYER) -= 200
 						redraw 0
 						gosub *screen_draw
 						gosub *screen_fade
 						gsel 4
 						pos 0, 0
 						picload exedir + "graphic\\face1" + devfile + ".bmp", 1
 						gsel 0
 						snd SOUNDLIST_DING3
-						chatMore lang("こんなものだな。後はその辺りで試してこい！", "Didn't find anything here I guess. Let's try that area over there!"), strbye
+						chatMore lang("こんなものだな。後はその辺りで試してこい！", "It's done. Come again!"), strbye
 						goto *chat_end
 					}
 				}
 				goto *chat_end
 			}
@@ -7589,11 +7589,11 @@
 		gosub *chat_select
 		if ( chatval == 1 ) {
 			gdata(GDATA_FLAG_SUB_THIEF_1) = 1
 			gdata(GDATA_FLAG_GUILD_THIEF_NORMA) = (10000 - gdata(GDATA_RANK_GUILD)) * 6 + 1000
 			txt_questupdate
-			chatMore lang("良い心がけね。あなたにランク昇格のためのノルマを与えるわ。他人の所有物を奪い取り、盗品を売り払いなさい。金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚相当の盗品を売ったら、昇進のための審査会に報告してあげる…。", "Alright. The Thieves Guild wants you to put stolen goods into circulation. Steal some goods and sell them to any vendors. When the sum of your earnings reaches " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "gp, we will think about your promotion.")
+			chatMore lang("良い心がけね。あなたにランク昇格のためのノルマを与えるわ。他人の所有物を奪い取り、盗品を売り払いなさい。金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚相当の盗品を売ったら、昇進のための審査会に報告してあげる…。", "Alright. The Thieves Guild wants you to put stolen goods into circulation. Steal some goods and sell them to any vendors. When the sum of your earnings reaches " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + " gold pieces, we will think about your promotion.")
 			goto *chat_unique
 		}
 		if ( chatval == 2 ) {
 			if ( gdata(GDATA_FLAG_GUILD_THIEF_NORMA) > 0 ) {
 				chatMore lang("どうしたの？まだノルマが残っているわ…。", "You have your task to complete.")
@@ -7681,30 +7681,30 @@
 	}
 	if ( _switch_val == CREATURE_ID_NORNE_THE_GUIDE | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_AIMWELL ) {
 			if ( gdata(GDATA_FLAG_MAIN) == 780 ) {
-				chatMore lang("君は今！ガイアス・ヴィスへの第一歩を踏み出した！", "Sorry, this is untranslated sentence.")
-				chatMore lang("ここまで長かった…この世界ではまだ1年程度しか経っていないけれど、ボクはループ込みで10年以上対応にあたっていたんだ。ようやく君という因子を見つけて連れてくることができたよ。", "Sorry, this is untranslated sentence.")
-				chatMore lang("うーん。でもまだ君の認識が次元を超えて追いついていないみたいだね。おそらく君の目には、多くのものがイルヴァのものに置き換わって見えるだろう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("さて…見る限り、依然として廃忘獣がはびこっているようだね…。あのお方は大丈夫だろうか。一緒に探しに行こう！", "Sorry, this is untranslated sentence.")
-				chatMore lang("えっ。あのお方が誰かって？ああ、まだ説明してなかったっけ。", "Sorry, this is untranslated sentence.")
-				chatMore lang("叡智を司る中級神であるソピアーは知っているよね。あのお方は彼女の兄姉たち28柱が合神した、超越神だよ。幾多の神々を吸収した混沌の神に対抗するための措置だったらしいね。ちなみにソピアーは一回堕天している影響でうまく合神できなかったんだって。", "Sorry, this is untranslated sentence.")
-				chatMore lang("あのお方はガイアス・ヴィスの実情を知って、色々と便宜を図ってくれた。今は直接、忘却の女神と戦っているはずだ。こうしてボクが覚えている以上、間違いなく無事なはずなんだけど…。", "Sorry, this is untranslated sentence.")
-				chatMore lang("一度引き返したい場合は、こちら側のロイターを経由してね。そこの炭鉱街…ザイールにいるはずだから。", "Sorry, this is untranslated sentence.")
+				chatMore lang("君は今！ガイアス・ヴィスへの第一歩を踏み出した！", "You are now! I took the first step to Gaius Vis!")
+				chatMore lang("ここまで長かった…この世界ではまだ1年程度しか経っていないけれど、ボクはループ込みで10年以上対応にあたっていたんだ。ようやく君という因子を見つけて連れてくることができたよ。", "It was long so far... In this world it has only been about a year, but I have been in response for more than 10 years with loops. Finally I found the factor you and I was able to bring it.")
+				chatMore lang("うーん。でもまだ君の認識が次元を超えて追いついていないみたいだね。おそらく君の目には、多くのものがイルヴァのものに置き換わって見えるだろう。", "Hmm. But it seems that your perception has not overtaken the dimension yet. Probably you will see many things replaced by those of Irva in your eyes.")
+				chatMore lang("さて…見る限り、依然として廃忘獣がはびこっているようだね…。あのお方は大丈夫だろうか。一緒に探しに行こう！", "Well... as far as I can see, it seems that there are still wasted animals infested... I wonder if that man is okay. Let's go looking together!")
+				chatMore lang("えっ。あのお方が誰かって？ああ、まだ説明してなかったっけ。", "Eh. Who is that person? Oh, I have not explained it yet.")
+				chatMore lang("叡智を司る中級神であるソピアーは知っているよね。あのお方は彼女の兄姉たち28柱が合神した、超越神だよ。幾多の神々を吸収した混沌の神に対抗するための措置だったらしいね。ちなみにソピアーは一回堕天している影響でうまく合神できなかったんだって。", "I know Sopia, an intermediate god who controls wisdom. That man is her transcendent god, with her brothers and sisters 28 pillars. It seems that it was a measure against the chaotic god who absorbed many gods. By the way, Sopia did not succeed together due to the influence that was once fallen.")
+				chatMore lang("あのお方はガイアス・ヴィスの実情を知って、色々と便宜を図ってくれた。今は直接、忘却の女神と戦っているはずだ。こうしてボクが覚えている以上、間違いなく無事なはずなんだけど…。", "He knew the realities of Gaius Vis, and made various things convenient. It should be directly fighting the goddess of oblivion now. That is why I should definitely be fine as I remember this...")
+				chatMore lang("一度引き返したい場合は、こちら側のロイターを経由してね。そこの炭鉱街…ザイールにいるはずだから。", "If you want to turn back, please go through Loyter on this side. There's a coal mine there... you should be in Zaile.")
 				gdata(GDATA_FLAG_MAIN) = 790
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_AREA) == AREA_VERNIS ) {
 			if ( gdata(GDATA_FLAG_MAIN) == 770 ) {
-				chatMore lang("そうそう、君に渡しておくものがあった。", "Sorry, this is untranslated sentence.")
+				chatMore lang("そうそう、君に渡しておくものがあった。", "Oh yeah, I have something to give you.")
 				txtef COLOR_GREEN
-				txt lang("[記憶の灯]を手に入れた！", "You obtain the [Light of Memory ]!")
+				txt lang("[記憶の灯]を手に入れた！", "You obtain the [Light of Memory]!")
 				snd SOUNDLIST_COMPLETE1
-				chatMore lang("それは生命情報を記録するアストラル光の塊。記憶をバックアップしてくれるから、記憶消去攻撃を受けてもかなり軽減できるらしいよ。", "Sorry, this is untranslated sentence.")
-				chatMore lang("さらに、世界を行き来するための道具でもあるんだ。ロイターに向かって使ってみて。現時点で、彼は誰よりもガイアス・ヴィスとの結びつきが強い。あちら側にも極めて近い存在がいるんだ。記憶の灯はその繋がりを照らして導いてくれるよ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("それは生命情報を記録するアストラル光の塊。記憶をバックアップしてくれるから、記憶消去攻撃を受けてもかなり軽減できるらしいよ。", "It is a mass of astral light that records life information. Because it backs up memory, it seems that it can be reduced considerably even if it receives a memory erasure attack.")
+				chatMore lang("さらに、世界を行き来するための道具でもあるんだ。ロイターに向かって使ってみて。現時点で、彼は誰よりもガイアス・ヴィスとの結びつきが強い。あちら側にも極めて近い存在がいるんだ。記憶の灯はその繋がりを照らして導いてくれるよ。", "Moreover, it is also a tool for traveling around the world. Try using it toward Loyter. At the present time, he is more tied to Gaius Vis than anyone. There is a very close existence to that side. Memory lights will guide you through the connection.")
 				gdata(GDATA_FLAG_MAIN) = 780
 				txt_questupdate
 				goto *chat_end
 			}
 		}
@@ -7712,30 +7712,30 @@
 			if ( gdata(GDATA_FLAG_MAIN) == 765 ) {
 				chatMore lang("さぁ、時は来た！", "Well, the time has come!")
 				gdata(GDATA_FLAG_MAIN) = 770
 				chatList 0, lang("ああ！", "Yes.")
 				chatList 1, lang("忘れたなぁ？", "No.")
-				buff = lang("ボクに協力してほしい。前に話したことは憶えているよね？", "Sorry, this is untranslated sentence.")
+				buff = lang("ボクに協力してほしい。前に話したことは憶えているよね？", "I want you to cooperate with me. Do you remember what you said before?")
 				gosub *chat_select
 				if ( chatval == 1 ) {
-					chatMore lang("忘却の女神の力がここまで及んでいるなんて！もう、時間がないみたいだね…。", "Sorry, this is untranslated sentence.")
+					chatMore lang("忘却の女神の力がここまで及んでいるなんて！もう、時間がないみたいだね…。", "The power of the forgetful goddess is over here! It looks like I do not have time anymore...")
 				}
-				chatMore lang("ヴェルニースの酒場に来てほしい。今残っている場所では、あそこが一番つながりの強いところなんだ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("ヴェルニースの酒場に来てほしい。今残っている場所では、あそこが一番つながりの強いところなんだ。", "I want you to come to the bar in Vernis. It is the place where the strongest connection is the strongest in the place left now.")
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 525 ) {
 				chatMore lang("その時が来たら、君にも協力してもらいたいと思っているんだ。そしてガイアス・ヴィスの話も憶えておいてほしい。人も世界も、完全に忘れられた時に本当の死を迎えるのだから。", "When the time comes, I'd like for you to cooperate with me too. And I want you to learn more of Gaius Vis. For people and different worlds, death only truly comes when you've been completely forgotten."), strbye
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 520 ) {
 				chatMore lang("いやぁ、君が宇宙人の相手をしてくれてようやく解放されたよ。それじゃあ本題について話すよ。…君には真の脅威について知っておいて欲しいんだ。", "Finally you've got the space man out of my hair. Let's talk for a minute... I'd like for you to know the true threat.")
 				chatMore lang("実は、ボクはこの世界の出身じゃない。ガイアス・ヴィスという別世界から来たんだ。妖精族の中でもエルンと呼ばれる特別な種族で、あちら側では訛ってエルフとも呼ばれていたよ。", "To be honest, I'm not from this world. I'm from a world known as Gaius Vis. In my world, there's a special race of fairy known as Elun, also known there by the name of Elves.")
-				chatMore lang("ガイアス・ヴィスはこのイルヴァの姉妹世界。同じようにエーテルの風が吹き、人々は異形の森を排除しようとしていた。けれどその矢先、突如として現れた忘却の化身に侵略され、世界のおよそ95％が記憶ごと存在消滅しガイアス・ヴィスは滅んだ。消滅した部分には何があったのか、どんな人々が暮らしていたのか、ボクにももう思い出せない。", "Gaius Vis is a sister world to Ylva. It also has the Etherwind, and a group that wanted to destroy the Heretical Forest. But suddenly, Gaius Vis was invaded by the avatar of Oblivion, utterly obliterating the existence of 95% of the world. Gaius Vis collapsed.")
+				chatMore lang("ガイアス・ヴィスはこのイルヴァの姉妹世界。同じようにエーテルの風が吹き、人々は異形の森を排除しようとしていた。けれどその矢先、突如として現れた忘却の化身に侵略され、世界のおよそ95％が記憶ごと存在消滅しガイアス・ヴィスは滅んだ。消滅した部分には何があったのか、どんな人々が暮らしていたのか、ボクにももう思い出せない。", "Gaius Vis is a sister world to Irva. It also has the Etherwind, and a group that wanted to destroy the Heretical Forest. But suddenly, Gaius Vis was invaded by the avatar of Oblivion, utterly obliterating the existence of 95% of the world. Gaius Vis collapsed.")
 				chatMore lang("そんな時、絶望するボクの前に現れたのがあのお方だったんだ！ボクはあのお方の力を借りて時間を巻き戻し、運命を変えようと努力した。イレギュラーと成り得る旅人を何人も導き、何度も共に戦った。戦いの中で、ボクの先祖である運命の女神ノルンの力も覚醒した。同じ女神の血統を持つ巨人族・小人族の末裔とも協力した。", "It was then that \"he\" appeared before me! I borrowed his power and rewound time, attempting to change fate. I guided many adventurers with the potential to become anomalies, and fought together with them many times. In these fights, the power of my ancestor, the Goddess of Destiny Norne, awoke within me. I worked together with the dwarves and giants, both of whom also shared my lineage.")
 				chatMore lang("でも何千回繰り返してもダメだった！なんとか街ひとつとその周囲を含むごく一部の地域の存在は守れた程度で、消滅する運命にある世界の大半には干渉すらできなかった。導いた旅人たちはどこへも行けず、疲弊し、考えるのをやめ、最後はいつも忘却の海へと消えていった。君にわかるかい、この絶望が。この怒りが。", "But no matter how many times we fought, the destiny of the world could not be changed! Somehow I was able to protect a single town and its surroundings, but the vast majority of the world couldn't be saved from extinction. The adventurers I had led could do nothing, eventually giving up and themselves fading into oblivion as everything else had done. Can you understand my despair? My anger?")
-				chatMore lang("そしてボクはあのお方から聞いた。イルヴァという姉妹世界も忘却の化身に狙われていると。ガイアス・ヴィスの悲劇を繰り返してはいけない。そう思ったボクらはこちら側に移り住み、迎撃準備を始めた。忘却の化身に滅ぼされたいくつもの世界から生存者をかき集め、運命変革因子として揃えた。", "And then \"he\" told me. The sister world of Ylva was also to be targeted by the avatar of Oblivion. I cannot allow the tragedy of Gaius Vis to be repeated. With that singular purpose in my heart, I came to this world and began preparing to counter the invasion. I gathered surviving individuals from many worlds destroyed by the avatar of Oblivion, using them as a bid to alter fate.")
+				chatMore lang("そしてボクはあのお方から聞いた。イルヴァという姉妹世界も忘却の化身に狙われていると。ガイアス・ヴィスの悲劇を繰り返してはいけない。そう思ったボクらはこちら側に移り住み、迎撃準備を始めた。忘却の化身に滅ぼされたいくつもの世界から生存者をかき集め、運命変革因子として揃えた。", "And then \"he\" told me. The sister world of Irva was also to be targeted by the avatar of Oblivion. I cannot allow the tragedy of Gaius Vis to be repeated. With that singular purpose in my heart, I came to this world and began preparing to counter the invasion. I gathered surviving individuals from many worlds destroyed by the avatar of Oblivion, using them as a bid to alter fate.")
 				chatMore lang("そうして奴らの尖兵を撃退することには成功したんだ。一匹は完全に抹殺し、一匹はエウダーナの老魔導士が支配して制御に成功した。残り一匹、死にぞこないがサウスティリスに潜伏しているみたいだけど、あれはもう本来の力を取り戻せないから大丈夫だよ。", "The repelling of their vanguard was a success. One was killed entirely, and the other successfully dominated by a mage from Eulderna. One remains hidden away in South Tyris, but since he cannot regain his original power, it's not a concern.")
 				chatMore lang("けれどまだ事態は解決していない。わずかに運命が更新されたに過ぎない。奴らは忘却という概念そのもの…いつか、必ず奴らの本隊がやってきて世界は滅びる運命にある。でもそんなことは承知の上。ボクは最後まで足掻いてみせる。そう、どんな手を使ってもね。", "But it's not over yet. Fate has not truly been changed - only slightly altered. Oblivion... One day, when their main forces arrive, this world is destined to fall. I understand that. Still, I'll keep fighting. I'll fight them every way I can."), strbye
 				gdata(GDATA_FLAG_MAIN) = 525
 				goto *chat_end
 			}
@@ -7776,11 +7776,11 @@
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_LARNA ) {
 			chatList 0, lang("する", "Do it.")
 			chatList 1, lang("しない", "Nope.")
-			buff = lang("ロストイルヴァへ移動する？", "Want to go to Lost Ylva?")
+			buff = lang("ロストイルヴァへ移動する？", "Want to go to Lost Irva?")
 			gosub *chat_select
 			if ( chatval == 0 ) {
 				if ( gdata(GDATA_FLAG_DUEL_TARGET) > 0 ) {
 					snd SOUNDLIST_FAIL1
 					txt_duel2
@@ -7818,16 +7818,16 @@
 		}
 		if ( gdata(GDATA_FLAG_MAIN) == 363 ) {
 			chatMore lang("久しぶり…になるのかな？しばらく見ないうちに立派な冒険者になったみたいだね、ボクも案内をした甲斐があったよ。", "Long time no see... I guess? You've become quite the adventurer since the last time I saw you. It was worth guiding you after all.")
 			chatList 0, lang("わかった", "Alright.")
 			chatList 1, lang("どちらさまですか？", "May I ask who's calling?")
-			buff = lang("突然召喚されて戸惑っているのかな？ここはエウダーナ上空を浮遊している大陸、ロストイルヴァさ。君より先に呼ばれた人たちがそこの遺跡に大勢いるし、詳しい話は彼らから訊いてみるといいよ。", "Are you confused about being suddenly called here? This is Lost Ylva, the floating continent above Eulderna. There are many people in those ruins that were summoned before you, so you should ask them if you want to know the details.")
+			buff = lang("突然召喚されて戸惑っているのかな？ここはエウダーナ上空を浮遊している大陸、ロストイルヴァさ。君より先に呼ばれた人たちがそこの遺跡に大勢いるし、詳しい話は彼らから訊いてみるといいよ。", "Are you confused about being suddenly called here? This is Lost Irva, the floating continent above Eulderna. There are many people in those ruins that were summoned before you, so you should ask them if you want to know the details.")
 			gosub *chat_select
 			if ( chatval == 1 ) {
 				chatMore lang("うん？悪いけど君の冗談に付き合っているほど暇じゃないんだ。", "Hmm? Sorry, but I'm far too busy to sit here and joke around with you.")
 			}
-			chatMore lang("それじゃあボクはこれで。他にも案内しなきゃいけない冒険者がいるんだ。ああ、忙しい。", "I'll be off then. There are lots of other adventurers I need to guide. Man, so busy."), strbye
+			chatMore lang("それじゃあボクはこれで。他にも案内しなきゃいけない冒険者がいるんだ。ああ、忙しい。", "I'll be off then. There are lots of other adventurers I need to guide. Man, so busy..."), strbye
 			gdata(GDATA_FLAG_MAIN) = 364
 			goto *chat_end
 		}
 		goto *chat_end
 	}
@@ -8241,11 +8241,11 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_SHELL_KING_OF_VINDALE | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
-			chatMore lang("神には神の思惑があって動いている。盲目的にそれに従うのではなく、我ら定命は自身の考えを持って行動しなければならない。", "God's expectations change. We don't have to follow them blindly, just live by our own design."), strbye
+			chatMore lang("神には神の思惑があって動いている。盲目的にそれに従うのではなく、我ら定命は自身の考えを持って行動しなければならない。", "The gods' expectations change. We don't have to follow them blindly, just live by our own design."), strbye
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_SOPHIA_THE_WISE | _switch_sw ) {
@@ -8296,27 +8296,27 @@
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_FLAG_MAIN) >= 760 ) {
 			if ( gdata(STARTING_GDATA_FLAG + 352) < 100 ) {
-				chatMore lang("君はよくやってくれたね。けれど大きすぎる力は人の恐怖を煽ることを忘れてはいけない。そして、情報が思わぬスピードで伝わることも。", "Huh.")
-				chatMore lang("混沌の神が君に討伐されたという情報が、一部の勢力にもう伝わってしまったようだね。特にロスリアという国の上層部は、君を人類共通の新たな脅威ということにしようと画策している。気をつけたほうがいいね。", "Huh.")
-				chatMore lang("民衆には伝わっていないようだけど、ほとぼりが冷めるまではあまり派手に動かず、一時的に身を隠したほうが得策かもしれないね。その頃には、例の報酬も用意できていると思う。", "Huh.")
+				chatMore lang("君はよくやってくれたね。けれど大きすぎる力は人の恐怖を煽ることを忘れてはいけない。そして、情報が思わぬスピードで伝わることも。", "You did it well. But do not forget that the power that is too large will fuel human fear. And the information can be transmitted at an unexpected speed.")
+				chatMore lang("混沌の神が君に討伐されたという情報が、一部の勢力にもう伝わってしまったようだね。特にロスリアという国の上層部は、君を人類共通の新たな脅威ということにしようと画策している。気をつけたほうがいいね。", "It seems that the information that the chaotic god was suppressed by you has already been transmitted to some power. Especially the upper part of the country named Rosuria is planning to make you a new threat to mankind. You'd better be careful.")
+				chatMore lang("民衆には伝わっていないようだけど、ほとぼりが冷めるまではあまり派手に動かず、一時的に身を隠したほうが得策かもしれないね。その頃には、例の報酬も用意できていると思う。", "It seems that it has not been conveyed to the people, but it may not be so much flashy until the cold cools down, so it may be better to hide himself temporarily. By that time, I think that the example rewards are available.")
 				gdata(STARTING_GDATA_FLAG + 352) += 100
 			}
 		}
 		if ( gdata(GDATA_FLAG_MAIN) == 690 ) {
-			chatMore lang("決戦因子は君に決まったんだね。テスカトリポカが認めたなら大丈夫だろう。", "Huh.")
+			chatMore lang("決戦因子は君に決まったんだね。テスカトリポカが認めたなら大丈夫だろう。", "You decided the battle factor. It will be okay if Tezcatlipoca admits.")
 			chatList 1, lang("仕方がない", "It's no use.")
 			chatList 2, lang("はい喜んで", "Yes, gladly.")
 			chatList 3, lang("報酬は出るの？", "Are there any rewards?")
 			chatList 4, lang("嫌です", "I do not want it.")
-			buff = lang("もし神の間が崩壊して混沌の神が出てきたら、神々も定命ももれなく混沌に取り込まれ、世界は蹂躙され全ての秩序は失われてしまうだろう。もちろん討伐を引き受けてくれるね？", "Huh.")
+			buff = lang("もし神の間が崩壊して混沌の神が出てきたら、神々も定命ももれなく混沌に取り込まれ、世界は蹂躙され全ての秩序は失われてしまうだろう。もちろん討伐を引き受けてくれるね？", "If the gods collapse and a chaotic god comes out, the gods and mortals are all taken up chaotically, the world will be overruled and all the order will be lost. Of course you will take on the suppression?")
 			chatesc = 0
 			gosub *chat_select
 			if ( chatval == 4 ) {
-				chatMore lang("これは混沌から今の世界を守るためだからね。考え直してほしい。", "Huh.")
+				chatMore lang("これは混沌から今の世界を守るためだからね。考え直してほしい。", "This is to protect the world from chaos. Please reconsider.")
 				goto *chat_end
 			}
 			gdata(GDATA_FLAG_MAIN) = 691
 		}
 		if ( gdata(GDATA_FLAG_MAIN) == 691 ) {
@@ -8325,37 +8325,37 @@
 			chatList 2, lang("名声", "Fame.")
 			chatList 3, lang("強さ", "Strength.")
 			chatList 4, lang("ハーレム", "Harem.")
 			chatList 5, lang("神の座", "The seat of god.")
 			chatList 6, lang("おまえ", "You.")
-			buff = lang("とりあえずアーティファクトはつけるとして…他に欲しいものがあるかな？", "Huh.")
+			buff = lang("とりあえずアーティファクトはつけるとして…他に欲しいものがあるかな？", "As an artifact will be attached... Anything else you want?")
 			chatesc = 0
 			gosub *chat_select
 			gdata(STARTING_GDATA_FLAG + 352) = chatval
 			if ( chatval == 5 ) {
-				chatMore lang("神には神の仕事ルールがあってそれに縛られることになるよ。個神には大した権限もない。自由と引き換えてでも秩序維持のために働きたいのなら話は別だけど、それでも君の一生を全うしてからの方がいいだろうね。とにかくおすすめしないね。", "Huh.")
+				chatMore lang("神には神の仕事ルールがあってそれに縛られることになるよ。個神には大した権限もない。自由と引き換えてでも秩序維持のために働きたいのなら話は別だけど、それでも君の一生を全うしてからの方がいいだろうね。とにかくおすすめしないね。", "God has work rules of God and will be bound by it. There is not much authority on the gods. If you want to work for maintaining order even if you exchange for freedom, the story is different, but it would be better if you still fulfilled your whole life. I do not recommend it anyway.")
 				goto *chat_end
 			}
 			if ( chatval == 6 ) {
-				chatMore lang("そんなことを言って、相手の反応が知りたいだけだろう？そのくらいは本で読んで知っているよ。神をからかってはいけないね。", "Huh.")
+				chatMore lang("そんなことを言って、相手の反応が知りたいだけだろう？そのくらいは本で読んで知っているよ。神をからかってはいけないね。", "Saying such a thing, you just want to know the reaction of the opponent? I know that much by reading it in books. You must not make fun of the gods.")
 				goto *chat_end
 			}
 			chatMore lang("なるほど…覚えておくね。", "I see... I will remember it.")
-			chatMore lang("話は変わるけれど、混沌の神を倒すための道具を渡しておこう。", "Huh.")
+			chatMore lang("話は変わるけれど、混沌の神を倒すための道具を渡しておこう。", "Although the story will change, I will pass a tool to defeat the chaotic god.")
 			txtef COLOR_GREEN
 			txt lang("[来光の牙]を手に入れた！", "You obtain the [Origin of Light]!")
 			snd SOUNDLIST_COMPLETE1
 			gdata(GDATA_FLAG_MAIN) = 695
 			txt_questupdate
-			chatMore lang("いくら弱っているとはいえ、相手は私達より圧倒的に高い存在級位を有している。物理的にいくら殺しても倒したことにならない。あれほどの存在をアカシックレコードから切り離すには、膨大なアストラル光が必要になるんだ。", "Huh.")
-			chatMore lang("そこで、混沌の神を殺す瞬間…すなわち、相手の存在が最も揺らぐ瞬間に神々全員の神力をマナに逆変換して来光の牙に送る。来光の牙はマナをアストラル光に変換するための装置なんだ。発生したアストラル光によって、奴のアカシックレコードに完全干渉する。", "Huh.")
-			chatMore lang("…簡単に説明すると、トドメの際に突き刺せば、完全に消滅させるなり、無力化したうえで闇檻に放り込むなりで処理できるということだね。この突破法の準備に3000年かかったから失敗しないでほしいね。", "Huh.")
-			chatMore lang("…そうだ。あと、これも必要なら持っていくといい。", "Huh.")
+			chatMore lang("いくら弱っているとはいえ、相手は私達より圧倒的に高い存在級位を有している。物理的にいくら殺しても倒したことにならない。あれほどの存在をアカシックレコードから切り離すには、膨大なアストラル光が必要になるんだ。", "Even though it is weak, the opponent has an overwhelming high presence level than us. Even if you physically kill you will not be beaten. To separate such an existence from an akashic record, a huge astral light is needed.")
+			chatMore lang("そこで、混沌の神を殺す瞬間…すなわち、相手の存在が最も揺らぐ瞬間に神々全員の神力をマナに逆変換して来光の牙に送る。来光の牙はマナをアストラル光に変換するための装置なんだ。発生したアストラル光によって、奴のアカシックレコードに完全干渉する。", "So, the moment of killing the chaotic god... that is, at the moment when the opponent's existence is the most shaken, convert the divine power of all the gods into mana and send it to Kamiko's fang. Yukko's fang is a device for converting mana into astral light. It interferes perfectly with his Akashic record by the generated astral light.")
+			chatMore lang("…簡単に説明すると、トドメの際に突き刺せば、完全に消滅させるなり、無力化したうえで闇檻に放り込むなりで処理できるということだね。この突破法の準備に3000年かかったから失敗しないでほしいね。", "...To briefly explain, if you stab it at the time of death, it will completely disappear, you can disable it and turn it into a dark cage and handle it. Since it took 3000 years to prepare for this breakthrough method, I hope it will not fail.")
+			chatMore lang("…そうだ。あと、これも必要なら持っていくといい。", "...That's it. Also, if you need it, you should take it.")
 			flt
 			itemcreate -1, ITEM_ID_HEART_OF_TWILIGHT, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 			txt_questitem
-			chatMore lang("神の間の物理崩壊は時間の問題だし、混沌の軍勢も勢力を増してきている。君も準備を整えてほしい。", "Huh.")
+			chatMore lang("神の間の物理崩壊は時間の問題だし、混沌の軍勢も勢力を増してきている。君も準備を整えてほしい。", "The physical collapse between the gods is a matter of time and the army of chaos is increasing power. I hope that you are ready too.")
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_MAIN) >= 370 ) {
 			if ( gdata(GDATA_FLAG_MAIN) < 695 ) {
 				chatList 0, lang("神の間とは？", "What is \"The Eternal Seal\"?")
@@ -8370,69 +8370,69 @@
 			}
 			if ( gdata(GDATA_FLAG_MAIN) >= 695 ) {
 				chatList 5, lang("これまでの経緯をまとめて知りたい", "I want to know the whole story up to this point.")
 			}
 			if ( gdata(GDATA_FLAG_MAIN) >= 695 ) {
-				chatList 6, lang("混沌の神を倒したらネフィアはどうなる？", "Once you defeat the God of Chaos, what happens to Nefia?")
+				chatList 6, lang("混沌の神を倒したらネフィアはどうなる？", "Once you defeat the god of chaos, what happens to Nefia?")
 			}
 			buff = lang("ネフィアの永遠の盟約により、全てを話すことはできないね。しかし、制限されていない情報に関しては君にも教えよう。", "To comply with the Eternal League of Nefia, I cannot tell you everything. However, I can give you information on unrestricted topics.")
 			gosub *chat_select
 			if ( chatval == 4 ) {
-				chatMore lang("…そうだね。あまり言いたくないけれど、あれと戦う君には知る権利があるね。", "Huh.")
+				chatMore lang("…そうだね。あまり言いたくないけれど、あれと戦う君には知る権利があるね。", "...Yeah. I do not want to say too much, but you fight that there is a right to know.")
 				chatMore lang("混沌の神…エンテュメイシス。その正体は…もう一人の私なんだ。", "The God of Chaos... Enthumesis. That identity... is my other self.")
-				chatMore lang("わが父、《深淵のプロパトル》は至高の超越者だった。神としても次元が違うため知覚できないほどのね。末娘だった私は兄や姉に尋ねたが一切の情報が不明。「誰にも知ることができない神」と言っても過言じゃない…。", "Huh.")
-				chatMore lang("それでも…当時の私はどうしても父のことを知りたかった。知識欲の強い娘が、行方不明の父のことを調べようと思うのは仕方がないことだったと思う。", "Huh.")
-				chatMore lang("知りたいのに知ることができないジレンマが頂点に達した時、暴走した想いが私の中にエンテュメイシスという穢れた人格を作り出した。魂の穢れた私は堕天して地上を彷徨っていたが、兄姉の精神浄化によってエンテュメイシスを分離して帰還することができた。今では父のことを知ろうなんて気持ちは微塵もないね。", "Huh.")
-				chatMore lang("だがエンテュメイシスは私から分離した後も実は消えずに活動していたんだ。人間たちには不死で知りたがりの娼婦として扱われていたようだね。とりあえずは無害だと判断されていたのだけれど、神々の大戦中、エンテュメイシスは牙を剥いた。", "Huh.")
-				chatMore lang("あれはまるで本から知識を取り込むかのように、大戦で傷ついた神々を次々と吸収していった。父についての情報を得るため、そして力を蓄えて同じ高次元に立とうとしたんだね。熱いパトスのおもむくまま、むやみやたらと神の力を混ぜ合わせていった結果、両性具有の混沌神となってしまった。", "Huh.")
-				chatMore lang("エンテュメイシスは封印される間際でも父を求めていたよ。混沌の眷属が人間を取り込もうとするのも、根底にあるのは知識欲なのかもしれないね…。", "Huh."), strbye
+				chatMore lang("わが父、《深淵のプロパトル》は至高の超越者だった。神としても次元が違うため知覚できないほどのね。末娘だった私は兄や姉に尋ねたが一切の情報が不明。「誰にも知ることができない神」と言っても過言じゃない…。", "My father, \"Puropatoru of the abyss\" was the supreme transcendental person. I can not perceive it because this god has different dimensions. I was the youngest daughter so I asked my older brother and sister, but all the information is unknown. It is no exaggeration to say \"god that no one can know\".")
+				chatMore lang("それでも…当時の私はどうしても父のことを知りたかった。知識欲の強い娘が、行方不明の父のことを調べようと思うのは仕方がないことだったと思う。", "But even then... I wanted to know about my father by all means. I think that it was unavoidable to think that a girl with a strong knowledge and desire to investigate the missing father.")
+				chatMore lang("知りたいのに知ることができないジレンマが頂点に達した時、暴走した想いが私の中にエンテュメイシスという穢れた人格を作り出した。魂の穢れた私は堕天して地上を彷徨っていたが、兄姉の精神浄化によってエンテュメイシスを分離して帰還することができた。今では父のことを知ろうなんて気持ちは微塵もないね。", "When a dilemma that I want to know but can not know is at the top, the feeling of recklessly created a dirty personality called Enthumesis in me. I was desperate of the soul I was fallen down and wandering on the ground, but I was able to return the enthumiessis by returning to my elder brother's spirit purification. I do not feel any dust now to learn of my father.")
+				chatMore lang("だがエンテュメイシスは私から分離した後も実は消えずに活動していたんだ。人間たちには不死で知りたがりの娼婦として扱われていたようだね。とりあえずは無害だと判断されていたのだけれど、神々の大戦中、エンテュメイシスは牙を剥いた。", "But Enthumesis is I've been working on not disappear actually even after separating from me. It seems to have been treated as a whore wanted to know in immortality in humans. For the time being, it was judged to be harmless, but during the great war of the gods Enthumesis stripped my fangs.")
+				chatMore lang("あれはまるで本から知識を取り込むかのように、大戦で傷ついた神々を次々と吸収していった。父についての情報を得るため、そして力を蓄えて同じ高次元に立とうとしたんだね。熱いパトスのおもむくまま、むやみやたらと神の力を混ぜ合わせていった結果、両性具有の混沌神となってしまった。", "It absorbed the gods injured in the great warfare one after another as if to incorporate knowledge from books. I tried to stand on the same high dimension to get information about my father and save my strength. Dictates of hot pathos, a result that went by mixing the power of chaos and gods, has become a chaotic god of androgynous.")
+				chatMore lang("エンテュメイシスは封印される間際でも父を求めていたよ。混沌の眷属が人間を取り込もうとするのも、根底にあるのは知識欲なのかもしれないね…。", "Enthumesis was looking for my father even before being sealed. The chaotic minor is trying to capture a human being, but it may be a knowledge desired at the base..."), strbye
 				goto *chat_end
 			}
 			if ( chatval == 5 ) {
 				chatMore lang("じゃあ簡単に、かいつまんで。", "Well then, easy.")
-				chatMore lang("1。長い歴史の中で、人類は神は徐々に必要としなくなり、神は力を失いつつあった。", "Huh.")
-				chatMore lang("2。そんな時、人類の大半が宇宙に旅立ってしまった。", "Huh.")
-				chatMore lang("3。存在の危うくなった神々が殺気立つ中、テスカトリポカが他の神を倒して信者を奪った。", "Huh.")
-				chatMore lang("4。神々の生存競争が勃発。多くの神が消滅したり魔物に堕ちた。", "Huh.")
-				chatMore lang("5。大戦の裏で混沌の神が力をつけていたことが発覚。混沌対神々の構図に変化。", "Huh.")
-				chatMore lang("6。激戦の末混沌の神は封印できたがこの時混沌の精霊の種が蒔かれていた。", "Huh.")
-				chatMore lang("7。ロストイルヴァ隔離。", "7. Lost Ylva isolation.")
-				chatMore lang("8。神の間が老朽化したのを狙って混沌の軍勢が巨城に侵攻。", "Huh.")
-				chatMore lang("9。テスカトリポカが混沌の軍勢を撃退するも右腕を失う。", "Huh.")
-				chatMore lang("10。オルフェをはじめとする決死隊が役目を果たし、神の間の増築に成功。", "Huh.")
-				chatMore lang("11。唯一生還したオルフェが常闇の眼を盗んで行方不明に。", "Huh.")
-				chatMore lang("12。混沌の神から奪った力を還元し、ネフィア誕生。", "Huh.")
-				chatMore lang("13。魔法大戦によりナーク・ドマーラ滅亡。", "Huh.")
-				chatMore lang("14。神の間が再度老朽化。", "Huh.")
-				chatMore lang("15。人工細菌メサイアによって作られた秩序の一角獣が役目を果たす。後にサーペントに取り込まれてカオス・ユニコーンへ変化したことが判明。", "Huh.")
-				chatMore lang("16。エーテルが発見され、はみ出し者たちによって盛んに採取された。", "Huh.")
-				chatMore lang("17。メサイアが事故で変異・流出しメシェーラと呼ばれるように。エーテル減少で弱っていた環境は激変。", "Huh.")
-				chatMore lang("18。環境変化に耐え切れずレム・イド滅亡。人類はシェルターで細々と暮らす程度に。", "Huh.")
-				chatMore lang("19。メシェーラに侵食された超生物やアンデッド兵器が荒野を徘徊する永い暗黒期の到来。", "Huh.")
-				chatMore lang("20。年月経過で回復したエーテルが風を生みヴィンデールの森が発達。", "Huh.")
-				chatMore lang("21。メシェーラ環境に適応できる人類が生まれ世界に拡散。シエラ・テール誕生。", "Huh.")
-				chatMore lang("22。常闇の杖が完成しオルフェ発見。監視を開始。", "Huh.")
-				chatMore lang("23。さらに回復したエーテルがヴィンデールの森を拡大。カルーン滅亡。", "Huh.")
-				chatMore lang("24。ヴィンデールの森が焼き払われる。", "Huh.")
-				chatMore lang("25。神の間が再度老朽化。潜伏していた混沌の軍勢も活発に。", "Huh.")
-				chatMore lang("そして、強さと抵抗力を兼ね備えた君が決戦因子として選ばれた…というわけだね。", "Huh."), strbye
+				chatMore lang("1。長い歴史の中で、人類は神は徐々に必要としなくなり、神は力を失いつつあった。", "1. In the long history, human beings are gradually oblivious to gods, gods are losing power.")
+				chatMore lang("2。そんな時、人類の大半が宇宙に旅立ってしまった。", "2. In such a case, the majority of human race has left the universe.")
+				chatMore lang("3。存在の危うくなった神々が殺気立つ中、テスカトリポカが他の神を倒して信者を奪った。", "3. Tezcatlipoca beat the other gods and deprived believers as the deceased gods got excited.")
+				chatMore lang("4。神々の生存競争が勃発。多くの神が消滅したり魔物に堕ちた。", "4. The war of the gods broke out. Many gods disappeared and they fell into demons.")
+				chatMore lang("5。大戦の裏で混沌の神が力をつけていたことが発覚。混沌対神々の構図に変化。", "5. I discovered that god of chaos was a force behind the scenes of the war. Chaos vs. composition of the gods.")
+				chatMore lang("6。激戦の末混沌の神は封印できたがこの時混沌の精霊の種が蒔かれていた。", "6. The god of chaos could be sealed at the end of the fierce battle, but seeds of chaotic spirits were sowed at this time.")
+				chatMore lang("7。ロストイルヴァ隔離。", "7. Lost Irva isolation.")
+				chatMore lang("8。神の間が老朽化したのを狙って混沌の軍勢が巨城に侵攻。", "8. A chaotic army invaded the giant castle aiming for the god's aging.")
+				chatMore lang("9。テスカトリポカが混沌の軍勢を撃退するも右腕を失う。", "9. Tezcatlipoca repels the chaotic army but also loses his right arm.")
+				chatMore lang("10。オルフェをはじめとする決死隊が役目を果たし、神の間の増築に成功。", "10. Play a squad is responsible for, including Orphe, success in the build-between of gods.")
+				chatMore lang("11。唯一生還したオルフェが常闇の眼を盗んで行方不明に。", "11. The only survivor was Orphe is missing stealing Origin of Vice.")
+				chatMore lang("12。混沌の神から奪った力を還元し、ネフィア誕生。", "12. Reducing the power taken from the chaotic god, the birth of Nefia.")
+				chatMore lang("13。魔法大戦によりナーク・ドマーラ滅亡。", "13. Naku Domara is destroyed by Magical War.")
+				chatMore lang("14。神の間が再度老朽化。", "14. God's aging deteriorates again.")
+				chatMore lang("15。人工細菌メサイアによって作られた秩序の一角獣が役目を果たす。後にサーペントに取り込まれてカオス・ユニコーンへ変化したことが判明。", "15. Unicorn of the order made by artificial bacteria Mesaia plays a role. It turned out that it was taken into the serpent later and changed to chaos unicorn.")
+				chatMore lang("16。エーテルが発見され、はみ出し者たちによって盛んに採取された。", "16. Ether was discovered and collected vigorously by Yutasu.")
+				chatMore lang("17。メサイアが事故で変異・流出しメシェーラと呼ばれるように。エーテル減少で弱っていた環境は激変。", "17. Mesaia mutated and flowed out in the accident so that it is called Meshera. The environment that weakened by ether decay was drastic change.")
+				chatMore lang("18。環境変化に耐え切れずレム・イド滅亡。人類はシェルターで細々と暮らす程度に。", "18. It can not survive the environmental change and it is destroyed Rehm-Ido. To the extent that mankind lives in shelter precisely.")
+				chatMore lang("19。メシェーラに侵食された超生物やアンデッド兵器が荒野を徘徊する永い暗黒期の到来。", "19. The arrival of a long dark period in which super-creatures eroded by Meshera and undead weapons wander in the wilderness.")
+				chatMore lang("20。年月経過で回復したエーテルが風を生みヴィンデールの森が発達。", "20. Ether recovered by passage of years has bred wind and the forest of Vindale develops.")
+				chatMore lang("21。メシェーラ環境に適応できる人類が生まれ世界に拡散。シエラ・テール誕生。", "21. Human being able to adapt to Meshera environment was born and spread to the world. Sierre Terre was born.")
+				chatMore lang("22。常闇の杖が完成しオルフェ発見。監視を開始。", "22. The Origin of Vice was completed and discovered Orphe. Start monitoring.")
+				chatMore lang("23。さらに回復したエーテルがヴィンデールの森を拡大。カルーン滅亡。", "23. Further recovered ether expands the forest of Vindale. Karune destruction.")
+				chatMore lang("24。ヴィンデールの森が焼き払われる。", "24. The forest of Vindale is burned down.")
+				chatMore lang("25。神の間が再度老朽化。潜伏していた混沌の軍勢も活発に。", "25. God's aging deteriorates again. Actively chaotic armed forces that were hiding.")
+				chatMore lang("そして、強さと抵抗力を兼ね備えた君が決戦因子として選ばれた…というわけだね。", "And you were chosen as a battle factor, which combines strength and resistance."), strbye
 				goto *chat_end
 			}
 			if ( chatval == 6 ) {
-				chatMore lang("いい質問だね。現在のネフィアは混沌の神から奪った力を魔力に変換後、陽牢の塔を経由して龍脈に流し込んで生成している。つまり混沌の神がいなくなったらネフィアは維持できなくなるね。", "Huh.")
-				chatMore lang("ただし、すぐにネフィアが消えるわけじゃないよ。ネフィアのベースとなる遺跡はまた8億程ストックがあるし、魔力も現在対流している分が枯渇するのに最低2000年かかる。それまでに定命も神もネフィアに依存しないシステムを構築していく必要があるね。", "Huh."), strbye
+				chatMore lang("いい質問だね。現在のネフィアは混沌の神から奪った力を魔力に変換後、陽牢の塔を経由して龍脈に流し込んで生成している。つまり混沌の神がいなくなったらネフィアは維持できなくなるね。", "That's a good question. The current Nefia converts the power taken from the god of chaos into magical power, and it is generated by pouring into the dragon vein through the tower of the prison. In other words, when the chaotic gods are gone, Nephia can not be maintained.")
+				chatMore lang("ただし、すぐにネフィアが消えるわけじゃないよ。ネフィアのベースとなる遺跡はまた8億程ストックがあるし、魔力も現在対流している分が枯渇するのに最低2000年かかる。それまでに定命も神もネフィアに依存しないシステムを構築していく必要があるね。", "However, Nefia will not disappear soon. Nefia's ruins also have about 800 million stocks, and magical power also takes at least 2000 years to exhaust the current convection. It is necessary to build a system that neither mortals nor gods rely on Nefia until then."), strbye
 				goto *chat_end
 			}
 			if ( chatval == 0 ) {
-				chatMore lang("神の間は混沌の神が封じられている場所だね。神の間の役割は張り巡らされた結界によって混沌の神の力を奪うことだ。", "The Eternal Seal is where the God of Chaos is sealed. As part of their role, the Gods were forced to extend a barrier that should consequently steal the God of Chaos' power.")
-				chatMore lang("やがて奪った力はネフィアを生む魔力へと変換してイルヴァ全土に拡散されることになった。こうして世界に混沌と魔法の力がもたらされることになるわけだが…。それはまた別のお話だね。", "In the end this energy was spread throughout the world and converted into the magic that produces the ruins of Nefia. It was in this way that magic and Chaos was brought to the land of Ylva... But that's a story for another time."), strbye
+				chatMore lang("神の間は混沌の神が封じられている場所だね。神の間の役割は張り巡らされた結界によって混沌の神の力を奪うことだ。", "The Eternal Seal is where the God of Chaos is sealed. As part of their role, the gods were forced to extend a barrier that should consequently steal the God of Chaos' power.")
+				chatMore lang("やがて奪った力はネフィアを生む魔力へと変換してイルヴァ全土に拡散されることになった。こうして世界に混沌と魔法の力がもたらされることになるわけだが…。それはまた別のお話だね。", "In the end this energy was spread throughout the world and converted into the magic that produces the ruins of Nefia. It was in this way that magic and Chaos was brought to the land of Irva... But that's a story for another time."), strbye
 				goto *chat_end
 			}
 			if ( chatval == 1 ) {
 				chatMore lang("そもそもの始まりは、神を必要としないまでに人の技術が発達したことだった。その極限にしてエイス・テールの前身…アース・テールと呼ばれる文明。もはやこの星に納まる存在でなくなった当時の人類は、わずかばかりの民を残して星の海に旅立っていった。", "Long ago, human technology developed to the point where the gods were no longer needed. This development reached its breaking point in the era preceding Eyth Terre... Asu Terre. Human civilization grew to the point that this planet could no longer support them, and the majority left for the stars.")
 				chatMore lang("それまでに信仰が絶えかけ力が衰えていた神々にとって、人類の旅立ちは存在を危うくするほどの一大事。残された定命たちに力を誇示し信仰を確保せねば、神としての存在を維持することができないと誰もが考えていたね…。", "For the gods - whose power had already greatly diminished due to a lack of believers - this development threatened their very existence. They felt that unless they made a show of power to gain the faith of those left behind, they would be unable to maintain their existence as gods...")
-				chatMore lang("そしてテスカトリポカによる虐殺が引き金となり、神々の生存戦争が始まったんだ。あの時のイルヴァには、秩序などなかったね…。", "Tazcatlipoca started the slaughter, and so the war for the survival of the gods began. Ylva fell into complete Chaos...")
+				chatMore lang("そしてテスカトリポカによる虐殺が引き金となり、神々の生存戦争が始まったんだ。あの時のイルヴァには、秩序などなかったね…。", "Tazcatlipoca started the slaughter, and so the war for the survival of the gods began. Irva fell into complete Chaos...")
 				chatMore lang("…これから先はまだ話すわけにはいかない。すまないね。", "...I can't say any more. I'm sorry."), strbye
 				goto *chat_end
 			}
 			if ( chatval == 2 ) {
 				sophia = rnd(21)
@@ -8467,13 +8467,13 @@
 					if ( gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_DAY) >= 30 ) {
 						gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_DAY) -= rnd(3) + 3
 					}
 					soukop = gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE) / 2 + 1
 					if ( gdata(GDATA_FLAG_MAIN) < 695 ) {
-						chatMore lang("君には神の間を目指して欲しいのだけどね。", "I'd really like for you to aim for the Eternal Seal.")
+						chatMore lang("君には神の間を目指して欲しいのだけどね。", "I'd really like for you to aim for the Eternal Seal. Other than that...")
 					}
-					chatMore lang("ふむ…そうだね。この後、地下の第" + soukop + "倉庫を整理する予定があって人手を探しているんだ。", "Other than that... Ah, right. I'm going to be looking for some help soon in organizing the " + soukop + cnvrank(soukop) + " underground warehouse.")
+					chatMore lang("ふむ…そうだね。この後、地下の第" + soukop + "倉庫を整理する予定があって人手を探しているんだ。", "Ah, right. I'm going to be looking for some help soon in organizing the " + soukop + cnvrank(soukop) + " underground warehouse.")
 					chatMore lang("もしも君にその気があるのなら、" + gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_YEAR) + "年" + gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_MONTH) + "月" + gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_DAY) + "日の午後14時半から15時までの間に話しかけてもらえるかな。", "If you'd like to help, I'll be working on it from 14:30 to 15:00 on " + gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_YEAR) + "/" + gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_MONTH) + "/" + gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE_DAY) + "."), strbye
 					gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE)++
 					txt_questupdate
 					goto *chat_end
 				}
@@ -8505,27 +8505,27 @@
 	}
 	if ( _switch_val == CREATURE_ID_RAIZEL_THE_OLD_WIZARD | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) == 745 ) {
-				chatMore lang("お若いの、頑張ったのう。よくぞ、わしが到着するまで持ちこたえてくれた。後はこの老いぼれが引き受けよう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("思えば、魔術に捧げた人生じゃった。才を活かすため師匠に背いて軍に入り、無我夢中で戦い続け…気づけば老いていた。", "Sorry, this is untranslated sentence.")
+				chatMore lang("お若いの、頑張ったのう。よくぞ、わしが到着するまで持ちこたえてくれた。後はこの老いぼれが引き受けよう。", "I was young, I worked hard. Oh, it endured until I arrived. Let's take care of this old man.")
+				chatMore lang("思えば、魔術に捧げた人生じゃった。才を活かすため師匠に背いて軍に入り、無我夢中で戦い続け…気づけば老いていた。", "If I think, it was a life I devoted to magic. In order to make full use of her talent she entered the army against her teacher and continued fighting under a chaotic situation... when he noticed he was old.")
 				chatList 1, lang("死なないで！", "Do not die!")
 				chatList 2, lang("美味しいところを持っていく気？", "Are you going to success than me?")
 				chatList 3, lang("化身？凶獣？", "What is oblivion beast?")
-				buff = lang("今こそ使おう…邪悪なる化身、凶獣の力を！", "Sorry, this is untranslated sentence.")
+				buff = lang("今こそ使おう…邪悪なる化身、凶獣の力を！", "Let's use it now... the evil incarnation, the power of the beast!")
 				gosub *chat_select
 				if ( chatval == 1 ) {
-					chatMore lang("死なんよ。死ぬよりもっと酷い目に遭うだけじゃ。", "Sorry, this is untranslated sentence.")
+					chatMore lang("死なんよ。死ぬよりもっと酷い目に遭うだけじゃ。", "It's dead. Just getting more serious than dying.")
 				}
 				if ( chatval == 2 ) {
-					chatMore lang("はは、すまんのう…。最期くらい恰好をつけさせとくれ。", "Sorry, this is untranslated sentence.")
+					chatMore lang("はは、すまんのう…。最期くらい恰好をつけさせとくれ。", "I'm sorry... Let me make a lasting appearance.")
 				}
 				if ( chatval == 3 ) {
-					chatMore lang("世界が消える前兆として、忘却の女神の化身が現れる。奴らが人々から記憶を抹消することで、人も世界も完全に忘れ去られ本当の死を迎える…。その内の一匹が魔術で我が手の内にあるのじゃ。", "Sorry, this is untranslated sentence.")
+					chatMore lang("世界が消える前兆として、忘却の女神の化身が現れる。奴らが人々から記憶を抹消することで、人も世界も完全に忘れ去られ本当の死を迎える…。その内の一匹が魔術で我が手の内にあるのじゃ。", "As a precursor to the disappearance of the world, the incarnation of the forgetful goddess appears. By erasing memory from people, people and the world are completely forgotten and they will have real death... One of them is magical in my hands.")
 				}
-				chatMore lang("さぁ行け、ナゴレウ！わしの記憶を燃やし、奴を蝕め！", "Sorry, this is untranslated sentence.")
+				chatMore lang("さぁ行け、ナゴレウ！わしの記憶を燃やし、奴を蝕め！", "Go on, Nagarew! Burn my memory and erase him!")
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 755 ) {
 				chatMore lang("…。", "...")
 				goto *chat_end
@@ -8641,11 +8641,11 @@
 		}
 		if ( gdata(GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC) == 1000 ) {
 			chatMore lang("それじゃ早速解読を始めましょうか。…なに見てるのよ、暇なの？", "Now then, time to get to work deciphering all of this... What? You're still here?")
 			chatMore lang("ふむふむ、ベースとなっている式は現在使われている魔力電池とほぼ共通ね。あ、ここは施術ゼミでやったところだわ。なんだ、意外と単純ね。さてメインの魔術構造については…。", "Hmm, the base seems to be roughly the same as the mana batteries currently available. Ah, this spot looks a bit more interesting... but it's pretty simple too. Now, how about the main magical structure...")
 			chatMore lang("…。", "...")
-			chatMore lang("……。", "... ...")
+			chatMore lang("……。", "......")
 			chatMore lang("な、なによこれは…既存のものと概念からして異なるわ。近年発表されたものとも違う。く、組むのは無理でも読むくらいなら…ええと、この式がこちらに繋がって…あっうう…。", "W-what the heck is this... From what I can tell, this is entirely different than what is commonly used. It's even different than the newest ones I've seen. Kuh, I don't know if I can even read this... Let's see... This formula is used for this part and... Auu...")
 			chatMore lang("あ、あたしは！ベルム家の才女で！飛び級で！首席なのよぉ！？こ、このくらい…くっ！！", "N-no way! I'm from the prestigious Bellum family! I skipped a grade! I'm at the top of my class! How... How could this be...")
 			chatMore lang("なっ、なに見てるのよ！あっち行きなさいよ！", "W-what are you looking at?! Get out of here!")
 			gdata(GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC) = 1001
 			goto *chat_end
@@ -8670,11 +8670,11 @@
 			gdata(GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC) = 1000
 			chatMore lang("転写魔法でメモしたからモンスターは返すわ。あたしがいつまでも持ってるとマズいもの。", "I've copied down everything about the monster that I need, so you can have it back. It would look bad if I kept it for too long."), strbye
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC) == 1 ) {
-			chatMore lang("…は？本当に来たの？凡人のくせに恐れ多いと思わないの？仕方ないわね…じゃああんたの実力を見せてもらおうかしら。あたしの貴重な時間を使うに相応しいかテストしてあげるわ。", "...Huh? You seriously came back? Well, aren't you just full of yourself? I suppose it can't be helped... But I'll give you a chance to show me just how useful to be, to see if you're worth wasting my valuable time on.")
+			chatMore lang("…は？本当に来たの？凡人のくせに恐れ多いと思わないの？仕方ないわね…じゃああんたの実力を見せてもらおうかしら。あたしの貴重な時間を使うに相応しいかテストしてあげるわ。", "...Huh? You seriously came back? Well, aren't you just full of yourself? I suppose it can't be helped... But I'll give you a chance to show me just how useful you can be, to see if you're worth wasting my valuable time on.")
 			chatMore lang("わがエウダーナの軍部は、魔力を蓄える擬似生命体の開発を近年進めているわ。機密だから詳しい仕様は伏せられているけれど、構成がどうしても気になるのよ。だから捕獲してあたしの前に連れてきなさい。あたしが直接捕獲するのは立場上問題があっても…冒険者が「偶然」捕まえたものを天才であるあたしに「調査依頼」するのは自然なことでしょう？", "For the past several years, the Eulderna military has been working on creating a pseudo-lifeform that can function as a mana battery. The development is being done in secret so I haven't been able to learn all the details, but I just have to know how it functions. So, I want you to capture one and bring it to me. There might be some problems if I were to capture it myself, you see... But if an adventurer \"just so happens\" to capture a strange creature and brings it to a genius like me to \"investigate\", then there'd be nothing suspicious about that, would there?")
 			chatMore lang("肝心の擬似生命体は、野外で試験運用されていると聞くわ。魔力のアウトプットを考えると、魔力回路が少なからず表面に露出しているはず。学がないと歪な魔法陣に見えるかもしれないけれど。名前に関しては情報が出回ってないから不明よ。", "They've been doing field tests with the pseudo-lifeform, so you should be able to find one out in the open somewhere. And considering it's going to be used as a mana battery, it must have magical circuits exposed on most of its body. For the magically illiterate, that means it might look like some kind of distorted magical square. But since the development is classified, I haven't been able to find out its name.")
 			chatMore lang("あまり期待はしてないけど、上手くいったら報酬をあげる。そうね、あたしの学友たち…と言ってもあんな低レベルのと同列に扱われたくないんだけど。まぁそいつらにもまだ見せていない、あたし特製のアーティファクトもつけてあげるわ。上手くいったらの話よ？", "I don't really expect anything, but I'll give you a reward if you manage to pull this off. I might still be in training, but... I don't want to be grouped together at the same level as those guys. I've got a super special artifact that I haven't shown off to anyone yet. Maybe I'll let you have it if you can do this for me."), strbye
 			gdata(GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC) = 2
 			txt_questupdate
@@ -8689,17 +8689,17 @@
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_AMURDAD | _switch_sw ) {
 		_switch_sw = 0
-		chatMore lang("アストラル光で描かれたこの世界の生命の記録…記録通りの死を迎えた時、アーカーシャへの画廊へと導かれ…生命は光になる。光になって星に還る…。そしていつか、また光の海から生まれ出る…。", "Huh.")
+		chatMore lang("アストラル光で描かれたこの世界の生命の記録…記録通りの死を迎えた時、アーカーシャへの画廊へと導かれ…生命は光になる。光になって星に還る…。そしていつか、また光の海から生まれ出る…。", "Record of the life of this world drawn with Astral light... When it came to record death, it is led to a gallery to Arkasha... life becomes light. Become light and return to the star... ...And one day, I will be born again from the sea of light...")
 		chatList 0, lang("意味が分からない", "I don't understand what you mean.")
 		chatList 1, lang("だいたい分かった", "I understand the gist of it.")
-		buff = lang("輪廻から外れた者たち…見える…？そう、彼らは世界の定めによって星の光となれずに…ただ、ただそこに存在する…。闇の中で、魂のキャンパスの上で永遠に…。生者の眼に映るのは一部だけ…魂の因縁を持つもの、だけ…。", "Huh.")
+		buff = lang("輪廻から外れた者たち…見える…？そう、彼らは世界の定めによって星の光となれずに…ただ、ただそこに存在する…。闇の中で、魂のキャンパスの上で永遠に…。生者の眼に映るのは一部だけ…魂の因縁を持つもの、だけ…。", "Those who are out of the circle... can you see...? Yes, they can not become the light of the stars by the regulations of the world... but only exist there... In the darkness, forever on the soul campus... Only the part reflected in the eyes of the living creature... only those with the soul's fate...")
 		gosub *chat_select
 		if ( chatval == 1 ) {
-			chatMore lang("分からない…君の記録…無い…。君が光に還るのか…分からない。アーカーシャの影はどこ…？", "Huh."), strbye
+			chatMore lang("分からない…君の記録…無い…。君が光に還るのか…分からない。アーカーシャの影はどこ…？", "I do not know... your record... not... I do not know if you will return to light. Where is Arakasha's shadow...?"), strbye
 			goto *chat_end
 		}
 		chatMore lang("永遠の闇と、星の光の祝福を…。", "The eternal darkness and the blessing of the star's light..."), strbye
 		goto *chat_end
 	}
@@ -8721,11 +8721,11 @@
 					}
 					break
 				loop
 				gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM_CREATURE) = cdata(CDATA_ID, MAX_CHARA_NC)
 				chara_vanquish MAX_CHARA_NC
-				chatMore lang("いつもの奴隷くんたちをいじめるのにも飽きてきたわ…。もっと新鮮な反応が欲しいの。", "Huh.")
+				chatMore lang("いつもの奴隷くんたちをいじめるのにも飽きてきたわ…。もっと新鮮な反応が欲しいの。", "I got tired of teasing the usual slave-kun... I want a more fresh response.")
 				gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM) = 1
 
 				/********** ORIGINAL - BEGINNING **********
 
 				if ( dbg_noautosave == 0 & gdata(GDATA_WIZARD) == 0 ) {
@@ -8741,11 +8741,11 @@
 					gosub *game_save
 					txtmore
 					txtef COLOR_BLUE
 					txt_saving
 				}
-				chatMore lang("あなた、" + refchara(gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM_CREATURE), DBSPEC_CHARA_NAME_ORG, 1) + "を連れてきてくれない？…ご褒美？いいわよ、気が向いたらね。", "Huh."), strbye
+				chatMore lang("あなた、" + refchara(gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM_CREATURE), DBSPEC_CHARA_NAME_ORG, 1) + "を連れてきてくれない？…ご褒美？いいわよ、気が向いたらね。", "Will you bring me a " + refchara(gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM_CREATURE), DBSPEC_CHARA_NAME_ORG, 1) + "? ...Reward? Well, if I feel like it."), strbye
 				txt_questupdate
 				goto *chat_end
 			}
 		}
 		kaiwa = rnd(4)
@@ -8786,18 +8786,18 @@
 		gosub *DeleteAIInfo
 
 		/********** ANNA/BLOODYSHADE CUSTOM - ENDING **********/
 
 		chara_vanquish rc
-		chatMore lang("あら…♪言いつけどおり、新しい玩具を持ってきてくれたのね。コレが壊れたらまた頼むからよろしく。", "Huh.")
+		chatMore lang("あら…♪言いつけどおり、新しい玩具を持ってきてくれたのね。コレが壊れたらまた頼むからよろしく。", "Oh... ♪ As you said, you brought me a new toy. I will ask you again if Colle breaks.")
 		gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM)++
 		gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM_CREATURE) = 0
 		if ( gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM) == 4 ) {
 			gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM) = 100
 		}
 		if ( gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM) \ 5 == 0 ) {
-			chatMore lang("そうね、気分がいいからご褒美をあげるわ。とっておきなさい。", "Huh.")
+			chatMore lang("そうね、気分がいいからご褒美をあげるわ。とっておきなさい。", "Well, I will give you a reward as I feel well. Keep it.")
 			txt_questcompleted
 			txtmore
 			txt_questitem
 			txt_questupdate
 			if ( gdata(GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM) == 100 ) {
@@ -9027,11 +9027,11 @@
 			gosub *chat_select
 			if ( chatval == 0 ) {
 				chatMore lang("ふん。おれは思ったことを述べただけ。理屈も基準も、決めるのは評価者であるおれだ。何を言おうがおれの勝手だろう？", "Hmph. I simply spoke my mind. My reasons and standards are mine as the evaluator. What else is there to say?")
 			}
 			if ( chatval == 2 ) {
-				chatMore lang("おう、持って帰れ。溶解炉に腕を突っ込めばまだ残骸が見つかるかもしれんぞ。いや、あんな質の作品ではとっくに溶けているか？わはは。", "Yes, take it home. If you shove your arm into the smelting furnace, you might still find some remains of it. But with that kind of quality, I bet it's melted already. Wahahaha.")
+				chatMore lang("おう、持って帰れ。溶解炉に腕を突っ込めばまだ残骸が見つかるかもしれんぞ。いや、あんな質の作品ではとっくに溶けているか？わはは。", "Yes, take it home. If you shove your arm into the smelting furnace, you might still find some remains of it. But with that kind of quality, I bet it's melted already. Wahahaha!")
 			}
 			chatMore lang("ちっ、長々と喋ったら疲れたぞ。まったく、無駄な時間だったな。さっさと帰れ。", "Tch, this has gone on long enough already. I'm tired. What a waste of my time. Hurry up and leave."), strbye
 			gdata(GDATA_FLAG_SUB_IRMA_DAGGER) = 10
 			gdata(GDATA_FLAG_SUB_BEYOND_THE_GENERATIONS) = 5
 			txt_questupdate
@@ -9188,11 +9188,11 @@
 			if ( gdata(GDATA_THALIA_LIMIT) > 2000 ) {
 				gdata(GDATA_THALIA_LIMIT) = 2000
 			}
 			chatList 0, lang("どうだろう", "That so?")
 			chatList 1, lang("合成用アイテムを持ってきた", "I brought items for synthesis.")
-			buff = lang("よく夜中に猫やサリムがベッドに潜り込んでくるのじゃ。そんなに寒いのかのう？単にわしが寒さに慣れておるのかもな…ロストイルヴァに来る前はメイルーンに住んでいたからのう。", "Thalia and the cats have been sneaking into my bed at night. Is it really that cold? Maybe I'm just accustomed to it... Before I came to Lost Ylva, I lived in Mayroon.")
+			buff = lang("よく夜中に猫やサリムがベッドに潜り込んでくるのじゃ。そんなに寒いのかのう？単にわしが寒さに慣れておるのかもな…ロストイルヴァに来る前はメイルーンに住んでいたからのう。", "Thalia and the cats have been sneaking into my bed at night. Is it really that cold? Maybe I'm just accustomed to it... Before I came to Lost Irva, I lived in Mayroon.")
 			gosub *chat_select
 			if ( chatval == 1 ) {
 				kiseki = gdata(GDATA_THALIA_LIMIT) + 500
 				kiseki2 = gdata(GDATA_THALIA_LIMIT) + 1000
 				chatMore lang("おお、練習に付き合ってくれるのか。それで、エンチャントを付与する武具はどれじゃ？エンチャントが強力な武具は、魔術抵抗があって付与できないかもしれん。そうじゃな…サリムの言うエンチャント強度とやらで言うと、今は固定アーティファクトなら" + gdata(GDATA_THALIA_LIMIT) + "パワー、奇跡品なら" + kiseki + "パワー、神器品なら" + kiseki2 + "パワー、辺りが限界じゃ。それとネフィアティア以外を合成する場合は能力獲得の巻き物を一枚使うのう。", "Oh, something to practice on, huh? So, what shall I enchant for you? If it's already powerfully enchanted, I might not be able to do anything with it. Let's see... If you go by Thalia's ratings, the limit is about " + gdata(GDATA_THALIA_LIMIT) + " for static artifacts, " + kiseki + " for miracle-level artifacts, and " + kiseki2 + " for godly-level artifacts. And unless you're going to use a Jewel of Core of Nefia, I'll need a scroll of gain attribute too.")
@@ -9663,11 +9663,11 @@
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) >= 1000 ) {
 			if ( gdata(GDATA_LEVEL) == 1 ) {
-				chatMore lang("この街も年中雪が降ってるけど、メイルーンに比べれば全然暖かいほうだよ。このくらいなら裸で走りまわっても平気だね。", "Woah!")
+				chatMore lang("この街も年中雪が降ってるけど、メイルーンに比べれば全然暖かいほうだよ。このくらいなら裸で走りまわっても平気だね。", "It is snowing all year round in this city, but it is warmer than Mayroon at all. Even if I run around naked this much, I am fine.")
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) == 100 ) {
 			if ( gdata(GDATA_LEVEL) == 1 ) {
@@ -9772,18 +9772,18 @@
 	if ( _switch_val == CREATURE_ID_ROVID | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_FLAG_MAIN) < 15000 ) {
 			kaiwa = rnd(10)
 			if ( kaiwa == 0 ) {
-				chatMore lang("ここは神々が永遠の盟約を結んだ場所でもあります。あの時の緊張しているジュア様も素敵でした…。はぁ…ジュア様…。", "I declare, these rays are just too strong and the sand just sticks everywhere and how awful is this dreadful place. I care not if this is an antenna but having sworn loyalty to Miss Lulwy I have been given governance of this desert tower. That cruel part of her is just quite wonderful as well..."), strbye
+				chatMore lang("ここは神々が永遠の盟約を結んだ場所でもあります。あの時の緊張しているジュア様も素敵でした…。はぁ…ジュア様…。", "This is also the place where the gods signed an eternal covenant. Lady Jure who was nervous at that time was also nice... Ah, Lady Jure..."), strbye
 			}
 			if ( kaiwa >= 5 ) {
-				chatMore lang("混沌の本格的な侵攻が始まったというので、やむなく神殿を開放し神力の一部で地上と繋げましたが…まさか人が集まるのをいいことにこの神聖な場所で商売を始める者が出てくるとは。", "Miss Lulwy does come here on vacation. Tea as she feels in the mood, frolicking together on the beach and punishing the prisoners. The best part are those hurricanes. Inside this tower small hurricanes swirl around and jumble up everything. That wind slapping around here and there... Oh my, I really can't compete with her. Just makes me tremble..."), strbye
+				chatMore lang("混沌の本格的な侵攻が始まったというので、やむなく神殿を開放し神力の一部で地上と繋げましたが…まさか人が集まるのをいいことにこの神聖な場所で商売を始める者が出てくるとは。", "Although a full-scale invasion of chaos began, we opened the temple unavoidably and connected with the ground with a part of the gods' power, but... no matter where people gather, someone who starts business in this sacred place comes out come and is."), strbye
 			}
 			if ( kaiwa < 5 ) {
 				if ( kaiwa != 0 ) {
-					chatMore lang("本当はジュア様に付き従いたいのですが…神殿の守護をそのジュア様に任されたので、投げ出すわけにもいかないのです。", "Miss Lulwy does come here on vacation. Tea as she feels in the mood, frolicking together on the beach and punishing the prisoners. The best part are those hurricanes. Inside this tower small hurricanes swirl around and jumble up everything. That wind slapping around here and there... Oh my, I really can't compete with her. Just makes me tremble..."), strbye
+					chatMore lang("本当はジュア様に付き従いたいのですが…神殿の守護をそのジュア様に任されたので、投げ出すわけにもいかないのです。", "Actually, I would like to follow Lady Jure... But I cannot discard my responsibility as the guardian of the temple that was given to Lady Jure."), strbye
 				}
 			}
 			goto *chat_end
 		}
 		goto *chat_end
@@ -9793,11 +9793,11 @@
 		chatList 0, lang("内容を知りたい", "I was looking for you.")
 		chatList 1, lang("興味がない", "Good luck.")
 		buff = lang("よくぞ来てくれた。貴君をわが艦に迎え入れたのは、協力を要請したいことがあるためだ。もちろん報酬は用意しているが、どうかね？", "How wonderful, you came. Now that you've settled in on my warship, I need your assistance with something. Of course there's a reward in it for you. How about it?")
 		gosub *chat_select
 		if ( chatval == 0 ) {
-			chatMore lang("地殻変動によって第三艦橋周辺と氷雪地帯地下が繋がり、そこから敵性体が侵攻してきている。もちろん迎撃システムも稼働しているのだがどうも限界が近くてね。", "Sorry, this is untranslated sentence.")
+			chatMore lang("地殻変動によって第三艦橋周辺と氷雪地帯地下が繋がり、そこから敵性体が侵攻してきている。もちろん迎撃システムも稼働しているのだがどうも限界が近くてね。", "Crustal deformation links the third bridge and the icy zone underground, from which the enemy body is invading. Of course the interceptor system is also in operation, but the limit is near.")
 			chatMore lang("そこで貴君には隔壁が完成するまでの間、侵攻を食いとめてほしいのだ。その気になったらまた話しかけてくれたまえ。", "I want you to hold them off from there until the barrier is completed. If there's anything you're still unsure of, say so now.")
 			chatMore lang("…", "...")
 			chatMore lang("ピーガガガ！", "Piigaaahhh!")
 			chatMore lang("お探しのサブクエストはお使いのバージョンでは実装されていません。", "The subquest you searched for can't be implemented in this version.")
 		}
@@ -10168,40 +10168,40 @@
 	if ( _switch_val == CREATURE_ID_BELPHAT_THE_COSMIC_SWORD | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD) >= 1000 ) {
 				if ( gdata(GDATA_FLAG_MAIN) >= 575 ) {
-					chatMore lang("クロやんも腕を上げたものだ。昔ちょっと見せただけの宇宙剣術をしっかりものにしたうえで、独自のアレンジを加えているとは。", "Sorry, this is untranslated sentence."), strbye
+					chatMore lang("クロやんも腕を上げたものだ。昔ちょっと見せただけの宇宙剣術をしっかりものにしたうえで、独自のアレンジを加えているとは。", "Kuro-chan raised his arm. It is said that they have added their own arrangements after firmly making the space swordsmans who showed just a bit."), strbye
 					goto *chat_end
 				}
 			}
 		}
 		if ( gdata(GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD) == 1000 ) {
 			kaiwa = rnd(8)
 			if ( kaiwa == 0 ) {
-				chatMore lang("まじかよ、クロやん…うちの家宝の剣のイミテーション作ってるじゃないか。おそろいのつもりなんだろうけど…気まずいなぁ。前回勝手に家宝持ち出したこと親父に叱られたから、今回は持ってきてないんだよな。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("まじかよ、クロやん…うちの家宝の剣のイミテーション作ってるじゃないか。おそろいのつもりなんだろうけど…気まずいなぁ。前回勝手に家宝持ち出したこと親父に叱られたから、今回は持ってきてないんだよな。", "Mashitayo, Kurokan... I am making imitation of my sword of heirlooms. I wonder what they are supposed to be in a match, but... awkward. I was scolded by my father that he brought out heirlooms at my last visit, so I did not bring it this time."), strbye
 			}
 			if ( kaiwa == 1 ) {
-				chatMore lang("惑星ユゴスを訪れた時、スペースハンターのボッヘリト星人が外来種であるミ=ゴの駆除をしていてね。抵抗するミ=ゴもいたが、訓練された犬の３倍の能力を持つボッヘリト星人には次々と狩られていった。その手伝いの後のミ=ゴ鍋は旨かったなぁ。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("惑星ユゴスを訪れた時、スペースハンターのボッヘリト星人が外来種であるミ=ゴの駆除をしていてね。抵抗するミ=ゴもいたが、訓練された犬の３倍の能力を持つボッヘリト星人には次々と狩られていった。その手伝いの後のミ=ゴ鍋は旨かったなぁ。", "When visiting the planet Yugos, the space hunter Bochelito star was disinfecting the exotic species mi-go. There were also mi-go resisting, but it was hunted one after another to the Bochelito star who had three times the ability of the trained dog. Mi-go pot after that help was delicious."), strbye
 			}
 			if ( kaiwa == 2 ) {
-				chatMore lang("バイアクヘー星間旅行サービスも利用したことがあるんだが、あれは精神しか旅行できないから食べ歩きに不向きなんだよなぁ。事前準備も色々と面倒だし。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("バイアクヘー星間旅行サービスも利用したことがあるんだが、あれは精神しか旅行できないから食べ歩きに不向きなんだよなぁ。事前準備も色々と面倒だし。", "I have used Byakhee interstellar travel service, but I can only travel the spirit, so it is unsuitable for me to eat. Preliminary preparation is a lot of hassle."), strbye
 			}
 			if ( kaiwa == 3 ) {
-				chatMore lang("惑星サイクラノーシュを訪れた時は大変だった。現地のキノコ料理をご馳走になったまではいいんだが、勝手に彼らのボスの配偶者に選ばれてしまって。慌てて逃げ出したよ。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("惑星サイクラノーシュを訪れた時は大変だった。現地のキノコ料理をご馳走になったまではいいんだが、勝手に彼らのボスの配偶者に選ばれてしまって。慌てて逃げ出したよ。", "It was serious when I visited the planetary cyclone. Until it was a delicious meal of the local mushroom dish, it was chosen as a spouse of their boss without permission. I hurried away."), strbye
 			}
 			if ( kaiwa == 4 ) {
-				chatMore lang("惑星トゥンツァに行った時、ちょうどそこの神の生誕祭をやっていてな。ラッキーだと思ったら、振る舞われたのが亜硫酸スープ。一応飲んだけど、舌がピリピリして味わうどころじゃなかった。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("惑星トゥンツァに行った時、ちょうどそこの神の生誕祭をやっていてな。ラッキーだと思ったら、振る舞われたのが亜硫酸スープ。一応飲んだけど、舌がピリピリして味わうどころじゃなかった。", "When I went to the planet Tunza, I was just doing the birth place of God there. When thinking that it was lucky, the sulphite soup that was acted was. I drank it at the time, but my tongue was irritated and I could not taste it."), strbye
 			}
 			if ( kaiwa == 5 ) {
-				chatMore lang("物も人も星すらも食い尽くして宇宙を渡り歩く宇宙最凶生物…デベロンダッタ星人とよく間違われて攻撃されるんだ。宇宙食べ歩きには危険がいっぱいだな。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("物も人も星すらも食い尽くして宇宙を渡り歩く宇宙最凶生物…デベロンダッタ星人とよく間違われて攻撃されるんだ。宇宙食べ歩きには危険がいっぱいだな。", "The cosmic frog creatures that eat things, people, even stars, and travel across the universe... It is often mistaken for starboarder and attacked. There is lots of danger in walking in space."), strbye
 			}
 			if ( kaiwa == 6 ) {
-				chatMore lang("お土産にジェラミス星人のたこやきも用意していたんだが、あんまり暴れるものだから来る途中で全部食べてしまったよ。仕方がないから代わりにイス焼きを大量に買ってきた。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("お土産にジェラミス星人のたこやきも用意していたんだが、あんまり暴れるものだから来る途中で全部食べてしまったよ。仕方がないから代わりにイス焼きを大量に買ってきた。", "I also had a Terrace of Geramis star for a souvenir, but I've eaten it all along while I was coming because it is so violent. I bought a large amount of chair instead of having no choice."), strbye
 			}
 			if ( kaiwa == 7 ) {
-				chatMore lang("猫とかいう、ニャリン星人に似た生物がこの星には大勢いるな。前に来た時はすごく驚いた。スンバラリア星を侵略した強豪と聞いていたからな…。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("猫とかいう、ニャリン星人に似た生物がこの星には大勢いるな。前に来た時はすごく驚いた。スンバラリア星を侵略した強豪と聞いていたからな…。", "There are lots of creatures resembling cats, like alien stars. I was very surprised when I came before. I heard that it was a powerhouse invading the Sunbararia star..."), strbye
 			}
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 515 ) {
@@ -10240,15 +10240,15 @@
 	}
 	if ( _switch_val == CREATURE_ID_KUROYA_THE_LOOKING_UNIVERSE | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 580 ) {
-				chatMore lang("あー…腕に自信がないなら、次の階層はあんまり近寄らないほうがいいかもしれないね。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("あー…腕に自信がないなら、次の階層はあんまり近寄らないほうがいいかもしれないね。", "Ah... ...If you do not have confidence in your arms, it may be better not to come closer to the next level."), strbye
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 575 ) {
-				chatMore lang("いやー。駄目元でも交渉してみるものだね。おっと、こっちの話さ。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("いやー。駄目元でも交渉してみるものだね。おっと、こっちの話さ。", "Well. It's what to try to negotiate in bad source. Oops, this is the story."), strbye
 				gdata(GDATA_FLAG_MAIN) = 580
 				goto *chat_end
 			}
 			goto *chat_end
 		}
@@ -10340,60 +10340,60 @@
 			}
 			goto *chat_end
 		}
 		if ( kaiwa == 0 ) {
 			if ( gdata(GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD) >= 1000 ) {
-				chatMore lang("ベルっちの旅行話は、相変わらず内容がＢ級でゾクゾクするねぇ。本当に…また会えたんだなって実感が湧いてくるよ。子供の頃も、よくわからない固有名詞に戸惑いながら聞いていたっけ。ああ、懐かしいなぁ…。涙が出てきそうだ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("ベルっちの旅行話は、相変わらず内容がＢ級でゾクゾクするねぇ。本当に…また会えたんだなって実感が湧いてくるよ。子供の頃も、よくわからない固有名詞に戸惑いながら聞いていたっけ。ああ、懐かしいなぁ…。涙が出てきそうだ。", "The talking story of Berchchi still keeps its content in class B as usual. It really makes me realize that I could see you again. When I was a child, I was being perplexed by proper nouns I do not know well while I was listening. Oh, I miss that. Tears are about to come out.")
 				goto *chat_end
 			}
-			chatMore lang("この神の艦は空を飛び、イルヴァの外…宇宙をも航行できるのだとか。宇宙…行ってみたいものだね。", "This warship of the gods can fly in the sky, even outside Ylva... Perhaps even travel the universe. I'd like that... Seeing the universe.")
+			chatMore lang("この神の艦は空を飛び、イルヴァの外…宇宙をも航行できるのだとか。宇宙…行ってみたいものだね。", "This warship of the gods can fly in the sky, even outside Irva... Perhaps even travel the universe. I'd like that... Seeing the universe.")
 			chatMore lang("少年の頃、僕には異星の友人がいてね。彼が母星に帰ってから数十年…別れ際に再会を誓ったけれど、僕はもうこんなおじさんになってしまった。生きている間にもう一度会いたいものだね…。", "When I was a boy, I had a friend from a different planet. It's been decades now since he returned to his home world... When we parted, we vowed to reunite someday, but I've already grown old. I hope to meet him once again while I'm still alive...")
 			chatMore lang("宇宙を航行できるというこの艦を見ていると切なさを感じるとともに、友人の話を聞いて宇宙に思いを馳せていた頃に戻ったような…そんな気分になれるんだ。", "Seeing this ship, which can travel the universe, and thinking about my old friend... it fills me with pain and sadness.")
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_FRON_THE_TOUR_PLANNER | _switch_sw ) {
 		_switch_sw = 0
-		chatMore lang("より良いツアーのプランを組み立てるには、常に各地の現状を把握しておく必要があります。それがたとえ火の中、水の中、草の中、森の中、土の中や雲の中だろうと。ツアープランナーはお客様の護衛がないぶんガイドよりも身軽ですが、未開拓地域の調査や力ずくでの交渉といった業務も多いため、高い戦闘力が要求されます。", "Sorry, this is untranslated sentence.")
+		chatMore lang("より良いツアーのプランを組み立てるには、常に各地の現状を把握しておく必要があります。それがたとえ火の中、水の中、草の中、森の中、土の中や雲の中だろうと。ツアープランナーはお客様の護衛がないぶんガイドよりも身軽ですが、未開拓地域の調査や力ずくでの交渉といった業務も多いため、高い戦闘力が要求されます。", "In order to build a better tour plan, you need to keep track of the current state of each place. Whether it is in the fire, in the water, in the grass, in the forest, in the ground or in the clouds. Although the tour planner is lighter than the guide without customer escort, there are many jobs such as surveying undeveloped areas and negotiating with force, so high combat strength is required.")
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_RENAI_THE_OVER_MESHERA | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) >= 1004 ) {
-			chatMore lang("兄さんは昔から過保護で…わたしのためによく無茶もしていました。わたしの存在が足枷になっているんじゃないか、と最近思うんです。", "Sorry, this is untranslated sentence.")
+			chatMore lang("兄さんは昔から過保護で…わたしのためによく無茶もしていました。わたしの存在が足枷になっているんじゃないか、と最近思うんです。", "My older brother has overprotected since long ago... It was also well unreasonable for me. I think recently that my existence has become an obstacle.")
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) == 1003 ) {
-			chatMore lang("あの、" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "さん？兄さんの知り合いだったんですね。その節は兄がご迷惑をお掛けしたみたいですみません…。", "Sorry, this is untranslated sentence.")
-			chatMore lang("今でこそ人型を保ってますけど、メシェーラの侵食が無くなったわけではないので、勝手に触手が出たり突然腕が膨張したりわたしが弱ると身体を乗っ取られたりするんです。兄さんが毎晩神経を接続して調整はしてくれてるんですけど…。", "Sorry, this is untranslated sentence.")
-			chatMore lang("兄と毎晩接続…な、なんか卑猥ですね。", "Sorry, this is untranslated sentence.")
+			chatMore lang("あの、" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "さん？兄さんの知り合いだったんですね。その節は兄がご迷惑をお掛けしたみたいですみません…。", "Um, " + cdatan(CDATAN_NAME, CHARA_PLAYER) + "-san? It was my brother's acquaintance. I am sorry that the elder brother bothers me for that section...")
+			chatMore lang("今でこそ人型を保ってますけど、メシェーラの侵食が無くなったわけではないので、勝手に触手が出たり突然腕が膨張したりわたしが弱ると身体を乗っ取られたりするんです。兄さんが毎晩神経を接続して調整はしてくれてるんですけど…。", "I am keeping a human figure for now, but since Meshera's erosion has not disappeared, if a tentacle arbitrarily comes out or the arm swells suddenly, when I weaken, it will take over my body. My older brother connects my nerves every night and makes adjustments...")
+			chatMore lang("兄と毎晩接続…な、なんか卑猥ですね。", "I connect with my older brother every night... It is something obscene.")
 			gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) = 1004
 			goto *chat_end
 		}
-		chatMore lang("…わたしに近寄らない方がいいですよ。", "Sorry, this is untranslated sentence.")
+		chatMore lang("…わたしに近寄らない方がいいですよ。", "...You had better not come near me.")
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_REGULUS_THE_ALTERED | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) >= 1003 ) {
-			chatMore lang("こんな身体じゃ故郷にももう戻れん。幸い身体能力は向上しているから、このまま二人で冒険者としてやっていこうと思っているんだ。", "Sorry, this is untranslated sentence.")
+			chatMore lang("こんな身体じゃ故郷にももう戻れん。幸い身体能力は向上しているから、このまま二人で冒険者としてやっていこうと思っているんだ。", "With such a body I can not go back to my hometown already. Fortunately my physical abilities are improving, so I'm thinking I'm going to do as an adventurer by themselves as it is.")
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) == 1002 ) {
-			chatMore lang("お、" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "！レナイが！ついにオレの妹が見つかったんだ！苦労したよ本当に…。見つけた時にはもう身体が異形化しててさ、意識もほぼ無くて襲い掛かってきたんだぜ。", "Sorry, this is untranslated sentence.")
-			chatMore lang("結論から言うと、ギリギリまで同化されることで神経を接続し、コントロールを菌から乗っ取ることでなんとか奪還できた。二人分同時に制御できるという保証はなかったから、完全にイチかバチかだったけどな。", "Sorry, this is untranslated sentence.")
-			chatMore lang("ああ、オレがメシェーラを制御できるのは薬物と人体改造で神経系を強化されているかららしい。あんたと研究施設に行った時見つけた手帳に、そう書いていた…そうだ、この手帳やるよ。何かの手がかりにと思って持っていたけど、もう必要なさそうだしな。燃やすなり売り払うなり、ザナンの軍部をゆする材料にするなり好きにしてくれ。", "Sorry, this is untranslated sentence.")
+			chatMore lang("お、" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "！レナイが！ついにオレの妹が見つかったんだ！苦労したよ本当に…。見つけた時にはもう身体が異形化しててさ、意識もほぼ無くて襲い掛かってきたんだぜ。", "Oh, " + cdatan(CDATAN_NAME, CHARA_PLAYER) + "! Renai! Finally I found my sister! I was really struggling. When I found it, my body is already heteromorphic and I have been attacked almost without consciousness.")
+			chatMore lang("結論から言うと、ギリギリまで同化されることで神経を接続し、コントロールを菌から乗っ取ることでなんとか奪還できた。二人分同時に制御できるという保証はなかったから、完全にイチかバチかだったけどな。", "In conclusion, we could somehow be restored by connecting the nerves by assimilation until the last minute and hijacking control from the fungus. There was no guarantee that we could control at the same time for two people, but it was do or die.")
+			chatMore lang("ああ、オレがメシェーラを制御できるのは薬物と人体改造で神経系を強化されているかららしい。あんたと研究施設に行った時見つけた手帳に、そう書いていた…そうだ、この手帳やるよ。何かの手がかりにと思って持っていたけど、もう必要なさそうだしな。燃やすなり売り払うなり、ザナンの軍部をゆする材料にするなり好きにしてくれ。", "Oh, it seems that I can strengthen the nervous system by medicine and human body remodeling that I can control meshera. I wrote that on the notebook you found when I went to the research facility with you... That's right, I'll do this notebook. I thought it was a clue for something, but I don't need it anymore. Do not burn it or sell it, make it a material that will destroy the military of Xanan, and do whatever you like.")
 			flt
 			itemcreate -1, ITEM_ID_RESEARCHERS_DIARY, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 			txt_questitem
 			gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) = 1003
 			goto *chat_end
 		}
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) >= 1000 ) {
 			if ( gdata(GDATA_LEVEL) == 1 ) {
-				chatMore lang("あれからあちこちの地域に行って聞き込みをしているんだけど、今のところ何も手がかりないんだよな。…早く探し出してやらないと。あいつは昔から寂しがり屋なんだ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("あれからあちこちの地域に行って聞き込みをしているんだけど、今のところ何も手がかりないんだよな。…早く探し出してやらないと。あいつは昔から寂しがり屋なんだ。", "I've been listening to it from here and there, but for now I do not have any clue. ...I have to find out early. He has been lonely since long ago.")
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_FLAG_SUB_REGULUS_ZANAN) == 100 ) {
 			if ( gdata(GDATA_LEVEL) == 1 ) {
@@ -10467,51 +10467,51 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_NERES_THE_AMNESIAC | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_WAR_GROUND ) {
-			chatMore lang("リューツェ君を守って何かと戦っていたのは憶えている。その後光に包まれてこのわけのわからない場所に…。", "Huh."), strbye
-			chatMore lang("クソッ。獣が散々食い散らかした跡みたいに、記憶が断片しか残っていないなんて。それも、ぐちゃぐちゃでほとんど繋がらないときたわ…！", "Huh."), strbye
+			chatMore lang("リューツェ君を守って何かと戦っていたのは憶えている。その後光に包まれてこのわけのわからない場所に…。", "I remember guarding Lucese and fighting something. After that it was wrapped in light and in a place I do not know this..."), strbye
+			chatMore lang("クソッ。獣が散々食い散らかした跡みたいに、記憶が断片しか残っていないなんて。それも、ぐちゃぐちゃでほとんど繋がらないときたわ…！", "Damn it. It seems like the marks of the beasts scattered and scattered, there are only memory fragments left. It was also a mess and I almost did not connect...!"), strbye
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( neres == 100 ) {
-				chatMore lang("チッ…置いてきたリューツェ君が心配になってきたわ。", "Huh."), strbye
+				chatMore lang("チッ…置いてきたリューツェ君が心配になってきたわ。", "Tch... Luce you who came in became worried."), strbye
 				goto *chat_end
 			}
 			if ( neres == 0 ) {
-				chatMore lang("この世界のこと教えてあげるって言うからついてきたけど、何なのよここは。私、都合よく護衛に使われてる気がするんだけど。", "Huh."), strbye
+				chatMore lang("この世界のこと教えてあげるって言うからついてきたけど、何なのよここは。私、都合よく護衛に使われてる気がするんだけど。", "I came because I told you about this world, but what is this place? I think that it is conveniently being used for escorts."), strbye
 				neres = 100
 				goto *chat_end
 			}
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_RYUTYE_THE_AMNESIAC | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_WAR_GROUND ) {
 			if ( gdata(STARTING_GDATA_FLAG + 321) == 0 ) {
-				chatMore lang("は、初めまして。", "Huh.")
-				chatMore lang("僕はリューツェ…っていう名前らしいです。…ごめんなさい、自分の名前もよく憶えていないんです。", "Huh."), strbye
-				chatMore lang("あなたは…ええと、" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "さんっていうんですね。あちこちを冒険されているんですか？羨ましいです、僕なんて屋敷から全然…あれ？なんだっけ…。僕は、今まで、「どういうふうに生きてきた」んだっけ…？", "Huh."), strbye
+				chatMore lang("は、初めまして。", "Nice to meet you.")
+				chatMore lang("僕はリューツェ…っていう名前らしいです。…ごめんなさい、自分の名前もよく憶えていないんです。", "I guess it's a name like Lucese... I am sorry, I do not remember my name well."), strbye
+				chatMore lang("あなたは…ええと、" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "さんっていうんですね。あちこちを冒険されているんですか？羨ましいです、僕なんて屋敷から全然…あれ？なんだっけ…。僕は、今まで、「どういうふうに生きてきた」んだっけ…？", "You... Well, I mean " + cdatan(CDATAN_NAME, CHARA_PLAYER) + ". Are you and your adventure going? Enviable, I am not at all from the mansion... that one? What was that... You, until now, \"How did you live\"?"), strbye
 				gdata(STARTING_GDATA_FLAG + 321) = 1
 				goto *chat_end
 			}
-			chatMore lang("ネレスちゃんがイライラしている気持ちもわかるんです。大切なものをいくつも失っていて…それが何なのか気が付くことができなくて…こうなった原因もわからなくて…とても、もどかしいんです。", "Huh."), strbye
+			chatMore lang("ネレスちゃんがイライラしている気持ちもわかるんです。大切なものをいくつも失っていて…それが何なのか気が付くことができなくて…こうなった原因もわからなくて…とても、もどかしいんです。", "I also understand the feeling that Nelles is irritated. I have lost a few important things... I can not notice what it is... I do not know the reason for this... I am frustrated."), strbye
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_MELGET_THE_INFORMER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 600 ) {
-				chatMore lang("さぁて、神の間にはどんな秘密が隠されてるのかなー？ふふふ、秘密を暴くのって楽しいもんね！", "Huh."), strbye
+				chatMore lang("さぁて、神の間にはどんな秘密が隠されてるのかなー？ふふふ、秘密を暴くのって楽しいもんね！", "Well, what kind of secret is hidden among gods? Huhuu, it's fun to expose the secret!"), strbye
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 595 ) {
-				chatMore lang("へぇー。ロスリアの連中になかなか出くわさないと思ったら、本隊はまだ上の階層にいるんだ。やっぱり少数精鋭が身軽だよね！あまりに大所帯だと思うように進めないんじゃないかなぁ。", "Huh."), strbye
+				chatMore lang("へぇー。ロスリアの連中になかなか出くわさないと思ったら、本隊はまだ上の階層にいるんだ。やっぱり少数精鋭が身軽だよね！あまりに大所帯だと思うように進めないんじゃないかなぁ。", "really. If you think that it is hard to come across Rosuria people, the troops are still on the upper level. After all the minorities are lightweight! I wonder not to proceed as I think it is too big household."), strbye
 				gdata(GDATA_FLAG_MAIN) = 600
 				goto *chat_end
 			}
 			goto *chat_end
 		}
@@ -10738,66 +10738,66 @@
 			snd SOUNDLIST_PAYGOLD1
 			if ( gdata(GDATA_MONTH) == 1 ) {
 				chatMore lang("私、チョコレートとか嫌いだから。だからバレンタインの中止を願ったんだけど、そしたら願いの女神が手作りチョコをよこしてきたの。もったいないから仕方なく食べたけど、願いの女神も色々と大変ね…。", "I hate things like chocolate. So I wished for Valentine's Day to be discontinued, then the Wish Goddess gave me some handmade chocolate. It would be a waste so I reluctantly ate it but... The Wish Goddess is also very troublesome.")
 			}
 			if ( gdata(GDATA_MONTH) == 2 ) {
-				chatMore lang("とあるドラゴンハンターの攻撃は、ドラゴン類に対して１割ほど与えるダメージが多いの。ドラゴンにはドラゴンの攻撃が効果抜群…というわけではなくて、単純に強い殺意で力が入ってるんでしょうね。", "Sorry, this is untranslated sentence.")
+				chatMore lang("とあるドラゴンハンターの攻撃は、ドラゴン類に対して１割ほど与えるダメージが多いの。ドラゴンにはドラゴンの攻撃が効果抜群…というわけではなくて、単純に強い殺意で力が入ってるんでしょうね。", "A certain Dragon Hunter's attack deals much more damage than dragons by about 10%. The dragon's attack on the dragon is exceptional... it is not that it is simply powerful with strong murderous intent.")
 			}
 			if ( gdata(GDATA_MONTH) == 3 ) {
 				chatMore lang("ザナンの実験施設の収容者リストを見ていて気がついたんだけど、全員の名前をつなげて読むと文章になるの。すごい偶然だと思わない？", "I was looking through the inmate list of the experimental facility in Xana, and when reading all the names it became a sentence. Don't you think that's too much of a coincidence?")
 			}
 			if ( gdata(GDATA_MONTH) == 4 ) {
-				chatMore lang("中央神殿の神様はどれだけジュア狂なのかしら。目の前で癒しの女神に色々セクハラしようとしたけど、絶対に防衛されちゃうの。壁の向こうからでも察知して阻止するのよ？神様って怖い。", "Sorry, this is untranslated sentence.")
+				chatMore lang("中央神殿の神様はどれだけジュア狂なのかしら。目の前で癒しの女神に色々セクハラしようとしたけど、絶対に防衛されちゃうの。壁の向こうからでも察知して阻止するのよ？神様って怖い。", "I wonder how much the god of the central temple is crazy for Jure. I tried sexually harassing variously to the goddess of healing in front of my eyes, but she definitely will be defended. Do you sense it even from the other side of the wall and stop it? Scary...")
 			}
 			if ( gdata(GDATA_MONTH) == 5 ) {
-				chatMore lang("天使たちの中には輝く羽ペンを所持している者がいるけれど、特定の街や施設に滞在している天使は絶対に羽ペンを持っていないのよ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("天使たちの中には輝く羽ペンを所持している者がいるけれど、特定の街や施設に滞在している天使は絶対に羽ペンを持っていないのよ。", "Some angels have shining feather pens, but angels staying in certain towns and facilities have absolutely no feather pens.")
 			}
 			if ( gdata(GDATA_MONTH) == 6 ) {
-				chatMore lang("カードが欲しくて砂漠の塔にいた神様に喧嘩売ったら、戦闘中に不幸の日が訪れたの。慌てて逃げ出したけど、それからしばらく大変だったなぁ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("カードが欲しくて砂漠の塔にいた神様に喧嘩売ったら、戦闘中に不幸の日が訪れたの。慌てて逃げ出したけど、それからしばらく大変だったなぁ。", "When I sold a fight to a god who wanted a card and was in a desert tower, a day of unhappiness came during battle. I fled in a hurry, but then it was hard for a while.")
 			}
 			if ( gdata(GDATA_MONTH) == 7 ) {
-				chatMore lang("宇宙ミミズクは、撫でると気持ち悪いくらい喜ぶの。それも、仲が良くなれば良くなるほど激しくね…。", "Sorry, this is untranslated sentence.")
+				chatMore lang("宇宙ミミズクは、撫でると気持ち悪いくらい喜ぶの。それも、仲が良くなれば良くなるほど激しくね…。", "The cosmic earthworm is pleased when you stroke it. Even so, it gets stronger as we get along well.")
 			}
 			if ( gdata(GDATA_MONTH) == 8 ) {
-				chatMore lang("栗を粗末にした者の前に現れる巨人は、栗をぶつけると大怪我を負うみたい。私もぶつけてみたけどすっごく痛がってたよ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("栗を粗末にした者の前に現れる巨人は、栗をぶつけると大怪我を負うみたい。私もぶつけてみたけどすっごく痛がってたよ。", "A giant appearing in front of a person who made a poor chestnut seems to be seriously injured when hitting a chestnut. I also tried hitting it, but it was feeling very painful.")
 			}
 			if ( gdata(GDATA_MONTH) == 9 ) {
-				chatMore lang("錬金術士を名乗る人々は、栗を投げる際に必ず「うに」だと言い張るの。まぁだからと言って特に何か変わるわけでもないんだけど。", "Sorry, this is untranslated sentence.")
+				chatMore lang("錬金術士を名乗る人々は、栗を投げる際に必ず「うに」だと言い張るの。まぁだからと言って特に何か変わるわけでもないんだけど。", "People who call themselves an alchemist always insist that it is 'Uru' when throwing chestnuts. Well because it does not change something in particular.")
 			}
 			if ( gdata(GDATA_MONTH) == 10 ) {
-				chatMore lang("宇宙に思いを馳せている誰かさんは、実は裏で老若男女問わず靴下収集を行っているの。せっかくだから私も靴下をアイテムと交換してもらったわ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("宇宙に思いを馳せている誰かさんは、実は裏で老若男女問わず靴下収集を行っているの。せっかくだから私も靴下をアイテムと交換してもらったわ。", "Someone who is thinking of the universe is doing sox collection behind the scenes, regardless of age and sex. Because I was wrong, I also had my socks exchanged for items.")
 			}
 			if ( gdata(GDATA_MONTH) == 11 ) {
-				chatMore lang("丘の民の集落長は、あることないこと言いふらして気に入らない相手を社会的に抹殺しているの。４月馬鹿でもないのに不正確な情報をわざと流すなんて、情報屋として見過ごせないよ…！", "Sorry, this is untranslated sentence.")
+				chatMore lang("丘の民の集落長は、あることないこと言いふらして気に入らない相手を社会的に抹殺しているの。４月馬鹿でもないのに不正確な情報をわざと流すなんて、情報屋として見過ごせないよ…！", "The village chief of the people of the hill sacrificed sacrificing opponents who say that there is nothing to do and do not like them. April It is not stupid to pass information inaccurately on purpose, but you can not miss it as an information store...!")
 			}
 			if ( gdata(GDATA_MONTH) == 12 ) {
-				chatMore lang("この前ツアープランナーのお姉さんを見かけたんだけど、数日で街から去って行ったわ。ツアーの下準備で絶えずあちこちを回っているみたいだから、運がいいとキミも会えるかもね。", "Sorry, this is untranslated sentence.")
+				chatMore lang("この前ツアープランナーのお姉さんを見かけたんだけど、数日で街から去って行ったわ。ツアーの下準備で絶えずあちこちを回っているみたいだから、運がいいとキミも会えるかもね。", "I saw this older sister of the tour planner, but in a few days I left the town. It seems that he is constantly traveling around in preparation for the tour, so I guess I can meet you if I am lucky.")
 			}
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_MELUGAST_AO_I_THE_DIMENSION_DRIVER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) == 735 ) {
-				chatMore lang("どうだ、次元アンカーの威力は？物理的な力では絶対に抜け出せないぞ。", "Sorry, this is untranslated sentence.")
-				chatMore lang("こちらガベラだ。通信状況は良好のようだな。" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "、あの怪物がテスカトリポカなのか？", "Sorry, this is untranslated sentence.")
-				chatMore lang("えっ、違う？？まぁいい。ロスリアでの戦闘直後、急に心配になってな。こいつを飛ばして正解だった。", "Sorry, this is untranslated sentence.")
+				chatMore lang("どうだ、次元アンカーの威力は？物理的な力では絶対に抜け出せないぞ。", "How is the power of dimensional anchor? You absolutely can not escape with physical power.")
+				chatMore lang("こちらガベラだ。通信状況は良好のようだな。" + cdatan(CDATAN_NAME, CHARA_PLAYER) + "、あの怪物がテスカトリポカなのか？", "Gavela here. The communication situation seems to be good. " + cdatan(CDATAN_NAME, CHARA_PLAYER) + ", is that monster Tezcatlipoca?")
+				chatMore lang("えっ、違う？？まぁいい。ロスリアでの戦闘直後、急に心配になってな。こいつを飛ばして正解だった。", "Er, is not it? What? Well. I was suddenly worried right after battle in Rosuria. It was a correct answer by skipping this.")
 				chatList 1, lang("これなら勝てる！", "I appreciate it!")
 				chatList 2, lang("無理だ、下がれ！", "This place is dangerous!")
 				chatList 3, lang("A0-Iって何？", "What is A0-I?")
 				buff = lang("奴の移動は封じた。畳みかけるぞ！", "I sealed his movements. Interrogate him!")
 				gosub *chat_select
 				if ( chatval == 1 ) {
 					chatMore lang("ああ勝てるさ、俺たちなら！", "Yes, we can win!")
 				}
 				if ( chatval == 2 ) {
-					chatMore lang("無理だのなんだの言ってたら科学は進歩しないんだよ！", "Sorry, this is untranslated sentence.")
+					chatMore lang("無理だのなんだの言ってたら科学は進歩しないんだよ！", "Science does not progress if you say what you can do is impossible!")
 				}
 				if ( chatval == 3 ) {
-					chatMore lang("よくぞ聞いてくれた。次元歪曲ユニットは勿論、重射撃装備、電子戦装備、増加装甲、追加推進装置、さらに自律戦闘通信機の特殊電波システム、イェルス超重力砲の小型改良版…束縛の悪魔との交戦データを参考に理論化した次元アンカー！その全てのオプションを実装したメルガストがA0-Iだ。これだけの同時装備を可能にしたのは生体ハードポイント理論からのデータ逆輸入によるところが大きく、俺の技術の集大成とも言える存在で特筆すべきは…おっと、解説している場合ではないな。", "Sorry, this is untranslated sentence.")
+					chatMore lang("よくぞ聞いてくれた。次元歪曲ユニットは勿論、重射撃装備、電子戦装備、増加装甲、追加推進装置、さらに自律戦闘通信機の特殊電波システム、イェルス超重力砲の小型改良版…束縛の悪魔との交戦データを参考に理論化した次元アンカー！その全てのオプションを実装したメルガストがA0-Iだ。これだけの同時装備を可能にしたのは生体ハードポイント理論からのデータ逆輸入によるところが大きく、俺の技術の集大成とも言える存在で特筆すべきは…おっと、解説している場合ではないな。", "I heard it often. As well as the dimensional distortion unit, the heavy shooting equipment, the electronic warfare equipment, the additional armor, the additional propulsion device, the special radio wave system of the autonomous fighter communication machine, the small improved version of the Yerles super gravity cannon... with reference to the battle data with the demon of the bondage Theorized dimension anchor! Melugast that implements all its options is A0-I. The only thing that enabled this simultaneous equipments is the fact that data reintroduction from the biological hard point theory is large and it can be said that it is a culmination of my skills... oops, it is not the case when commenting.")
 				}
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 745 ) {
 				chatMore lang("しぶといやつだな…。完全に無力化するのは難しいかもしれん。", "Pretty stubborn, huh?... Might prove difficult to perfectly disable it.")
@@ -10816,46 +10816,46 @@
 			chatMore lang("ラーネイレ…。", "Larnneire...")
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) == 725 ) {
-				chatMore lang("ふと胸騒ぎがして降りてみたが、まさか目と鼻の先にあったとは。60層はあるものだと思っていた。", "Sorry, this is untranslated sentence.")
+				chatMore lang("ふと胸騒ぎがして降りてみたが、まさか目と鼻の先にあったとは。60層はあるものだと思っていた。", "I suddenly cried and fell down, but it was never to be said that it was at the other end. I thought that there were 60 layers.")
 				chatList 1, lang("助かる！", "I appreciate it!")
 				chatList 2, lang("危ないよ！", "This place is dangerous!")
 				chatList 3, lang("ラーネイレたちが探していたよ", "Larnneire was looking for you.")
-				buff = lang("…あれが噂に聞く混沌の神か？" + cdatan(CDATAN_AKA, CHARA_PLAYER) + "、加勢するぞ。", "Sorry, this is untranslated sentence.")
+				buff = lang("…あれが噂に聞く混沌の神か？" + cdatan(CDATAN_AKA, CHARA_PLAYER) + "、加勢するぞ。", "...Is that a chaotic god that hears rumors? " + cdatan(CDATAN_AKA, CHARA_PLAYER) + ", I will do it.")
 				gosub *chat_select
 				if ( chatval == 1 ) {
-					chatMore lang("猫の手ならぬ、鷹の翼も借りたい、といったところか。", "Sorry, this is untranslated sentence.")
+					chatMore lang("猫の手ならぬ、鷹の翼も借りたい、といったところか。", "Is not it the hand of a cat, or I want to borrow the wings of a hawk?")
 				}
 				if ( chatval == 2 ) {
-					chatMore lang("ふっ…危険は承知の上だ。私も今や冒険者の端くれだからな。", "Sorry, this is untranslated sentence.")
+					chatMore lang("ふっ…危険は承知の上だ。私も今や冒険者の端くれだからな。", "Pretending... I am aware of the danger. I am an adversary nowadays.")
 				}
 				if ( chatval == 3 ) {
-					chatMore lang("ラーネイレが？彼女には悪いが、こいつを片づけるまで辛抱してもらう！", "Sorry, this is untranslated sentence.")
+					chatMore lang("ラーネイレが？彼女には悪いが、こいつを片づけるまで辛抱してもらう！", "Larnneire? It's bad for her, but have her persevere until she cleanses her!")
 				}
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 735 ) {
-				chatMore lang("今、奴が何かに拘束されたように見えたが…。", "Sorry, this is untranslated sentence.")
+				chatMore lang("今、奴が何かに拘束されたように見えたが…。", "Now it seemed that he was detained by something...")
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 745 ) {
-				chatMore lang("いくら移動を封じたとはいえ、倒せないのでは…。", "Sorry, this is untranslated sentence.")
+				chatMore lang("いくら移動を封じたとはいえ、倒せないのでは…。", "No matter how much you have sealed the move, you can not defeat it...")
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 755 ) {
-				chatMore lang("あれが凶獣の能力か…。人間が受けたら即座に廃人だな。", "Sorry, this is untranslated sentence.")
+				chatMore lang("あれが凶獣の能力か…。人間が受けたら即座に廃人だな。", "Is that the ability of a mortal beast...? As a human being receives it is instantly a scrap.")
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) >= 660 ) {
-				chatMore lang("神の間、決戦因子、か。どうにも胡散臭いものを感じる。進むのをためらうほどにな。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("神の間、決戦因子、か。どうにも胡散臭いものを感じる。進むのをためらうほどにな。", "Among gods, a battle factor? Something stinks. I hesitate to go forward."), strbye
 				goto *chat_end
 			}
 			else {
-				chatMore lang("君は…ひょっとして" + cdatan(CDATAN_AKA, CHARA_PLAYER) + "か？こんなところで知り合いに会うとは奇遇だな。", "Sorry, this is untranslated sentence.")
-				chatMore lang("せめて昔の勘を取り戻すまで、私はこの階層で鍛錬するつもりだ。今でも力不足を感じるのに、あと何層あるのかわかったものじゃないからな。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("君は…ひょっとして" + cdatan(CDATAN_AKA, CHARA_PLAYER) + "か？こんなところで知り合いに会うとは奇遇だな。", "Are you... ...perhaps "+ cdatan (CDATAN_AKA, CHARA_PLAYER) +"? It is strange to see acquaintances in such places.")
+				chatMore lang("せめて昔の勘を取り戻すまで、私はこの階層で鍛錬するつもりだ。今でも力不足を感じるのに、あと何層あるのかわかったものじゃないからな。", "I will train in this level until I regain at least my old intuition. Even now I still feel insufficient but I do not know how many more are there."), strbye
 				gdata(GDATA_FLAG_MAIN) = 660
 				goto *chat_end
 			}
 		}
 		goto *chat_end
@@ -10868,45 +10868,56 @@
 		chatList 3, lang("旅に出る前のこと", "Memory of before leaving on a journey.")
 		chatList 4, lang("善の心・悪の心", "Conscience and malice.")
 		chatList 5, lang("仲間との関係", "Relationship with ally.")
 		chatList 6, lang("自分の技術と経験", "My skills and experience.")
 		chatList 7, lang("仲間の技術と経験", "Ally skills and experience.")
-		chatList 8, lang("仲間の営業技術", "Ally business feats.")
+		chatList 8, lang("仲間の営業技術", "Ally shopkeeper feats.")
 		chatList 9, lang("生きている武器の能力と経験", "Memory of living weapon.")
+		if ( adata(ADATA_DEEPEST, AREA_VOID) > adata(ADATA_MIN_LEVEL, AREA_VOID) ) {
+			chatList 10, lang("すくつ制覇数", "Void depth reached.")
+		}
 		buff = lang("さぁ、消したい記憶のことだけ念じるのです。貴方の頭からも、この世界からも、痕跡を残さず綺麗に消してあげましょう。", "Think the only thing of memory you want to erase. Also from your head, even from this world, I will clean off without leaving a trace.")
 		gosub *chat_select
 		if ( chatval >= 1 & chatval <= 4 ) {
 			snd SOUNDLIST_CURSE2
 		}
 		if ( chatval == 1 ) {
 			snd SOUNDLIST_WRITE1
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata189の値が初期化されました。再計算を行います…。", "[System]By unknown error, globaldata189 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata189の値が初期化されました。再計算を行います…。", "[System]By unknown error, GDATA_DEEPEST_LEVEL has been initialized.")
 			gdata(GDATA_DEEPEST_LEVEL) = gdata(GDATA_FLAG_MAIN) * 1 / 4 + 1
 			txt_questupdate
 			dmgsan CHARA_PLAYER, 100
 			chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 			autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
 		}
 		if ( chatval == 2 ) {
 			snd SOUNDLIST_WRITE1
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata263の値が初期化されました。", "[System]By unknown error, globaldata263 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata128の値が初期化されました。", "[System]By unknown error, GDATA_RANK_GUILD has been initialized.")
+			txtef COLOR_RED
+			txt lang("[システム]原因不明のエラーによりglobaldata265の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_GUILD_THIEF has been initialized.")
+			txtef COLOR_RED
+			txt lang("[システム]原因不明のエラーによりglobaldata264の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_GUILD_FIGHTER has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata264の値が初期化されました。", "[System]By unknown error, globaldata264 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata263の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_GUILD_MAGE has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata265の値が初期化されました。", "[System]By unknown error, globaldata265 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata266の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_GUILD_MAGE_NORMA has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata266の値が初期化されました。", "[System]By unknown error, globaldata266 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata269の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_GUILD_THIEF_NORMA has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata269の値が初期化されました。", "[System]By unknown error, globaldata269 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata466の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_SUB_GUILD_MAGE has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata469の値が初期化されました。", "[System]By unknown error, globaldata469 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata468の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_SUB_GUILD_THIEF has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata470の値が初期化されました。", "[System]By unknown error, globaldata470 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata467の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_SUB_GUILD_FIGHTER has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaldata128の値が初期化されました。", "[System]By unknown error, globaldata128 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaldata470の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_SUB_FIGHTER_1 has been initialized.")
+			txtef COLOR_RED
+			txt lang("[システム]原因不明のエラーによりglobaldata469の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_SUB_MAGE_1 has been initialized.")
+			txtef COLOR_RED
+			txt lang("[システム]原因不明のエラーによりglobaldata471の値が初期化されました。", "[System]By unknown error, GDATA_FLAG_SUB_THIEF_1 has been initialized.")
 			gdata(GDATA_RANK_GUILD) = 1000000
 			gdata(GDATA_FLAG_GUILD_THIEF) = 0
 			gdata(GDATA_FLAG_GUILD_FIGHTER) = 0
 			gdata(GDATA_FLAG_GUILD_MAGE) = 0
 			gdata(GDATA_FLAG_GUILD_MAGE_NORMA) = 0
@@ -10922,25 +10933,25 @@
 			chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 			autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
 		}
 		if ( chatval == 3 ) {
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobalpcdata161の値が初期化されました。", "[System]By unknown error, globalpcdata161 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobalpcdata161の値が初期化されました。", "[System]By unknown error, CDATA_BACKGROUND_PART_A1 has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobalpcdata162の値が初期化されました。", "[System]By unknown error, globalpcdata162 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobalpcdata162の値が初期化されました。", "[System]By unknown error, CDATA_BACKGROUND_PART_A2 has been initialized.")
 			cdata(CDATA_BACKGROUND_PART_A1, CHARA_PLAYER) = 5
 			cdata(CDATA_BACKGROUND_PART_A2, CHARA_PLAYER) = 29
 			dmgsan CHARA_PLAYER, 100
 			chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 			autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
 		}
 		if ( chatval == 4 ) {
 			snd SOUNDLIST_WRITE1
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaltrait162の値が初期化されました。", "[System]By unknown error, globaltdata162 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaltrait162の値が初期化されました。", "[System]By unknown error, TRAIT_OTHER_WICKED has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobaltrait169の値が初期化されました。", "[System]By unknown error, globaltdata169 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobaltrait169の値が初期化されました。", "[System]By unknown error, TRAIT_OTHER_SAINT has been initialized.")
 			trait(TRAIT_OTHER_WICKED) = 0
 			trait(TRAIT_OTHER_SAINT) = 0
 			dmgsan CHARA_PLAYER, 100
 			chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 			autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
@@ -10950,37 +10961,43 @@
 			gosub *com_ally
 			if ( stat != (-1) ) {
 				rc = stat
 				snd SOUNDLIST_CURSE2
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalrcdata17の値が初期化されました。", "[System]By unknown error, globalrdata17 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcdata17の値が初期化されました。", "[System]By unknown error, CDATA_IMPRESSION has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalrcdata169の値が初期化されました。", "[System]By unknown error, globalrdata169 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcdata169の値が初期化されました。", "[System]By unknown error, CDATA_MASTER_SERVANT has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalrcbit961が削除されました。", "[System]By unknown error, globalbdata961 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcbit961が削除されました。", "[System]By unknown error, CHARA_BIT_MARRIED has been initialized.")
 				cdata(CDATA_IMPRESSION, rc) = 50
 				cdata(CDATA_MASTER_SERVANT, rc) = 50
 				cbitmod CHARA_BIT_MARRIED, rc, 0
 				if ( cdata(CDATA_EXIST, rc) == CHAR_STATE_ALIVE ) {
 					txtef COLOR_PURPLE
-					txt lang(name(rc) + "は、初めて会ったような顔であなたを見ている…。", name(tc) + " is looking at you for the first time met such a face...")
+					txt lang(name(rc) + "は、初めて会ったような顔であなたを見ている…。", name(tc) + " is looking at you as if you'd never met before...")
 				}
 				dmgsan CHARA_PLAYER, 100
 				chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 				autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
 			}
 		}
 		if ( chatval == 6 ) {
 			snd SOUNDLIST_CURSE2
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobalpcdata198の値が再計算されました。", "[System]By unknown error, globaltdata162 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobalpcdata198の値が再計算されました。", "[System]By unknown error, CDATA_INIT_ATTR has been initialized.")
 			txtef COLOR_RED
-			txt lang("[システム]原因不明のエラーによりglobalpcdata199の値が再計算されました。", "[System]By unknown error, globaltdata169 has been initialized.")
+			txt lang("[システム]原因不明のエラーによりglobalpcdata199の値が再計算されました。", "[System]By unknown error, CDATA_INIT_SPEED has been initialized.")
 			r1 = CHARA_PLAYER
 			gosub *calcMaileINITService
 			cdata(CDATA_INIT_ATTR, CHARA_PLAYER) = sorg(SKILL_ATTR_STR, CHARA_PLAYER) + sorg(SKILL_ATTR_CON, CHARA_PLAYER) + sorg(SKILL_ATTR_DEX, CHARA_PLAYER) + sorg(SKILL_ATTR_PER, CHARA_PLAYER) + sorg(SKILL_ATTR_LER, CHARA_PLAYER) + sorg(SKILL_ATTR_WIL, CHARA_PLAYER) + sorg(SKILL_ATTR_MAG, CHARA_PLAYER) + sorg(SKILL_ATTR_CHA, CHARA_PLAYER)
 			cdata(CDATA_INIT_SPEED, CHARA_PLAYER) = sorg(SKILL_ATTR_SPD, CHARA_PLAYER)
+			if ( cdata(CDATA_LEVEL, CHARA_PLAYER) >= 10 ) {
+				cdata(CDATA_LEVEL, CHARA_PLAYER) = limit(cdata(CDATA_LEVEL, CHARA_PLAYER) / 2, 10, 9999999)
+				cdata(CDATA_EXP, CHARA_PLAYER) = 0
+				r1 = CHARA_PLAYER
+				gosub *calcExpToNextLevel
+			}
 			r1 = CHARA_PLAYER
 			gosub *charaRefresh
 			dmgsan CHARA_PLAYER, 100
 			chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 		}
@@ -10989,17 +11006,23 @@
 			gosub *com_ally
 			if ( stat != (-1) ) {
 				rc = stat
 				snd SOUNDLIST_CURSE2
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalcdata198の値が再計算されました。", "[System]By unknown error, globaltdata162 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalcdata198の値が再計算されました。", "[System]By unknown error, CDATA_INIT_ATTR has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalcdata199の値が再計算されました。", "[System]By unknown error, globaltdata169 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalcdata199の値が再計算されました。", "[System]By unknown error, CDATA_INIT_SPEED has been initialized.")
 				r1 = rc
 				gosub *calcMaileINITService
 				cdata(CDATA_INIT_ATTR, rc) = sorg(SKILL_ATTR_STR, rc) + sorg(SKILL_ATTR_CON, rc) + sorg(SKILL_ATTR_DEX, rc) + sorg(SKILL_ATTR_PER, rc) + sorg(SKILL_ATTR_LER, rc) + sorg(SKILL_ATTR_WIL, rc) + sorg(SKILL_ATTR_MAG, rc) + sorg(SKILL_ATTR_CHA, rc)
 				cdata(CDATA_INIT_SPEED, rc) = sorg(SKILL_ATTR_SPD, rc)
+				if ( cdata(CDATA_LEVEL, rc) >= 10 ) {
+					cdata(CDATA_LEVEL, rc) = limit(cdata(CDATA_LEVEL, rc) / 2, 10, 9999999)
+					cdata(CDATA_EXP, rc) = 0
+					r1 = rc
+					gosub *calcExpToNextLevel
+				}
 				r1 = rc
 				gosub *charaRefresh
 				dmgsan rc, 100
 				chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 			}
@@ -11009,19 +11032,21 @@
 			gosub *com_ally
 			if ( stat != (-1) ) {
 				rc = stat
 				snd SOUNDLIST_CURSE2
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalcdata989の値が初期化されました。", "[System]By unknown error, globalrdata989 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcbit1020の値が初期化されました。", "[System]By unknown error, CHARA_BIT_SHOP_ELEGANCE has been initialized.")
+				txtef COLOR_RED
+				txt lang("[システム]原因不明のエラーによりglobalrcbit1021の値が初期化されました。", "[System]By unknown error, CHARA_BIT_SHOP_AESTHETIC_SENSE has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalcdata990の値が初期化されました。", "[System]By unknown error, globalrdata990 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcbit1022の値が初期化されました。", "[System]By unknown error, CHARA_BIT_SHOP_SALES_ROUTE has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalcdata991の値が初期化されました。", "[System]By unknown error, globalrdata991 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcbit1023の値が初期化されました。", "[System]By unknown error, CHARA_BIT_SHOP_STRONG_ALLY has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalcdata992の値が初期化されました。", "[System]By unknown error, globalrdata993 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcbit1024の値が初期化されました。", "[System]By unknown error, CHARA_BIT_SHOP_BUSINESS_SMILE has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalcdata994の値が初期化されました。", "[System]By unknown error, globalrdata994 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalrcdata440の値が初期化されました。", "[System]By unknown error, CDATA_SALES_FEATS has been initialized.")
 				if ( cbit(CHARA_BIT_SHOP_ELEGANCE, rc) ) {
 					skillmod SKILL_ATTR_CHA, rc, -30000
 				}
 				cbitmod CHARA_BIT_SHOP_ELEGANCE, rc, 0
 				cbitmod CHARA_BIT_SHOP_AESTHETIC_SENSE, rc, 0
@@ -11047,13 +11072,13 @@
 				f = 0
 			}
 			if ( f == 1 ) {
 				snd SOUNDLIST_CURSE2
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalinvdata25の値が初期化されました。", "[System]By unknown error, globalinvdata25 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalinvdata26の値が初期化されました。", "[System]By unknown error, INV_ITEM_EXP has been initialized.")
 				txtef COLOR_RED
-				txt lang("[システム]原因不明のエラーによりglobalinvdata26の値が初期化されました。", "[System]By unknown error, globalinvdata26 has been initialized.")
+				txt lang("[システム]原因不明のエラーによりglobalinvdata25の値が初期化されました。", "[System]By unknown error, INV_ITEM_GROWTH has been initialized.")
 				inv(INV_ITEM_EXP, ci) = 0
 				inv(INV_ITEM_GROWTH, ci) = 1
 				if ( inv(INV_ITEM_LEVEL, ci) > 0 ) {
 					inv(INV_ITEM_LEVEL, ci) = 0
 				}
@@ -11064,41 +11089,56 @@
 				r1 = CHARA_PLAYER
 				gosub *charaRefresh
 				chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
 			}
 		}
+		if ( chatval == 10 ) {
+			snd SOUNDLIST_CURSE2
+			txtef COLOR_RED
+			txt lang("[システム]原因不明のエラーによりglobaladata42の値が初期化されました。再計算を行います…。", "[System]By unknown error, AREA_VOID has been initialized.")
+			txtef COLOR_RED
+			txt lang("[システム]原因不明のエラーによりglobaladata42の値が初期化されました。再計算を行います…。", "[System]By unknown error, GDATA_VOID_BOSS has been initialized.")
+			adata(ADATA_DEEPEST, AREA_VOID) = adata(ADATA_MIN_LEVEL, AREA_VOID)
+			gdata(GDATA_VOID_BOSS) = 0
+			snd SOUNDLIST_WRITE1
+			txtef COLOR_GREEN
+			txt_questupdate
+			dmgsan CHARA_PLAYER, 100
+			chatMore lang("これで、またひとつ…。", "With this, I'm one step closer...")
+			autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
+		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_HALION_THE_EXTREMIST | _switch_sw ) {
 		_switch_sw = 0
 		kaiwa = rnd(5)
 		if ( kaiwa == 0 ) {
-			chatMore lang("旅の途中、「憎しみの連鎖を断つために、何をされてもやり返さずに許しなさい」とかしつこく説教してくる善人がいてな。頭にきて小石を投げつけたら、罵倒されまくった挙句ガードを呼ばれたんだが、これは一体どういうことなんだ。全然許されなかったんだが。", "Huh."), strbye
+			chatMore lang("旅の途中、「憎しみの連鎖を断つために、何をされてもやり返さずに許しなさい」とかしつこく説教してくる善人がいてな。頭にきて小石を投げつけたら、罵倒されまくった挙句ガードを呼ばれたんだが、これは一体どういうことなんだ。全然許されなかったんだが。", "There is a good man preaching persistently, such as \"Please forgive without refusing anything in order to break the chain of hatred\" during the trip. When I came to the head and threw a pebble, I was called a bad guard that was abused and it is what it is all about. I was not allowed at all."), strbye
 		}
 		if ( kaiwa == 1 ) {
-			chatMore lang("実を言えば、俺は森が災厄の根源という説を最初は信じていた。エーテルの風が病を招くのも事実だったからだ。ならば森に住む我々が迫害されるのも仕方がないと思い、理不尽な仕打ちにも耐えてきた。ずっと、ずっとな。だからこそ真相を知った時…エレアを悪者にするために流されたデマだと知った時、俺ははらわたが煮えくり返る思いだった…！", "Woah!"), strbye
+			chatMore lang("実を言えば、俺は森が災厄の根源という説を最初は信じていた。エーテルの風が病を招くのも事実だったからだ。ならば森に住む我々が迫害されるのも仕方がないと思い、理不尽な仕打ちにも耐えてきた。ずっと、ずっとな。だからこそ真相を知った時…エレアを悪者にするために流されたデマだと知った時、俺ははらわたが煮えくり返る思いだった…！", "To tell the truth, I believed at first the theory that the forest was the root of disaster. It was because the Etherwind brought about illness. Then, I thought that it would be unavoidable for us to be persecuted in the forest, and we endured unreasonable work. Always, forever. That's why when I learned the truth... When I learned that it was a hoax that was spread to make the Elea out to be evil, my blood boiled...!"), strbye
 		}
 		if ( kaiwa == 2 ) {
-			chatMore lang("「来る者は拒まず」と言うが、何も考えずに受け入れるというのも考え物だな…。規模が大きくなりすぎて、構成員ひとりひとりの実態が把握できたもんじゃない。", "Sorry, this is untranslated sentence."), strbye
+			chatMore lang("「来る者は拒まず」と言うが、何も考えずに受け入れるというのも考え物だな…。規模が大きくなりすぎて、構成員ひとりひとりの実態が把握できたもんじゃない。", "\"Whoever comes, do not refuse\", but it is also an idea to accept without thinking anything... The scale became too large, I could not grasp the actual condition of each member."), strbye
 		}
 		if ( kaiwa == 3 ) {
-			chatMore lang("決起を始めた頃、罪悪感や同情から支援を申し出てくる者はそれなりにいたんだ。世間では我関せずといった態度の者が多かったが、支援者も一定数いるということを知って俺は感動した！まぁ、台無しになったけどな…。", "Sorry, this is untranslated sentence."), strbye
+			chatMore lang("決起を始めた頃、罪悪感や同情から支援を申し出てくる者はそれなりにいたんだ。世間では我関せずといった態度の者が多かったが、支援者も一定数いるということを知って俺は感動した！まぁ、台無しになったけどな…。", "Around that time, those who offered support from guilt and sympathy were as it was. Many were attitudes such as not being involved in the world, but I was touched knowing that there are also a certain number of supporters! Well, I got ruined..."), strbye
 		}
 		if ( kaiwa == 4 ) {
-			chatMore lang("このルオザは、戦争で火をつけられて滅んだ土地らしいな。親近感がないとは言わないが、エレアは別にザナンと戦争をしていたわけではないからな…。殴り合って怪我するのと、一方的に殴られて怪我するくらいの違いがあるぞ。", "Sorry, this is untranslated sentence."), strbye
+			chatMore lang("このルオザは、戦争で火をつけられて滅んだ土地らしいな。親近感がないとは言わないが、エレアは別にザナンと戦争をしていたわけではないからな…。殴り合って怪我するのと、一方的に殴られて怪我するくらいの違いがあるぞ。", "This Luoza seems to be a land that was destroyed by the war in the fire. I do not say that there is no sense of affinity, but Elea does not have war with Zanan separately... There is a difference between hitting injuries and injuring one-sidedly."), strbye
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_SHURAIDA_THE_EXPERT_MERC | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) >= 610 ) {
-				chatMore lang("これ以上の階層は正直厳しい。もう少し探索したら我々は撤退する予定だ。", "Huh."), strbye
+				chatMore lang("これ以上の階層は正直厳しい。もう少し探索したら我々は撤退する予定だ。", "The hierarchy above this level is honest. We will withdraw as we explore a little more."), strbye
 				goto *chat_end
 			}
 			if ( gdata(GDATA_FLAG_MAIN) == 605 ) {
-				chatMore lang("お前は…よくここまで来れたな。こちらは特に腕の立つメンバーを揃えてきたが、火力が全く足りない。ボランティアで、報酬も出ないので金も足りない。", "Huh."), strbye
+				chatMore lang("お前は…よくここまで来れたな。こちらは特に腕の立つメンバーを揃えてきたが、火力が全く足りない。ボランティアで、報酬も出ないので金も足りない。", "You... well you came here. I gathered members with particularly good arm, but the fire power is not enough at all. Volunteers, no compensation and no money."), strbye
 				gdata(GDATA_FLAG_MAIN) = 610
 				goto *chat_end
 			}
 			goto *chat_end
 		}
@@ -11191,31 +11231,31 @@
 			chatMore lang("10万ぽっちも持っていないんですかぁ…。特に喋ることはないです。", "You don't even have 100,000gp... I have no business with you.")
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_WAR_GROUND ) {
 			if ( gdata(GDATA_FLAG_SUB_MANYTIA_THE_ADVENTURE_MERCHANT) == 3 ) {
-				chatMore lang("「昔々、ネフィアが生まれるよりも昔のお話。神々は戦争でマナが乱れた大陸を、危険なのでイルヴァから隔離し結界を張ることにしました」", "Sorry, this is untranslated sentence.")
-				chatMore lang("「神々は大陸に住んでいた人々に移住を勧め、ほとんどの人がそれに従いました。しかし、丘の民は違いました。愛着のある丘に断固として残ろうとする者と、惜しみながらも丘を離れようとする者にわかれたのです」", "Sorry, this is untranslated sentence.")
-				chatMore lang("「争いと迷いの末に、私達のご先祖様は新たな技術と素材を求め別大陸に渡ることを選びました。別大陸に渡ったご先祖様が後ろを振り返ると、大陸が光に包まれて空へと昇っていくところでした」", "Sorry, this is untranslated sentence.")
-				chatMore lang("「あなたが空を見上げたなら思い出しなさい。あの空のどこかに始まりの丘…ルストールがあり、今もなお丘の民がそこで暮らしているかもしれないことを」", "Sorry, this is untranslated sentence.")
-				chatMore lang("…伝説どおりだったとは思いませんでしたぁ。ロストイルヴァは本当にあったんだ！ルストールもまだ残っているんですかねぇ？", "Sorry, this is untranslated sentence.")
+				chatMore lang("「昔々、ネフィアが生まれるよりも昔のお話。神々は戦争でマナが乱れた大陸を、危険なのでイルヴァから隔離し結界を張ることにしました」", "\"Once upon a time, before Nefia was born, the gods decided to isolate the continent where Mana was disarranged from war, isolating it from Irva and setting a barrier.\"")
+				chatMore lang("「神々は大陸に住んでいた人々に移住を勧め、ほとんどの人がそれに従いました。しかし、丘の民は違いました。愛着のある丘に断固として残ろうとする者と、惜しみながらも丘を離れようとする者にわかれたのです」", "\"The gods encouraged people who lived in the continent, most people followed it, but the people of the hills were different, those who tried to remain firm in the attaching hills, and regrettably hills He was divided into those who tried to leave.\"")
+				chatMore lang("「争いと迷いの末に、私達のご先祖様は新たな技術と素材を求め別大陸に渡ることを選びました。別大陸に渡ったご先祖様が後ろを振り返ると、大陸が光に包まれて空へと昇っていくところでした」", "\"At the end of the conflict and hesitation, our ancestors chose to cross the continent seeking new technologies and materials. When the ancestors who crossed to another continent looked back, the continent was surrounded by light and ascending to the sky.\"")
+				chatMore lang("「あなたが空を見上げたなら思い出しなさい。あの空のどこかに始まりの丘…ルストールがあり、今もなお丘の民がそこで暮らしているかもしれないことを」", "\"Remember if you looked up at the sky, a hill starting somewhere in that sky... that there is Rust Plaza and the people of the hill may still be living there.\"")
+				chatMore lang("…伝説どおりだったとは思いませんでしたぁ。ロストイルヴァは本当にあったんだ！ルストールもまだ残っているんですかねぇ？", "...I did not think that it was as legend. Lost Irva was really there! Do you still have Rust Plaza?")
 				gdata(GDATA_FLAG_SUB_MANYTIA_THE_ADVENTURE_MERCHANT) = 4
 				goto *chat_end
 			}
-			chatList 0, lang("別に…", "Nothing in particular...")
+			chatList 0, lang("別に…", "Not especially...")
 			chatList 1, lang("機械のマニ", "Mani of Machine")
 			chatList 2, lang("風のルルウィ", "Lulwy of Wind")
 			chatList 3, lang("元素のイツパロトル", "Itzpalt of Element")
 			chatList 4, lang("幸運のエヘカトル", "Ehekatl of Luck")
 			chatList 5, lang("地のオパートス", "Opatos of Earth")
 			chatList 6, lang("癒しのジュア", "Jure of Healing")
 			chatList 7, lang("収穫のクミロミ", "Kumiromi of Harvest")
 			chatList 8, lang("富のヤカテクト", "Yacatect of Wealth")
-			buff = lang("各神のグッズはいかがですかぁ？どれも１０万ポッキリ！お得ですよぉ。", "Sorry, this is untranslated sentence.")
+			buff = lang("各神のグッズはいかがですかぁ？どれも１０万ポッキリ！お得ですよぉ。", "How about each god's goods? Only 100,000 each! It is profitable.")
 			gosub *chat_select
 			if ( chatval == 0 ) {
-				chatMore lang("またまたぁ…そんなつれないこと言っちゃってぇ。余ってるでしょう？お金。", "Sorry, this is untranslated sentence.")
+				chatMore lang("またまたぁ…そんなつれないこと言っちゃってぇ。余ってるでしょう？お金。", "Again... Ah... I said such a thing that can not be done. You have surplus, right? money.")
 				goto *chat_end
 			}
 			if ( chatval > 0 ) {
 				dbid = 0
 				if ( chatval == 1 ) {
@@ -11262,11 +11302,11 @@
 					goto *chat_end
 				}
 			}
 			if ( gdata(GDATA_FLAG_MAIN) >= 560 ) {
 				if ( gdata(GDATA_FLAG_SUB_MANYTIA_THE_ADVENTURE_MERCHANT) < 3 ) {
-					chatList 0, lang("別に…", "Nothing in particular...")
+					chatList 0, lang("別に…", "Not especially...")
 					chatList 1, lang("もう片方も買いたい(99999gp)", "I want the other goods (99999gp)")
 					buff = lang("うん？まだ何か御用ですかぁ？", "Yeah? Do you still need something?")
 					gosub *chat_select
 					if ( chatval == 1 ) {
 						if ( gdata(GDATA_FLAG_SUB_MANYTIA_THE_ADVENTURE_MERCHANT) == 2 ) {
@@ -11328,11 +11368,11 @@
 				chatList 2, lang("メンテナンス用品詰め合わせ(99999gp)", "Maintenance assortment (99999gp)")
 				chatList 3, lang("殺してでもカギを奪い取る", "I'll take the key from your dead body.")
 				buff = lang("さぁ、カギが欲しければ商品を買っていくしかないですよぉ。", "Well then, if you want the key there's no choice but to buy the goods.")
 				gosub *chat_select
 				if ( chatval == 3 ) {
-					chatMore lang("殺されてでもカギは落とさないですねぇ。ちゃんと四次元ポケットに入れてるので。", "Even if you manage to kill me, I will not drop the key. The key is inside a 4-Dimensional Pocket.")
+					chatMore lang("殺されてでもカギは落とさないですねぇ。ちゃんと四次元ポケットに入れてるので。", "Even if you manage to kill me, I will not drop it. The key is inside a 4-Dimensional Pocket.")
 					goto *chat_end
 				}
 				if ( chatval == 1 | chatval == 2 ) {
 					if ( chatval == 1 ) {
 						flt
@@ -11386,11 +11426,11 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_GUARDIAN_SHRINE ) {
-			chatMore lang("父上は救助できましたが、身体を張って私を先に行かせた部下たちは、きっともう…。", "Sorry, this is untranslated sentence.")
+			chatMore lang("父上は救助できましたが、身体を張って私を先に行かせた部下たちは、きっともう…。", "My father could rescue, but my men who have stretched their body and made me go first, surely already...")
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_AMUR_CAGE ) {
 			if ( gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_34) == 0 ) {
 				chatMore lang("父上…どこですか父上…。", "Father... Father where are you...")
@@ -11401,29 +11441,29 @@
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 			if ( gdata(GDATA_FLAG_MAIN) == 575 | gdata(GDATA_FLAG_MAIN) == 580 | gdata(GDATA_FLAG_MAIN) == 585 ) {
 				chatMore lang("そこの冒険者、止まってください。", "Hey you, adventurer, please stop.")
-				chatList 0, lang("はく製を置いてこの世を去りなさい", "Sorry, this is untranslated sentence.")
+				chatList 0, lang("はく製を置いてこの世を去りなさい", "Please leave this world at a stuffed")
 				chatList 1, lang("嫌でも通してもらおう", "Even if it's unpleasant let's pass through.")
 				chatList 2, lang("靴下くれないと暴れるよ", "If you don't give me a pair of socks I'll get mad!")
 				chatList 3, lang("話せばわかる！", "I get it!")
 				buff = lang("見てのとおり、ここは現在我々が占拠しています。速やかに武器を置いてこの階を去りなさい。", "As you can see, we now occupy this place. Put down your weapons and leave this place at once.")
 				chatesc = 0
 				gosub *chat_select
 				if ( chatval == 2 ) {
 					chatMore lang("！？貴方もですか…。", "Not you too!?")
 				}
 				if ( chatval >= 0 & chatval <= 2 ) {
-					chatMore lang("我々が消耗しているとでも思っているのでしょうが…我々は物資を獲得したことにより、戦闘可能な状態に回復しています。一介の冒険者など敵ではありません。", "Sorry, this is untranslated sentence.")
+					chatMore lang("我々が消耗しているとでも思っているのでしょうが…我々は物資を獲得したことにより、戦闘可能な状態に回復しています。一介の冒険者など敵ではありません。", "I guess we are thinking that they are exhausted... We have recovered to a state where combat is possible by acquiring goods. It is not an enemy like an adventurer.")
 				}
 				if ( chatval == 3 ) {
 					chatMore lang("警告はしました。これ以上の問答は無用です。", "I warned you. Any further dialogue is useless.")
 				}
 				gdata(GDATA_FLAG_MAIN) = 590
 				txt lang(cdatan(CDATAN_NAME, tc) + "は自らにも言い聞かせるように叫んだ。", cdatan(CDATAN_NAME, tc) + " shouted as to remind herself.")
-				txt lang("「総員、防衛を開始せよ！我々の使命を果たすため、その者を通すな。身体の動く限り戦いなさい！」", "Sorry, this is untranslated sentence.")
+				txt lang("「総員、防衛を開始せよ！我々の使命を果たすため、その者を通すな。身体の動く限り戦いなさい！」", "\"All, start defense! To fulfill our mission, do not pass that person, fight as long as the body moves!\"")
 				snd SOUNDLIST_CHEER
 				repeat MAX_CHARA_TOTAL
 					if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 						continue
 					}
@@ -11449,12 +11489,12 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_ZISILION_THE_MINE_KING | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(STARTING_GDATA_FLAG + 326) == 1 ) {
-			chatMore lang("君、働いてるねぇ。僕は労働って素晴らしいと思うんだ。生活費を得られ、社会にも貢献できる…社会的生物として、「適度な」労働は喜ばしいものなんだ。僕はすでに一財産稼いでしまって、今さら労働する気になれないけどね…。", "Sorry, this is untranslated sentence.")
-			chatMore lang("そんな僕にもささやかな楽しみがあってね。ここに立って関所を行き来する人々を眺め、その中でも頑張ってる感じの働き者にプラチナ硬貨をあげることなんだ。君にも何枚かあげよう。", "Sorry, this is untranslated sentence.")
+			chatMore lang("君、働いてるねぇ。僕は労働って素晴らしいと思うんだ。生活費を得られ、社会にも貢献できる…社会的生物として、「適度な」労働は喜ばしいものなんだ。僕はすでに一財産稼いでしまって、今さら労働する気になれないけどね…。", "You're working hard, I see. I think labor is wonderful. You can earn living expenses and contribute to society... As social beings, \"moderate\" labor is a pleasure. My own days of working hard to build my fortunes are behind me...")
+			chatMore lang("そんな僕にもささやかな楽しみがあってね。ここに立って関所を行き来する人々を眺め、その中でも頑張ってる感じの働き者にプラチナ硬貨をあげることなんだ。君にも何枚かあげよう。", "Even so, I can still enjoy work, in a way. I stand here, watching people come and go across the border, and give platinum coins to the hard workers among them. I'll give you some.")
 			flt
 			itemcreate -1, ITEM_ID_PLATINUM_COIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 3
 			gdata(STARTING_GDATA_FLAG + 326) = 200
 			txt_questitem
 			goto *chat_end
@@ -11462,36 +11502,36 @@
 		if ( gdata(STARTING_GDATA_FLAG + 326) == 200 ) {
 			chatMore lang("そう、がっつかないでくれよ…。明日また来てくれ。", "Yeah, don't be greedy... Come back tomorrow instead.")
 			goto *chat_end
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 326) == 100 ) {
-			chatMore lang("君、まだ今日は街の依頼を達成していないようだな。達成したらまたおいで。", "Sorry, this is untranslated sentence.")
+			chatMore lang("君、まだ今日は街の依頼を達成していないようだな。達成したらまたおいで。", "You don't seem to have completed a city's request yet today. Come back when you've put in a good day's work.")
 			goto *chat_end
 		}
-		chatMore lang("元気に働いているようだね。ううん…素晴らしい汗だ。頑張っている君にプラチナをあげよう。", "Sorry, this is untranslated sentence.")
+		chatMore lang("元気に働いているようだね。ううん…素晴らしい汗だ。頑張っている君にプラチナをあげよう。", "You seem to be doing fine. Another day, another platinum, eh? You're doing your best and working hard, so I'll give you a little gift.")
 		flt
 		itemcreate -1, ITEM_ID_PLATINUM_COIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 3
 		gdata(STARTING_GDATA_FLAG + 326) = 200
 		txt_questitem
 		chatMore lang("また、明日おいで。", "Come again tomorrow.")
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_ALFRED_THE_CANGNAN_WIND | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_AREA) == AREA_GUARDIAN_SHRINE ) {
-			chatMore lang("任務に失敗したうえ、後続隊を犠牲にしてまで生き延びてしまいましたか…。ヴァリウス様に合わせる顔がありませんね…。", "Sorry, this is untranslated sentence.")
+			chatMore lang("任務に失敗したうえ、後続隊を犠牲にしてまで生き延びてしまいましたか…。ヴァリウス様に合わせる顔がありませんね…。", "Did you miss the task and survived until the sacrifice of the followers...? There is no face to match Lord Barius.")
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_AMUR_CAGE ) {
 			chatMore "(" + name(tc) + lang("は見えない誰かに話しかけている…", " is stunned.") + ")"
 			if ( gdata(GDATA_FLAG_MAIN_CHAOS_CRADLE_25) >= 1000 ) {
-				chatMore lang("すみません。私が巻き込まなければランカータはまだこちらに来なかったでしょう。本当にすみませんでした。機嫌を直してください。", "Sorry, this is untranslated sentence.")
+				chatMore lang("すみません。私が巻き込まなければランカータはまだこちらに来なかったでしょう。本当にすみませんでした。機嫌を直してください。", "Excuse me. If I did not get involved the lanceta would not have come here yet. I'm really sorry. Please correct your mood.")
 			}
 			goto *chat_end
 		}
 		if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
-			chatMore lang("うぐがぁぁっ！いいですか…もし、辿り着いても…混沌の神は、まだ、倒しては…！あれは世界を…結束させるため必要なっ…！", "Sorry, this is untranslated sentence.")
+			chatMore lang("うぐがぁぁっ！いいですか…もし、辿り着いても…混沌の神は、まだ、倒しては…！あれは世界を…結束させるため必要なっ…！", "Rag! Is it okay... If you arrive... God of chaos, yet beat down! That is necessary to make the world... ...!")
 			chatMore lang("あっ…がっ…。", "Ahhh...ughh...")
 			animeload ANIMATION_OFFER, tc
 			snd SOUNDLIST_BALL1
 			txt lang(name(tc) + "の身体が弾け飛んだ。", name(tc) + " shatter" + _s(tc) + ".")
 			dmghp tc, 99999, DAMAGE_FROM_SUICIDE
@@ -11503,36 +11543,36 @@
 	}
 	if ( _switch_val == CREATURE_ID_AJETALIO_THE_SEMINAR_LECTURER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(STARTING_GDATA_FLAG + 330) == 100 ) {
 			if ( gdata(STARTING_GDATA_FLAG + 329) == 1 ) {
-				chatMore lang("生活講座担当、アジタリオ・ラーンクリスです。長いのでアジラーって呼んでください。みなさん、これからよろしく。", "Sorry, this is untranslated sentence.")
-				chatMore lang("まずは冒険の基本中の基本、食料の調達方法について話しますね。", "Sorry, this is untranslated sentence.")
-				chatMore lang("最初のうちは街の外で野原にEnterして、落ちているアピの実、栗、薬草を拾いましょう。これらは腐らない上に軽いので携帯食としても保存食としても優秀です。山菜も落ちていますが、これは２日で腐るので注意してください。咲いている花も食べられますが、いい値段なので売った方がいいでしょう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("あとは果物の木ですかね。これにbキー…bash（ぶつかる）することで果物が落ちてきます。種類にもよりますが、結構重いし半日前後で腐るので、早めに処理しましょう。腐らせるくらいなら、地面に置いて仲間に食べさせたほうがいいですね。", "Sorry, this is untranslated sentence.")
-				chatMore lang("おっと。外で食料を集める時は野生動物に気をつけてください。強そうな動物や、実際強いと感じた相手からは無理せずエリア外まで逃げましょう。入りなおせば他にいくらでも拾えるので、目先の食料に眼が眩まないように。", "Sorry, this is untranslated sentence.")
-				chatMore lang("長時間の冒険用に、宿屋で旅糧を買いこんでもいいですね。お腹が膨れるだけで強くはなれませんが、飢え死にするよりはいいでしょう。旅糧は緊急用にして、腐らず・腹持ちもよく・能力も鍛えられる食品…パン系を常備するのもありですね。どちらも結構お金がかかるので、余裕ができてから一考を。", "Sorry, this is untranslated sentence.")
-				chatMore lang("街中でお腹が空いた場合は…街によってはパンが置いてあったり野菜が植えてあったります。行儀の悪いことですが、どうしてもお腹がすいている時はこっそり食べてしまいましょう。何もない街でも最悪、宿屋があれば食事はとれます。有料なうえに強くもなれませんけどね。", "Sorry, this is untranslated sentence.")
+				chatMore lang("生活講座担当、アジタリオ・ラーンクリスです。長いのでアジラーって呼んでください。みなさん、これからよろしく。", "Daily life course director, Ajetalio Lanclis. Please, just call me Ajira. Everyone, best regards from now.")
+				chatMore lang("まずは冒険の基本中の基本、食料の調達方法について話しますね。", "First of all, we will talk about the basics of adventure and how to procure food.")
+				chatMore lang("最初のうちは街の外で野原にEnterして、落ちているアピの実、栗、薬草を拾いましょう。これらは腐らない上に軽いので携帯食としても保存食としても優秀です。山菜も落ちていますが、これは２日で腐るので注意してください。咲いている花も食べられますが、いい値段なので売った方がいいでしょう。", "In the beginning you can pick up the api nuts, chestnuts, and healthy leaves found in the field outside the city. They're non-perishable and light, so they're excellent as a portable meal and preserved food. Edible wild plants are also available, but please be careful as they rot in 2 days. You can eat wildflowers, but it is better to sell them because they fetch a good price.")
+				chatMore lang("あとは果物の木ですかね。これにbキー…bash（ぶつかる）することで果物が落ちてきます。種類にもよりますが、結構重いし半日前後で腐るので、早めに処理しましょう。腐らせるくらいなら、地面に置いて仲間に食べさせたほうがいいですね。", "If you find a fruit tree, use the [b] key to bash the tree and knock down fruit. Depending on the type, fruit can be quite heavy, and usually rots in about half a day, so cook them early. Perishable food should be eaten or dropped on the ground for your friends before it rots.")
+				chatMore lang("おっと。外で食料を集める時は野生動物に気をつけてください。強そうな動物や、実際強いと感じた相手からは無理せずエリア外まで逃げましょう。入りなおせば他にいくらでも拾えるので、目先の食料に眼が眩まないように。", "...Oh, right. Please pay attention to wild animals when collecting food outdoors. If you run into dangerous enemies, leave the area. You can keep reentering the area to find more food, so don't take any unnecessary risks.")
+				chatMore lang("長時間の冒険用に、宿屋で旅糧を買いこんでもいいですね。お腹が膨れるだけで強くはなれませんが、飢え死にするよりはいいでしょう。旅糧は緊急用にして、腐らず・腹持ちもよく・能力も鍛えられる食品…パン系を常備するのもありですね。どちらも結構お金がかかるので、余裕ができてから一考を。", "You may buy cargos of traveling supplies at the inn for long-term adventure. You won't get stronger by eating them, but it's better than starving to death. A skilled adventurer can make nutritious food that doesn't rot, or you can use antiseptic to make food stop rotting... But both of those are beyond the means of a novice adventurer, so just keep them in mind for the future, alright?")
+				chatMore lang("街中でお腹が空いた場合は…街によってはパンが置いてあったり野菜が植えてあったります。行儀の悪いことですが、どうしてもお腹がすいている時はこっそり食べてしまいましょう。何もない街でも最悪、宿屋があれば食事はとれます。有料なうえに強くもなれませんけどね。", "If you are hungry in a city... You can find bread and vegetables placed around. It's bad manners, but you can eat them in secret when you are hungry. Even in a city with no food available at all, if there's an inn, you can order meals. You'll have to pay for them, though.")
 			}
 			if ( gdata(STARTING_GDATA_FLAG + 329) == 2 ) {
-				chatMore lang("今日は街の依頼などについて学びましょうか。", "Sorry, this is untranslated sentence.")
-				chatMore lang("街の掲示板に触れてみれば、色々な依頼があることに気がつくと思います。達成すれば様々なアイテムやプラチナ硬貨、金貨、名声、発言力、カルマなどが得られます。ただし、失敗すると名声が低下します。ものによってはカルマも減って危険なので、最初から手当たり次第に依頼を受けるのはやめましょう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("給料と税金についても話しておきます。毎月１日と１５日に、家の給料箱へ給料や補給品が振り込まれます。税金を滞納していないと補給品の質がよくなるみたいですね。そして給料の額は冒険者としての各種ランキングによって決まります。ランキングについてはjキー…journal（日誌）で確認しましょう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("さて、レベル１０以上になると毎月１日に給料と一緒に税金の請求書も届くはずです。これはこのゼミから東にあるパルミア大使館に持っていくと支払えます。税金は所持金と所有物件から算出されます。もし悪人として生きていきたくても、最初のうちは毎月ちゃんと払ってください。４か月税金を滞納すると、カルマが減って一発アウトですから。", "Sorry, this is untranslated sentence.")
+				chatMore lang("今日は街の依頼などについて学びましょうか。", "Shall we learn about town requests and such today?")
+				chatMore lang("街の掲示板に触れてみれば、色々な依頼があることに気がつくと思います。達成すれば様々なアイテムやプラチナ硬貨、金貨、名声、発言力、カルマなどが得られます。ただし、失敗すると名声が低下します。ものによってはカルマも減って危険なので、最初から手当たり次第に依頼を受けるのはやめましょう。", "Touching the bulletin board of the town, you will notice that there are various requests. If you complete them, you get various items and platinum coins, gold coins, fame, karma and so on. However, if you fail, your reputation will decline. Depending on the request, your karma might decrease, which is dangerous, so don't just take requests thoughtlessly.")
+				chatMore lang("給料と税金についても話しておきます。毎月１日と１５日に、家の給料箱へ給料や補給品が振り込まれます。税金を滞納していないと補給品の質がよくなるみたいですね。そして給料の額は冒険者としての各種ランキングによって決まります。ランキングについてはjキー…journal（日誌）で確認しましょう。", "I'll also talk about salary and taxes. On the 1st and 15th of each month, salaries and supplies are transferred to the house's salary box. It seems that the quality of supplies will drop if you are not paying taxes. And the amount of salary is determined by ranking as an adventurer. To see your ranking, check your journal with the [j] key.")
+				chatMore lang("さて、レベル１０以上になると毎月１日に給料と一緒に税金の請求書も届くはずです。これはこのゼミから東にあるパルミア大使館に持っていくと支払えます。税金は所持金と所有物件から算出されます。もし悪人として生きていきたくても、最初のうちは毎月ちゃんと払ってください。４か月税金を滞納すると、カルマが減って一発アウトですから。", "By the way, once your level is 10 or higher you should receive a bill along with your salary on the 1st of every month. To pay your taxes, bring it to Palmia Embassy, which is east of here. Taxes are calculated from money carried and properties owned. Even if you want to live as a bad person, you should pay every month in the beginning. If you do not pay your taxes for 4 months, you will lose 60 karma.")
 			}
 			if ( gdata(STARTING_GDATA_FLAG + 329) == 3 ) {
-				chatMore lang("今回は信仰について説明しますよ。神々の干渉がほとんどなかった時代には、いるのかもよくわからない存在に頼らないと自分を律することができない人や、架空の神をでっち上げて人々から金をむしり取る罰当たりもいたそうですが、現在のイルヴァは確実に存在する八柱の神によって統治されています。", "Sorry, this is untranslated sentence.")
-				chatMore lang("神を信じ捧げものをすることで、能力の強化、特殊能力、神の化身、秘宝、武器といった具体的な恩恵を確実に授かることができます。俺は神に頼らないぞ！みたいな信条が特にないのなら、とりあえず誰かを信仰しておくべきでしょう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("神を信仰するなら、パルミアの北…つまりこのゼミから北東にある、神々の休戦地で行うといいですよ。祭壇の上でpキー…pray（祈る）すればその神の情報を見たうえで信仰するか否か選べます。信仰してその神が好むものを祭壇でEnterして捧げていけば、やがてご褒美のお告げがあるでしょう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("お告げがあったら、pray（祈る）すれば空からご褒美が降ってきます。もっとも、神の化身は信仰スキル１５、秘宝は信仰スキル２５、武器は信仰スキル４０が最低でも必要になりますけどね。", "Sorry, this is untranslated sentence.")
+				chatMore lang("今回は信仰について説明しますよ。神々の干渉がほとんどなかった時代には、いるのかもよくわからない存在に頼らないと自分を律することができない人や、架空の神をでっち上げて人々から金をむしり取る罰当たりもいたそうですが、現在のイルヴァは確実に存在する八柱の神によって統治されています。", "I will explain about faith this time. In the era when there was hardly any interference of the gods it seems that there were people who can not rule themselves unless they rely on existence which is not well understood or there was a punishment to pick up the fictional god by making up the imaginary god. Current Irva is ruled by the gods of the eight pillars which are surely present.")
+				chatMore lang("神を信じ捧げものをすることで、能力の強化、特殊能力、神の化身、秘宝、武器といった具体的な恩恵を確実に授かることができます。俺は神に頼らないぞ！みたいな信条が特にないのなら、とりあえず誰かを信仰しておくべきでしょう。", "Through belief and devotion to a god, you can definitely gain specific benefits such as strengthening stats and skills, special abilities, powerful allies, unique treasures, and special weapons. Unless you really don't want to rely on gods, you should probably choose one faith or another, at least for the time being.")
+				chatMore lang("神を信仰するなら、パルミアの北…つまりこのゼミから北東にある、神々の休戦地で行うといいですよ。祭壇の上でpキー…pray（祈る）すればその神の情報を見たうえで信仰するか否か選べます。信仰してその神が好むものを祭壇でEnterして捧げていけば、やがてご褒美のお告げがあるでしょう。", "If you want to choose a god, you should do it north of Palmia, the town east of this seminar, at the Truce Ground. Press the [p] key on an altar, and the basics of that faith will be revealed to you. Choose the god you like, and you'll be rewarded in due course.")
+				chatMore lang("お告げがあったら、pray（祈る）すれば空からご褒美が降ってきます。もっとも、神の化身は信仰スキル１５、秘宝は信仰スキル２５、武器は信仰スキル４０が最低でも必要になりますけどね。", "When in danger, pray and you'll be rescued, although you can only do it every so often, so divine intervention is a last resort for emergencies. You can also receive rewards with enough piety and Faith skill: 15 Faith is needed for a divine pet, 25 Faith for a unique treasure, and 40 Faith for an artifact weapon.")
 			}
 			if ( gdata(STARTING_GDATA_FLAG + 329) == 4 ) {
-				chatMore lang("さて、最後となる第４回では、本格的な生計の立て方について勉強しましょう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("迷宮に潜って金貨を取ってくるだけでは生計は成り立ちません。今時そんな、迷宮一本で生計を立てられるのは、レベル数百の迷宮を難なく攻略できる化け物くらいです。その化け物だって、強くなるまでにこつこつと稼いできたんですよ。そして、そんな強さになる頃には既に金には困らなくなっている。", "Sorry, this is untranslated sentence.")
-				chatMore lang("強くなるにしても稼ぐにしても、兼業冒険者のほうがやれることが多いぶん有利ですよ。最初は街の依頼で元手を作り、店の権利書を手に入れることを目標にしましょう。微妙な性能で売値も大したことのないような装備でも、自分の店で売るとメイン収入に化けます。", "Sorry, this is untranslated sentence.")
-				chatMore lang("店を構える際には、店主を任せるために交渉スキルを持つ仲間も用意しましょう。店物件は１店舗でも充分なので、早めに欲しい物件ですね。専門店を複数並べて収益を増加させる手もありますが、それは余裕ができてからでいいでしょう。", "Sorry, this is untranslated sentence.")
-				chatMore lang("それと並行して、サブ収入として生産系のスキルや採掘、釣り、演奏などから好みのものを冒険の合間に上達させていきましょう。こだわりがなければ全部やったほうが効率がいいくらいです。迷宮でアイテムを集めるほどの戦力や気力が無いような時でも、これらの手段は使えますからね。", "Sorry, this is untranslated sentence.")
+				chatMore lang("さて、最後となる第４回では、本格的な生計の立て方について勉強しましょう。", "Well, let's study about how to set up a full-fledged living in the 4th final, which will be the last.")
+				chatMore lang("迷宮に潜って金貨を取ってくるだけでは生計は成り立ちません。今時そんな、迷宮一本で生計を立てられるのは、レベル数百の迷宮を難なく攻略できる化け物くらいです。その化け物だって、強くなるまでにこつこつと稼いできたんですよ。そして、そんな強さになる頃には既に金には困らなくなっている。", "You can't make a living just by running around dungeons picking up gold pieces. These days, to get by like that, you'd have to be an incredibly strong adventurer who can clear even the most dangerous Nefia easily. And by the time you're that strong, you'll already have enough money to be set for life.")
+				chatMore lang("強くなるにしても稼ぐにしても、兼業冒険者のほうがやれることが多いぶん有利ですよ。最初は街の依頼で元手を作り、店の権利書を手に入れることを目標にしましょう。微妙な性能で売値も大したことのないような装備でも、自分の店で売るとメイン収入に化けます。", "Maybe you'll be that strong someday, but for now it's best to fulfill requests in cities and start saving up for your own shop. Equipment in your shop will sell for much more than you could get from shopkeepers in towns.")
+				chatMore lang("店を構える際には、店主を任せるために交渉スキルを持つ仲間も用意しましょう。店物件は１店舗でも充分なので、早めに欲しい物件ですね。専門店を複数並べて収益を増加させる手もありますが、それは余裕ができてからでいいでしょう。", "When setting up a store, be sure to assign a shopkeeper with good Charisma and Negotiation. Even one store is enough, so it's a property you want early. Eventually, if you feel like it, you could get even higher profits with multiple specialty shops.")
+				chatMore lang("それと並行して、サブ収入として生産系のスキルや採掘、釣り、演奏などから好みのものを冒険の合間に上達させていきましょう。こだわりがなければ全部やったほうが効率がいいくらいです。迷宮でアイテムを集めるほどの戦力や気力が無いような時でも、これらの手段は使えますからね。", "Along with that, work on crafting skills: Mining, Fishing, Performer, etc. Do what you enjoy doing and sell the results. Even if you aren't strong enough to gather items in a dungeon, you can still get by like this.")
 			}
 			gdata(STARTING_GDATA_FLAG + 330) = 101
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 1 ) {
 			chatList 0, lang("食べちゃダメなものは？", "What things shouldn't I eat?")
@@ -11788,11 +11828,11 @@
 	}
 	if ( _switch_val == CREATURE_ID_IDURU_THE_SEMINAR_LECTURER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(STARTING_GDATA_FLAG + 330) == 100 ) {
 			if ( gdata(STARTING_GDATA_FLAG + 329) == 1 ) {
-				chatMore lang("育成講座担当のイヅル・グンバイだ、よろしくな。師範とでも呼んでくれよ。さて、初回はcキー…characterで確認できる能力値について簡単に教えておくぞ。", "I'm Iduru Gumbye. Please call me \"Mr. Gumbye\". Welcome to the training lecture. Well, to start, let me briefly tell you about the character screen which you can check with [c].")
+				chatMore lang("育成講座担当のイヅル・グンバイだ、よろしくな。師範とでも呼んでくれよ。さて、初回はcキー…characterで確認できる能力値について簡単に教えておくぞ。", "I'm Iduru Gumbye. Please call me \"Mr. Gumbye\". Welcome to the training lecture. Well, to start, let me briefly tell you about the character screen, which you can check with [c].")
 				chatMore lang("筋力や耐久といった値が主能力。潜在能力は、その能力がどのくらい伸びやすいかを示している。superb（素晴らしい）が最高で、hopeless（絶望的）が最低の状態だ。主能力は対応したスキルや能力、行動を行うことで自然に成長していくんだ。", "Things like Strength and Constitution are your main stats. Potential shows how easy it is to raise something. \"Superb\" is the best, \"Hopeless\" is the worst. Stats go up naturally by using corresponding skills and abilities.")
 				chatMore lang("主能力の潜在を回復させるには、ランクの高い寝具で睡眠を取ることだ。寝る前に得た経験値が多いほど潜在も多く回復するけれど、睡眠を遅らせてまで経験値を稼ぐくらいなら早く寝たほうがいいぞ！規模の大きい魔法店が稀に入荷する、潜在能力のポーションを飲むのもいいけれど、レアゆえに供給がなかなか追いつかないだろうな。", "The potential of your stats is recovered when you sleep. High-quality beds recover more potential. Shops with a high rank occasionally stock potions of potential, but they're too rare to rely on.")
 				chatMore lang("主能力に*マークがついているものは、装備によって能力維持…能力が低下しない状態になっている。上昇は普通にするから安心してくれ。能力維持されていないと、敵の弱体化技能や身体を痛めた影響で一時的に下がったりする。下がった主能力は肉体・精神復活の道具か魔法、街の癒し手で戻すといいぞ。", "Stats with a \"*\" next to them are sustained by your equipment, which protects them from being lowered by enemies. If your stats get lowered, use a spell or potion of restore body for physical stats, or restore mind for mental stats, or you can pay a town healer to restore them.")
 				chatMore lang("スキルは、トレイナーにプラチナ硬貨を払うことで、習得したり潜在を回復させたりできるぞ。成長させるには経験値の入る行動が必要なんだ。どのスキルに経験値が入っているのかは、スキルトラック…スキルを*キーで登録すればわかりやすいな。", "You can learn new skills and restore skill potential by paying platinum coins to trainers in towns. This is very important for getting stronger. You can track your skills with [*] to keep track of their potentials.")
 			}
@@ -11818,11 +11858,11 @@
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 1 ) {
 			chatList 0, lang("おすすめのスキルは？", "Which skills do you recommend?")
 			chatList 1, lang("技能って？", "Could you tell me about abilities?")
 			chatList 2, lang("プラチナの入手法は？", "How do I gain platinum?")
-			chatList 3, lang("師範って何？", "Could you tell me about masters?")
+			chatList 3, lang("師範って何？", "Is there some untranslatable Japanese pun with your name?")
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 2 ) {
 			chatList 4, lang("仲間の能力を上げるには？", "How do I raise the attributes of my allies?")
 			chatList 5, lang("仲間のスキルを上げるには？", "How do I raise the skills of my allies?")
 			chatList 6, lang("仲間の潜在能力を高めるには？", "How do I improve the potentials of my allies?")
@@ -11836,11 +11876,11 @@
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 4 ) {
 			chatList 12, lang("魔法を覚えるには？", "How do I learn magic?")
 			chatList 13, lang("魔法の鍛え方は？", "How do I train magic?")
 			chatList 14, lang("ＡＰとＩＮＩＴの関係は？", "Could you tell me about AP and INI?")
-			chatList 15, lang("いづるんの実家って？", "How do I move my home?")
+			chatList 15, lang("いづるんの実家って？", "What do your parents do for a living, Iduru?")
 		}
 		buff = lang("さぁ、質問はあるかい？", "So, do ya have any questions?")
 		gosub *chat_select
 		if ( chatval == 0 ) {
 			chatMore lang("むうー…どのスキルも使い道があるからなぁ。優先的に取るべきなのは、生存力・成長力に関わる料理、持てる重量を増やす重量挙げ、出費を抑える交渉、他スキルの成長を助ける旅歩き、かな。", "Don't think like that. It's important to get every single skill. Still, you should prioritize some over others. Cooking to increase your stats, Weight Lifting to carry more items, Negotiation to help your finances, and Traveling to help all your skills grow.")
@@ -11855,11 +11895,11 @@
 		if ( chatval == 2 ) {
 			chatMore lang("うん！プラチナ硬貨は、主に依頼を達成した時に手に入るぞ。貰える枚数は依頼によって違うが、芸人依頼以外は名声１万とか２万とかごとに増えるからね。他にはネフィアを攻略したり、プラチナベルを倒すことでも手に入るけど、まぁ依頼報酬が基本かな。", "Platinum coins are mainly received by completing requests in towns. More difficult requests generally give more platinum coins. You can also get platinum coins by clearing Nefia or defeating a platina bell, but requests are the main source.")
 			gdata(STARTING_GDATA_FLAG + 330)++
 		}
 		if ( chatval == 3 ) {
-			chatMore lang("あー…それか。最初、イヅル・グンバイだからって「いづるん」というあだ名をつけられそうになってな。いい歳してそれは恥ずかしかったから、実家で呼ばれ慣れてる「師範」がいいと駄々をこねさせてもらった。", "Sorry, this is untranslated sentence.")
+			chatMore lang("あー…それか。最初、イヅル・グンバイだからって「いづるん」というあだ名をつけられそうになってな。いい歳してそれは恥ずかしかったから、実家で呼ばれ慣れてる「師範」がいいと駄々をこねさせてもらった。", "Oh ... that? At first, it is likely to be given a nickname of \"Izuru\" because it is an idle gumbah. I was embarrassed when I was a good age, so I wasted my mind when I was used to my parents' home and I was used to it.")
 		}
 		if ( chatval == 4 ) {
 			chatMore lang("仲間の能力を上げたいなら、ランクの高い料理をこまめに与えるといいな。ハーブもいいぞ！潜在能力を高めに保っていれば、食事で能力値２００くらいまではスクスク成長するだろう。", "If you want to improve your allies' stats, feed them well-cooked dishes regularly. Herbs are good too! Also, be sure that they're able to buy training. An ally with the Pickpocket skill will collect extra money from defeated enemies to help cover the cost.")
 			chatMore lang("聴診器を使えばわかるんだが、青緑色の時は食事可能、桃色の時は満腹だ。腹がすいたらすぐに食わせることができるように、料理は多く持っておくんだ。足りなきゃ果物の木やパン屋から調達しような。", "If you use a stethoscope on an ally, you can tell when they're hungry because their pink HP bar will turn turquoise. Keep plenty of food handy and feed them as soon as they get hungry. If you're low on food, collect fruit from fruit trees or buy food from bakeries.")
 			gdata(STARTING_GDATA_FLAG + 330)++
@@ -11904,11 +11944,11 @@
 			chatMore lang("魔法書には種類ごとに難易度があって、相応の読書スキルが必要なんだ。解読に失敗するとＭＰに大ダメージを受けたり魔物が召喚されたりすることもある。何度も失敗するレベルのものを強行したり、倒せない魔物が湧くと困る場所で読んだりしないように。", "Spellbooks have difficulty levels for each type, with more difficult books requiring a higher Literacy skill. Failing to read a book may drain your MP or summon dangerous enemies, so be careful where you read, and don't keep trying to study a book after failing repeatedly.")
 			chatMore lang("解読で得られる魔法ストックの量は、暗記スキルで増えるから取っておこう。収穫と願いの魔法書以外は充填である程度使いまわすことができるし、一度解読したものは魔術士ギルドに入れば作家から予約して買えるぞ。", "Reading a spellbook increases your spell stocks based on your Memorization skill. Also, if you join the Mages' Guild, you can put in requests with their spell writer for copies of specific spellbooks, although you can't request spellbooks of Wizard's Harvest or Wish.")
 			gdata(STARTING_GDATA_FLAG + 330)++
 		}
 		if ( chatval == 13 ) {
-			chatMore lang("魔法は使うことで経験値が入り、レベルアップする。詠唱スキルが低いと詠唱成功率が微妙だから、積極的に唱えていこう。魔法にも潜在能力があって、cキーのリストから確認できるぞ。魔法の潜在能力は、スキルなどとは違い睡眠をとることで少しずつ回復していく。", "Casting spells enough times increases their level, which improves the spells' power and success rate. You can check the potential of your spells in the character menu accessed with [c]. The potential of spells is recovered when you sleep.")
+			chatMore lang("魔法は使うことで経験値が入り、レベルアップする。詠唱スキルが低いと詠唱成功率が微妙だから、積極的に唱えていこう。魔法にも潜在能力があって、cキーのリストから確認できるぞ。魔法の潜在能力は、スキルなどとは違い睡眠をとることで少しずつ回復していく。", "Casting spells enough times increases their level, which improves their power and success rate. You can check the potential of your spells in the character menu accessed with [c]. The potential of spells is recovered when you sleep.")
 			chatMore lang("街の魔術士にプラチナ硬貨を払えば、魔法実習ができる。実習ではストックを消費せずに複数の魔法に経験値が入るぞ。珍しい魔法や普段使っていない魔法も鍛えられるんだ。レベルアップすると詠唱成功率と効果が上昇するから最初に何回か受けておくのもいいだろう。ただし消費ＭＰもちょっと増えるから注意だ。", "You can pay a town wizard platinum coins for a magic practice session. This trains multiple spells without using spell stocks. It's a good way to quickly improve your spells. However, keep in mind that higher level spells cost slightly more MP to cast.")
 			chatMore lang("ちなみに、仲間の魔法は種類に関係なく一括管理されているぞ。魔法レベル＝詠唱スキルレベルに簡略化されているから、その仲間の詠唱スキルを上げていこう。範囲魔法を使う場合は、自分も仲間も魔力制御スキルが必須レベルなので忘れずに。", "By the way, you don't have to worry about any of this for spellcasting allies. All they need is the Casting skill. Oh, and if you or your allies will be using bolt spells or area spells, the Control Magic skill is essential.")
 			gdata(STARTING_GDATA_FLAG + 330)++
 		}
 		if ( chatval == 14 ) {
@@ -11916,12 +11956,12 @@
 			chatMore lang("入手には色々と細かい条件があるけれど、だいたいＩＮＩＴや速度が自分より高い相手が対象になるんだ。つまり、ＩＮＩＴが低い…最初は弱い者ほどＡＰが貯まりやすいってことだな。", "To put it simply, gaining AP is mostly based on INI, particularly Speed INI. That is, someone who started out weak and slow will have a head start gaining AP.")
 			chatMore lang("噂ではＡＰを使って能力強化やスキル成長、特殊なフィート取得ができるって話だけれど…。少なくともノースティリスでそんなことができるという者は知らないぞ。もし本当なら、育成のために積極的に強い敵を倒してＡＰを入手していきたいな。", "It's rumored that AP can be used to improve your skills, gain new abilities, and unlock unique powers... However, I don't think there's anyone in North Tyris capable of doing such a thing. Maybe someday, if you travel to new lands, you might discover the secret of AP...")
 			gdata(STARTING_GDATA_FLAG + 330)++
 		}
 		if ( chatval == 15 ) {
-			chatMore lang("恥ずかしいから師範と呼んでほしい…！！", "Sorry, this is untranslated sentence.")
-			chatMore lang("あー…実家の道場はずっと南の方にあってね。有料だけど仲間を枠から外して預けることができる。冒険している間に少しずつ鍛えてもらえるし、有料で全員まとめて潜在を回復させたりもできる。宣伝じゃないけど、まぁ活用してみてくれ。", "Sorry, this is untranslated sentence.")
+			chatMore lang("恥ずかしいから師範と呼んでほしい…！！", "Please try to remember that I'm your teacher...!")
+			chatMore lang("あー…実家の道場はずっと南の方にあってね。有料だけど仲間を枠から外して預けることができる。冒険している間に少しずつ鍛えてもらえるし、有料で全員まとめて潜在を回復させたりもできる。宣伝じゃないけど、まぁ活用してみてくれ。", "...Oh, my parents run a dojo to the south, near the border with South Tyris. There's a fee, but you can leave up to 150 allies there. They'll get a tiny bit stronger over time, and you can also restore their potentials for an additional fee. Ah, sorry; didn't mean to sound like a salesperson there...")
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 330) <= 102 ) {
 			chatMore lang("何か質問があったら聞きに来てくれ。", "If you have any more questions, please come and ask.")
 		}
 		goto *chat_end
@@ -12457,21 +12497,21 @@
 			goto *chat_end
 		}
 		chatMore lang("う〜ん…。勉強熱心な子には、つい努力賞をあげたくなっちゃうカラ…。", "Well... To a kid that earnestly studies, I want to reward that effort...")
 		chatMore lang("それはさておき。", "Aside from that.")
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 1 ) {
-			chatMore lang("カラ太は宝箱のツクモガミなのだから！宝箱に擬態しているミミックとは、似て非なるモノなの！", "Sorry, this is untranslated sentence.")
-			chatMore lang("昔はタヌキとかライオンとか、マスコットの先輩もいたんだけど、みんな退職しちゃった…。", "Sorry, this is untranslated sentence.")
+			chatMore lang("カラ太は宝箱のツクモガミなのだから！宝箱に擬態しているミミックとは、似て非なるモノなの！", "Karata is a tsukumogami of the treasure box! It is a similar thing to Mimic that mimics a treasure box!")
+			chatMore lang("昔はタヌキとかライオンとか、マスコットの先輩もいたんだけど、みんな退職しちゃった…。", "There used to be raccoon dumplings, lions, mascot seniors, but everyone retired.")
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 2 ) {
-			chatMore lang("冒険ゼミはバネッサコーポレーションという会社の一部なのだから！ちなみに、カラ太をスカウトしたのは創始者のバネッサなんだー。", "Sorry, this is untranslated sentence.")
+			chatMore lang("冒険ゼミはバネッサコーポレーションという会社の一部なのだから！ちなみに、カラ太をスカウトしたのは創始者のバネッサなんだー。", "The Adventure Seminar is part of the company called Vanessa Corporation! By the way, it was the founder, Vanessa, that scouted Karata.")
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 3 ) {
-			chatMore lang("ゼミ創始者のバネッサはさらなる冒険を求め、友達のガイドを連れて宇宙に旅立ったのだから！いつ帰ってくるのかな？寂しい…。", "Sorry, this is untranslated sentence.")
+			chatMore lang("ゼミ創始者のバネッサはさらなる冒険を求め、友達のガイドを連れて宇宙に旅立ったのだから！いつ帰ってくるのかな？寂しい…。", "Vanessa, the founder of the seminar, asked for further adventure and took a friend's guide and traveled to space! When will you come back? ...lonely...")
 		}
 		if ( gdata(STARTING_GDATA_FLAG + 329) == 4 ) {
-			chatMore lang("バネッサコーポレーションは冒険者にお給料が払われるように国と交渉したり、ギルドのスポンサーもやっていたりするから！冒険者の地位を上げるために色々がんばっているんだー。", "Sorry, this is untranslated sentence.")
+			chatMore lang("バネッサコーポレーションは冒険者にお給料が払われるように国と交渉したり、ギルドのスポンサーもやっていたりするから！冒険者の地位を上げるために色々がんばっているんだー。", "Vanessa Corporation negotiates with the country to pay for adventurers and sponsors the guilds too! I'm doing my best to raise the status of adventurers.")
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_SSIL_THE_UNDEAD_WITCH | _switch_sw ) {
 		_switch_sw = 0
@@ -12491,41 +12531,41 @@
 					continue
 				}
 				syurui++
 			loop
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 1 ) {
-				chatMore lang("10年20年などあっという間に過ぎるものですじゃ。この家も、越してきたばかりの頃は店だったのですよ。棚の奥に50年以上前のお菓子も入っておるでしょうなぁ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("10年20年などあっという間に過ぎるものですじゃ。この家も、越してきたばかりの頃は店だったのですよ。棚の奥に50年以上前のお菓子も入っておるでしょうなぁ。", "The decades just fly by... This house used to be a candy shop, you know. I made some sweets just recently in fact, couldn't have been more than 50 years ago. I think they're still on the shelf in the back...")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 2 ) {
-				chatMore lang("赤き義眼の魔女を知っておりますか。歳は大きく違えど、あれはわたしの知人なのですじゃ。愛する夫と末永く過ごすため、力を代償とする義眼まで埋め込むとはいやはや。若いとはいいものですのう。", "Sorry, this is untranslated sentence.")
+				chatMore lang("赤き義眼の魔女を知っておりますか。歳は大きく違えど、あれはわたしの知人なのですじゃ。愛する夫と末永く過ごすため、力を代償とする義眼まで埋め込むとはいやはや。若いとはいいものですのう。", "Do you know the witch called the \"Red-Eyed Deceiver\"? She's an acquaintance of mine. To stay with her dear husband forever, she replaced her eyes with powerful magic rubies. Ah, the folly of youth...")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 3 ) {
-				chatMore lang("こうしていると思い出しますのう。昔、ブラッドランナーという方がよく来てくださったのですじゃ。騎士見習いとして王宮に勤めることになったと言っておりましたが、その後どうなったか…おっと、あれは以前の文明の出来事でしたなぁ。時が過ぎるのは早いものですじゃ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("こうしていると思い出しますのう。昔、ブラッドランナーという方がよく来てくださったのですじゃ。騎士見習いとして王宮に勤めることになったと言っておりましたが、その後どうなったか…おっと、あれは以前の文明の出来事でしたなぁ。時が過ぎるのは早いものですじゃ。", "Let me see if I remember... Long ago, Blade Runner often visited. He told me that he was supposed to work for the royal palace as an apprentice of the knight, but what happened then... Oops, that was an event of a previous civilization. Time passes so quickly.")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 4 ) {
-				chatMore lang("ついこの間まではエウダーナという国に住んでおりました。弟子もおったのですよ。ええ、森の中で行き倒れていた孤児でしたのう。研究方面はからっきしでしたが戦闘魔法の才能は抜群でした。", "Sorry, this is untranslated sentence.")
+				chatMore lang("ついこの間まではエウダーナという国に住んでおりました。弟子もおったのですよ。ええ、森の中で行き倒れていた孤児でしたのう。研究方面はからっきしでしたが戦闘魔法の才能は抜群でした。", "Until recently, I lived in the country of Eulderna. I had a disciple there, an orphan who got lost in the forest. Not much for research, but his talent as a warmage was outstanding.")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 5 ) {
-				chatMore lang("わたしの弟子ですがねぇ、成長後は軍に入ってしまって。戦争の道具にされてしまったのですじゃ。他国の兵士を魔法で次々に蹂躙し新たな孤児を生む弟子の姿を見て、わたしは幻滅し国を去りました。弟子がその後どうなったのかは知りませぬ。生きていれば今頃わたしのような老いぼれでしょうなぁ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("わたしの弟子ですがねぇ、成長後は軍に入ってしまって。戦争の道具にされてしまったのですじゃ。他国の兵士を魔法で次々に蹂躙し新たな孤児を生む弟子の姿を見て、わたしは幻滅し国を去りました。弟子がその後どうなったのかは知りませぬ。生きていれば今頃わたしのような老いぼれでしょうなぁ。", "Yes, that disciple of mine grew up and left to join the military. He became a tool of war, dispatching soldiers of other countries one after another with his magic... Making more orphans, just like he used to be. That kind of soured me on Eulderna, so I moved here. I don't know what became of the boy. He's probably decrepit like me by now, if he's still alive...")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 6 ) {
-				chatMore lang("わたしが研究をしているのは下らない戦争のためではなく、ましてや誰かを助けるためでもありませんのじゃ。全ては可能性の追求のため。ひひひ…そのためなら他人の定めた倫理や禁忌など邪魔なだけですじゃ。そうは思いませんかのう？", "Sorry, this is untranslated sentence.")
+				chatMore lang("わたしが研究をしているのは下らない戦争のためではなく、ましてや誰かを助けるためでもありませんのじゃ。全ては可能性の追求のため。ひひひ…そのためなら他人の定めた倫理や禁忌など邪魔なだけですじゃ。そうは思いませんかのう？", "My research is neither for the sake of wretched war, nor to aid others, but simply to explore new possibilities; knowledge for knowledge's sake. Hee hee hee... So I don't worry about things like \"ethics\" and \"morals\". They'd only get in the way, don't you think?")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 7 ) {
-				chatMore lang("その昔、海辺で暮らしていた頃の話ですがね。色々あって子亀を助けたら、海のお姫様に会うことになったのですじゃ。数万年ごとに子供の姿へ戻ることを繰り返し、悠久の時を生きてきたと言っておりましたなぁ。本当だとしたらまるでクラゲの一種ですのう。今も海の底で暮らしておるのでしょうか。", "Sorry, this is untranslated sentence.")
+				chatMore lang("その昔、海辺で暮らしていた頃の話ですがね。色々あって子亀を助けたら、海のお姫様に会うことになったのですじゃ。数万年ごとに子供の姿へ戻ることを繰り返し、悠久の時を生きてきたと言っておりましたなぁ。本当だとしたらまるでクラゲの一種ですのう。今も海の底で暮らしておるのでしょうか。", "A long time ago, when I was living at the beach, I helped a little turtle who wanted to meet the princess of the sea. He said that he returned to the form of a child every few million years, so his lifespan was eternal. If it's true, it's just like a certain kind of jellyfish. I wonder if he's still living, down at the bottom of the ocean...?")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 8 ) {
-				chatMore lang("生化学文明の滅亡後は酷かったですのう。世界中が、変異したモンスターで溢れ、無法地帯となっておりました。わずかに生き残った普通の生物も、汚染された環境に適応できず次々と死んでいきましたねぇ。てっきり世界は終わってしまったものと考えておりました。まさか長い年月をかけて、様々な種族が汚染に適応した超生命となり、新たな文明まで築き上げるとは…驚きですじゃ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("生化学文明の滅亡後は酷かったですのう。世界中が、変異したモンスターで溢れ、無法地帯となっておりました。わずかに生き残った普通の生物も、汚染された環境に適応できず次々と死んでいきましたねぇ。てっきり世界は終わってしまったものと考えておりました。まさか長い年月をかけて、様々な種族が汚染に適応した超生命となり、新たな文明まで築き上げるとは…驚きですじゃ。", "Life was harsh after the destruction of the biochemical civilization. The world was a lawless place, overflowing with mutated monsters. Ordinary creatures that barely survived could not adapt to the contaminated environment and died one after another. I thought that the world had ended. It's surprising that after a long time, a variety of races adapted to the pollution and built a new civilization.")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 9 ) {
-				chatMore lang("滅亡時期に活動していたネクロマンサーたちも今ではすっかり影を潜めておりますねぇ。それなりの数が生き残っているはずですがのう。いえ、彼らの偵察用アンデッドがちょくちょく研究を邪魔しにきて迷惑でしたがねぇ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("滅亡時期に活動していたネクロマンサーたちも今ではすっかり影を潜めておりますねぇ。それなりの数が生き残っているはずですがのう。いえ、彼らの偵察用アンデッドがちょくちょく研究を邪魔しにきて迷惑でしたがねぇ。", "Necromancers who were active at the time of their destruction are now completely hiding their shadows. You should, but decent number have survived. No, hey but their reconnaissance for the undead was the trouble came occasionally to interfere with the study.")
 			}
 			if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 10 ) {
-				chatMore lang("シエラ・テールは過去の技術が一堂に会した奇妙な文明ですじゃ。神によって魔法が再び世界に広まり体系化され、錬金術が発達し、遺跡では機械群が大量に発掘され再起動までしております。そしてレム・イドがもたらした生化学技術。何かの意図を感じますのう。ひひっ…大きなことが起きる前触れかもしれませんなぁ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("シエラ・テールは過去の技術が一堂に会した奇妙な文明ですじゃ。神によって魔法が再び世界に広まり体系化され、錬金術が発達し、遺跡では機械群が大量に発掘され再起動までしております。そしてレム・イドがもたらした生化学技術。何かの意図を感じますのう。ひひっ…大きなことが起きる前触れかもしれませんなぁ。", "Sierre Terre is a strange civilization of past technologies gathered together. Magic spreads to the world again from the gods, it is studied, controlled, alchemy develops, and in the ruins a large number of machines are excavated and restarted. And the biochemical technology of Rehm-Ido... There's purpose behind it all. Hee hee hee... It may be a sign of big things to come.")
 			}
 			if ( syurui >= gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) * 50 ) {
-				chatMore lang("おや、カードを持ってきてくれたのですか？こんな婆のために、有難いことですなぁ。では少し拝見させて頂きますのじゃ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("おや、カードを持ってきてくれたのですか？こんな婆のために、有難いことですなぁ。では少し拝見させて頂きますのじゃ。", "Oh, did you find enough cards? You're very kind to humor an old woman. Well, let me take a peek...")
 				redraw 0
 				gosub *screen_draw
 				gosub *screen_fade
 				gsel 4
 				pos 0, 0
@@ -12594,43 +12634,43 @@
 				}
 				if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 16 ) {
 					flt
 					itemcreate -1, ITEM_ID_HAPPY_APPLE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 2
 				}
-				chatMore lang("いひひ…次は" + gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) * 50 + "種類まで集めたらまた見せてくだされ。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("いひひ…次は" + gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) * 50 + "種類まで集めたらまた見せてくだされ。", "Hee hee... Please show me again after you gather " + gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) * 50 + " kinds."), strbye
 				goto *chat_end
 			}
 			else {
-				chatMore lang("ところで、今デッキに入っているカードは" + syurui + "種類のようですのう。ひひ…" + gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) * 50 + "種類まで集めたらまた見せてくだされ。", "Sorry, this is untranslated sentence."), strbye
+				chatMore lang("ところで、今デッキに入っているカードは" + syurui + "種類のようですのう。ひひ…" + gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) * 50 + "種類まで集めたらまた見せてくだされ。", "Ah, let me see your deck... Not bad, not bad. Please, show me again after you collect " + gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) * 50 + " kinds."), strbye
 				goto *chat_end
 			}
 		}
 		if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) == 0 ) {
-			chatMore lang("おやおや、訪問者とは珍しいこともあるものですじゃ。皆薄気味悪がって近寄らんものですがのう。", "Sorry, this is untranslated sentence.")
-			chatMore lang("ひひっ、まぁゆっくりしていってくだされ。わたしはアンデッド化しておりますが、旅人を取って食ったりはしませんですじゃ。襲われたら抵抗くらいはするかもしれませんがな…ひひひ。", "Sorry, this is untranslated sentence.")
-			chatMore lang("そうじゃ…この死にぞこないの婆のために、一つ頼まれてくれませぬか。カード…というものは、今の世にもありますじゃろう？そうですじゃ、生物の情報が記された…デッキに入れるものですじゃ。こう、森奥で死んだように長く暮らしておりますとなぁ。不意に、現代にはどんなものが生きているのか気になるのですよ。", "Sorry, this is untranslated sentence.")
-			chatMore lang("なぁに、悪いことには使いませぬ…まずは50種類以上のカードをデッキに入れて、見せていただけたならお礼をいたしますじゃ。もちろん、気の向いた時で構いませぬ。いひひ…なにせもうかなりの歳ですからなぁ。月日の流れが大層早く感じられまして、ねぇ。", "Sorry, this is untranslated sentence."), strbye
+			chatMore lang("おやおや、訪問者とは珍しいこともあるものですじゃ。皆薄気味悪がって近寄らんものですがのう。", "Oh my, a visitor. How rare. Most folks stay away from someone like me.")
+			chatMore lang("ひひっ、まぁゆっくりしていってくだされ。わたしはアンデッド化しておりますが、旅人を取って食ったりはしませんですじゃ。襲われたら抵抗くらいはするかもしれませんがな…ひひひ。", "Come in, come in... I am undead, but I'm not the sort to eat visitors. Although, don't expect to survive if you attack me, hee hee hee...")
+			chatMore lang("そうじゃ…この死にぞこないの婆のために、一つ頼まれてくれませぬか。カード…というものは、今の世にもありますじゃろう？そうですじゃ、生物の情報が記された…デッキに入れるものですじゃ。こう、森奥で死んだように長く暮らしておりますとなぁ。不意に、現代にはどんなものが生きているのか気になるのですよ。", "Will... will you do something for an old woman like me? Cards... what are they like in this age? They still have information about living things written on them, yes? I've been in this forest a long, long time. I'd like to know what sorts of creatures live in this era.")
+			chatMore lang("なぁに、悪いことには使いませぬ…まずは50種類以上のカードをデッキに入れて、見せていただけたならお礼をいたしますじゃ。もちろん、気の向いた時で構いませぬ。いひひ…なにせもうかなりの歳ですからなぁ。月日の流れが大層早く感じられまして、ねぇ。", "I won't use the information for anything bad, I promise. To start, I'll give you a present if you put at least 50 kinds of cards in a deck and show it to me. Of course, there's no hurry. Hee hee hee... I have all the time in the world."), strbye
 			gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) = 1
 			txt_questupdate
 			goto *chat_end
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_AIKAGE_THE_SHINOBI_MASK | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_FLAG_MAIN) == 605 | gdata(GDATA_FLAG_MAIN) == 610 | gdata(GDATA_FLAG_MAIN) == 615 ) {
 			chatMore lang("冒険者か…！いいところに来てくれた。", "An adventurer! You've come to the right place.")
-			chatList 0, lang("気が向いたら", "See you later.")
-			chatList 1, lang("逃げればいいんじゃ？", "See you later.")
-			chatList 2, lang("お前は7層で倒したはず", "See you later.")
-			buff = lang("俺たちは混沌の手の者に魔術で操られ、露払いをさせられていたのだが…。術者が死んだことにより、同じく操られていたアンデッド兵器が暴れ始めたのだ。鎮圧に手を貸してくれ！", "Sorry, this is untranslated sentence.")
+			chatList 0, lang("気が向いたら", "If you feel like it.")
+			chatList 1, lang("逃げればいいんじゃ？", "Do not you just run away?")
+			chatList 2, lang("お前は7層で倒したはず", "You should have killed by 7 layers.")
+			buff = lang("俺たちは混沌の手の者に魔術で操られ、露払いをさせられていたのだが…。術者が死んだことにより、同じく操られていたアンデッド兵器が暴れ始めたのだ。鎮圧に手を貸してくれ！", "We were manipulated by chaotic hands with magic and had been paid for death. As the caster died, the undead weapons, which were also being manipulated, began to rampage. Please help me to suppress crime!")
 			gosub *chat_select
 			if ( chatval == 0 ) {
 				chatMore lang("頼むぞ！", "I beg of you!")
 			}
 			if ( chatval == 1 ) {
-				chatMore lang("操られている時に横で見ていてわかったが、こいつらは危険だ。後から来る者たちのためにも排除しておきたい。", "Sorry, this is untranslated sentence.")
+				chatMore lang("操られている時に横で見ていてわかったが、こいつらは危険だ。後から来る者たちのためにも排除しておきたい。", "I understood by seeing it side by side when it is being manipulated, but they are dangerous. I want to eliminate it for those who will come later.")
 			}
 			if ( chatval == 2 ) {
 				chatMore lang("残念だったな、分身の術だよ。", "What a disappointment my child's technique is.")
 			}
 			gdata(GDATA_FLAG_MAIN) = 620
@@ -12661,11 +12701,11 @@
 		gosub *chat_select
 		if ( chatval >= 0 & chatval <= 2 ) {
 			chatMore lang("…そう。やっぱり、あなたにはここで消えてもらう。", "So... This place will be your graveyard.")
 		}
 		else {
-			chatMore lang("…？？？とりあえず、あなたにはここで消えてもらう。", "...??? Whatever. This place will be your graveyard.")
+			chatMore lang("…？？？とりあえず、あなたにはここで消えてもらう。", "...What? Whatever. This place will be your graveyard.")
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_GILPHEM_THE_MAGIC_STEEL | _switch_sw ) {
 		_switch_sw = 0
@@ -12677,125 +12717,125 @@
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_BURT_THE_BURNING_ADVENTURER_SOUL | _switch_sw ) {
 		_switch_sw = 0
 		if ( burt == 1 ) {
-			chatMore lang("街の外は危険だ。だがもしお前が冒険したいのなら、俺に止める権利はない。", "Sorry, this is untranslated sentence.")
+			chatMore lang("街の外は危険だ。だがもしお前が冒険したいのなら、俺に止める権利はない。", "Outside of the city is dangerous. If however you if would like to adventure, no right to stop.")
 		}
 		if ( burt == 0 ) {
-			chatMore lang("…ここから見える海の向こうの景色が好きだったんだ。でも今ではどんな景色だったのか思い出せない。海の向こうも奴らに喰われて黒く塗りつぶされてしまった。", "Sorry, this is untranslated sentence.")
-			chatMore lang("俺たちもかろうじて生き残っているだけて、やがて忘却に呑まれてしまうだろう。それがおそらく運命なんだ。", "Sorry, this is untranslated sentence.")
-			chatMore lang("だが作物はこの街の中でだって栽培できるし、水もまだ井戸から汲むことができる。俺は最後の瞬間まで足掻いてみせるさ。", "Sorry, this is untranslated sentence.")
+			chatMore lang("…ここから見える海の向こうの景色が好きだったんだ。でも今ではどんな景色だったのか思い出せない。海の向こうも奴らに喰われて黒く塗りつぶされてしまった。", "...I liked the view behind the sea from here. But I can not remember what kind of scenery it was now. The other side of the sea was eaten by them and was painted black.")
+			chatMore lang("俺たちもかろうじて生き残っているだけて、やがて忘却に呑まれてしまうだろう。それがおそらく運命なんだ。", "We barely survive and will soon be forgotten by oblivion. That is probably destiny.")
+			chatMore lang("だが作物はこの街の中でだって栽培できるし、水もまだ井戸から汲むことができる。俺は最後の瞬間まで足掻いてみせるさ。", "However, crops can be cultivated in this town, and water can still be drawn from the well. I will struggle until the end.")
 			burt = 1
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_ALLEN_THE_RESEARCHER | _switch_sw ) {
 		_switch_sw = 0
 		if ( gdata(GDATA_FLAG_SUB_RESEARCH_DESTRUCTION_CRISIS) == 1 ) {
-			chatMore lang("みんなが無事に戻ってきたらバーの酒で一杯やりたいよ。恐怖は旨い酒を飲んで忘れるに限る。", "Sorry, this is untranslated sentence.")
+			chatMore lang("みんなが無事に戻ってきたらバーの酒で一杯やりたいよ。恐怖は旨い酒を飲んで忘れるに限る。", "I hope to have a drink at the bar when everyone comes back safely. Fear is limited to forgetting with delicious sake.")
 		}
 		if ( gdata(GDATA_FLAG_SUB_RESEARCH_DESTRUCTION_CRISIS) == 0 ) {
 			chatMore lang("おや、旅人かい？…ひとつ頼まれてくれないか。", "Oh, are you a traveler? ...Can I ask you one thing?")
-			chatMore lang("負傷した俺を置いて、仲間がラスキリスに再調査に行ってしまったんだ。あそこはヤバイ。状況を打開する手がかりを探すとか言っていたけど、もう俺たちでどうにかなるものじゃないことは分かっているんだ。", "Sorry, this is untranslated sentence.")
+			chatMore lang("負傷した俺を置いて、仲間がラスキリスに再調査に行ってしまったんだ。あそこはヤバイ。状況を打開する手がかりを探すとか言っていたけど、もう俺たちでどうにかなるものじゃないことは分かっているんだ。", "I put an injured man and my colleague went to Ruskilis to investigate again. That place is bad. I told you to look for clues to break the situation, but I already know what we do not manage.")
 			chatList 0, lang("考えさせて", "Let me think about it.")
 			chatList 1, lang("わかった", "Alright.")
-			buff = lang("隊長はこの事態に焦っている。なんとか説得してみんなを連れ戻してきてくれ…！", "Sorry, this is untranslated sentence.")
+			buff = lang("隊長はこの事態に焦っている。なんとか説得してみんなを連れ戻してきてくれ…！", "The captain is impatient with this situation. Persuade somehow and bring everyone back!")
 			gosub *chat_select
 			if ( chatval == 1 ) {
-				chatMore lang("調査隊長の名前はラエスだ。君は強そうだけど、黒い獣にはくれぐれも気をつけてくれ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("調査隊長の名前はラエスだ。君は強そうだけど、黒い獣にはくれぐれも気をつけてくれ。", "The survey captain's name is Laes. You seem strong, but be careful of black beasts.")
 				gdata(GDATA_FLAG_SUB_RESEARCH_DESTRUCTION_CRISIS) = 1
 				txt_questupdate
 			}
 			else {
-				chatMore lang("お願いだ…。一部、過激なのもいるけどみんな気のいいやつなんだ。", "Sorry, this is untranslated sentence.")
+				chatMore lang("お願いだ…。一部、過激なのもいるけどみんな気のいいやつなんだ。", "Come on... Some are extreme, but they are all fancy fans.")
 			}
 		}
 		goto *chat_end
 	}
 	if ( _switch_val == CREATURE_ID_BYSYMLHA_THE_AMBER_EYES | _switch_sw ) {
 		_switch_sw = 0
 		chatList 0, lang("今のままで大丈夫", "It is OK as it is now.")
-		chatList 1, lang("楽がしたい…", "I wish I could ease.")
+		chatList 1, lang("楽がしたい…", "I want to relax...")
 		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_OVERDOSE ) {
-			chatList 2, lang("経験値倍率を変えたい", "I wish change magnification of exp.")
+			chatList 2, lang("経験値倍率を変えたい", "I want to change the exp multiplier.")
 		}
 		if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
-			chatList 3, lang("残機数を変えたい", "I wish change number of remaining lives.")
+			chatList 3, lang("残機数を変えたい", "I want to change my number of extra lives.")
 		}
-		buff = lang("この宇宙は苦難で満ちているのです。私と一緒に…少しでも楽な方へと堕ちていきませんか？", "Hey... you can change to an easier game mode than now...")
+		buff = lang("この宇宙は苦難で満ちているのです。私と一緒に…少しでも楽な方へと堕ちていきませんか？", "This universe is full of suffering. I can take you to a nicer place, an easier life... Won't you come with me?")
 		gosub *chat_select
 		if ( chatval == 1 ) {
-			chatMore lang("ふふふ…♪もうこの宇宙には戻ってこれませんけど、構いませんよね？さぁ、一度そっと目を閉じて。…そして開いて、私の瞳孔を見つめるのです。", "You can not return to the original game mode. Now, please look at my eyes.")
+			chatMore lang("ふふふ…♪もうこの宇宙には戻ってこれませんけど、構いませんよね？さぁ、一度そっと目を閉じて。…そして開いて、私の瞳孔を見つめるのです。", "Fufufu... You don't mind that we can't come back to this universe? Good, good. Now, look into my eyes...")
 			goto *com_change_gamemode
 		}
 		if ( chatval == 2 ) {
 			chatList 0, lang("3倍にする（デフォルト）", "Change to 3-fold.")
 			chatList 1, lang("5倍にする", "Change to 5-fold.")
 			chatList 2, lang("10倍にする", "Change to 10-fold.")
 			chatList 3, lang("20倍にする", "Change to 20-fold.")
 			chatList 4, lang("30倍にする", "Change to 30-fold.")
-			buff = lang("アハァ♪わかりますよ、ええわかりますとも。物足りないのでしょう？さぁ、倍率を迷う必要なんてありません。どうせ、遅かれ早かれ最終的には最大倍率を選ぶのですから。", "Aha.. I understand you. I know that you are unsatisfactory! Well, there is no need to get lost. Anyway, sooner or later you will ultimately choose the maximum magnification.")
+			buff = lang("アハァ♪わかりますよ、ええわかりますとも。物足りないのでしょう？さぁ、倍率を迷う必要なんてありません。どうせ、遅かれ早かれ最終的には最大倍率を選ぶのですから。", "Aha~... Yes, yes, I understand. You must not be satisfied with the current slow pace. Would you like something faster? Come, let go of your inhibitions and tell me what you desire...")
 			gosub *chat_select
 			if ( chatval == 0 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("ん〜？これで本当にいいんですかぁ？", "What...? Is this really OK?"), strbye
+				chatMore lang("ん〜？これで本当にいいんですかぁ？", "Hmm...? Is that really enough for you?"), strbye
 				gdata(GDATA_FLAG_OVERDOSE_MODE_EXP_MULT) = 0
 			}
 			if ( chatval == 1 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("欲望の解放にブレーキをかけているのですね。かわいい〜♪", "Oh...You are braking the release of desire. Cute!"), strbye
+				chatMore lang("欲望の解放にブレーキをかけているのですね。かわいい〜♪", "You're trying to hold back, aren't you? Cute~"), strbye
 				gdata(GDATA_FLAG_OVERDOSE_MODE_EXP_MULT) = 2
 			}
 			if ( chatval == 2 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("中途半端が一番体によくないものです…。選び直さなくていいんですか…？", "The halfway is the most bad thing. Do not you have to select again...?"), strbye
+				chatMore lang("中途半端が一番体によくないものです…。選び直さなくていいんですか…？", "Leaving things halfway? That's no good. Wouldn't you like to pick a better option?"), strbye
 				gdata(GDATA_FLAG_OVERDOSE_MODE_EXP_MULT) = 7
 			}
 			if ( chatval == 3 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("「昔はそうだったから」セーフなんですよね？でも今は更に上があるんですよ？", "It is safe, because it used to be so, is not it? So are you really satisfied?"), strbye
+				chatMore lang("「昔はそうだったから」セーフなんですよね？でも今は更に上があるんですよ？", "\"It should be safe since that's how it used to be\", eh? But are you really satisfied knowing that there's now an even higher level?"), strbye
 				gdata(GDATA_FLAG_OVERDOSE_MODE_EXP_MULT) = 17
 			}
 			if ( chatval == 4 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("いいんですよ…自分自身で選んだ快楽で、頭おかしくなっちゃいましょうねぇ♪", "It's ok...Please be crazy with head pleasure you chose...!"), strbye
+				chatMore lang("いいんですよ…自分自身で選んだ快楽で、頭おかしくなっちゃいましょうねぇ♪", "It's okay, don't worry. Enjoy the pleasure you've chosen for yourself. Go crazy..."), strbye
 				gdata(GDATA_FLAG_OVERDOSE_MODE_EXP_MULT) = 27
 			}
 			goto *chat_end
 		}
 		if ( chatval == 3 ) {
 			chatList 0, lang("残機0にする（デフォルト）", "I do not need it.")
 			chatList 1, lang("残機3にする", "Get 3 remaining lives.")
 			chatList 2, lang("残機9にする", "Get 9 remaining lives.")
 			chatList 3, lang("残機20にする", "Get 20 remaining lives.")
 			chatList 4, lang("残機99にする", "Get 99 remaining lives.")
-			buff = lang("ほら、いくつ欲しいんですか…言ってくれなきゃわかりませんよ？足りなくなっても、いくらでも補充してさしあげますからね…。", "Here, how many do you want...? I do not know unless you tell me. When that is no longer enough, I will refill and give you...")
+			buff = lang("ほら、いくつ欲しいんですか…言ってくれなきゃわかりませんよ？足りなくなっても、いくらでも補充してさしあげますからね…。", "Of course. Here, how many do you want? I'll give you all that you desire. And when that is no longer enough, come back and I'll give you even more...")
 			gosub *chat_select
 			if ( chatval == 0 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("あらあら。いまさらプライドを見せたところで無意味でしょう？", "Oh dear... Even if you show pride, it's too late."), strbye
+				chatMore lang("あらあら。いまさらプライドを見せたところで無意味でしょう？", "My oh my... Isn't it a bit late for you to try to show pride like that?"), strbye
 				gdata(GDATA_FLAG_REMAINING_LIVES) = 0
 			}
 			if ( chatval == 1 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("欲望の解放にブレーキをかけているのですね。かわいい〜♪", "Oh...You are braking the release of desire. Cute!"), strbye
+				chatMore lang("欲望の解放にブレーキをかけているのですね。かわいい〜♪", "You're trying to hold back, aren't you? Cute~"), strbye
 				gdata(GDATA_FLAG_REMAINING_LIVES) = 3
 			}
 			if ( chatval == 2 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("中途半端が一番体によくないものです…。選び直さなくていいんですか…？", "The halfway is the most bad thing. Do not you have to select again...?"), strbye
+				chatMore lang("中途半端が一番体によくないものです…。選び直さなくていいんですか…？", "Leaving things halfway? That's no good. Wouldn't you like to pick a better option?"), strbye
 				gdata(GDATA_FLAG_REMAINING_LIVES) = 9
 			}
 			if ( chatval == 3 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("これっぽっちで不安になりませんか？もっと増やさなくていいんですか…？", "Will not you be anxious only by this? Do not you have to increase more...?"), strbye
+				chatMore lang("これっぽっちで不安になりませんか？もっと増やさなくていいんですか…？", "Hmm, are you sure that's enough? Wouldn't you feel safer if you had even more...?"), strbye
 				gdata(GDATA_FLAG_REMAINING_LIVES) = 20
 			}
 			if ( chatval == 4 ) {
 				snd SOUNDLIST_LOAD
-				chatMore lang("悪魔もびっくりですよ？本当に…本当に欲張りさぁん♪", "What hell! Really, really greedy..!"), strbye
+				chatMore lang("悪魔もびっくりですよ？本当に…本当に欲張りさぁん♪", "Well, aren't you greedy? Even a demon would be shocked by your avarice... Fufufu..."), strbye
 				gdata(GDATA_FLAG_REMAINING_LIVES) = 99
 			}
 			goto *chat_end
 		}
 		chatMore lang("適度な苦難こそが人を成長させる…そして、苦難を乗り越えなければ得られない悦びもある…。ええ、わかっていますとも。頭ではわかっていても…私の身体がわかってくれないのです。", "I already know. Just right difficulties will make people grow. And there are pleasures that can not be gained unless you overcome difficulties..."), strbye
@@ -12929,12 +12969,12 @@
 							chatList 4, lang("牙の♀", "Fanged female.")
 							buff = lang("合計2体までなら化身をくれてやってもいいがどうする？爪の鋭い奴と牙がすごい奴がいるんだが。", "I can give you up to two servants. How 'bout it? There are ones with sharp talons and some with really impressive teeth.")
 							gosub *chat_select
 							if ( get_freeally() == 0 ) {
 								chatMore lang("む。そもそも仲間の最大数に達しているから連れていけないのか。", "Hmm. It looks like your party is already full and you can't invite someone anymore.")
-						goto *chat_end
-					}
+								goto *chat_end
+							}
 							if ( chatval == 0 ) {
 								chatMore lang("そうか…。", "I see.")
 							}
 							if ( chatval >= 1 & chatval <= 4 ) {
 								gdata(GDATA_FLAG_LEOLD_LOCATION_STATE)++
@@ -14047,16 +14087,16 @@
 	gmode 0
 	pos 0, 0
 	gcopy selbufb, 0, 0, windoww, windowh
 	gmode 2
 	snd SOUNDLIST_LOAD
-	chatMore lang("あはははははっ！本当に選んでしまったのですね…♪ようこそ、新しい宇宙へ。", "Hahahaha! You really chose it...! Welcome to the new universe!!")
+	chatMore lang("あはははははっ！本当に選んでしまったのですね…♪ようこそ、新しい宇宙へ。", "Ahahahahaha! You really chose it... Welcome to the new universe.")
 	if ( gdata(GDATA_FLAG_GAME_MODE) >= GAMEMODE_ESSENTIAL & gdata(GDATA_FLAG_GAME_MODE) <= GAMEMODE_NATURAL ) {
-		chatMore lang("予言してあげます。一度楽することを選んだあなたは…これでもすぐに満足できなくなるのです。うふふ、ここからさらに堕ちていくのですよ？その時が楽しみですね…。", "I will predict. You chose to go easy... you will not be satisfied with this at once. You will fall further from here. I am looking forward to that time...")
+		chatMore lang("予言してあげます。一度楽することを選んだあなたは…これでもすぐに満足できなくなるのです。うふふ、ここからさらに堕ちていくのですよ？その時が楽しみですね…。", "But why stop here? You already chose to take the easy path, after all... Ufufu, will you fall even further? I think you will. I'm looking forward to seeing you again...")
 	}
 	if ( gdata(GDATA_FLAG_GAME_MODE) == GAMEMODE_PURGE ) {
-		chatMore lang("ふふっ♪堕ちるところまで堕ちましたね…。でもいつか、きっとこれでも満足できなくなるのです。それまでの残り少ない時間…存分に快楽に身を委ねるといいのです。", "You fell to the limit...! Someday, you certainly will not be satisfied with this. The remaining time until then... entrust yourself to pleasure.")
+		chatMore lang("ふふっ♪堕ちるところまで堕ちましたね…。でもいつか、きっとこれでも満足できなくなるのです。それまでの残り少ない時間…存分に快楽に身を委ねるといいのです。", "Fufufu... You fell to the very limit... But someday, surely even this won't be enough for you. Until then, enjoy yourself to your heart's content...")
 		txt_questitem
 		flt
 		itemcreate -1, ITEM_ID_GOLD_PIECE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 1000000
 		dbg_noautosave = 1
 		cdata(CDATA_SKILLPOINT, CHARA_PLAYER) += 10000
@@ -14080,11 +14120,11 @@
 	chatMore lang("すまん。今の俺ではこれ以上鍛えることができないようだ。", "Sorry, but I don't think I can train you any further right now.")
 	goto *chat_unique
 
 *chat_unique_leold_lack_ap
 	snd SOUNDLIST_FAIL1
-	chatMore lang("…こりゃもっとAP貯めないと無理だな。APを貯めるには、レベルに関係なく初期ステータス(INIT)で数段上回る敵を倒す必要がある。", "...I can't do that unless you save up more AP. You'll need to defeat enemies with high INIT, regardless of their level, to gain AP.")
+	chatMore lang("…こりゃもっとAP貯めないと無理だな。APを貯めるには、レベルに関係なく初期ステータス(INIT)で数段上回る敵を倒す必要がある。", "...I can't do that unless you save up more AP. You'll need to defeat enemies with high INI, regardless of their level, to gain AP.")
 	goto *chat_unique
 
 *chat_unique_leold_done
 	if ( leoval != (-2) ) {
 		allyctrl = 3
@@ -14679,13 +14719,13 @@
 	snd SOUNDLIST_EQUIP1
 	chatMore lang("え…あ、ありがと〜！！おかあさん…薬だよ。これでよくなるよね？", "R-Really? Mommy, mommy! " + cdatan(CDATAN_NAME, CHARA_PLAYER) + " gave us a cure! Are you gonna be okay now?")
 	return 1
 
 *chat_unique_enthumesis
-	chatMore lang("累計放出量から予測した状態を、ソピアーから聞いていたが…それよりもだいぶ弱っているようだ。", "Sorry, this is untranslated sentence."), strmore, findchara(CREATURE_ID_BLACK_GAUNTLET_LEOLD)
-	chatMore lang("一度でいいから会いたいよ…。どうすれば会えるの？こいつらの知識を取り込めばわかるの？", "Sorry, this is untranslated sentence."), strmore, findchara(CREATURE_ID_ENTHUMESIS)
-	chatMore lang("情けをかけるのは危険だ。仕留めるぞ。", "Sorry, this is untranslated sentence."), strmore, findchara(CREATURE_ID_BLACK_GAUNTLET_LEOLD)
+	chatMore lang("累計放出量から予測した状態を、ソピアーから聞いていたが…それよりもだいぶ弱っているようだ。", "I heard from Sopia the state predicted from cumulative release amount... It seems that it is much weaker than that."), strmore, findchara(CREATURE_ID_BLACK_GAUNTLET_LEOLD)
+	chatMore lang("一度でいいから会いたいよ…。どうすれば会えるの？こいつらの知識を取り込めばわかるの？", "I want to see you because it is good at once. How can I see them? Can you understand by incorporating these knowledge?"), strmore, findchara(CREATURE_ID_ENTHUMESIS)
+	chatMore lang("情けをかけるのは危険だ。仕留めるぞ。", "Pardoning is dangerous. I will take it down."), strmore, findchara(CREATURE_ID_BLACK_GAUNTLET_LEOLD)
 	gdata(GDATA_FLAG_MAIN) = 710
 	txt_questupdate
 	goto *chat_end
 
 *chat_unique_lankata
@@ -14719,11 +14759,11 @@
 	chatMore lang("私は…助かったのですか？", "I-I'm saved?"), strmore, findchara(CREATURE_ID_ALFRED_THE_CANGNAN_WIND)
 	chatMore lang("父上…！よかった、本当によかった…。", "Oh, I'm so glad, father!"), strmore, findchara(CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE)
 	chatMore lang("ランカータ、なぜ貴方がここに？衛生兵なのに一人でここまで来たのですか？", "Why are you here Lankata? The medic came here on their own?"), strmore, findchara(CREATURE_ID_ALFRED_THE_CANGNAN_WIND)
 	chatMore lang("その話は後です。さぁ、脱出しましょう。", "We'll talk about that later. Let's escape first."), strmore, findchara(CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE)
 	chatMore lang("おっといけません。その前に。", "Uh-oh, we can't go that way."), strmore, findchara(CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE)
-	chatMore lang("名も知らぬ冒険者…貴方が露払いをしていなければ、私はきっと間に合わなかったでしょう。貴方は降りかかる火の粉を払っただけでしょうが、結果的に助かりました。感謝します。", "Sorry, this is untranslated sentence."), strmore, findchara(CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE)
+	chatMore lang("名も知らぬ冒険者…貴方が露払いをしていなければ、私はきっと間に合わなかったでしょう。貴方は降りかかる火の粉を払っただけでしょうが、結果的に助かりました。感謝します。", "An unknown adventurer... If you were not paying casualty, I would not have made it on time. You will only pay befall sparks, but was saved in the result. I appreciate it."), strmore, findchara(CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE)
 	snd SOUNDLIST_TELEPORT1
 	txt lang(name(tc) + "は次元の扉を開けた。", name(tc) + " opens a dimensional door.")
 	chara_vanquish findchara(CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE)
 	chara_vanquish findchara(CREATURE_ID_ALFRED_THE_CANGNAN_WIND)
 	gosub *music_play
@@ -15156,11 +15196,10 @@
 			if ( cdata(CDATA_ROLE, tc) != ROLE_SHOP_WANDER & cdata(CDATA_ROLE, tc) != ROLE_SHOP_TRADE ) {
 				chatList 12, lang("投資したい", "Need someone to invest in your shop?")
 			}
 		}
 		if ( cdata(CDATA_ROLE, tc) == ROLE_BARTENDER ) {
-			chatList 93, lang("飲み物を注文する", "Bring me something to drink.") + " (" + calcmealvalue() + strgold + ")"
 			chatList 33, lang("仲間を呼び戻す", "Call back my allies.")
 		}
 		if ( cdata(CDATA_ROLE, tc) == ROLE_SLAVER ) {
 			if ( get_freeally() != 0 ) {
 				chatList 36, lang("奴隷を買う", "I want to buy a slave.")
@@ -15643,30 +15682,10 @@
 			}
 		}
 		buff = lang("冷やかし" + _ka(1), "You kidding?")
 		goto *chat_default
 	}
-	if ( chatval == 93 ) {
-		if ( cdata(CDATA_GOLD, CHARA_PLAYER) < calcmealvalue() ) {
-			buff = strnogold
-			goto *chat_default
-		}
-		if ( cdata(CDATA_THIRST, CHARA_PLAYER) >= 15000 ) {
-			buff = lang("喉が渇いているようにはみえない" + _yo(), "You don't seem that thirsty.")
-			goto *chat_default
-		}
-		snd SOUNDLIST_PAYGOLD1
-		cdata(CDATA_GOLD, CHARA_PLAYER) -= calcmealvalue()
-		snd SOUNDLIST_DRINK1
-		cdata(CDATA_THIRST, CHARA_PLAYER) = 15000
-		if ( cdata(CDATA_HUNGER, CHARA_PLAYER) < 15000 - 1000 ) {
-			cdata(CDATA_HUNGER, CHARA_PLAYER) += 1000
-		}
-		buff = lang(_dozo(), "Here you are.")
-		txt lang("なかなか美味しかった。", "It was tasty."), lang("悪くない。", "Not bad at all."), lang("あなたは舌鼓をうった。", "You smack your lips.")
-		goto *chat_default
-	}
 	if ( chatval == 94 ) {
 		chatList 0, lang("別行動時は(遠距離)散策", "Roam while breaking apart.")
 		chatList 1, lang("別行動時は(近距離)散策", "Dull while breaking apart.")
 		chatList 2, lang("別行動時は直立不動で待機", "Stand while breaking apart.")
 		chatList 3, lang("別行動時でも随行", "Follow while breaking apart.")
@@ -15717,11 +15736,11 @@
 		goto *chat_end
 	}
 	if ( chatval == 86 ) {
 		value = (-cdata(CDATA_KARMA, CHARA_PLAYER) + 200) / 5 * (cdata(CDATA_DRUG_DEPENDENCE, CHARA_PLAYER) + 300)
 		chatMore lang("…。", "...")
-		buff = lang("うちのキセルは特別製" + _da() + "値段は" + value + "gold" + _ga(3) + "、欲しい" + _noka(1), "Our kiseru is special made. Price is " + value + "gp.")
+		buff = lang("うちのキセルは特別製" + _da() + "値段は" + value + "gold" + _ga(3) + "、欲しい" + _noka(1), "Our kiseru is special made. Price is " + value + " gold.")
 		if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= value ) {
 			chatList 1, lang("欲しい…", "I want it...")
 		}
 		chatList 0, lang("いらない", "I'll pass.")
 		chatesc = 1
@@ -16172,11 +16191,11 @@
 			if ( f == 0 ) {
 				txt lang("仲間の最大数に達しているため、呼び戻せない。", "Your party is full. You can't invite anyone else.")
 				goto *chat_default
 			}
 			listmax = 0
-			buff = lang("そいつを呼び戻すには、" + calcresurrectvalue(rc) + strgold + "必要" + _da(), "Alright. We took good care of your pet. It will cost you " + calcresurrectvalue(rc) + "gp.")
+			buff = lang("そいつを呼び戻すには、" + calcresurrectvalue(rc) + strgold + "必要" + _da(), "Alright. We took good care of your pet. It will cost you " + calcresurrectvalue(rc) + " gold pieces.")
 			if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= calcresurrectvalue(rc) ) {
 				chatList 1, lang("呼び戻す", "I'll pay.")
 			}
 			chatList 0, lang("やめる", "Never mind.")
 			chatesc = 1
@@ -16790,11 +16809,10 @@
 		}
 		goto *chat_default
 	}
 	if ( chatval == 97 ) {
 		listmax = 0
-		buff = lang("(" + name(tc) + "は悲しそうな目であなたを見ている。本当に縁を切る？)", "(" + name(tc) + " looks at you sadly. Really abandon " + him(tc) + "? )")
 		buff = lang("(" + name(tc) + "をあなたの神に贈る？)", "( Really offer " + him(tc) + " to your god? )")
 		chatList 1, lang("贈る", "Yes.")
 		chatList 0, lang("やめておく", "No.")
 		chatesc = 1
 		gosub *chat_select
@@ -16836,11 +16854,11 @@
 		allyctrl = 1
 		gosub *com_ally
 		if ( stat != (-1) ) {
 			rc = stat
 			listmax = 0
-			buff = lang("なかなかの身体つき" + _dana() + calcslavevalue(rc) * 2 / 3 + strgold + "でどう" + _da(1), "Let me see... Hmm, this one's got a nice figure. I'll give you " + calcslavevalue(rc) * 2 / 3 + "gp.")
+			buff = lang("なかなかの身体つき" + _dana() + calcslavevalue(rc) * 2 / 3 + strgold + "でどう" + _da(1), "Let me see... Hmm, this one's got a nice figure. I'll give you " + calcslavevalue(rc) * 2 / 3 + " gold pieces.")
 			chatList 1, lang("売る", "Deal.")
 			chatList 0, lang("やめる", "No way.")
 			chatesc = 1
 			gosub *chat_select
 			if ( chatval == 1 ) {
@@ -16968,20 +16986,20 @@
 		if ( ( jp & rnd(5) ) | ( en & rnd(3) ) ) {
 			mdatan(MDATAN_NAME) += lang("", " ") + s(rnd(10))
 		}
 		screenupdate = -1
 		gosub *screen_refreshFull
-		buff = lang("そう" + _dana() + "これからこの家の名前は" + mdatan(MDATAN_NAME) + _da(), "Hey, I've come up a good idea! \"" + mdatan(MDATAN_NAME) + "\", doesn't it sound so charming?")
+		buff = lang("そう" + _dana() + "これからこの家の名前は" + mdatan(MDATAN_NAME) + _da(), "Hey, I've come up with a good idea! \"" + mdatan(MDATAN_NAME) + "\", doesn't it sound charming?")
 		goto *chat_default
 	}
 	if ( chatval == 46 ) {
 		if ( cdata(CDATA_KARMA, CHARA_PLAYER) >= (-30) ) {
 			buff = lang("その程度の罪なら自分でなんとかしなさい。", "You karma isn't that low. Come back after you have committed more crimes!")
 			goto *chat_default
 		}
 		listmax = 0
-		buff = lang("免罪符を希望する" + _noka(1) + calcguiltvalue() + strgold + "かかるけどいいの" + _kana(1), "In the authority of all the saints, I will grant you an indulgence, for money of course. The price is " + calcguiltvalue() + "gp.")
+		buff = lang("免罪符を希望する" + _noka(1) + calcguiltvalue() + strgold + "かかるけどいいの" + _kana(1), "In the authority of all the saints, I will grant you an indulgence, for money of course. The price is " + calcguiltvalue() + " gold pieces.")
 		if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= calcguiltvalue() ) {
 			chatList 1, lang("買う", "Deal.")
 		}
 		chatList 0, lang("やめる", "The price is too high.")
 		chatesc = 1
@@ -17002,11 +17020,11 @@
 		allyctrl = 4
 		gosub *com_ally
 		if ( stat != (-1) ) {
 			rc = stat
 			listmax = 0
-			buff = lang("100 goldかかるけどいい" + _ka(1), "It will cost you 100gp.")
+			buff = lang("100 goldかかるけどいい" + _ka(1), "It will cost you 100 gold pieces.")
 			if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= 100 ) {
 				chatList 1, lang("調査する", "Investigate.")
 			}
 			chatList 0, lang("やめる", "No way!")
 			chatesc = 1
@@ -17165,11 +17183,11 @@
 		}
 		chatid = -1
 		goto *chat_default
 	}
 	if ( chatval == 50 ) {
-		buff = lang(_ore(3) + "の剣が必要な" + _noka(1) + "そう" + _dana(3) + "、" + calchireadv(tc) + strgold + "払うならば、7日間護衛を引き受け" + _ru(), "I will take the job for " + calchireadv(tc) + "gp, for seven days.")
+		buff = lang(_ore(3) + "の剣が必要な" + _noka(1) + "そう" + _dana(3) + "、" + calchireadv(tc) + strgold + "払うならば、7日間護衛を引き受け" + _ru(), "I will take the job for " + calchireadv(tc) + " gold pieces, for seven days.")
 		if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= calchireadv(tc) ) {
 			chatList 1, lang("頼む", "Sounds fair enough.")
 		}
 		chatList 0, lang("やめる", "Some other time.")
 		chatesc = 1
@@ -17253,11 +17271,11 @@
 		}
 		if ( adata(ADATA_SHOP_SALE_RESTRICTION, gdata(GDATA_AREA)) == 100 ) {
 			buff = lang("今は在庫の準備中" + _da(), "It is currently in preparation.")
 			goto *chat_default
 		}
-		buff = lang("そう" + _dana(3) + "、全員の特殊矢弾を補充すると" + calccostreload(CHARA_PLAYER) + strgold + _da(), "Sure, let me check what type of ammo you need... Okay, reloading all of your ammo will cost " + calccostreload(CHARA_PLAYER) + "gp.")
+		buff = lang("そう" + _dana(3) + "、全員の特殊矢弾を補充すると" + calccostreload(CHARA_PLAYER) + strgold + _da(), "Sure, let me check what type of ammo you need... Okay, reloading all of your ammo will cost " + calccostreload(CHARA_PLAYER) + " gold pieces.")
 		if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= calccostreload(CHARA_PLAYER) ) {
 			chatList 1, lang("頼む", "Alright.")
 		}
 		chatList 0, lang("やめる", "Another time.")
 		chatesc = 1
@@ -17312,11 +17330,11 @@
 		sexvalue = sdata(SKILL_ATTR_CHA, tc) * 25 + 100 + cdata(CDATA_FAME, CHARA_PLAYER) / 10
 		if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= sexvalue ) {
 			chatList 1, lang("はじめる", "Let's do it.")
 		}
 		chatList 0, lang("やめる", "W-Wait...")
-		buff = lang("そう" + _dana() + "金貨" + sexvalue + "枚を前払いで" + _kure(), "Okay sweetie, I need " + sexvalue + "gp upfront.")
+		buff = lang("そう" + _dana() + "金貨" + sexvalue + "枚を前払いで" + _kure(), "Okay sweetie, I need " + sexvalue + " gold pieces upfront.")
 		gosub *chat_select
 		if ( chatval != 1 ) {
 			buff = lang("冷やかし" + _ka(1), "You kidding?")
 			goto *chat_default
 		}
@@ -17610,11 +17628,11 @@
 			wcost = limit(wlv * wlv * sqrt(wlv) * 300 + 1000, 1000, 500000)
 			if ( gdata(GDATA_FLAG_GUILD_FIGHTER) ) {
 				wcost /= 2
 			}
 			if ( inv(INV_ITEM_LEVEL, ci) > 9 ) {
-				buff = lang("こいつはちょっと無理です。", "It is sort of impossible at this stage.")
+				buff = lang("こいつはちょっと無理です。", "I can't enhance it anymore.")
 				goto *chat_default
 			}
 			listmax = 0
 			if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= wcost ) {
 				chatList 1, lang("強化する", "Enhance equipment.")
@@ -17647,10 +17665,14 @@
 		invctrl = 23, 18
 		snd SOUNDLIST_INV
 		gosub *com_inventory
 		if ( stat == 1 ) {
 			wcost = 12000
+			if ( inv(INV_ITEM_WEIGHT, ci) <= 10 ) {
+				buff = lang("こいつはちょっと無理です。", "It is sort of impossible at this stage.")
+				goto *chat_default
+			}
 			listmax = 0
 			if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= wcost ) {
 				chatList 1, lang("0.1s軽くする", "Make equipment 0.1s lighter.")
 			}
 			if ( cdata(CDATA_GOLD, CHARA_PLAYER) >= wcost * 10 ) {
@@ -17923,11 +17945,11 @@
 			plat = limit((plat + 1) / 150 + 2, 3, 10)
 			if ( cdata(CDATA_PLATINUM, CHARA_PLAYER) >= plat ) {
 				chatList 1, lang("いいよ", "Sure.")
 			}
 			chatList 0, lang("だめ", "Cancel.")
-			buff = lang("この実習には" + plat + strplat + "かかるけどいい" + _kana(1), "This practice will cost you " + plat + "pp.")
+			buff = lang("この実習には" + plat + strplat + "かかるけどいい" + _kana(1), "This practice will cost you " + plat + " platinum pieces.")
 			gosub *chat_select
 			if ( chatval >= 1 ) {
 				repeat MAX_SPELL - STARTING_SKILL_SPELL, STARTING_SKILL_SPELL
 					if ( spell(cnt - STARTING_SKILL_SPELL) <= 0 ) {
 						continue
@@ -18111,11 +18133,11 @@
 			continue
 		}
 		break
 	loop
 	listmax = 0
-	buff = lang("そう" + _dana() + "" + cdatan(CDATAN_NAME, MAX_CHARA_NC) + "を" + calcslavevalue(MAX_CHARA_NC) + strgold + "でどう" + _da(1), "Okay. Let me check the stable... How about " + cnven(cdatan(CDATAN_NAME, MAX_CHARA_NC)) + " for " + calcslavevalue(MAX_CHARA_NC) + "gp. I'd say it's quite a bargain!")
+	buff = lang("そう" + _dana() + "" + cdatan(CDATAN_NAME, MAX_CHARA_NC) + "を" + calcslavevalue(MAX_CHARA_NC) + strgold + "でどう" + _da(1), "Okay. Let me check the stable... How about " + cnven(cdatan(CDATAN_NAME, MAX_CHARA_NC)) + " for " + calcslavevalue(MAX_CHARA_NC) + " gold pieces. I'd say it's quite a bargain!")
 	if ( cdata(CDATA_LEVEL, CHARA_PLAYER) >= 4 ) {
 		chatList 2, lang("カタログAを見る(レベル" + limit(cdata(CDATA_LEVEL, CHARA_PLAYER) / 2 + 5, 6, 130) + "以下)", "Catalog A (Level < " + limit(cdata(CDATA_LEVEL, CHARA_PLAYER) / 2 + 5, 6, 130) + ")")
 	}
 	if ( cdata(CDATA_LEVEL, CHARA_PLAYER) >= 4 ) {
 		chatList 3, lang("カタログBを見る(レベル" + limit(cdata(CDATA_LEVEL, CHARA_PLAYER) / 4 + 5, 6, 50) + "以下)", "Catalog B (Level < " + limit(cdata(CDATA_LEVEL, CHARA_PLAYER) / 4 + 5, 6, 50) + ")")
@@ -18290,17 +18312,17 @@
 		buff = lang("訓練が必要なときは、声をかけて" + _kure(), "Come see me again when you need more training.")
 		goto *chat_default
 	}
 	listmax = 0
 	if ( csctrl == 2 ) {
-		buff = lang(skillname(csskill) + "の能力を訓練するには" + calctraincost(csskill, cc) + strplat + "かかるけどいい" + _kana(1), "Training " + skillname(csskill) + " will cost you " + calctraincost(csskill, cc) + "pp.")
+		buff = lang(skillname(csskill) + "の能力を訓練するには" + calctraincost(csskill, cc) + strplat + "かかるけどいい" + _kana(1), "Training " + skillname(csskill) + " will cost you " + calctraincost(csskill, cc) + " platinum pieces.")
 		if ( cdata(CDATA_PLATINUM, CHARA_PLAYER) >= calctraincost(csskill, cc) ) {
 			chatList 1, lang("訓練する", "Train me.")
 		}
 	}
 	else {
-		buff = lang(skillname(csskill) + "の能力を習得するには" + calclearncost(csskill, cc) + strplat + "かかるけどいい" + _kana(1), "Learning " + skillname(csskill) + " will cost you " + calclearncost(csskill, cc) + "pp.")
+		buff = lang(skillname(csskill) + "の能力を習得するには" + calclearncost(csskill, cc) + strplat + "かかるけどいい" + _kana(1), "Learning " + skillname(csskill) + " will cost you " + calclearncost(csskill, cc) + " platinum pieces.")
 		item_find ITEM_ID_SKILL_TICKET, 3, 1
 		if ( stat != (-1) ) {
 			ci = stat
 			if ( inv(INV_ITEM_NUM, ci) >= 1 ) {
 				chatList 2, lang("スキルチケットで習得する", "Teach me the skill in exchange for a skill ticket.")
@@ -18949,11 +18971,11 @@
 	}
 	if ( cdata(CDATA_ROLE, tc) == ROLE_SHOP_MOUNTAIN2 ) {
 		p /= 2
 	}
 	if ( cdata(CDATA_ROLE, tc) == ROLE_SHOP_STOKE ) {
-		p = 18
+		p = 19
 	}
 	if ( cdata(CDATA_ROLE, tc) == ROLE_SHOP_MOYER ) {
 		p /= 4
 	}
 	if ( cdata(CDATA_FAME, tc) > 0 ) {
@@ -19505,22 +19527,25 @@
 			}
 			if ( cnt == 13 ) {
 				dbid = ITEM_ID_STRADIVARIUS
 			}
 			if ( cnt == 14 ) {
-				dbid = ITEM_ID_VALKOINEN_KUOLEMA
+				dbid = ITEM_ID_SUPER_LURE
 			}
 			if ( cnt == 15 ) {
-				dbid = ITEM_ID_HERO_CHEESE
+				dbid = ITEM_ID_VALKOINEN_KUOLEMA
 			}
 			if ( cnt == 16 ) {
-				dbid = ITEM_ID_MAGIC_FRUIT
+				dbid = ITEM_ID_HERO_CHEESE
 			}
 			if ( cnt == 17 ) {
+				dbid = ITEM_ID_MAGIC_FRUIT
+			}
+			if ( cnt == 18 ) {
 				dbid = ITEM_ID_HAPPY_APPLE
 			}
-			if ( cnt > 17 ) {
+			if ( cnt > 18 ) {
 				continue
 			}
 		}
 		itemcreate -1, dbid, -1, -1, 0
 		if ( stat == 0 ) {
diff -U5 --recursive 1.90.4-custom/command.hsp 1.90.4.2-custom-g/command.hsp
--- 1.90.4-custom/command.hsp	2021-09-02 12:55:06.355971400 -0700
+++ 1.90.4.2-custom-g/command.hsp	2021-09-02 12:55:06.808411300 -0700
@@ -1318,23 +1318,10 @@
 		}
 		if ( kokoro == 4 ) {
 			s = lang("美味しい手料理が食べたい", "Want to eat delicious home cooking")
 		}
 	}
-	if ( cdata(CDATA_THIRST, tc) <= 6000 ) {
-		s = lang("干からびそう", "Looks completely dried up")
-		kokoro = rnd(4)
-		if ( kokoro == 1 ) {
-			s = lang("喉がカラカラだ", "My throat hurts")
-		}
-		if ( kokoro == 2 ) {
-			s = lang("水分不足でふらふらする", "Seems disoriented from the lack of water")
-		}
-		if ( kokoro == 3 ) {
-			s = lang("み、水…", "W-Water...")
-		}
-	}
 	if ( cdata(CDATA_EVOCHAT_POINTS, tc) > 0 ) {
 		s = lang("今日も一日頑張れそう", "I can work hard today")
 		kokoro = rnd(3)
 		if ( kokoro == 1 ) {
 			s = lang("嬉しくてしょうがない", "Happy")
@@ -2362,11 +2349,11 @@
 	noteadd lang("名声: ", "Fame: ") + cdata(CDATA_FAME, CHARA_PLAYER)
 	noteadd ""
 	repeat 9
 		if ( gdata(STARTING_GDATA_RANK + cnt) < 10000 ) {
 			noteadd "" + ranktitle(cnt) + " Rank." + gdata(STARTING_GDATA_RANK + cnt) / 100
-			s = lang("給料: 約 " + calcincome(cnt) + " gold  ", "Pay: About " + calcincome(cnt) + "gp ")
+			s = lang("給料: 約 " + calcincome(cnt) + " gold  ", "Pay: About " + calcincome(cnt) + " gold pieces ")
 			gold += calcincome(cnt)
 			if ( cnt != 3 & cnt != 4 & cnt != 5 & cnt != 8 ) {
 				s += lang("ノルマ: ", "\nDeadline: ") + gdata(STARTING_GDATA_RANK_NORMA + cnt) + lang("日以内", " Days left")
 			}
 			noteadd s
@@ -2395,19 +2382,19 @@
 		noteadd ""
 		noteadd "現在未払いの請求書は" + gdata(GDATA_BILL) + "枚"
 	}
 	else {
 		noteadd "Salary (Paid every 1st and 15th day)"
-		noteadd "@BL  Sum    : About " + gold + strgold
+		noteadd "@BL  Sum    : About " + gold + " GP"
 		noteadd ""
 		noteadd "Bills  (Issued every 1st day)"
-		noteadd "@RE  Labor  : About " + gdata(GDATA_COST_HIRE) + strgold
-		noteadd "@RE  Maint. : About " + calccostbuilding() + strgold
-		noteadd "@RE  Tax    : About " + calccosttax() + strgold
-		noteadd "@RE  Sum    : About " + (gdata(GDATA_COST_HIRE) + calccostbuilding() + calccosttax()) + strgold
+		noteadd "@RE  Labor  : About " + gdata(GDATA_COST_HIRE) + " GP"
+		noteadd "@RE  Maint. : About " + calccostbuilding() + " GP"
+		noteadd "@RE  Tax    : About " + calccosttax() + " GP"
+		noteadd "@RE  Sum    : About " + (gdata(GDATA_COST_HIRE) + calccostbuilding() + calccosttax()) + " GP"
 		if ( gdata(STARTING_GDATA_FLAG + 359) > 0 ) {
-			noteadd "Prepaid Balance " + gdata(STARTING_GDATA_FLAG + 359) + strgold
+			noteadd "Prepaid Balance " + gdata(STARTING_GDATA_FLAG + 359) + " GP"
 		}
 		noteadd ""
 		noteadd "You have " + gdata(GDATA_BILL) + " unpaid bills."
 	}
 	repeat pagesize / 2 - noteinfo(0) \ (pagesize / 2)
@@ -3920,11 +3907,11 @@
 		txt lang("プラチナ硬貨が降ってきた！", "Some platinum coins appear.")
 		flt
 		itemcreate -1, ITEM_ID_PLATINUM_COIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 5
 		goto *com_wish_end
 	}
-	if ( inputlog == "あの犬" | inputlog == "Ano犬" | inputlog == "anoinu" ) {
+	if ( inputlog == "あの犬" | inputlog == "Ano犬" | inputlog == "anoinu" | inputlog == "dog whistle" ) {
 		txt lang("∪・ω・Ｕ 「ニャーン！」", "U'w'U \"Meow!\"")
 		flt
 		itemcreate -1, ITEM_ID_DOG_WHISTLE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 		goto *com_wish_end
 	}
@@ -5466,11 +5453,11 @@
 		gosub *screen_draw
 		goto *pc_turn
 	}
 	if ( p == 8 ) {
 		gsel 4
-		buffer 4, windoww, 720
+		buffer 4, windoww, windowh
 		if ( cdata(CDATA_PORTRAIT, tc) < 80 ) {
 			picload exedir + "graphic\\face1" + devfile + ".bmp", 1
 		}
 		else {
 			picload exedir + "graphic\\face2" + devfile + ".bmp", 1
@@ -5630,21 +5617,21 @@
 			if ( jp ) {
 				txtef COLOR_RED
 				txt name(tc) + "はあなたを見て露骨に嫌そうな顔をしている！", "「きもちわるい」", "「離れろ！このヘンタイ！」", "「うわっ…信じられない…」"
 			}
 			else {
-				txt name(tc) + " looks at you disgustingly!", cnvtalk("Disgusting."), cnvtalk("Get away! Pervert!"), cnvtalk("Wow... Unbelievable...")
+				txt name(tc) + " seems disgusted by you.", cnvtalk("Disgusting."), cnvtalk("Get away! Pervert!"), cnvtalk("Wow... Unbelievable...")
 			}
 			modimp tc, -20
 		}
 		if ( cdata(CDATA_IMPRESSION, tc) >= 0 & cdata(CDATA_IMPRESSION, tc) < 50 ) {
 			if ( jp ) {
 				txtef COLOR_YELLOW
 				txt name(tc) + "はあなたを本気で気持ち悪がっている！", "「それ以上近寄るな」", "「ガード！ガード！！」"
 			}
 			else {
-				txt name(tc) + " is feeling really sorry for you!", cnvtalk("Do not get any closer."), cnvtalk("Guards! Guards!!")
+				txt name(tc) + " glares angrily at you.", cnvtalk("Do not get any closer."), cnvtalk("Guards! Guards!")
 			}
 			modimp tc, -10
 		}
 		if ( cdata(CDATA_IMPRESSION, tc) >= 50 & cdata(CDATA_IMPRESSION, tc) < 100 ) {
 			if ( jp ) {
@@ -7521,11 +7508,11 @@
 	if ( mode != MODELIST_CHARA_CREATION ) {
 		snd SOUNDLIST_CHARA
 	}
 	windowanime wx, wy, ww, wh, 10, 4
 	gsel 4
-	buffer 4, windoww, 720
+	buffer 4, windoww, windowh
 	if ( cdata(CDATA_PORTRAIT, cc) < 80 ) {
 		picload exedir + "graphic\\face1.bmp", 1
 	}
 	else {
 		picload exedir + "graphic\\face2.bmp", 1
@@ -9473,11 +9460,11 @@
 			if ( inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_CURSED | inv(INV_ITEM_STATUS, ci) == ITEM_STATUS_DOOMED ) {
 				txt lang(itemname(ci) + "は外せない。", "" + itemname(ci) + " can't be taken off.")
 				goto *com_wear_loop_pgchk
 			}
 			if ( cdata(CDATA_CONDITION_BRAINWASH, cc) != 0 ) {
-				txt lang(name(cc) + "は頭がぼんやりして装備を変更できない…。", name(cc) + " is confused and can't change their equipment.")
+				txt lang(name(cc) + "は頭がぼんやりして装備を変更できない…。", name(cc) + " " + is(cc) + " confused and can't change " + his(cc) + " equipment.")
 				goto *com_wear_loop_pgchk
 			}
 			r1 = cc
 			gosub *act_unequip
 			r1 = cc
@@ -9697,11 +9684,11 @@
 			/*******************************************************************************
 			The following sections of code adds a "Yes/No" dialogue box when attempting to pick up items
 			that do not belong to you outside of quests and moongates, providing a shortcut to stealing.
 			********************************************************************************/
 
-			if ( sdata(SKILL_ACTIVE_PICKPOCKET, CHARA_PLAYER) != 0 & adata(ADATA_ID, gdata(GDATA_AREA)) != AREA_SHOW_HOUSE & gdata(GDATA_QUEST) != QUEST_TYPE_HUNTEX & gdata(GDATA_QUEST) != QUEST_TYPE_CONQUER & gdata(GDATA_QUEST) != QUEST_TYPE_PARTY ) {
+			if ( sdata(SKILL_ACTIVE_PICKPOCKET, CHARA_PLAYER) != 0 & adata(ADATA_ID, gdata(GDATA_AREA)) != AREA_SHOW_HOUSE & gdata(GDATA_QUEST) != QUEST_TYPE_HUNTEX & gdata(GDATA_QUEST) != QUEST_TYPE_CONQUER & gdata(GDATA_QUEST) != QUEST_TYPE_PARTY & TweakData(50, 0) == 1 ) {
 				txt lang("それを盗もうとしていますか？", "Do you want to attempt to steal it?")
 				promptYesNo
 				if ( rtval == 0 ) {
 					if ( cc == CHARA_PLAYER ) {
 						if ( cdata(CDATA_SP, CHARA_PLAYER) < 50 ) {
@@ -10067,12 +10054,19 @@
 				if ( inv(INV_ITEM_KNOWN, cnt) >= ITEM_KNOWN_FULL ) {
 					continue
 				}
 			}
 			if ( invctrl == 14 ) {
-				if ( inv(INV_ITEM_EFFECT, cnt) == EFFECT_NONE & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_USE) == 0 & ibit(ITEM_BIT_ALIVE, cnt) == 0 & ibit(ITEM_BIT_ULTIMATE, cnt) == 0 & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE) != FILTER_ITEM_POTION ) {
-					continue
+				if ( TweakData(50,1) == 0 ) {
+					if ( inv(INV_ITEM_EFFECT, cnt) == EFFECT_NONE & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_USE) == 0 & ibit(ITEM_BIT_ALIVE, cnt) == 0 & ibit(ITEM_BIT_ULTIMATE, cnt) == 0 ) {
+						continue
+					}
+				}
+				else {
+					if ( inv(INV_ITEM_EFFECT, cnt) == EFFECT_NONE & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_CAN_USE) == 0 & ibit(ITEM_BIT_ALIVE, cnt) == 0 & ibit(ITEM_BIT_ULTIMATE, cnt) == 0 & refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE) != FILTER_ITEM_POTION ) {
+						continue
+					}
 				}
 			}
 			if ( invctrl == 15 ) {
 				if ( reftype != FILTER_CONTAINER ) {
 					continue
@@ -11096,11 +11090,11 @@
 					}
 				}
 				if ( invctrl(1) == 5 ) {
 					if ( inv(INV_ITEM_WEIGHT, ci) >= efp * 100 ) {
 						snd SOUNDLIST_FAIL1
-						txt lang("重さが" + cnvweight(efp * 100) + "以上の物は入らない。", "The container can only hold items weight less than " + cnvweight(efp * 100) + ".")
+						txt lang("重さが" + cnvweight(efp * 100) + "以上の物は入らない。", "The container can only hold items weighing less than " + cnvweight(efp * 100) + ".")
 						goto *com_inventory_loop
 					}
 					if ( inv(INV_ITEM_WEIGHT, ci) < 0 ) {
 						snd SOUNDLIST_FAIL1
 						txt lang("荷物は入らない。", "The container cannot hold cargos")
@@ -11198,11 +11192,11 @@
 				}
 				if ( invctrl == 12 ) {
 					if ( calcitemvalue(ci, 1) * in > cdata(CDATA_GOLD, tc) ) {
 						screenupdate = -1
 						gosub *screen_draw
-						txt lang(name(tc) + "は財布を開いてがっかりした…", name(tc) + " checks " + his(tc) + " wallet and shake " + his(tc) + " head.")
+						txt lang(name(tc) + "は財布を開いてがっかりした…", name(tc) + " checks " + his(tc) + " wallet and shakes " + his(tc) + " head.")
 						msgkeep = 1
 						goto *com_inventory
 					}
 				}
 			}
@@ -11267,43 +11261,10 @@
 			}
 			if ( cdata(CDATA_CONDITION_BRAINWASH, cc) != 0 ) {
 				txt lang(name(cc) + "は頭がぼんやりして装備を変更できない…。", name(cc) + " is confused and can't change their equipment.")
 				goto *com_inventory_loop
 			}
-
-			/********** ORIGINAL - BEGINNING **********
-
-			if ( inv(INV_ITEM_PV, ci) + inv(INV_ITEM_DV, ci) >= 180 ) {
-				txt_unfair
-				goto *com_inventory_loop
-			}
-			if ( inv(INV_ITEM_ATTACK, ci) + inv(INV_ITEM_DAMAGE, ci) >= 80 ) {
-				if ( inv(INV_ITEM_ID, ci) != ITEM_ID_CHEST ) {
-					txt_unfair
-					goto *com_inventory_loop
-				}
-			}
-
-			 ********** ORIGINAL - ENDING **********/
-
-			/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Ignore "Item is too unfair" check.
-
-			if ( TweakData(TWEAK_GAMEPLAY_IGNORE_UNFAIR, TWEAK_CATEGORY_GAMEPLAY) == 0 ) {
-				if ( inv(INV_ITEM_PV, ci) + inv(INV_ITEM_DV, ci) >= 180 ) {
-					txt_unfair
-					goto *com_inventory_loop
-				}
-				if ( inv(INV_ITEM_ATTACK, ci) + inv(INV_ITEM_DAMAGE, ci) >= 80 ) {
-					if ( inv(INV_ITEM_ID, ci) != ITEM_ID_CHEST ) {
-						txt_unfair
-						goto *com_inventory_loop
-					}
-				}
-			}
-
-			/********** BLOODYSHADE CUSTOM - ENDING **********/
-
 			r1 = cc
 			gosub *act_equip
 			r1 = cc
 			gosub *charaRefresh
 			screenupdate = -1
@@ -11335,17 +11296,10 @@
 		}
 		if ( invctrl == 8 ) {
 			screenupdate = -1
 			gosub *screen_draw
 			savecycle
-			if ( cdata(CDATA_THIRST, CHARA_PLAYER) > 10000 ) {
-				if ( gdata(GDATA_FLAG_GAME_MODE) != GAMEMODE_PURGE ) {
-					txt lang("これ以上飲めない…。", "Your are too full to drink."), lang("膀胱がやぶける…", "You are too bloated to drink any more."), lang("まだ喉は渇いていない。", "Your stomach can't digest any more.")
-					gosub *screen_draw
-					goto *pc_turn
-				}
-			}
 			goto *act_drink
 		}
 		if ( invctrl == 9 ) {
 			screenupdate = -1
 			gosub *screen_draw
@@ -11643,43 +11597,10 @@
 					modimp tc, -20
 					cdata(CDATA_EMO_ICON, tc) = 18 + 100 * 3
 					inv(INV_ITEM_NUM, ci)--
 					goto *com_inventory
 				}
-
-				/********** ORIGINAL - BEGINNING **********
-
-				if ( inv(INV_ITEM_PV, ci) + inv(INV_ITEM_DV, ci) >= 180 ) {
-					txt_unfair
-					goto *com_inventory_loop
-				}
-				if ( inv(INV_ITEM_ATTACK, ci) + inv(INV_ITEM_DAMAGE, ci) >= 80 ) {
-					if ( inv(INV_ITEM_ID, ci) != ITEM_ID_CHEST ) {
-						txt_unfair
-						goto *com_inventory_loop
-					}
-				}
-
-				 ********** ORIGINAL - ENDING **********/
-
-				/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Ignore "Item is too unfair" check.
-
-				if ( TweakData(TWEAK_GAMEPLAY_IGNORE_UNFAIR, TWEAK_CATEGORY_GAMEPLAY) == 0 ) {
-					if ( inv(INV_ITEM_PV, ci) + inv(INV_ITEM_DV, ci) >= 180 ) {
-						txt_unfair
-						goto *com_inventory_loop
-					}
-					if ( inv(INV_ITEM_ATTACK, ci) + inv(INV_ITEM_DAMAGE, ci) >= 80 ) {
-						if ( inv(INV_ITEM_ID, ci) != ITEM_ID_CHEST ) {
-							txt_unfair
-							goto *com_inventory_loop
-						}
-					}
-				}
-
-				/********** BLOODYSHADE CUSTOM - ENDING **********/
-
 				item_copy ci, ti
 				inv(INV_ITEM_NUM, ci)--
 				inv(INV_ITEM_NUM, ti) = 1
 				item_stack tc, ti, 1
 				ci = ti
diff -U5 --recursive 1.90.4-custom/custom_tweaks.hsp 1.90.4.2-custom-g/custom_tweaks.hsp
--- 1.90.4-custom/custom_tweaks.hsp	2021-09-02 12:55:06.360020300 -0700
+++ 1.90.4.2-custom-g/custom_tweaks.hsp	2021-09-02 12:55:06.810416700 -0700
@@ -1,5 +1,48 @@
+/*
+List of current tweaks with corresponding TweakData entries:
+
+TweakData(x, 0) = "UI Tweaks"
+TweakData(0, 0) = "Show Enchant Strength With Objet of Heart."
+TweakData(1, 0) = "Allow Spell Tracking."
+TweakData(2, 0) = "Add Potentials To Skill Tracker."
+TweakData(3, 0) = "Filter Skill Tracker By Potential."
+TweakData(4, 0) = "Show Spell Stock In Tracker."
+TweakData(50, 0) = "Display Pickpocket shortcut."
+TweakData(51, 0) = "Report museum duplicates."
+
+TweakData(x, 1) = "Convenience Tweaks"
+TweakData(0, 1) = "Add Feed Option For Pets."
+TweakData(1, 1) = "Can Change Item Sprites In Home."
+TweakData(2, 1) = "Highlight/Filter Items."
+TweakData(3, 1) = "Re-parse ItemList.txt values."
+TweakData(50,1) = "Throw potion at self with [t]."
+
+TweakData(x, 2) = "Gameplay Tweaks"
+TweakData(0, 2) = "Gather Items At End Of Party Time."
+TweakData(1, 2) = "Pets Heal Other Pets."
+TweakData(2, 2) = "Share Gold For Group Performance."
+TweakData(3, 2) = "Pets die permanently in Loss Mode."
+TweakData(4, 2) = "Re-enable save-scumming."
+TweakData(5, 2) = "Bash all fruit."
+TweakData(6, 2) = "Organize ranch produce."
+TweakData(50, 2) = "Everything must go!"
+TweakData(51, 2) = "Disable Deep-Sea Castle persistance."
+TweakData(52, 2) = "Sandbag training."
+TweakData(53, 2) = "No naps while traveling."
+TweakData(54, 2) = "Harvest Moon Mode for ranches."
+
+TweakData(x, 3) = "AI Tweaks"
+TweakData(0, 3) = "Change Zeome's AI."
+
+TweakData(x, 4) = "Miscellaneous Tweaks"
+TweakData(0, 4) = "Enable Random Start For MP3."
+TweakData(1, 4) = "Display Weather Everywhere."
+TweakData(2, 4) = "Confirm Reload With F2."
+TweakData(50, 4) = "Fist of the North Star Mode."
+*/
+
 *TweakMenu
 	pagesize = 0
 	redraw 0
 	s = "Tweak Setup", strhint3b
 	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
@@ -90,24 +133,26 @@
 	listn(0, TWEAK_UI_SHOW_ENCHANT_STRENGTH) = "Show Enchant Strength With Objet of Heart." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_SHOW_ENCHANT_STRENGTH)
 	listn(0, TWEAK_UI_SPELL_TRACKING) = "Allow Spell Tracking." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_SPELL_TRACKING)
 	listn(0, TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER) = "Add Potentials To Skill Tracker." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER)
 	listn(0, TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL) = "Filter Skill Tracker By Potential." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL)
 	listn(0, TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER) = "Show Spell Stock In Tracker." + GetTStatus(TWEAK_CATEGORY_UI, TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER)
-	listn(0, TWEAK_UI_MAX) = "Return."
+	listn(0, 5) = "Display Pickpocket shortcut." + GetTStatus(0, 50)
+	listn(0, 6) = "Report museum duplicates." + GetTStatus(0, 51)
+	listn(0, 7) = "Return."
 	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
 
-	repeat TWEAK_UI_MAX+1
+	repeat 8
 		key_list(cnt) = key_select(cnt)
 		keyrange = cnt + 1
 		pos wx + 38, wy + 40 + cnt * 19 - 2
 		gcopy 3, cnt * 24 + 72, 30, 24, 18
 		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
 	loop
 
 	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
 
-	repeat TWEAK_UI_MAX+1
+	repeat 8
 		if ( listn(0, cs) == listn(0, cnt) ) {
 			if ( cnt == TWEAK_UI_SHOW_ENCHANT_STRENGTH ) {
 				s = "When examining items while holding the Objet of Heart, the strength\nof enchantments on the item will be shown."
 			}
 			if ( cnt == TWEAK_UI_SPELL_TRACKING ) {
@@ -120,11 +165,17 @@
 				s = "Tracked skills/abilities will not display unless their potential is\nequal to or below a certain threshold."
 			}
 			if ( cnt == TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER ) {
 				s = "Tracked spells will also display their spell stock."
 			}
-			if ( cnt == TWEAK_UI_MAX ) {
+			if ( cnt == 5 ) {
+				s = "Adds a \"Yes/No\" dialogue box when attempting to pick up items that do\nnot belong to you outside of quests and moongates."
+			}
+			if ( cnt == 6 ) {
+				s = "Reports x/y positions of duplicated cards and figurines when the museum updates."
+			}
+			if ( cnt == 7 ) {
 				s = "Return to the previous menu."
 			}
 			pos wx + 38, wy + 343
 			mes s
 		}
@@ -160,23 +211,41 @@
 	if ( key == key_select(TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER) ) {
 		tc = TWEAK_CATEGORY_UI
 		tn = TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER
 		gosub *ToggleTweak
 	}
-	if ( key == key_select(TWEAK_UI_MAX) ) {
-		goto *TweakMenu
+	if ( key == key_select(5) ) {
+		tc = 0
+		tn = 50
+		gosub *ToggleTweak
 	}
-	if ( key == key_cancel ) {
+	if ( key == key_select(6) ) {
+		tc = 0
+		tn = 51
+		gosub *ToggleTweak
+	}
+	if ( key == key_select(7) | key == key_cancel ) {
 		goto *TweakMenu
 	}
 	goto *UITweakMenu
 	return
 
 #defcfunc GetTStatus int TweakCategory, int TweakNumber
 	if ( TweakData(TweakNumber, TweakCategory) == 0 ) {
 		return " (Currently: Off)"
 	}
+	if ( TweakCategory == TWEAK_CATEGORY_MISC ) & ( TweakNumber == 50 ) {
+		if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
+			return " (Currently: Japanese)"
+		}
+		if ( TweakData(TweakNumber, TweakCategory) == 2 ) {
+			return " (Currently: English)"
+		}
+		else {
+			return " (Currently: Romanji)"
+		}
+	}
 	if ( TweakData(TweakNumber, TweakCategory) == 1 ) {
 		return " (Currently: On)"
 	}
 	if ( TweakData(TweakNumber, TweakCategory) > 1 ) {
 		return " (Currently: " + TweakData(TweakNumber, TweakCategory) + ")"
@@ -208,24 +277,25 @@
 
 	listn(0, TWEAK_CONVENIENCE_FEED_OPTION_PETS) = "Add Feed Option For Pets." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_FEED_OPTION_PETS)
 	listn(0, TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME) = "Can Change Item Sprites In Home." + GetTStatus(TWEAK_CATEGORY_CONVENIENCE, TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME)
 	listn(0, TWEAK_CONVENIENCE_HIGHLIGHT_FILTER) = "Highlight/Filter Items. (Currently: " + TweakData(TWEAK_CONVENIENCE_HIGHLIGHT_FILTER, TWEAK_CATEGORY_CONVENIENCE) + ")"
 	listn(0, TWEAK_CONVENIENCE_REPARSE_ITEMLIST) = "Re-parse ItemList.txt."
-	listn(0, TWEAK_CONVENIENCE_MAX) = "Return."
+	listn(0, 4) = "Throw potion at self with [t]." + GetTStatus(1, 50)
+	listn(0, 5) = "Return."
 	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
 
-	repeat TWEAK_CONVENIENCE_MAX+1
+	repeat 6
 		key_list(cnt) = key_select(cnt)
 		keyrange = cnt + 1
 		pos wx + 38, wy + 40 + cnt * 19 - 2
 		gcopy 3, cnt * 24 + 72, 30, 24, 18
 		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
 	loop
 
 	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
 
-	repeat TWEAK_CONVENIENCE_MAX+1
+	repeat 6
 		if ( listn(0, cs) == listn(0, cnt) ) {
 			if ( cnt == TWEAK_CONVENIENCE_FEED_OPTION_PETS ) {
 				s = "Adds a Feed option that works like Give but that filters out non-food items when\ninteracting with pets. Also allows for feeding pets raw equipment."
 			}
 			if ( cnt == TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME ) {
@@ -235,11 +305,14 @@
 				s = "Configure your highlighting/filtering choice.\n0 = No Highlight, 1 = Highlight and Mark Items, 2 = Only Show Highlighted Items"
 			}
 			if ( cnt == TWEAK_CONVENIENCE_REPARSE_ITEMLIST ) {
 				s = "Reload the ItemList.txt file, used to enable highlighting and filtering for items."
 			}
-			if ( cnt == TWEAK_CONVENIENCE_MAX ) {
+			if ( cnt == 4 ) {
+				s = "Adds potions to the [t]ool menu.\nUsing a potion with this tweak enabled throws it at your tile."
+			}
+			if ( cnt == 5 ) {
 				s = "Return to the previous menu."
 			}
 			pos wx + 38, wy + 343
 			mes s
 		}
@@ -270,11 +343,16 @@
 	if ( key == key_select(TWEAK_CONVENIENCE_REPARSE_ITEMLIST) ) {
 		tc = TWEAK_CATEGORY_CONVENIENCE
 		tn = TWEAK_CONVENIENCE_REPARSE_ITEMLIST
 		gosub *Load_Item_Highlights
 	}
-	if ( key == key_select(TWEAK_CONVENIENCE_MAX) ) {
+	if ( key == key_select(4) ) {
+		tc = 1
+		tn = 50
+		gosub *ToggleTweak
+	}
+	if ( key == key_select(5) ) {
 		goto *TweakMenu
 	}
 	if ( key == key_cancel ) {
 		goto *TweakMenu
 	}
@@ -293,26 +371,30 @@
 	listn(0, TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD) = "Share Gold For Group Performance." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD)
 	listn(0, TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE) = "Pets die permanently in Loss Mode." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE)
 	listn(0, TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING) = "Re-enable save-scumming." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING)
 	listn(0, TWEAK_GAMEPLAY_BASH_ALL_FRUIT) = "Bash all fruit." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_BASH_ALL_FRUIT)
 	listn(0, TWEAK_GAMEPLAY_ORGANIZE_RANCH) = "Organize ranch produce." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_ORGANIZE_RANCH)
-	listn(0, TWEAK_GAMEPLAY_IGNORE_UNFAIR) = "Ignore the \"Item is too unfair.\" check." + GetTStatus(TWEAK_CATEGORY_GAMEPLAY, TWEAK_GAMEPLAY_IGNORE_UNFAIR)
-	listn(0, TWEAK_GAMEPLAY_MAX) = "Return"
+	listn(0, 7) = "Everything must go!" + GetTStatus(2, 50)
+	listn(0, 8) = "Disable Deep-Sea Castle persistance." + GetTStatus(2, 51)
+	listn(0, 9) = "Sandbag training." + GetTStatus(2, 52)
+	listn(0, 10) = "No naps while traveling." + GetTStatus(2, 53)
+	listn(0, 11) = "Harvest Moon Mode for ranches." + GetTStatus(2, 54)
+	listn(0, 12) = "Return"
 
 	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
 
-	repeat TWEAK_GAMEPLAY_MAX+1
+	repeat 13
 		key_list(cnt) = key_select(cnt)
 		keyrange = cnt + 1
 		pos wx + 38, wy + 40 + cnt * 19 - 2
 		gcopy 3, cnt * 24 + 72, 30, 24, 18
 		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
 	loop
 
 	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
 
-	repeat TWEAK_GAMEPLAY_MAX+1
+	repeat 13
 		if ( listn(0, cs) == listn(0, cnt) ) {
 			if ( cnt == TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME ) {
 				s = "When a Party Time! quest ends, you will be presented with a list of items on the\nfloor that you can take."
 			}
 			if ( cnt == TWEAK_GAMEPLAY_PETS_HEAL_PETS ) {
@@ -331,14 +413,26 @@
 				s = "Bash all fruit out of fruit trees in one go."
 			}
 			if ( cnt == TWEAK_GAMEPLAY_ORGANIZE_RANCH ) {
 				s = "Better organize the ranch by collecting all ranch produce in one spot (x17 y14)."
 			}
-			if ( cnt == TWEAK_GAMEPLAY_IGNORE_UNFAIR ) {
-				s = "Ignores the attack+damage and pv+dv anti-cheat check on items."
+			if ( cnt == 7 ) {
+				s = "Allows shops to sell furniture, red books, and deeds. Registers,\nshop strongboxes, shelters, and unique items still won't be sold."
+			}
+			if ( cnt == 8 ) {
+				s = "Visiting the Deep-Sea Castle only resets items with a cooldown period\nwhile you're there, instead of continuously resetting them until you sleep."
+			}
+			if ( cnt == 9 ) {
+				s = "Sandbagged monsters will give experience."
 			}
-			if ( cnt == TWEAK_GAMEPLAY_MAX ) {
+			if ( cnt == 10 ) {
+				s = "Removes the chance to automatically take a nap when traveling while sleepy."
+			}
+			if ( cnt == 11 ) {
+				s = "Livestock can randomly become sick, are born unable to be milked, etc."
+			}
+			if ( cnt == 12 ) {
 				s = "Return to the previous menu."
 			}
 			pos wx + 38, wy + 343
 			mes s
 		}
@@ -382,19 +476,36 @@
 	if ( key == key_select(TWEAK_GAMEPLAY_ORGANIZE_RANCH) ) {
 		tc = TWEAK_CATEGORY_GAMEPLAY
 		tn = TWEAK_GAMEPLAY_ORGANIZE_RANCH
 		gosub *ToggleTweak
 	}
-	if ( key == key_select(TWEAK_GAMEPLAY_IGNORE_UNFAIR) ) {
-		tc = TWEAK_CATEGORY_GAMEPLAY
-		tn = TWEAK_GAMEPLAY_IGNORE_UNFAIR
+	if ( key == key_select(7) ) {
+		tc = 2
+		tn = 50
 		gosub *ToggleTweak
 	}
-	if ( key == key_select(TWEAK_GAMEPLAY_MAX) ) {
-		goto *TweakMenu
+	if ( key == key_select(8) ) {
+		tc = 2
+		tn = 51
+		gosub *ToggleTweak
 	}
-	if ( key == key_cancel ) {
+	if ( key == key_select(9) ) {
+		tc = 2
+		tn = 52
+		gosub *ToggleTweak
+	}
+	if ( key == key_select(10) ) {
+		tc = 2
+		tn = 53
+		gosub *ToggleTweak
+	}
+	if ( key == key_select(11) ) {
+		tc = 2
+		tn = 54
+		gosub *ToggleTweak
+	}
+	if ( key == key_select(12) | key == key_cancel ) {
 		goto *TweakMenu
 	}
 	goto *GameplayTweakMenu
 	return
 
@@ -404,29 +515,29 @@
 	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
 	s = "Configure Tweaks"
 	gosub *screen_drawMsg2
 
 	listn(0, TWEAK_AI_ZEOME) = "Change Zeome's AI." + GetTStatus(TWEAK_CATEGORY_AI, TWEAK_AI_ZEOME)
-	listn(0, TWEAK_AI_MAX) = "Return."
+	listn(0, 1) = "Return."
 	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
 
-	repeat TWEAK_AI_MAX+1
+	repeat 2
 		key_list(cnt) = key_select(cnt)
 		keyrange = cnt + 1
 		pos wx + 38, wy + 40 + cnt * 19 - 2
 		gcopy 3, cnt * 24 + 72, 30, 24, 18
 		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
 	loop
 
 	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
 
-	repeat TWEAK_AI_MAX+1
+	repeat 2
 		if ( listn(0, cs) == listn(0, cnt) ) {
 			if ( cnt == TWEAK_AI_ZEOME ) {
 				s = "Changes Zeome's move list and AI to make the fight significantly more difficult."
 			}
-			if ( cnt == TWEAK_AI_MAX ) {
+			if ( cnt == 1 ) {
 				s = "Return to the previous menu."
 			}
 			pos wx + 38, wy + 343
 			mes s
 		}
@@ -440,11 +551,11 @@
 	if ( key == key_select(TWEAK_AI_ZEOME) ) {
 		tc = TWEAK_CATEGORY_AI
 		tn = TWEAK_AI_ZEOME
 		gosub *ToggleTweak
 	}
-	if ( key == key_select(TWEAK_AI_MAX) ) {
+	if ( key == key_select(1) ) {
 		goto *TweakMenu
 	}
 	if ( key == key_cancel ) {
 		goto *TweakMenu
 	}
@@ -456,29 +567,30 @@
 	s = "Tweak Setup", strhint3b
 	display_window (windoww - 680) / 2 + inf_screenx, winposy(448), 640, 448
 	s = "Configure Tweaks"
 	gosub *screen_drawMsg2
 
-	listn(0, TWEAK_MISC_RANDOM_START_MP3) = "Enable Random Start For MP3." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_RANDOM_START_MP3)
-	listn(0, TWEAK_MISC_WEATHER_EVERYWHERE) = "Display Weather Everywhere." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_WEATHER_EVERYWHERE)
-	listn(0, TWEAK_MISC_CONFIRM_RELOAD_F2) = "Confirm Reload With F2." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_CONFIRM_RELOAD_F2)
+	listn(0, TWEAK_MISC_RANDOM_START_MP3) = "Enable Random Start For MP3." + GetTStatus(4, 0)
+	listn(0, TWEAK_MISC_WEATHER_EVERYWHERE) = "Display Weather Everywhere." + GetTStatus(4, 1)
+	listn(0, TWEAK_MISC_CONFIRM_RELOAD_F2) = "Confirm Reload With F2." + GetTStatus(4, 2)
 	listn(0, TWEAK_MISC_PREVENT_STAYER_MOVEMENT) = "Prevent home stayers from moving." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_PREVENT_STAYER_MOVEMENT)
 	listn(0, TWEAK_MISC_PREVENT_BUMP_ATTACK) = "Prevent bump attack." + GetTStatus(TWEAK_CATEGORY_MISC, TWEAK_MISC_PREVENT_BUMP_ATTACK)
-	listn(0, TWEAK_MISC_MAX) = "Return."
+	listn(0, 5) = "Fist of the North Star Mode." + GetTStatus(4, 50)
+	listn(0, 6) = "Return."
 	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
 
-	repeat TWEAK_MISC_MAX+1
+	repeat 7
 		key_list(cnt) = key_select(cnt)
 		keyrange = cnt + 1
 		pos wx + 38, wy + 40 + cnt * 19 - 2
 		gcopy 3, cnt * 24 + 72, 30, 24, 18
 		cs_list listn(0, cnt), wx + 64, wy + 40 + cnt * 19 - 1, 19
 	loop
 
 	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
 
-	repeat TWEAK_MISC_MAX+1
+	repeat 7
 		if ( listn(0, cs) == listn(0, cnt) ) {
 			if ( cnt == TWEAK_MISC_RANDOM_START_MP3 ) {
 				s = "Will make MP3s start playback from a random point.\nCould cause compatability issues."
 			}
 			if ( cnt == TWEAK_MISC_WEATHER_EVERYWHERE ) {
@@ -491,11 +603,14 @@
 				s = "Prevent your home stayers from moving inside your home."
 			}
 			if ( cnt == TWEAK_MISC_PREVENT_BUMP_ATTACK ) {
 				s = "Prevents you from performing a melee attack when bumping into others."
 			}
-			if ( cnt == TWEAK_MISC_MAX ) {
+			if ( cnt == 5 ) {
+				s = "Nani?!"
+			}
+			if ( cnt == 6 ) {
 				s = "Return to the previous menu."
 			}
 			pos wx + 38, wy + 343
 			mes s
 		}
@@ -529,14 +644,18 @@
 	if ( key == key_select(TWEAK_MISC_PREVENT_BUMP_ATTACK) ) {
 		tc = TWEAK_CATEGORY_MISC
 		tn = TWEAK_MISC_PREVENT_BUMP_ATTACK
 		gosub *ToggleTweak
 	}
-	if ( key == key_select(TWEAK_MISC_MAX) ) {
-		goto *TweakMenu
+	if ( key == key_select(5) ) {
+		tc = TWEAK_CATEGORY_MISC
+		tn = 50
+		ts = 1
+		tm = 3
+		gosub *IncrementTweak
 	}
-	if ( key == key_cancel ) {
+	if ( key == key_select(6) | key == key_cancel ) {
 		goto *TweakMenu
 	}
 	goto *MiscTweakMenu
 	return
 
diff -U5 --recursive 1.90.4-custom/db_card.hsp 1.90.4.2-custom-g/db_card.hsp
--- 1.90.4-custom/db_card.hsp	2021-09-02 12:55:06.375582200 -0700
+++ 1.90.4.2-custom-g/db_card.hsp	2021-09-02 12:55:06.825892300 -0700
@@ -8142,11 +8142,11 @@
 		cardrefdomain = 2
 		cardrefrare = 50
 		cardrefcost = 0
 		cardrefattack = 690
 		cardrefhp = 3
-		cardrefn = lang("機甲将軍『アインリッヒ』", "<Heinrich> the Armored General")
+		cardrefn = lang("機甲将軍『アインリッヒ』", "<Heinrich> the iron colonel")
 		cardrefpic = xy2pic(25, 8) + COLOR_DEFAULT * COLOR_TINT_MULT
 		cardrefrace = "366 effect:" + skillname(cardrefattack) + " "
 		return 1
 	}
 	if ( dbid == CREATURE_ID_H_SISTER ) {
@@ -8981,11 +8981,11 @@
 		cardrefrace = "5 effect:" + skillname(cardrefattack) + " "
 		return 1
 	}
 	if ( dbid == CREATURE_ID_SNAIL ) {
 		cardreftype = 10
-		cardrefskill = lang("塩を体にふりかけられると体内の水分を奪われて溶けるように縮んで消えてしまう。イルヴァで最も鈍く情けない生き物でありながら今日まで絶滅していない理由は謎。", "When exposed to salt, the water inside their bodies is absorbed, causing them to shrivel into nothingness. Without a doubt the most dull and pathetic creature in Ylva. How the species has managed to survive is a complete mystery.")
+		cardrefskill = lang("塩を体にふりかけられると体内の水分を奪われて溶けるように縮んで消えてしまう。イルヴァで最も鈍く情けない生き物でありながら今日まで絶滅していない理由は謎。", "When exposed to salt, the water inside their bodies is absorbed, causing them to shrivel into nothingness. Without a doubt the most dull and pathetic creature in Irva. How the species has managed to survive is a complete mystery.")
 		cardrefdomain = 0
 		cardrefrare = 100
 		cardrefcost = 0
 		cardrefattack = 690
 		cardrefhp = 3
@@ -11457,11 +11457,11 @@
 		cardrefdomain = 1
 		cardrefrare = 50
 		cardrefcost = 0
 		cardrefattack = 690
 		cardrefhp = 3
-		cardrefn = lang("辺境の勇士『ギルバート大佐』", "<Gilbert> the Colonel")
+		cardrefn = lang("辺境の勇士『ギルバート大佐』", "<Colonel Gilbert> the frontier warrior")
 		cardrefpic = xy2pic(7, 11) + COLOR_DEFAULT * COLOR_TINT_MULT
 		cardrefrace = "231 effect:" + skillname(cardrefattack) + " "
 		return 1
 	}
 	if ( dbid == CREATURE_ID_YERLES_SELF_PROPELLED_GUN ) {
diff -U5 --recursive 1.90.4-custom/db_creature.hsp 1.90.4.2-custom-g/db_creature.hsp
--- 1.90.4-custom/db_creature.hsp	2021-09-02 12:55:06.444007000 -0700
+++ 1.90.4.2-custom-g/db_creature.hsp	2021-09-02 12:55:06.896610100 -0700
@@ -47206,11 +47206,11 @@
 	}
 	if ( dbid == CREATURE_ID_SSIL_THE_UNDEAD_WITCH ) {
 		if ( dbmode == DBMODE_FLAVOR_PASSIVE ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「ひひひ…」", cnvtalk("Hihihi..."))
+			txt lang("「ひひひ…」", cnvtalk("Heeheehee..."))
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_DEATH ) {
 			if ( jp ) {
 				txtmore
@@ -57086,11 +57086,11 @@
 			}
 		}
 		if ( dbmode == DBMODE_FLAVOR_KILL ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「Ｏ．Ｋ！」", cnvtalk("O.K!"))
+			txt lang("「Ｏ．Ｋ！」", cnvtalk("OK!"))
 			return 1
 		}
 		if ( dbmode == DBMODE_REF_SPEC ) {
 			if ( dbspec == DBSPEC_CHARA_LOOT ) {
 				return EQUIP_TYPE_WARRIOR
@@ -73493,23 +73493,23 @@
 			}
 		}
 		if ( dbmode == DBMODE_FLAVOR_ANGERED ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「グッド！」", cnvtalk("P-please, no sir...")), lang("「賭けるか？そちらが勝つかこちらが勝つか」", cnvtalk("Waaaa!")), lang("「まさしく命がけだな」", cnvtalk("Don't make a fool of me!"))
+			txt lang("「グッド！」", cnvtalk("Good!")), lang("「賭けるか？そちらが勝つかこちらが勝つか」", cnvtalk("You want to play? We'll see who gets dealt the winning hand...")), lang("「まさしく命がけだな」", cnvtalk("Time to go all-in!"))
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_DEATH ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「負けた、か…」", cnvtalk("You are cruel.")), lang("「こんなのインチキに決まってる！」", cnvtalk("It's unfair.")), lang("「イカサマしたな！？」", cnvtalk("Beggars always cry..."))
+			txt lang("「負けた、か…」", cnvtalk("I... fold...")), lang("「こんなのインチキに決まってる！」", cnvtalk("You must have stacked the deck!")), lang("「イカサマしたな！？」", cnvtalk("Were you cheating?!"))
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_KILL ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「勝ったぞ！」", cnvtalk("Weak! Weak!")), lang("「何がしたかったんだ？」", cnvtalk("Huh?")), lang("「もう一勝負だ！」", cnvtalk("Ha ha ha!"))
+			txt lang("「勝ったぞ！」", cnvtalk("I won!")), lang("「何がしたかったんだ？」", cnvtalk("What were you trying to do?")), lang("「もう一勝負だ！」", cnvtalk("One more game!"))
 			return 1
 		}
 		if ( dbmode == DBMODE_REF_SPEC ) {
 			if ( dbspec == DBSPEC_CHARA_LOOT ) {
 				return EQUIP_TYPE_NOTHING
@@ -81684,11 +81684,11 @@
 			}
 			if ( dbspec == DBSPEC_CHARA_RARE ) {
 				return 50
 			}
 			if ( dbspec == DBSPEC_CHARA_NAME_ORG ) {
-				return lang("機甲将軍『アインリッヒ』", "<Heinrich> the Armored General")
+				return lang("機甲将軍『アインリッヒ』", "<Heinrich> the iron colonel")
 			}
 			if ( dbspec == DBSPEC_CHARA_FILTER ) {
 				return "" + "/man/"
 			}
 			return 0
@@ -81723,11 +81723,11 @@
 			cdata(CDATA_ACT_INDEX, rc) = 11
 			cdata(CDATA_TXT, rc) += 1
 			cdata(CDATA_TXT, rc) += 1
 			cdata(CDATA_TXT, rc) += 1
 			cdata(CDATA_TXT, rc) += 1
-			cdatan(CDATAN_NAME, rc) = lang("機甲将軍『アインリッヒ』", "<Heinrich> the Armored General")
+			cdatan(CDATAN_NAME, rc) = lang("機甲将軍『アインリッヒ』", "<Heinrich> the iron colonel")
 			cdata(CDATA_RELATION, rc) = 0
 			cdata(CDATA_RELATION_ORG, rc) = 0
 			cdata(CDATA_ALIGNMENT, rc) = -10000
 			dbidn = "yerles"
 			dbmode = DBMODE_SET
@@ -81764,11 +81764,11 @@
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_KILL ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("今日もイルヴァは平和だった。", "Today peace comes to Ylva.")
+			txt lang("今日もイルヴァは平和だった。", "Today peace comes to Irva.")
 			return 1
 		}
 		if ( dbmode == DBMODE_REF_SPEC ) {
 			if ( dbspec == DBSPEC_CHARA_LOOT ) {
 				return EQUIP_TYPE_ARCHER
@@ -84666,11 +84666,11 @@
 	}
 	if ( dbid == CREATURE_ID_LARNNEIRE_THE_LISTENER_OF_WIND ) {
 		if ( dbmode == DBMODE_FLAVOR_PASSIVE ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「獣に変えられた王子の童話をしっているかしら？」", cnvtalk("You know the fairy tale where a wicked witch transforms a dashing prince into an monster?")), lang("痺れるほど美しいエレアの横顔にあなたは見とれた。", "The stunning beauty of Elea's face halts your step a moment."), lang("「この世界は今、大きく変わろうとしているの」", cnvtalk("The world is thrown into bedlam and chaos. We must remain strong in the face of it.")), lang("「ヴェルニースで見かけたあの男…まさか…」", cnvtalk("The man we saw in Vernis, he just might be...")), lang("神秘的な古代の言葉で誰かが囁いた。", "Someone mutters in mysterious ancient language."), lang("「あなたはプライドが高すぎるのよ。ただでさえエレアは異端視されているのに」", cnvtalk("Eleas is already being regarded as a heretic, your lofty dignity isn't helping this."))
+			txt lang("「獣に変えられた王子の童話をしっているかしら？」", cnvtalk("You know the fairy tale where a wicked witch transforms a dashing prince into a monster?")), lang("痺れるほど美しいエレアの横顔にあなたは見とれた。", "The stunning beauty of the Elea's face halts your step a moment."), lang("「この世界は今、大きく変わろうとしているの」", cnvtalk("The world is thrown into bedlam and chaos. We must remain strong in the face of it.")), lang("「ヴェルニースで見かけたあの男…まさか…」", cnvtalk("The man we saw in Vernis, he just might be...")), lang("神秘的な古代の言葉で誰かが囁いた。", "Someone mutters in mysterious ancient language."), lang("「あなたはプライドが高すぎるのよ。ただでさえエレアは異端視されているのに」", cnvtalk("Eleas are already being regarded as heretics; your lofty pride isn't helping, Lomias."))
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_ANGERED ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
@@ -100973,11 +100973,11 @@
 			}
 			if ( dbspec == DBSPEC_CHARA_RARE ) {
 				return 50
 			}
 			if ( dbspec == DBSPEC_CHARA_NAME_ORG ) {
-				return lang("辺境の勇士『ギルバート大佐』", "<Gilbert> the Colonel")
+				return lang("辺境の勇士『ギルバート大佐』", "<Colonel Gilbert> the frontier warrior")
 			}
 			if ( dbspec == DBSPEC_CHARA_FILTER ) {
 				return "" + "/man/"
 			}
 			return 0
@@ -101011,11 +101011,11 @@
 			cdata(CDATA_ACT_INDEX, rc) = 1
 			cdata(CDATA_TXT, rc) += 1
 			cdata(CDATA_TXT, rc) += 1
 			cdata(CDATA_TXT, rc) += 1
 			cdata(CDATA_TXT, rc) += 1
-			cdatan(CDATAN_NAME, rc) = lang("辺境の勇士『ギルバート大佐』", "<Gilbert> the Colonel")
+			cdatan(CDATAN_NAME, rc) = lang("辺境の勇士『ギルバート大佐』", "<Colonel Gilbert> the frontier warrior")
 			cdata(CDATA_RELATION, rc) = 0
 			cdata(CDATA_RELATION_ORG, rc) = 0
 			cdata(CDATA_ALIGNMENT, rc) = -10000
 			dbidn = "juere"
 			dbmode = DBMODE_SET
@@ -102225,11 +102225,11 @@
 	}
 	if ( dbid == CREATURE_ID_TAM_THE_CAT_HATER ) {
 		if ( dbmode == DBMODE_FLAVOR_PASSIVE ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「ひっ！」", cnvtalk("I hate those bloody cats!")), lang("「猫はどうしてあんなに恐ろしいのだろう」", cnvtalk("W-Why are cats so scary?")), lang("「細い目が苦手です」", cnvtalk("I hate those narrow eyes."))
+			txt lang("「ひっ！」", cnvtalk("I hate those bloody cats!")), lang("「猫はどうしてあんなに恐ろしいのだろう」", cnvtalk("W-Why are cats so scary?")), lang("「細い目が苦手です」", cnvtalk("Come closer kitty, I gotta present for ya!"))
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_DEATH ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
@@ -104300,11 +104300,11 @@
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_ANGERED ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「てつぅぅぅうううおおおおおおお！！」", cnvtalk("Teeee tsuuu oooooo!!")), lang("「よう、どうした。揉め事か？」", cnvtalk("Yo, what's up? A fight?")), lang("「やっとモーターのコイルが温まって来た所だぜ」", cnvtalk("Relax, it's gonna take some time to warm my engine up."))
+			txt lang("「てつぅぅぅうううおおおおおおお！！」", cnvtalk("Teeeetsuuuoooooo!!!")), lang("「よう、どうした。揉め事か？」", cnvtalk("Yo, what's up? A fight?")), lang("「やっとモーターのコイルが温まって来た所だぜ」", cnvtalk("Relax, it's gonna take some time to warm my engine up."))
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_DEATH ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
@@ -104409,11 +104409,11 @@
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_KILL ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「てつぅぅぅうううおおおおおおお！！」", cnvtalk("Teeee tsuuu oooooo!!")), lang("「よう、どうした。揉め事か？」", cnvtalk("Yo, what's up? A fight?")), lang("「やっとモーターのコイルが温まって来た所だぜ」", cnvtalk("Relax, it's gonna take some time to warm my engine up."))
+			txt lang("「てつぅぅぅうううおおおおおおお！！」", cnvtalk("Teeeetsuuuoooooo!!!")), lang("「よう、どうした。揉め事か？」", cnvtalk("Yo, what's up? A fight?")), lang("「やっとモーターのコイルが温まって来た所だぜ」", cnvtalk("Relax, it's gonna take some time to warm my engine up."))
 			return 1
 		}
 		if ( dbmode == DBMODE_ON_EAT ) {
 			gosub *eatHard
 			return -1
@@ -107686,11 +107686,11 @@
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_DEATH ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
-			txt lang("「サヨ…ウ…ナ…ラ」", cnvtalk("Go..od..b..ye.")), lang("「機能停止…」", cnvtalk("All functions stopped."))
+			txt lang("「サヨ…ウ…ナ…ラ」", cnvtalk("Good... bye...")), lang("「機能停止…」", cnvtalk("All functions stopped."))
 			return 1
 		}
 		if ( dbmode == DBMODE_FLAVOR_WELCOME ) {
 			txtmore
 			txtef COLOR_SKY_BLUE
diff -U5 --recursive 1.90.4-custom/db_item.hsp 1.90.4.2-custom-g/db_item.hsp
--- 1.90.4-custom/db_item.hsp	2021-09-02 12:55:06.528407000 -0700
+++ 1.90.4.2-custom-g/db_item.hsp	2021-09-02 12:55:06.945701500 -0700
@@ -108709,11 +108709,11 @@
 				description(1) = ""
 				description(2) = ""
 				description(3) = "\t\t巨大でとても重い楽器。使用することが出来る。\n#〜鑑定報告書：＜楽器＞カテゴリ〜\n"
 			}
 			else {
-				description(0) = "\t\tA very heavy keyed instrument. There are rumors of a musician who traveled carrying this on his back.\n#~The Brilliant Melody of Ylva~\n"
+				description(0) = "\t\tA very heavy keyed instrument. There are rumors of a musician who traveled carrying this on his back.\n#~The Brilliant Melody of Irva~\n"
 				description(1) = ""
 				description(3) = "\t\tA huge, heavy instrument. Can be used."
 			}
 			return
 		}
@@ -109668,11 +109668,11 @@
 				description(1) = ""
 				description(2) = ""
 				description(3) = "\t\t世界の終末を招くといわれる長剣だ。\n#〜鑑定報告書：＜秘宝＞カテゴリ〜\n"
 			}
 			else {
-				description(0) = "\t\tA sword said to have been inconspicuously lodged into a small hill. One wonders just how many opponents this wicked blade has slaughtered. The sword remains silent and cannot say.\n#~Ylva Fantasy Encyclopedia~\n"
+				description(0) = "\t\tA sword said to have been inconspicuously lodged into a small hill. One wonders just how many opponents this wicked blade has slaughtered. The sword remains silent and cannot say.\n#~Irva Fantasy Encyclopedia~\n"
 				description(1) = ""
 				description(3) = "\t\tA sword said to bring about the end of the world."
 			}
 			return
 		}
@@ -110287,11 +110287,11 @@
 				description(1) = ""
 				description(2) = ""
 				description(3) = "\t\tストームブリンガーという兄弟剣が存在するといわれる長剣だ。\n#〜鑑定報告書：＜秘宝＞カテゴリ〜\n"
 			}
 			else {
-				description(0) = "\t\tA black sword that was created to purify evil by using a more powerful evil, or at least that was the idea behind its creation. It is said that a sword was created to be its brother, and if you were to hold both in each hand, you'd gain the power to destroy the world.\n#~Ylva Fantasy Encyclopedia~\n"
+				description(0) = "\t\tA black sword that was created to purify evil by using a more powerful evil, or at least that was the idea behind its creation. It is said that a sword was created to be its brother, and if you were to hold both in each hand, you'd gain the power to destroy the world.\n#~Irva Fantasy Encyclopedia~\n"
 				description(1) = ""
 				description(3) = "\t\tA long sword said to have a brother sword named Stormbringer."
 			}
 			return
 		}
@@ -110355,11 +110355,11 @@
 				description(1) = ""
 				description(2) = ""
 				description(3) = "\t\t相手のマナを吸い取る大鎌だ。\n#〜鑑定報告書：＜秘宝＞カテゴリ〜\n"
 			}
 			else {
-				description(0) = "\t\tA scythe that multiplies magical power by an incalculable degree. It was created to bring its wielder closer to the ultimate existence, but has been lost from the world for a long time.\n#~Ylva Fantasy Encyclopedia~\n"
+				description(0) = "\t\tA scythe that multiplies magical power by an incalculable degree. It was created to bring its wielder closer to the ultimate existence, but has been lost from the world for a long time.\n#~Irva Fantasy Encyclopedia~\n"
 				description(1) = ""
 				description(3) = "\t\tA scythe that absorbs the opponent's mana."
 			}
 			return
 		}
@@ -110780,11 +110780,11 @@
 				description(1) = ""
 				description(2) = ""
 				description(3) = "\t\t何でも貫くといわれる長剣だ。\n#〜鑑定報告書：＜秘宝＞カテゴリ〜\n"
 			}
 			else {
-				description(0) = "\t\tA miracle praised to be capable of cutting anything in this world in one swing. As rumoured, it cuts through anything, though as the story goes, very elastic gray foods are an exception.\n#~Ylva Fantasy Encyclopedia~\n"
+				description(0) = "\t\tA miracle praised to be capable of cutting anything in this world in one swing. As rumoured, it cuts through anything, though as the story goes, very elastic gray foods are an exception.\n#~Irva Fantasy Encyclopedia~\n"
 				description(1) = ""
 				description(3) = "\t\tSword rumored to cut through anything."
 			}
 			return
 		}
@@ -110851,11 +110851,11 @@
 				description(1) = ""
 				description(2) = "\t\t「その武器の事は聞いている。災いを抱く黒き竜から生れし剣で、切り裂く刃は時間さえ断ち切るとか。それが真実かどうか知らないが、本当なら是非ともお目にかかりたいものだ。俺の力に値する武器かもしれんしな」\n#〜ザナンの紅の英雄『ロイター』の言葉〜\n"
 				description(3) = "\t\t時を止める長剣だ。\n#〜鑑定報告書：＜秘宝＞カテゴリ〜\n"
 			}
 			else {
-				description(0) = "\t\tA frightful sword given the name of the 'Devil'. Its black blade is said to disturb not only the souls of those it cuts, but even time itself.\n#~Ylva Fantasy Encyclopedia~\n"
+				description(0) = "\t\tA frightful sword given the name of the 'Devil'. Its black blade is said to disturb not only the souls of those it cuts, but even time itself.\n#~Irva Fantasy Encyclopedia~\n"
 				description(1) = ""
 				description(2) = "\t\t'I've heard about that weapon. A sword born from a black dragon that harbored calamity, said to be capable of cutting even time. I don't know if that's true, but if it is, I'd certainly love to see it for myself. It might be a weapon worthy of my strength.'\n#~Words of Loyter, The Crimson Hero of Zanan~\n"
 				description(3) = "\t\tA long sword that stops time."
 			}
 			return
@@ -120029,11 +120029,11 @@
 	iorgweight(ITEM_ID_SOCKS) = 600
 	if ( jp ) {
 		ioriginalnameref(ITEM_ID_SOCKS) = "ソックス"
 	}
 	else {
-		ioriginalnameref(ITEM_ID_SOCKS) = "socks"
+		ioriginalnameref(ITEM_ID_SOCKS) = "sox"
 		ioriginalnameref2(ITEM_ID_SOCKS) = ""
 	}
 	ipicref(ITEM_ID_SOCKS) = xy2pic(5, 28)
 	iknownnameref(ITEM_ID_SOCKS) = ioriginalnameref(ITEM_ID_SOCKS)
 	icolref(ITEM_ID_SOCKS) = COLOR_DEFAULT
diff -U5 --recursive 1.90.4-custom/defines/mod.hsp 1.90.4.2-custom-g/defines/mod.hsp
--- 1.90.4-custom/defines/mod.hsp	2021-09-02 12:55:06.540145900 -0700
+++ 1.90.4.2-custom-g/defines/mod.hsp	2021-09-02 12:55:06.959206100 -0700
@@ -1,6063 +1,6062 @@
+    #define global TRUE 1
+    #define global FALSE 0
+    #define global FALSEM -1
+
 	// Static
-	CHARA_PLAYER = 0
+	#define global	CHARA_PLAYER	0
 
-	RANGE_PLAYER_PIC = xy2pic(1, 2)
+	#define global	RANGE_PLAYER_PIC	xy2pic(1, 2)
 
 	// Data limits
-	MAX_CHARA_NULL = 1
-	MAX_CHARA_ADVENTURER = 40 - MAX_CHARA_NULL
-	MAX_CHARA_FOLLOWER = 16
-	MAX_CHARA_ALLY = 8
-	MAX_CHARA_SAVE = MAX_CHARA_FOLLOWER + MAX_CHARA_ADVENTURER + 1 + MAX_CHARA_NULL // 57
-	MAX_CHARA_NC = MAX_CHARA_SAVE - MAX_CHARA_NULL // 56
-	MAX_CHARA_TOTAL = 245
-	MAX_CHARA_DATA = 500
-
-	MAX_SKILL_RANGE = 600
-	MAX_SKILL_DATA = MAX_SKILL_RANGE * 2
-
-	MAX_MAP_INV = 400
-	SIZE_INV1 = 200
-	SIZE_INV2 = 20
-	RANGE_INV1 = SIZE_INV2 * MAX_CHARA_NC + SIZE_INV1 // 1320
-	RANGE_INV2 = SIZE_INV2 * (MAX_CHARA_TOTAL - MAX_CHARA_NULL) + SIZE_INV1 // 5080
-	MAX_INV_DATA = RANGE_INV2 + MAX_MAP_INV // 5480
-
-	MAX_CDATAN = 10
-	MAX_ITEMN = 6
-	MAX_MDATAN = 2
-	MAX_GDATAN = 50
+	#define global	MAX_CHARA_NULL	1
+	#define global	MAX_CHARA_ADVENTURER	(40 - MAX_CHARA_NULL)
+	#define global	MAX_CHARA_FOLLOWER	16
+	#define global	MAX_CHARA_ALLY	8
+	#define global	MAX_CHARA_SAVE	(MAX_CHARA_FOLLOWER + MAX_CHARA_ADVENTURER + 1 + MAX_CHARA_NULL) // 57
+	#define global	MAX_CHARA_NC	(MAX_CHARA_SAVE - MAX_CHARA_NULL) // 56
+	#define global	MAX_CHARA_TOTAL	245
+	#define global	MAX_CHARA_DATA	500
+
+	#define global	MAX_SKILL_RANGE	600
+	#define global	MAX_SKILL_DATA	(MAX_SKILL_RANGE * 2)
+
+	#define global	MAX_MAP_INV	400
+	#define global	SIZE_INV1	200
+	#define global	SIZE_INV2	20
+	#define global	RANGE_INV1	(SIZE_INV2 * MAX_CHARA_NC + SIZE_INV1) // 1320
+	#define global	RANGE_INV2	(SIZE_INV2 * (MAX_CHARA_TOTAL - MAX_CHARA_NULL) + SIZE_INV1) // 5080
+	#define global	MAX_INV_DATA	(RANGE_INV2 + MAX_MAP_INV) // 5480
+
+	#define global	MAX_CDATAN	10
+	#define global	MAX_ITEMN	6
+	#define global	MAX_MDATAN	2
+	#define global	MAX_GDATAN	50
 
-	MAX_DB = 1199
+	#define global	MAX_DB	1199
 
 	// Buffs
-	BUFF_TYPE_BUFF = 1
-	BUFF_TYPE_HEX = 2
-	BUFF_TYPE_FOOD = 3
-
-	BUFF_HOLY_SHIELD = 1
-	BUFF_MIST_OF_SILENCE = 2
-	BUFF_REGENERATION = 3
-	BUFF_ATTRIBUTE_SHIELD = 4
-	BUFF_SPEED = 5
-	BUFF_SLOW = 6
-	BUFF_HERO = 7
-	BUFF_MIST_OF_FRAILNESS = 8
-	BUFF_ELEMENT_SCAR = 9
-	BUFF_HOLY_VEIL = 10
-	BUFF_NIGHTMARE = 11
-	BUFF_DIVINE_WISDOM = 12
-	BUFF_PUNISHMENT = 13
-	BUFF_LULWYS_TRICK = 14
-	BUFF_INCOGNITO = 15
-	BUFF_DEATH_WORD = 16
-	BUFF_BOOST = 17
-	BUFF_CONTINGENCY = 18
-	BUFF_LUCK = 19
-	BUFF_GROW_STRENGTH = 20
-	BUFF_GROW_CONSTITUTION = 21
-	BUFF_GROW_DEXTERITY = 22
-	BUFF_GROW_PERCEPTION = 23
-	BUFF_GROW_LEARNING = 24
-	BUFF_GROW_WILL = 25
-	BUFF_GROW_MAGIC = 26
-	BUFF_GROW_CHARISMA = 27
-	BUFF_GROW_SPEED = 28
-	BUFF_CLEAR_MIND = 29
-	BUFF_SUPER_REGEN = 30
-	BUFF_FEATHER = 31
-	BUFF_CHARGE = 32
-	BUFF_EMERGENCY_EVASION = 33
-	BUFF_MAGIC_EQUIP = 34
-	BUFF_SUPER_ARMOR = 35
-	BUFF_ATTRIBUTE = 36
-	BUFF_AUTO_GUARD = 37
-	BUFF_QUICK_USE = 38
-	BUFF_UNLUCKY = 39
-	BUFF_RUN_WILDLY = 40
-	BUFF_RETENTION = 41
-	BUFF_TAG_FORCE = 42
-	BUFF_CONCENTRATION = 43
-	BUFF_FORM_SHIFT_ALPHA = 44
-	BUFF_FORM_SHIFT_BETA = 45
-	BUFF_FORM_SHIFT_GAMMA = 46
-	BUFF_FORM_SHIFT_DELTA = 47
-	BUFF_FORM_SHIFT_OMEGA = 48
-	BUFF_RESOLUTION_HAND = 49
-	BUFF_ABYSS_IN_THE_EYE = 50
-	BUFF_SHIELD_PARRY = 51
-	BUFF_GRAVITY_ACCEL = 52
-	BUFF_HYPER_DASH = 53
-	BUFF_BLACK_MIRROR = 54
-	BUFF_GEM_POWER = 55
-	BUFF_DISTRACTED = 56
-	BUFF_MELANCHOLY = 57
-	BUFF_KILLING_DANCE = 58
-	BUFF_SHOOTING_MODE = 59
-	BUFF_DISINFECTION = 60
-	BUFF_CURSE_OF_HUNGER = 61
+	#define global	BUFF_TYPE_BUFF	1
+	#define global	BUFF_TYPE_HEX	2
+	#define global	BUFF_TYPE_FOOD	3
+
+	#define global	BUFF_HOLY_SHIELD	1
+	#define global	BUFF_MIST_OF_SILENCE	2
+	#define global	BUFF_REGENERATION	3
+	#define global	BUFF_ATTRIBUTE_SHIELD	4
+	#define global	BUFF_SPEED	5
+	#define global	BUFF_SLOW	6
+	#define global	BUFF_HERO	7
+	#define global	BUFF_MIST_OF_FRAILNESS	8
+	#define global	BUFF_ELEMENT_SCAR	9
+	#define global	BUFF_HOLY_VEIL	10
+	#define global	BUFF_NIGHTMARE	11
+	#define global	BUFF_DIVINE_WISDOM	12
+	#define global	BUFF_PUNISHMENT	13
+	#define global	BUFF_LULWYS_TRICK	14
+	#define global	BUFF_INCOGNITO	15
+	#define global	BUFF_DEATH_WORD	16
+	#define global	BUFF_BOOST	17
+	#define global	BUFF_CONTINGENCY	18
+	#define global	BUFF_LUCK	19
+	#define global	BUFF_GROW_STRENGTH	20
+	#define global	BUFF_GROW_CONSTITUTION	21
+	#define global	BUFF_GROW_DEXTERITY	22
+	#define global	BUFF_GROW_PERCEPTION	23
+	#define global	BUFF_GROW_LEARNING	24
+	#define global	BUFF_GROW_WILL	25
+	#define global	BUFF_GROW_MAGIC	26
+	#define global	BUFF_GROW_CHARISMA	27
+	#define global	BUFF_GROW_SPEED	28
+	#define global	BUFF_CLEAR_MIND	29
+	#define global	BUFF_SUPER_REGEN	30
+	#define global	BUFF_FEATHER	31
+	#define global	BUFF_CHARGE	32
+	#define global	BUFF_EMERGENCY_EVASION	33
+	#define global	BUFF_MAGIC_EQUIP	34
+	#define global	BUFF_SUPER_ARMOR	35
+	#define global	BUFF_ATTRIBUTE	36
+	#define global	BUFF_AUTO_GUARD	37
+	#define global	BUFF_QUICK_USE	38
+	#define global	BUFF_UNLUCKY	39
+	#define global	BUFF_RUN_WILDLY	40
+	#define global	BUFF_RETENTION	41
+	#define global	BUFF_TAG_FORCE	42
+	#define global	BUFF_CONCENTRATION	43
+	#define global	BUFF_FORM_SHIFT_ALPHA	44
+	#define global	BUFF_FORM_SHIFT_BETA	45
+	#define global	BUFF_FORM_SHIFT_GAMMA	46
+	#define global	BUFF_FORM_SHIFT_DELTA	47
+	#define global	BUFF_FORM_SHIFT_OMEGA	48
+	#define global	BUFF_RESOLUTION_HAND	49
+	#define global	BUFF_ABYSS_IN_THE_EYE	50
+	#define global	BUFF_SHIELD_PARRY	51
+	#define global	BUFF_GRAVITY_ACCEL	52
+	#define global	BUFF_HYPER_DASH	53
+	#define global	BUFF_BLACK_MIRROR	54
+	#define global	BUFF_GEM_POWER	55
+	#define global	BUFF_DISTRACTED	56
+	#define global	BUFF_MELANCHOLY	57
+	#define global	BUFF_KILLING_DANCE	58
+	#define global	BUFF_SHOOTING_MODE	59
+	#define global	BUFF_DISINFECTION	60
+	#define global	BUFF_CURSE_OF_HUNGER	61
 
-	MAX_BUFF = BUFF_CURSE_OF_HUNGER + 1
+	#define global	MAX_BUFF	(BUFF_CURSE_OF_HUNGER + 1)
 
-	SKILL_NONE = 0
+	#define global	SKILL_NONE	0
 
 	// Attributes
-	SKILL_ATTR_LIFE = 2
-	SKILL_ATTR_MANA = 3
+	#define global	SKILL_ATTR_LIFE	2
+	#define global	SKILL_ATTR_MANA	3
 
-	SKILL_ATTR_STR = 10
-	SKILL_ATTR_CON = 11
-	SKILL_ATTR_DEX = 12
-	SKILL_ATTR_PER = 13
-	SKILL_ATTR_LER = 14
-	SKILL_ATTR_WIL = 15
-	SKILL_ATTR_MAG = 16
-	SKILL_ATTR_CHA = 17
-	SKILL_ATTR_SPD = 18
-	SKILL_ATTR_LUC = 19
-
-	STARTING_SKILL_ATTR = SKILL_ATTR_STR
-	MAX_SKILL_ATTR_BASIC = 8 // this basically excludes luck and speed
-	MAX_SKILL_ATTR = STARTING_SKILL_ATTR + MAX_SKILL_ATTR_BASIC + 2
+	#define global	SKILL_ATTR_STR	10
+	#define global	SKILL_ATTR_CON	11
+	#define global	SKILL_ATTR_DEX	12
+	#define global	SKILL_ATTR_PER	13
+	#define global	SKILL_ATTR_LER	14
+	#define global	SKILL_ATTR_WIL	15
+	#define global	SKILL_ATTR_MAG	16
+	#define global	SKILL_ATTR_CHA	17
+	#define global	SKILL_ATTR_SPD	18
+	#define global	SKILL_ATTR_LUC	19
+
+	#define global	STARTING_SKILL_ATTR	SKILL_ATTR_STR
+	#define global	MAX_SKILL_ATTR_BASIC	8 // this basically excludes luck and speed
+	#define global	MAX_SKILL_ATTR	(STARTING_SKILL_ATTR + MAX_SKILL_ATTR_BASIC + 2)
 
 	// Resistances
-	STARTING_SKILL_RESIST = 50
+	#define global	STARTING_SKILL_RESIST	50
 
-	SKILL_RES_FIRE = 50
-	SKILL_RES_COLD = 51
-	SKILL_RES_LIGHTNING = 52
-	SKILL_RES_DARKNESS = 53
-	SKILL_RES_MIND = 54
-	SKILL_RES_POISON = 55
-	SKILL_RES_NETHER = 56
-	SKILL_RES_SOUND = 57
-	SKILL_RES_NERVE = 58
-	SKILL_RES_CHAOS = 59
-	SKILL_RES_MAGIC = 60
+	#define global	SKILL_RES_FIRE	50
+	#define global	SKILL_RES_COLD	51
+	#define global	SKILL_RES_LIGHTNING	52
+	#define global	SKILL_RES_DARKNESS	53
+	#define global	SKILL_RES_MIND	54
+	#define global	SKILL_RES_POISON	55
+	#define global	SKILL_RES_NETHER	56
+	#define global	SKILL_RES_SOUND	57
+	#define global	SKILL_RES_NERVE	58
+	#define global	SKILL_RES_CHAOS	59
+	#define global	SKILL_RES_MAGIC	60
 
-	MAX_SKILL_RESIST = SKILL_RES_MAGIC + 1
+	#define global	MAX_SKILL_RESIST	(SKILL_RES_MAGIC + 1)
 
 	// Damage resistances
-	SKILL_RESDMG_CUT = 61
-	SKILL_RESDMG_ETHER = 62
-	SKILL_RESDMG_ACID = 63
-	SKILL_RESDMG_CRUSH = 64 // name is guessed
-	SKILL_RESDMG_CHESTNUT = 65
-	SKILL_RESDMG_BRAIN = 66
-	SKILL_RESDMG_TOFU = 67
+	#define global	SKILL_RESDMG_CUT	61
+	#define global	SKILL_RESDMG_ETHER	62
+	#define global	SKILL_RESDMG_ACID	63
+	#define global	SKILL_RESDMG_CRUSH	64 // name is guessed
+	#define global	SKILL_RESDMG_CHESTNUT	65
+	#define global	SKILL_RESDMG_BRAIN	66
+	#define global	SKILL_RESDMG_TOFU	67
 
 	// Weapon skills
-	STARTING_SKILL_WEAPON = 100
+	#define global	STARTING_SKILL_WEAPON	100
 
-	SKILL_WEAPON_LONGSWORD = 100
-	SKILL_WEAPON_SHORTSWORD = 101
-	SKILL_WEAPON_AXE = 102
-	SKILL_WEAPON_BLUNT = 103
-	SKILL_WEAPON_POLEARM = 104
-	SKILL_WEAPON_STAVE = 105
-	SKILL_WEAPON_MARTIAL_ARTS = 106
-	SKILL_WEAPON_SCYTHE = 107
-	SKILL_WEAPON_BOW = 108
-	SKILL_WEAPON_CROSSBOW = 109
-	SKILL_WEAPON_FIREARM = 110
-	SKILL_WEAPON_THROWING = 111
+	#define global	SKILL_WEAPON_LONGSWORD	100
+	#define global	SKILL_WEAPON_SHORTSWORD	101
+	#define global	SKILL_WEAPON_AXE	102
+	#define global	SKILL_WEAPON_BLUNT	103
+	#define global	SKILL_WEAPON_POLEARM	104
+	#define global	SKILL_WEAPON_STAVE	105
+	#define global	SKILL_WEAPON_MARTIAL_ARTS	106
+	#define global	SKILL_WEAPON_SCYTHE	107
+	#define global	SKILL_WEAPON_BOW	108
+	#define global	SKILL_WEAPON_CROSSBOW	109
+	#define global	SKILL_WEAPON_FIREARM	110
+	#define global	SKILL_WEAPON_THROWING	111
 
-	MAX_SKILL_WEAPON = SKILL_WEAPON_THROWING + 1
+	#define global	MAX_SKILL_WEAPON	(SKILL_WEAPON_THROWING + 1)
 
 	// Normal skills
-	STARTING_SKILL_NORMAL = 150
+	#define global	STARTING_SKILL_NORMAL	150
 
-	SKILL_NORMAL_LITERACY = 150
-	SKILL_NORMAL_GENE_ENGINEER = 151
-	SKILL_NORMAL_TACTICS = 152
-	SKILL_NORMAL_WEIGHT_LIFTING = 153
-	SKILL_NORMAL_HEALING = 154
-	SKILL_NORMAL_MEDITATION = 155
-	SKILL_NORMAL_NEGOTIATION = 156
-	SKILL_NORMAL_STEALTH = 157
-	SKILL_NORMAL_LOCK_PICKING = 158
-	SKILL_NORMAL_DETECTION = 159
-	SKILL_NORMAL_INVESTING = 160
-	SKILL_NORMAL_ANATOMY = 161
-	SKILL_NORMAL_SENSE_QUALITY = 162
-	SKILL_NORMAL_MINING = 163
-	SKILL_NORMAL_MAGIC_CAPACITY = 164
-	SKILL_NORMAL_MEMORIZATION = 165
-	SKILL_NORMAL_DUAL_WIELD = 166
-	SKILL_NORMAL_TWO_HAND = 167
-	SKILL_NORMAL_SHIELD = 168
-	SKILL_NORMAL_HEAVY_ARMOR = 169
-	SKILL_NORMAL_MEDIUM_ARMOR = 170
-	SKILL_NORMAL_LIGHT_ARMOR = 171
-	SKILL_NORMAL_CASTING = 172
-	SKILL_NORMAL_EVASION = 173
-	SKILL_NORMAL_MAGIC_DEVICE = 174
-	SKILL_NORMAL_DISARM_TRAP = 175
-	SKILL_NORMAL_CARPENTRY = 176
-	SKILL_NORMAL_TAILORING = 177
-	SKILL_NORMAL_ALCHEMY = 178
-	SKILL_NORMAL_JEWELER = 179
-	SKILL_NORMAL_GARDENING = 180
-	SKILL_NORMAL_FAITH = 181
-	SKILL_NORMAL_TRAVELING = 182
-	SKILL_NORMAL_PERFORMER = 183
-	SKILL_NORMAL_COOKING = 184
-	SKILL_NORMAL_FISHING = 185
-	SKILL_NORMAL_EYE_OF_MIND = 186
-	SKILL_NORMAL_GREATER_EVASION = 187
-	SKILL_NORMAL_CONTROL_MAGIC = 188
-	SKILL_NORMAL_MARKSMAN = 189
-	SKILL_NORMAL_SWIMMING = 190
+	#define global	SKILL_NORMAL_LITERACY	150
+	#define global	SKILL_NORMAL_GENE_ENGINEER	151
+	#define global	SKILL_NORMAL_TACTICS	152
+	#define global	SKILL_NORMAL_WEIGHT_LIFTING	153
+	#define global	SKILL_NORMAL_HEALING	154
+	#define global	SKILL_NORMAL_MEDITATION	155
+	#define global	SKILL_NORMAL_NEGOTIATION	156
+	#define global	SKILL_NORMAL_STEALTH	157
+	#define global	SKILL_NORMAL_LOCK_PICKING	158
+	#define global	SKILL_NORMAL_DETECTION	159
+	#define global	SKILL_NORMAL_INVESTING	160
+	#define global	SKILL_NORMAL_ANATOMY	161
+	#define global	SKILL_NORMAL_SENSE_QUALITY	162
+	#define global	SKILL_NORMAL_MINING	163
+	#define global	SKILL_NORMAL_MAGIC_CAPACITY	164
+	#define global	SKILL_NORMAL_MEMORIZATION	165
+	#define global	SKILL_NORMAL_DUAL_WIELD	166
+	#define global	SKILL_NORMAL_TWO_HAND	167
+	#define global	SKILL_NORMAL_SHIELD	168
+	#define global	SKILL_NORMAL_HEAVY_ARMOR	169
+	#define global	SKILL_NORMAL_MEDIUM_ARMOR	170
+	#define global	SKILL_NORMAL_LIGHT_ARMOR	171
+	#define global	SKILL_NORMAL_CASTING	172
+	#define global	SKILL_NORMAL_EVASION	173
+	#define global	SKILL_NORMAL_MAGIC_DEVICE	174
+	#define global	SKILL_NORMAL_DISARM_TRAP	175
+	#define global	SKILL_NORMAL_CARPENTRY	176
+	#define global	SKILL_NORMAL_TAILORING	177
+	#define global	SKILL_NORMAL_ALCHEMY	178
+	#define global	SKILL_NORMAL_JEWELER	179
+	#define global	SKILL_NORMAL_GARDENING	180
+	#define global	SKILL_NORMAL_FAITH	181
+	#define global	SKILL_NORMAL_TRAVELING	182
+	#define global	SKILL_NORMAL_PERFORMER	183
+	#define global	SKILL_NORMAL_COOKING	184
+	#define global	SKILL_NORMAL_FISHING	185
+	#define global	SKILL_NORMAL_EYE_OF_MIND	186
+	#define global	SKILL_NORMAL_GREATER_EVASION	187
+	#define global	SKILL_NORMAL_CONTROL_MAGIC	188
+	#define global	SKILL_NORMAL_MARKSMAN	189
+	#define global	SKILL_NORMAL_SWIMMING	190
 
-	MAX_SKILL_NORMAL = SKILL_NORMAL_SWIMMING + 1
+	#define global	MAX_SKILL_NORMAL	(SKILL_NORMAL_SWIMMING + 1)
 
 	// Active skills
-	STARTING_SKILL_ACTIVE = 300
+	#define global	STARTING_SKILL_ACTIVE	300
 
-	SKILL_ACTIVE_PICKPOCKET = 300
-	SKILL_ACTIVE_RIDING = 301
+	#define global	SKILL_ACTIVE_PICKPOCKET	300
+	#define global	SKILL_ACTIVE_RIDING	301
 
-	MAX_SKILL_ACTIVE = SKILL_ACTIVE_RIDING + 1
+	#define global	MAX_SKILL_ACTIVE	(SKILL_ACTIVE_RIDING + 1)
 
 	// Spells
-	STARTING_SKILL_SPELL = 400
+	#define global	STARTING_SKILL_SPELL	400
 
-	SKILL_SPELL_HEAL_LIGHT = 400
-	SKILL_SPELL_HEAL_CRITICAL = 401
-	SKILL_SPELL_CURE_OF_ERIS = 402
-	SKILL_SPELL_CURE_OF_JURE = 403
-	SKILL_SPELL_HEALING_RAIN = 404
-	SKILL_SPELL_HEALING_TOUCH = 405
-	SKILL_SPELL_HOLY_LIGHT = 406
-	SKILL_SPELL_VANQUISH_HEX = 407
-	SKILL_SPELL_TELEPORT = 408
-	SKILL_SPELL_TELEPORT_OTHER = 409
-	SKILL_SPELL_SHORT_TELEPORT = 410
-	SKILL_SPELL_IDENTIFY = 411
-	SKILL_SPELL_UNCURSE = 412
-	SKILL_SPELL_ORACLE = 413
-	SKILL_SPELL_MAGIC_DART = 414
-	SKILL_SPELL_NETHER_ARROW = 415
-	SKILL_SPELL_NERVE_ARROW = 416
-	SKILL_SPELL_CHAOS_EYE = 417
-	SKILL_SPELL_DARK_EYE = 418
-	SKILL_SPELL_ICE_BOLT = 419
-	SKILL_SPELL_FIRE_BOLT = 420
-	SKILL_SPELL_LIGHTNING_BOLT = 421
-	SKILL_SPELL_DARKNESS_BOLT = 422
-	SKILL_SPELL_MIND_BOLT = 423
-	SKILL_SPELL_SUMMON_MONSTERS = 424
-	SKILL_SPELL_SUMMON_WILD = 425
-	SKILL_SPELL_RETURN = 428
-	SKILL_SPELL_MAGIC_MAP = 429
-	SKILL_SPELL_SENSE_OBJECT = 430
-	SKILL_SPELL_ICE_BALL = 431
-	SKILL_SPELL_FIRE_BALL = 432
-	SKILL_SPELL_CHAOS_BALL = 433
-	SKILL_SPELL_RAGING_ROAR = 434
-	SKILL_SPELL_DOMINATE = 435
-	SKILL_SPELL_WEB = 436
-	SKILL_SPELL_MIST_OF_DARKNESS = 437
-	SKILL_SPELL_WALL_CREATION = 438
-	SKILL_SPELL_RESTORE_BODY = 439
-	SKILL_SPELL_RESTORE_SPIRIT = 440
-	SKILL_SPELL_WISH = 441
-	SKILL_SPELL_HOLY_SHIELD = 442
-	SKILL_SPELL_MIST_OF_SILENCE = 443
-	SKILL_SPELL_REGENERATION = 444
-	SKILL_SPELL_ATTRIBUTE_SHIELD = 445
-	SKILL_SPELL_SPEED = 446
-	SKILL_SPELL_SLOW = 447
-	SKILL_SPELL_HERO = 448
-	SKILL_SPELL_MIST_OF_FRAILNESS = 449
-	SKILL_SPELL_ELEMENT_SCAR = 450
-	SKILL_SPELL_HOLY_VEIL = 451
-	SKILL_SPELL_NIGHTMARE = 452
-	SKILL_SPELL_DIVINE_WISDOM = 453
-	SKILL_SPELL_MUTATION = 454
-	SKILL_SPELL_ACID_GROUND = 455
-	SKILL_SPELL_FIRE_WALL = 456
-	SKILL_SPELL_DOOR_CREATION = 457
-	SKILL_SPELL_INCOGNITO = 458
-	SKILL_SPELL_CRYSTAL_SPEAR = 459
-	SKILL_SPELL_MAGIC_STORM = 460
-	SKILL_SPELL_RESURRECTION = 461
-	SKILL_SPELL_CONTINGENCY = 462
-	SKILL_SPELL_4DIM_POCKET = 463
-	SKILL_SPELL_WIZARDS_HARVEST = 464
-	SKILL_SPELL_METEOR = 465
-	SKILL_SPELL_GRAVITY = 466
-	SKILL_SPELL_SUMMON_SPIRIT = 467
-	SKILL_SPELL_FEATHER = 468
-	SKILL_SPELL_ECLIPSE = 469
-	SKILL_SPELL_THUNDER_VORTEX = 470
-	SKILL_SPELL_NETHER_WAVE = 471
-	SKILL_SPELL_MIST_OF_DAZZLING = 472
-	SKILL_SPELL_POISON_STORM = 473
-	SKILL_SPELL_CONCENTRATION = 474
-	SKILL_SPELL_WATER_BOLT = 475
-	SKILL_SPELL_BUBBLE_STORM = 476
-	SKILL_SPELL_GEM_POWER = 477
+	#define global	SKILL_SPELL_HEAL_LIGHT	400
+	#define global	SKILL_SPELL_HEAL_CRITICAL	401
+	#define global	SKILL_SPELL_CURE_OF_ERIS	402
+	#define global	SKILL_SPELL_CURE_OF_JURE	403
+	#define global	SKILL_SPELL_HEALING_RAIN	404
+	#define global	SKILL_SPELL_HEALING_TOUCH	405
+	#define global	SKILL_SPELL_HOLY_LIGHT	406
+	#define global	SKILL_SPELL_VANQUISH_HEX	407
+	#define global	SKILL_SPELL_TELEPORT	408
+	#define global	SKILL_SPELL_TELEPORT_OTHER	409
+	#define global	SKILL_SPELL_SHORT_TELEPORT	410
+	#define global	SKILL_SPELL_IDENTIFY	411
+	#define global	SKILL_SPELL_UNCURSE	412
+	#define global	SKILL_SPELL_ORACLE	413
+	#define global	SKILL_SPELL_MAGIC_DART	414
+	#define global	SKILL_SPELL_NETHER_ARROW	415
+	#define global	SKILL_SPELL_NERVE_ARROW	416
+	#define global	SKILL_SPELL_CHAOS_EYE	417
+	#define global	SKILL_SPELL_DARK_EYE	418
+	#define global	SKILL_SPELL_ICE_BOLT	419
+	#define global	SKILL_SPELL_FIRE_BOLT	420
+	#define global	SKILL_SPELL_LIGHTNING_BOLT	421
+	#define global	SKILL_SPELL_DARKNESS_BOLT	422
+	#define global	SKILL_SPELL_MIND_BOLT	423
+	#define global	SKILL_SPELL_SUMMON_MONSTERS	424
+	#define global	SKILL_SPELL_SUMMON_WILD	425
+	#define global	SKILL_SPELL_RETURN	428
+	#define global	SKILL_SPELL_MAGIC_MAP	429
+	#define global	SKILL_SPELL_SENSE_OBJECT	430
+	#define global	SKILL_SPELL_ICE_BALL	431
+	#define global	SKILL_SPELL_FIRE_BALL	432
+	#define global	SKILL_SPELL_CHAOS_BALL	433
+	#define global	SKILL_SPELL_RAGING_ROAR	434
+	#define global	SKILL_SPELL_DOMINATE	435
+	#define global	SKILL_SPELL_WEB	436
+	#define global	SKILL_SPELL_MIST_OF_DARKNESS	437
+	#define global	SKILL_SPELL_WALL_CREATION	438
+	#define global	SKILL_SPELL_RESTORE_BODY	439
+	#define global	SKILL_SPELL_RESTORE_SPIRIT	440
+	#define global	SKILL_SPELL_WISH	441
+	#define global	SKILL_SPELL_HOLY_SHIELD	442
+	#define global	SKILL_SPELL_MIST_OF_SILENCE	443
+	#define global	SKILL_SPELL_REGENERATION	444
+	#define global	SKILL_SPELL_ATTRIBUTE_SHIELD	445
+	#define global	SKILL_SPELL_SPEED	446
+	#define global	SKILL_SPELL_SLOW	447
+	#define global	SKILL_SPELL_HERO	448
+	#define global	SKILL_SPELL_MIST_OF_FRAILNESS	449
+	#define global	SKILL_SPELL_ELEMENT_SCAR	450
+	#define global	SKILL_SPELL_HOLY_VEIL	451
+	#define global	SKILL_SPELL_NIGHTMARE	452
+	#define global	SKILL_SPELL_DIVINE_WISDOM	453
+	#define global	SKILL_SPELL_MUTATION	454
+	#define global	SKILL_SPELL_ACID_GROUND	455
+	#define global	SKILL_SPELL_FIRE_WALL	456
+	#define global	SKILL_SPELL_DOOR_CREATION	457
+	#define global	SKILL_SPELL_INCOGNITO	458
+	#define global	SKILL_SPELL_CRYSTAL_SPEAR	459
+	#define global	SKILL_SPELL_MAGIC_STORM	460
+	#define global	SKILL_SPELL_RESURRECTION	461
+	#define global	SKILL_SPELL_CONTINGENCY	462
+	#define global	SKILL_SPELL_4DIM_POCKET	463
+	#define global	SKILL_SPELL_WIZARDS_HARVEST	464
+	#define global	SKILL_SPELL_METEOR	465
+	#define global	SKILL_SPELL_GRAVITY	466
+	#define global	SKILL_SPELL_SUMMON_SPIRIT	467
+	#define global	SKILL_SPELL_FEATHER	468
+	#define global	SKILL_SPELL_ECLIPSE	469
+	#define global	SKILL_SPELL_THUNDER_VORTEX	470
+	#define global	SKILL_SPELL_NETHER_WAVE	471
+	#define global	SKILL_SPELL_MIST_OF_DAZZLING	472
+	#define global	SKILL_SPELL_POISON_STORM	473
+	#define global	SKILL_SPELL_CONCENTRATION	474
+	#define global	SKILL_SPELL_WATER_BOLT	475
+	#define global	SKILL_SPELL_BUBBLE_STORM	476
+	#define global	SKILL_SPELL_GEM_POWER	477
 
-	MAX_SPELL = SKILL_SPELL_GEM_POWER + 1
+	#define global	MAX_SPELL	(SKILL_SPELL_GEM_POWER + 1)
 
 	// Special actions
-	STARTING_SKILL_SPACT = 600
+	#define global	STARTING_SKILL_SPACT	600
 
-	SKILL_SPACT_DRAIN_BLOOD = 601
-	SKILL_SPACT_FIRE_BREATH = 602
-	SKILL_SPACT_COLD_BREATH = 603
-	SKILL_SPACT_LIGHTNING_BREATH = 604
-	SKILL_SPACT_DARKNESS_BREATH = 605
-	SKILL_SPACT_CHAOS_BREATH = 606
-	SKILL_SPACT_SOUND_BREATH = 607
-	SKILL_SPACT_NETHER_BREATH = 608
-	SKILL_SPACT_NERVE_BREATH = 609
-	SKILL_SPACT_POISON_BREATH = 610
-	SKILL_SPACT_MIND_BREATH = 611
-	SKILL_SPACT_POWER_BREATH = 612
-	SKILL_SPACT_TOUCH_OF_WEAKNESS = 613
-	SKILL_SPACT_TOUCH_OF_HUNGER = 614
-	SKILL_SPACT_TOUCH_OF_POISON = 615
-	SKILL_SPACT_TOUCH_OF_NERVE = 616
-	SKILL_SPACT_TOUCH_OF_FEAR = 617
-	SKILL_SPACT_TOUCH_OF_SLEEP = 618
-	SKILL_SPACT_SHADOW_STEP = 619
-	SKILL_SPACT_DRAW_SHADOW = 620
-	SKILL_SPACT_HARVEST_MANA = 621
-	SKILL_SPACT_PUNISHMENT = 622
-	SKILL_SPACT_PRAYER_OF_JURE = 623
-	SKILL_SPACT_ABSORB_MAGIC = 624
-	SKILL_SPACT_LULWYS_TRICK = 625
-	SKILL_SPACT_PSYCHOANALYSIS = 626
-	SKILL_SPACT_DIMENSIONAL_MOVE = 627
-	SKILL_SPACT_CHANGE = 628
-	SKILL_SPACT_DRAW_CHARGE = 629
-	SKILL_SPACT_FILL_CHARGE = 630
-	SKILL_SPACT_SWARM = 631
-	SKILL_SPACT_EYE_OF_MUTATION = 632
-	SKILL_SPACT_EYE_OF_ETHER = 633
-	SKILL_SPACT_ETHER_GROUND = 634
-	SKILL_SPACT_SUSPICIOUS_HAND = 635
-	SKILL_SPACT_EYE_OF_INSANITY = 636
-	SKILL_SPACT_RAIN_OF_SANITY = 637
-	SKILL_SPACT_EYE_OF_DIMNESS = 638
-	SKILL_SPACT_SUMMON_CATS = 639
-	SKILL_SPACT_SUMMON_YEEK = 640
-	SKILL_SPACT_SUMMON_PAWN = 641
-	SKILL_SPACT_SUMMON_FIRE = 642
-	SKILL_SPACT_SUMMON_SISTER = 643
-	SKILL_SPACT_SUICIDE_ATTACK = 644
-	SKILL_SPACT_CURSE = 645
-	SKILL_SPACT_DEATH_WORD = 646
-	SKILL_SPACT_BOOST = 647
-	SKILL_SPACT_INSULT = 648
-	SKILL_SPACT_SHINING_WAVE = 649
-	SKILL_SPACT_DISTANT_ATTACK7 = 650
-	SKILL_SPACT_SCAVENGE = 651
-	SKILL_SPACT_EYE_OF_MANA = 652
-	SKILL_SPACT_VANISH = 653
-	SKILL_SPACT_PREGNANT = 654
-	SKILL_SPACT_GRENADE = 655
-	SKILL_SPACT_CHEER = 656
-	SKILL_SPACT_MEWMEWMEW = 657
-	SKILL_SPACT_DECAPITATION = 658
-	SKILL_SPACT_DROP_MINE = 659
-	SKILL_SPACT_MANIS_DISASSEMBLY = 660
-	SKILL_SPACT_INSANE_WAVE = 661
-	SKILL_SPACT_SUPER_VIBRATING_FIST = 662
-	SKILL_SPACT_TEMPEST_ARROW = 663
-	SKILL_SPACT_EXCESSIVE_HEAL = 664
-	SKILL_SPACT_SHINE_SNAIL = 665
-	SKILL_SPACT_HOUZANHA = 666
-	SKILL_SPACT_MANA_BURST = 667
-	SKILL_SPACT_ELEMENTIA = 668
-	SKILL_SPACT_RAMPAGE = 669
-	SKILL_SPACT_GOLD_RUSH = 670
-	SKILL_SPACT_SYNCHRO_HEARTS = 671
-	SKILL_SPACT_MAGIC_KISS = 672
-	SKILL_SPACT_CLEAR_MIND = 673
-	SKILL_SPACT_PRESSURE = 674
-	SKILL_SPACT_SUMMON_CHAOS = 675
-	SKILL_SPACT_ENSEMBLE = 676
-	SKILL_SPACT_SUPER_REGEN = 677
-	SKILL_SPACT_DIRECTIVE = 678
-	SKILL_SPACT_PLATINUM_SONG = 679
-	SKILL_SPACT_PROVOKE = 680
-	SKILL_SPACT_BIND = 681
-	SKILL_SPACT_BROWBEAT = 682
-	SKILL_SPACT_EYE_OF_BRAINWASHING = 683
-	SKILL_SPACT_CALL_FAMILIAR = 684
-	SKILL_SPACT_EXPLOSIVE_FIST = 685
-	SKILL_SPACT_CHARGE = 686
-	SKILL_SPACT_EMERGENCY_EVASION = 687
-	SKILL_SPACT_MAGIC_EQUIP = 688
-	SKILL_SPACT_SUPER_ARMOR = 689
-	SKILL_SPACT_DO_NOTHING = 690
-	SKILL_SPACT_GRAVITY_SPHERE = 691
-	SKILL_SPACT_ATTRIBUTE = 692
-	SKILL_SPACT_FIRE_A_VOLLEY = 693
-	SKILL_SPACT_ABSOLUTE_PROTECT = 694
-	SKILL_SPACT_MEGID_FLAME = 695
-	SKILL_SPACT_FORCED_DRAFT = 696
-	SKILL_SPACT_CONTINUOUS_ATTACKS = 697
-	SKILL_SPACT_VARIABLE_BREATH = 698
-	SKILL_SPACT_DIVINE_STREAM = 699
-	SKILL_SPACT_ZERO_SHOOT = 700
-	SKILL_SPACT_RUBBING = 701
-	SKILL_SPACT_FLASH_OF_SWIFTNESS = 702
-	SKILL_SPACT_UNDERHAND_DROP = 703
-	SKILL_SPACT_BISECTION = 704
-	SKILL_SPACT_PULVERIZATION = 705
-	SKILL_SPACT_PENETRATION = 706
-	SKILL_SPACT_DANCE_OF_BLOW = 707
-	SKILL_SPACT_EXPLOSION = 708
-	SKILL_SPACT_QUICK_USE = 709
-	SKILL_SPACT_SQUEEZE = 710
-	SKILL_SPACT_DISTURBANCE = 711
-	SKILL_SPACT_CUT_TREE = 712
-	SKILL_SPACT_PREACHING = 713
-	SKILL_SPACT_UNCONTROL = 714
-	SKILL_SPACT_CONVERGE_BREATH = 715
-	SKILL_SPACT_TIME_STOP = 716
-	SKILL_SPACT_PIERCING_ZERO_SHOOT = 717
-	SKILL_SPACT_DIFFUSION_WAVE = 718
-	SKILL_SPACT_ASSIMILATE = 719
-	SKILL_SPACT_OVER_BOOST = 720
-	SKILL_SPACT_WILD_RELEASE = 721
-	SKILL_SPACT_GUTS_OF_SNAIL = 722
-	SKILL_SPACT_DANCE_OF_THE_DEAD = 723
-	SKILL_SPACT_EXPLOSION_DUST = 724
-	SKILL_SPACT_HALF_SOUL = 725
-	SKILL_SPACT_DEATH_BIND = 726
-	SKILL_SPACT_TORRENTIAL_TRIBUTE = 727
-	SKILL_SPACT_MIND_BREAK = 728
-	SKILL_SPACT_HAND_OF_SPLENDOR = 729
-	SKILL_SPACT_GRAVITON_BUSTER = 730
-	SKILL_SPACT_MANA_SLASH = 731
-	SKILL_SPACT_INTENSIVE_POWER = 732
-	SKILL_SPACT_SPACE_RETENTION = 733
-	SKILL_SPACT_DISTANT_ATTACK = 734
-	SKILL_SPACT_SPINNING_THROW = 735
-	SKILL_SPACT_METAL_GUARD = 736
-	SKILL_SPACT_THUNDERCLAP_KICK = 737
-	SKILL_SPACT_STRUCK_OUT = 738
-	SKILL_SPACT_BEWITCH = 739
-	SKILL_SPACT_SHADOW_RUSH = 740
-	SKILL_SPACT_TAG_FORCE = 741
-	SKILL_SPACT_BODY_BLOW = 742
-	SKILL_SPACT_NECRO_FORCE = 743
-	SKILL_SPACT_CLOSE_SUICIDE = 744
-	SKILL_SPACT_KNOCKOUT = 745
-	SKILL_SPACT_OVERRAY = 746
-	SKILL_SPACT_SMASH_GROUND = 747
-	SKILL_SPACT_VORACITY_FANG = 748
-	SKILL_SPACT_SHIELD_STRIKE = 749
-	SKILL_SPACT_GAUGE_RELEASE = 750
-	SKILL_SPACT_ALCHEMICAL_RAIN = 751
-	SKILL_SPACT_MULTIPLE_GATHER = 752
-	SKILL_SPACT_PSYCHIC_WAVE = 753
-	SKILL_SPACT_READING_PARTY = 754
-	SKILL_SPACT_OVER_LONG_THROW = 755
-	SKILL_SPACT_DUPLICANE = 756
-	SKILL_SPACT_LOCK_BREAK = 757
-	SKILL_SPACT_MEMORY_POISON = 758
-	SKILL_SPACT_BLADE_TURBULENCE = 759
-	SKILL_SPACT_CLASH_RUSH = 760
-	SKILL_SPACT_DEATH_SONG = 761
-	SKILL_SPACT_HOMING_LASER = 762
-	SKILL_SPACT_MP_BREATH = 763
-	SKILL_SPACT_BOUND_IN_BLOOD = 764
-	SKILL_SPACT_SILENT_OCEAN = 765
-	SKILL_SPACT_DIMENSION_FISHING = 766
-	SKILL_SPACT_FASCINATION_DANCE = 767
-	SKILL_SPACT_VINDALIAN_JIUJITSU = 768
-	SKILL_SPACT_BLADE_STRINGS = 769
-	SKILL_SPACT_DANCING_WIRE = 770
-	SKILL_SPACT_EYE_OF_STIFFEN = 771
-	SKILL_SPACT_EYE_OF_ILLUSION = 772
-	SKILL_SPACT_EXTERMINATION_BREATH = 773
-	SKILL_SPACT_RESOLUTION_HAND = 774
-	SKILL_SPACT_MATERIALIZE = 775
-	SKILL_SPACT_COWERING_SMILE = 776
-	SKILL_SPACT_SMILE_FIELD = 777
-	SKILL_SPACT_ABYSS_IN_THE_EYE = 778
-	SKILL_SPACT_SHIELD_PARRY = 779
-	SKILL_SPACT_ROCKET_FIRE = 780
-	SKILL_SPACT_NUCLEAR_FIRE = 781
-	SKILL_SPACT_GOLDEN_STORM = 782
-	SKILL_SPACT_GRAVITY_ACCEL = 783
-	SKILL_SPACT_GIGA_GRAVITATION = 784
-	SKILL_SPACT_HYPER_DASH = 785
-	SKILL_SPACT_VIOLENT_GARDEN = 786
-	SKILL_SPACT_MISTELTEIN = 787
-	SKILL_SPACT_AROMAGEDDON = 788
-	SKILL_SPACT_CURTAIN_OF_SMOKE = 789
-	SKILL_SPACT_SMOKE_MIRROR = 790
-	SKILL_SPACT_MIRROR = 791
-	SKILL_SPACT_MELT_CLINCH = 792
-	SKILL_SPACT_FORMLESS_FETTER = 793
-	SKILL_SPACT_BLOOD_STREAM = 794
-	SKILL_SPACT_FLAME_OF_RAGE = 795
-	SKILL_SPACT_IMPACT_GUNFIRE = 796
-	SKILL_SPACT_ONE_POINT_SHOOT = 797
-	SKILL_SPACT_CRITICAL_PARTICLE_CANNON = 798
-	SKILL_SPACT_HELM_SMASHER = 799
-	SKILL_SPACT_ARROW_RAIN = 800
-	SKILL_SPACT_BLAME_PAIN = 801
-	SKILL_SPACT_WIN = 802
-	SKILL_SPACT_PURGE = 803
-	SKILL_SPACT_UNISON_IMPACT = 804
-	SKILL_SPACT_GROUP_HYPNOSIS = 805
-	SKILL_SPACT_THREAD_OF_INNERVATION = 806
-	SKILL_SPACT_MARKING = 807
-	SKILL_SPACT_GRAND_FINALE = 808
-	SKILL_SPACT_DATA_DELETE = 809
-	SKILL_SPACT_DISPATCH_FLYING_BEAST = 810
-	SKILL_SPACT_KILLING_DANCE = 811
-	SKILL_SPACT_DECAPITATION2 = 812
-	SKILL_SPACT_ANAPHYLAXIS = 813
-	SKILL_SPACT_HAZARD_RECIPE = 814
-	SKILL_SPACT_VENOTRATE = 815
-	SKILL_SPACT_PERSUASION = 816
-	SKILL_SPACT_PECULIAR_JOKE = 817
-	SKILL_SPACT_BLENDED_LIE = 818
-	SKILL_SPACT_INTIMIDATION = 819
-	SKILL_SPACT_MYSTERIOUS_SONG = 820
-	SKILL_SPACT_TUIN_DER_LUSTEN = 821
+	#define global	SKILL_SPACT_DRAIN_BLOOD	601
+	#define global	SKILL_SPACT_FIRE_BREATH	602
+	#define global	SKILL_SPACT_COLD_BREATH	603
+	#define global	SKILL_SPACT_LIGHTNING_BREATH	604
+	#define global	SKILL_SPACT_DARKNESS_BREATH	605
+	#define global	SKILL_SPACT_CHAOS_BREATH	606
+	#define global	SKILL_SPACT_SOUND_BREATH	607
+	#define global	SKILL_SPACT_NETHER_BREATH	608
+	#define global	SKILL_SPACT_NERVE_BREATH	609
+	#define global	SKILL_SPACT_POISON_BREATH	610
+	#define global	SKILL_SPACT_MIND_BREATH	611
+	#define global	SKILL_SPACT_POWER_BREATH	612
+	#define global	SKILL_SPACT_TOUCH_OF_WEAKNESS	613
+	#define global	SKILL_SPACT_TOUCH_OF_HUNGER	614
+	#define global	SKILL_SPACT_TOUCH_OF_POISON	615
+	#define global	SKILL_SPACT_TOUCH_OF_NERVE	616
+	#define global	SKILL_SPACT_TOUCH_OF_FEAR	617
+	#define global	SKILL_SPACT_TOUCH_OF_SLEEP	618
+	#define global	SKILL_SPACT_SHADOW_STEP	619
+	#define global	SKILL_SPACT_DRAW_SHADOW	620
+	#define global	SKILL_SPACT_HARVEST_MANA	621
+	#define global	SKILL_SPACT_PUNISHMENT	622
+	#define global	SKILL_SPACT_PRAYER_OF_JURE	623
+	#define global	SKILL_SPACT_ABSORB_MAGIC	624
+	#define global	SKILL_SPACT_LULWYS_TRICK	625
+	#define global	SKILL_SPACT_PSYCHOANALYSIS	626
+	#define global	SKILL_SPACT_DIMENSIONAL_MOVE	627
+	#define global	SKILL_SPACT_CHANGE	628
+	#define global	SKILL_SPACT_DRAW_CHARGE	629
+	#define global	SKILL_SPACT_FILL_CHARGE	630
+	#define global	SKILL_SPACT_SWARM	631
+	#define global	SKILL_SPACT_EYE_OF_MUTATION	632
+	#define global	SKILL_SPACT_EYE_OF_ETHER	633
+	#define global	SKILL_SPACT_ETHER_GROUND	634
+	#define global	SKILL_SPACT_SUSPICIOUS_HAND	635
+	#define global	SKILL_SPACT_EYE_OF_INSANITY	636
+	#define global	SKILL_SPACT_RAIN_OF_SANITY	637
+	#define global	SKILL_SPACT_EYE_OF_DIMNESS	638
+	#define global	SKILL_SPACT_SUMMON_CATS	639
+	#define global	SKILL_SPACT_SUMMON_YEEK	640
+	#define global	SKILL_SPACT_SUMMON_PAWN	641
+	#define global	SKILL_SPACT_SUMMON_FIRE	642
+	#define global	SKILL_SPACT_SUMMON_SISTER	643
+	#define global	SKILL_SPACT_SUICIDE_ATTACK	644
+	#define global	SKILL_SPACT_CURSE	645
+	#define global	SKILL_SPACT_DEATH_WORD	646
+	#define global	SKILL_SPACT_BOOST	647
+	#define global	SKILL_SPACT_INSULT	648
+	#define global	SKILL_SPACT_SHINING_WAVE	649
+	#define global	SKILL_SPACT_DISTANT_ATTACK7	650
+	#define global	SKILL_SPACT_SCAVENGE	651
+	#define global	SKILL_SPACT_EYE_OF_MANA	652
+	#define global	SKILL_SPACT_VANISH	653
+	#define global	SKILL_SPACT_PREGNANT	654
+	#define global	SKILL_SPACT_GRENADE	655
+	#define global	SKILL_SPACT_CHEER	656
+	#define global	SKILL_SPACT_MEWMEWMEW	657
+	#define global	SKILL_SPACT_DECAPITATION	658
+	#define global	SKILL_SPACT_DROP_MINE	659
+	#define global	SKILL_SPACT_MANIS_DISASSEMBLY	660
+	#define global	SKILL_SPACT_INSANE_WAVE	661
+	#define global	SKILL_SPACT_SUPER_VIBRATING_FIST	662
+	#define global	SKILL_SPACT_TEMPEST_ARROW	663
+	#define global	SKILL_SPACT_EXCESSIVE_HEAL	664
+	#define global	SKILL_SPACT_SHINE_SNAIL	665
+	#define global	SKILL_SPACT_HOUZANHA	666
+	#define global	SKILL_SPACT_MANA_BURST	667
+	#define global	SKILL_SPACT_ELEMENTIA	668
+	#define global	SKILL_SPACT_RAMPAGE	669
+	#define global	SKILL_SPACT_GOLD_RUSH	670
+	#define global	SKILL_SPACT_SYNCHRO_HEARTS	671
+	#define global	SKILL_SPACT_MAGIC_KISS	672
+	#define global	SKILL_SPACT_CLEAR_MIND	673
+	#define global	SKILL_SPACT_PRESSURE	674
+	#define global	SKILL_SPACT_SUMMON_CHAOS	675
+	#define global	SKILL_SPACT_ENSEMBLE	676
+	#define global	SKILL_SPACT_SUPER_REGEN	677
+	#define global	SKILL_SPACT_DIRECTIVE	678
+	#define global	SKILL_SPACT_PLATINUM_SONG	679
+	#define global	SKILL_SPACT_PROVOKE	680
+	#define global	SKILL_SPACT_BIND	681
+	#define global	SKILL_SPACT_BROWBEAT	682
+	#define global	SKILL_SPACT_EYE_OF_BRAINWASHING	683
+	#define global	SKILL_SPACT_CALL_FAMILIAR	684
+	#define global	SKILL_SPACT_EXPLOSIVE_FIST	685
+	#define global	SKILL_SPACT_CHARGE	686
+	#define global	SKILL_SPACT_EMERGENCY_EVASION	687
+	#define global	SKILL_SPACT_MAGIC_EQUIP	688
+	#define global	SKILL_SPACT_SUPER_ARMOR	689
+	#define global	SKILL_SPACT_DO_NOTHING	690
+	#define global	SKILL_SPACT_GRAVITY_SPHERE	691
+	#define global	SKILL_SPACT_ATTRIBUTE	692
+	#define global	SKILL_SPACT_FIRE_A_VOLLEY	693
+	#define global	SKILL_SPACT_ABSOLUTE_PROTECT	694
+	#define global	SKILL_SPACT_MEGID_FLAME	695
+	#define global	SKILL_SPACT_FORCED_DRAFT	696
+	#define global	SKILL_SPACT_CONTINUOUS_ATTACKS	697
+	#define global	SKILL_SPACT_VARIABLE_BREATH	698
+	#define global	SKILL_SPACT_DIVINE_STREAM	699
+	#define global	SKILL_SPACT_ZERO_SHOOT	700
+	#define global	SKILL_SPACT_RUBBING	701
+	#define global	SKILL_SPACT_FLASH_OF_SWIFTNESS	702
+	#define global	SKILL_SPACT_UNDERHAND_DROP	703
+	#define global	SKILL_SPACT_BISECTION	704
+	#define global	SKILL_SPACT_PULVERIZATION	705
+	#define global	SKILL_SPACT_PENETRATION	706
+	#define global	SKILL_SPACT_DANCE_OF_BLOW	707
+	#define global	SKILL_SPACT_EXPLOSION	708
+	#define global	SKILL_SPACT_QUICK_USE	709
+	#define global	SKILL_SPACT_SQUEEZE	710
+	#define global	SKILL_SPACT_DISTURBANCE	711
+	#define global	SKILL_SPACT_CUT_TREE	712
+	#define global	SKILL_SPACT_PREACHING	713
+	#define global	SKILL_SPACT_UNCONTROL	714
+	#define global	SKILL_SPACT_CONVERGE_BREATH	715
+	#define global	SKILL_SPACT_TIME_STOP	716
+	#define global	SKILL_SPACT_PIERCING_ZERO_SHOOT	717
+	#define global	SKILL_SPACT_DIFFUSION_WAVE	718
+	#define global	SKILL_SPACT_ASSIMILATE	719
+	#define global	SKILL_SPACT_OVER_BOOST	720
+	#define global	SKILL_SPACT_WILD_RELEASE	721
+	#define global	SKILL_SPACT_GUTS_OF_SNAIL	722
+	#define global	SKILL_SPACT_DANCE_OF_THE_DEAD	723
+	#define global	SKILL_SPACT_EXPLOSION_DUST	724
+	#define global	SKILL_SPACT_HALF_SOUL	725
+	#define global	SKILL_SPACT_DEATH_BIND	726
+	#define global	SKILL_SPACT_TORRENTIAL_TRIBUTE	727
+	#define global	SKILL_SPACT_MIND_BREAK	728
+	#define global	SKILL_SPACT_HAND_OF_SPLENDOR	729
+	#define global	SKILL_SPACT_GRAVITON_BUSTER	730
+	#define global	SKILL_SPACT_MANA_SLASH	731
+	#define global	SKILL_SPACT_INTENSIVE_POWER	732
+	#define global	SKILL_SPACT_SPACE_RETENTION	733
+	#define global	SKILL_SPACT_DISTANT_ATTACK	734
+	#define global	SKILL_SPACT_SPINNING_THROW	735
+	#define global	SKILL_SPACT_METAL_GUARD	736
+	#define global	SKILL_SPACT_THUNDERCLAP_KICK	737
+	#define global	SKILL_SPACT_STRUCK_OUT	738
+	#define global	SKILL_SPACT_BEWITCH	739
+	#define global	SKILL_SPACT_SHADOW_RUSH	740
+	#define global	SKILL_SPACT_TAG_FORCE	741
+	#define global	SKILL_SPACT_BODY_BLOW	742
+	#define global	SKILL_SPACT_NECRO_FORCE	743
+	#define global	SKILL_SPACT_CLOSE_SUICIDE	744
+	#define global	SKILL_SPACT_KNOCKOUT	745
+	#define global	SKILL_SPACT_OVERRAY	746
+	#define global	SKILL_SPACT_SMASH_GROUND	747
+	#define global	SKILL_SPACT_VORACITY_FANG	748
+	#define global	SKILL_SPACT_SHIELD_STRIKE	749
+	#define global	SKILL_SPACT_GAUGE_RELEASE	750
+	#define global	SKILL_SPACT_ALCHEMICAL_RAIN	751
+	#define global	SKILL_SPACT_MULTIPLE_GATHER	752
+	#define global	SKILL_SPACT_PSYCHIC_WAVE	753
+	#define global	SKILL_SPACT_READING_PARTY	754
+	#define global	SKILL_SPACT_OVER_LONG_THROW	755
+	#define global	SKILL_SPACT_DUPLICANE	756
+	#define global	SKILL_SPACT_LOCK_BREAK	757
+	#define global	SKILL_SPACT_MEMORY_POISON	758
+	#define global	SKILL_SPACT_BLADE_TURBULENCE	759
+	#define global	SKILL_SPACT_CLASH_RUSH	760
+	#define global	SKILL_SPACT_DEATH_SONG	761
+	#define global	SKILL_SPACT_HOMING_LASER	762
+	#define global	SKILL_SPACT_MP_BREATH	763
+	#define global	SKILL_SPACT_BOUND_IN_BLOOD	764
+	#define global	SKILL_SPACT_SILENT_OCEAN	765
+	#define global	SKILL_SPACT_DIMENSION_FISHING	766
+	#define global	SKILL_SPACT_FASCINATION_DANCE	767
+	#define global	SKILL_SPACT_VINDALIAN_JIUJITSU	768
+	#define global	SKILL_SPACT_BLADE_STRINGS	769
+	#define global	SKILL_SPACT_DANCING_WIRE	770
+	#define global	SKILL_SPACT_EYE_OF_STIFFEN	771
+	#define global	SKILL_SPACT_EYE_OF_ILLUSION	772
+	#define global	SKILL_SPACT_EXTERMINATION_BREATH	773
+	#define global	SKILL_SPACT_RESOLUTION_HAND	774
+	#define global	SKILL_SPACT_MATERIALIZE	775
+	#define global	SKILL_SPACT_COWERING_SMILE	776
+	#define global	SKILL_SPACT_SMILE_FIELD	777
+	#define global	SKILL_SPACT_ABYSS_IN_THE_EYE	778
+	#define global	SKILL_SPACT_SHIELD_PARRY	779
+	#define global	SKILL_SPACT_ROCKET_FIRE	780
+	#define global	SKILL_SPACT_NUCLEAR_FIRE	781
+	#define global	SKILL_SPACT_GOLDEN_STORM	782
+	#define global	SKILL_SPACT_GRAVITY_ACCEL	783
+	#define global	SKILL_SPACT_GIGA_GRAVITATION	784
+	#define global	SKILL_SPACT_HYPER_DASH	785
+	#define global	SKILL_SPACT_VIOLENT_GARDEN	786
+	#define global	SKILL_SPACT_MISTELTEIN	787
+	#define global	SKILL_SPACT_AROMAGEDDON	788
+	#define global	SKILL_SPACT_CURTAIN_OF_SMOKE	789
+	#define global	SKILL_SPACT_SMOKE_MIRROR	790
+	#define global	SKILL_SPACT_MIRROR	791
+	#define global	SKILL_SPACT_MELT_CLINCH	792
+	#define global	SKILL_SPACT_FORMLESS_FETTER	793
+	#define global	SKILL_SPACT_BLOOD_STREAM	794
+	#define global	SKILL_SPACT_FLAME_OF_RAGE	795
+	#define global	SKILL_SPACT_IMPACT_GUNFIRE	796
+	#define global	SKILL_SPACT_ONE_POINT_SHOOT	797
+	#define global	SKILL_SPACT_CRITICAL_PARTICLE_CANNON	798
+	#define global	SKILL_SPACT_HELM_SMASHER	799
+	#define global	SKILL_SPACT_ARROW_RAIN	800
+	#define global	SKILL_SPACT_BLAME_PAIN	801
+	#define global	SKILL_SPACT_WIN	802
+	#define global	SKILL_SPACT_PURGE	803
+	#define global	SKILL_SPACT_UNISON_IMPACT	804
+	#define global	SKILL_SPACT_GROUP_HYPNOSIS	805
+	#define global	SKILL_SPACT_THREAD_OF_INNERVATION	806
+	#define global	SKILL_SPACT_MARKING	807
+	#define global	SKILL_SPACT_GRAND_FINALE	808
+	#define global	SKILL_SPACT_DATA_DELETE	809
+	#define global	SKILL_SPACT_DISPATCH_FLYING_BEAST	810
+	#define global	SKILL_SPACT_KILLING_DANCE	811
+	#define global	SKILL_SPACT_DECAPITATION2	812
+	#define global	SKILL_SPACT_ANAPHYLAXIS	813
+	#define global	SKILL_SPACT_HAZARD_RECIPE	814
+	#define global	SKILL_SPACT_VENOTRATE	815
+	#define global	SKILL_SPACT_PERSUASION	816
+	#define global	SKILL_SPACT_PECULIAR_JOKE	817
+	#define global	SKILL_SPACT_BLENDED_LIE	818
+	#define global	SKILL_SPACT_INTIMIDATION	819
+	#define global	SKILL_SPACT_MYSTERIOUS_SONG	820
+	#define global	SKILL_SPACT_TUIN_DER_LUSTEN	821
 
-	MAX_SKILL = SKILL_SPACT_TUIN_DER_LUSTEN + 1
+	#define global	MAX_SKILL	(SKILL_SPACT_TUIN_DER_LUSTEN + 1)
 
 	// Absolute skill limits
-	MAX_SPACT_COUNT = 500 // Maximum number of spact slots available in the array, beginning at STARTING_SKILL_SPACT, meaning the effective max skillid is 1099 (1100 if you really push it)
-	MAX_SPELL_COUNT = STARTING_SKILL_SPACT - STARTING_SKILL_SPELL // Seeing as spells begin at 400 and spacts at 600, the effective max is 200 spells
+	#define global	MAX_SPACT_COUNT	500 // Maximum number of spact slots available in the array, beginning at STARTING_SKILL_SPACT, meaning the effective max skillid is 1099 (1100 if you really push it)
+	#define global	MAX_SPELL_COUNT	(STARTING_SKILL_SPACT - STARTING_SKILL_SPELL) // Seeing as spells begin at 400 and spacts at 600, the effective max is 200 spells
 
 	// Spell-like effects
-	SKILL_EFFECT_MIN = STARTING_SKILL_SPACT + MAX_SPACT_COUNT // 600 + 500 = 1100
-	SKILL_EFFECT_POTION_MILK = SKILL_EFFECT_MIN + 1
-	SKILL_EFFECT_POTION_ALE = SKILL_EFFECT_MIN + 2
-	SKILL_EFFECT_POTION_WATER = SKILL_EFFECT_MIN + 3
-	SKILL_EFFECT_GAIN_SPELL = SKILL_EFFECT_MIN + 4
-	SKILL_EFFECT_GAIN_SKILL = SKILL_EFFECT_MIN + 5
-	SKILL_EFFECT_DECREASE_STAT = SKILL_EFFECT_MIN + 6
-	SKILL_EFFECT_GAIN_FAITH = SKILL_EFFECT_MIN + 7
-	SKILL_EFFECT_POISON = SKILL_EFFECT_MIN + 8
-	SKILL_EFFECT_CONFUSE = SKILL_EFFECT_MIN + 9
-	SKILL_EFFECT_PARALYZE = SKILL_EFFECT_MIN + 10
-	SKILL_EFFECT_BLIND = SKILL_EFFECT_MIN + 11
-	SKILL_EFFECT_SLEEP = SKILL_EFFECT_MIN + 12
-	SKILL_EFFECT_POTION_POTENTIAL = SKILL_EFFECT_MIN + 13
-	SKILL_EFFECT_CURSE = SKILL_EFFECT_MIN + 14
-	SKILL_EFFECT_CREATE_BUILDING = SKILL_EFFECT_MIN + 15
-	SKILL_EFFECT_POTION_SULFURIC = SKILL_EFFECT_MIN + 16
-	SKILL_EFFECT_CREATE_MATERIAL = SKILL_EFFECT_MIN + 17
-	SKILL_EFFECT_DECREASE_RESIST = SKILL_EFFECT_MIN + 18
-	SKILL_EFFECT_GAIN_GROWTH = SKILL_EFFECT_MIN + 19
-	SKILL_EFFECT_ELIXER = SKILL_EFFECT_MIN + 20
-	SKILL_EFFECT_LOSE_MUTATION = SKILL_EFFECT_MIN + 21
-	SKILL_EFFECT_GAIN_ALLY = SKILL_EFFECT_MIN + 22
-	SKILL_EFFECT_GAIN_SISTER = SKILL_EFFECT_MIN + 23
-	SKILL_EFFECT_ENCHANT_WEAPON = SKILL_EFFECT_MIN + 24
-	SKILL_EFFECT_ENCHANT_ARMOR = SKILL_EFFECT_MIN + 25
-	SKILL_EFFECT_GAIN_SPEED_2 = SKILL_EFFECT_MIN + 26 // Since this offset wasn't used, I'm using it for the second speed up check, used by speed upper
-	SKILL_EFFECT_CHANGE_MATERIAL = SKILL_EFFECT_MIN + 27
-	SKILL_EFFECT_HEIR_DEED = SKILL_EFFECT_MIN + 28
-	SKILL_EFFECT_RECHARGE = SKILL_EFFECT_MIN + 29
-	SKILL_EFFECT_POTION_DIRTY_WATER = SKILL_EFFECT_MIN + 30
-	SKILL_EFFECT_POTION_CURE_CORRUPTION = SKILL_EFFECT_MIN + 31
-	SKILL_EFFECT_CHANGE_ITEM = SKILL_EFFECT_MIN + 32
-	SKILL_EFFECT_POTION_MOLOTOV = SKILL_EFFECT_MIN + 33
-	SKILL_EFFECT_POTION_LOVE = SKILL_EFFECT_MIN + 35
-	SKILL_EFFECT_TREASURE_MAP = SKILL_EFFECT_MIN + 36
-	SKILL_EFFECT_GAIN_GIRL = SKILL_EFFECT_MIN + 37
-	SKILL_EFFECT_GAIN_CAT_SISTER = SKILL_EFFECT_MIN + 38
-	SKILL_EFFECT_GAIN_SPEED = SKILL_EFFECT_MIN + 39
-	SKILL_EFFECT_DECREASE_WEIGHT = SKILL_EFFECT_MIN + 40
-	SKILL_EFFECT_ESCAPE = SKILL_EFFECT_MIN + 41
-	SKILL_EFFECT_POTION_SALT = SKILL_EFFECT_MIN + 42
-	SKILL_EFFECT_POTION_DESCENT = SKILL_EFFECT_MIN + 43
-	SKILL_EFFECT_POTION_EVOLUTION = SKILL_EFFECT_MIN + 44
-	SKILL_EFFECT_RENAME_ITEM = SKILL_EFFECT_MIN + 45
-	SKILL_EFFECT_POTION_SODA = SKILL_EFFECT_MIN + 46
-	SKILL_EFFECT_POTION_CAPSULE = SKILL_EFFECT_MIN + 47
-	SKILL_EFFECT_GAIN_OLDER_SISTER = SKILL_EFFECT_MIN + 48
-	SKILL_EFFECT_GAIN_DOG_SISTER = SKILL_EFFECT_MIN + 49
-	SKILL_EFFECT_VERNIS_ORIGINAL = SKILL_EFFECT_MIN + 50
-	SKILL_EFFECT_MUTATE = SKILL_EFFECT_MIN + 52
-	SKILL_EFFECT_GAIN_WRANGWRANG = SKILL_EFFECT_MIN + 53
-	SKILL_EFFECT_POTION_AQUA_SANCTIO = SKILL_EFFECT_MIN + 54
-	SKILL_EFFECT_POTION_DISASTER = SKILL_EFFECT_MIN + 55
-	SKILL_EFFECT_POTION_NEKTAR = SKILL_EFFECT_MIN + 56
-	SKILL_EFFECT_POTION_SOMA = SKILL_EFFECT_MIN + 57
-	SKILL_EFFECT_MYSTERIOUS_DIARY = SKILL_EFFECT_MIN + 58
-	SKILL_EFFECT_POTION_COFFEE = SKILL_EFFECT_MIN + 59
-	SKILL_EFFECT_POTION_JUICE = SKILL_EFFECT_MIN + 60
-	SKILL_EFFECT_POTION_KNEADED_SWEETS = SKILL_EFFECT_MIN + 61
-	SKILL_EFFECT_CONTINENT_MAP = SKILL_EFFECT_MIN + 62
-	SKILL_EFFECT_POTION_ESSENTIAL_OIL = SKILL_EFFECT_MIN + 63
-	SKILL_EFFECT_POTION_GASOLINE = SKILL_EFFECT_MIN + 64
-	SKILL_EFFECT_POTION_GREEN_TEA = SKILL_EFFECT_MIN + 65
-	SKILL_EFFECT_POTION_BLACK_TEA = SKILL_EFFECT_MIN + 66
-	SKILL_EFFECT_POTION_WISDOM = SKILL_EFFECT_MIN + 67
-	SKILL_EFFECT_BUTLERS_DIARY = SKILL_EFFECT_MIN + 68
-	SKILL_EFFECT_BARLEY_TEA = SKILL_EFFECT_MIN + 69
-	SKILL_EFFECT_COLA = SKILL_EFFECT_MIN + 70
-	SKILL_EFFECT_DISINFECTANT = SKILL_EFFECT_MIN + 71
+	#define global	SKILL_EFFECT_MIN	(STARTING_SKILL_SPACT + MAX_SPACT_COUNT) // 600 + 500 = 1100
+	#define global	SKILL_EFFECT_POTION_MILK	(SKILL_EFFECT_MIN + 1)
+	#define global	SKILL_EFFECT_POTION_ALE	(SKILL_EFFECT_MIN + 2)
+	#define global	SKILL_EFFECT_POTION_WATER	(SKILL_EFFECT_MIN + 3)
+	#define global	SKILL_EFFECT_GAIN_SPELL	(SKILL_EFFECT_MIN + 4)
+	#define global	SKILL_EFFECT_GAIN_SKILL	(SKILL_EFFECT_MIN + 5)
+	#define global	SKILL_EFFECT_DECREASE_STAT	(SKILL_EFFECT_MIN + 6)
+	#define global	SKILL_EFFECT_GAIN_FAITH	(SKILL_EFFECT_MIN + 7)
+	#define global	SKILL_EFFECT_POISON	(SKILL_EFFECT_MIN + 8)
+	#define global	SKILL_EFFECT_CONFUSE	(SKILL_EFFECT_MIN + 9)
+	#define global	SKILL_EFFECT_PARALYZE	(SKILL_EFFECT_MIN + 10)
+	#define global	SKILL_EFFECT_BLIND	(SKILL_EFFECT_MIN + 11)
+	#define global	SKILL_EFFECT_SLEEP	(SKILL_EFFECT_MIN + 12)
+	#define global	SKILL_EFFECT_POTION_POTENTIAL	(SKILL_EFFECT_MIN + 13)
+	#define global	SKILL_EFFECT_CURSE	(SKILL_EFFECT_MIN + 14)
+	#define global	SKILL_EFFECT_CREATE_BUILDING	(SKILL_EFFECT_MIN + 15)
+	#define global	SKILL_EFFECT_POTION_SULFURIC	(SKILL_EFFECT_MIN + 16)
+	#define global	SKILL_EFFECT_CREATE_MATERIAL	(SKILL_EFFECT_MIN + 17)
+	#define global	SKILL_EFFECT_DECREASE_RESIST	(SKILL_EFFECT_MIN + 18)
+	#define global	SKILL_EFFECT_GAIN_GROWTH	(SKILL_EFFECT_MIN + 19)
+	#define global	SKILL_EFFECT_ELIXER	(SKILL_EFFECT_MIN + 20)
+	#define global	SKILL_EFFECT_LOSE_MUTATION	(SKILL_EFFECT_MIN + 21)
+	#define global	SKILL_EFFECT_GAIN_ALLY	(SKILL_EFFECT_MIN + 22)
+	#define global	SKILL_EFFECT_GAIN_SISTER	(SKILL_EFFECT_MIN + 23)
+	#define global	SKILL_EFFECT_ENCHANT_WEAPON	(SKILL_EFFECT_MIN + 24)
+	#define global	SKILL_EFFECT_ENCHANT_ARMOR	(SKILL_EFFECT_MIN + 25)
+	#define global	SKILL_EFFECT_GAIN_SPEED_2	(SKILL_EFFECT_MIN + 26) // Since this offset wasn't used, I'm using it for the second speed up check, used by speed upper
+	#define global	SKILL_EFFECT_CHANGE_MATERIAL	(SKILL_EFFECT_MIN + 27)
+	#define global	SKILL_EFFECT_HEIR_DEED	(SKILL_EFFECT_MIN + 28)
+	#define global	SKILL_EFFECT_RECHARGE	(SKILL_EFFECT_MIN + 29)
+	#define global	SKILL_EFFECT_POTION_DIRTY_WATER	(SKILL_EFFECT_MIN + 30)
+	#define global	SKILL_EFFECT_POTION_CURE_CORRUPTION	(SKILL_EFFECT_MIN + 31)
+	#define global	SKILL_EFFECT_CHANGE_ITEM	(SKILL_EFFECT_MIN + 32)
+	#define global	SKILL_EFFECT_POTION_MOLOTOV	(SKILL_EFFECT_MIN + 33)
+	#define global	SKILL_EFFECT_POTION_LOVE	(SKILL_EFFECT_MIN + 35)
+	#define global	SKILL_EFFECT_TREASURE_MAP	(SKILL_EFFECT_MIN + 36)
+	#define global	SKILL_EFFECT_GAIN_GIRL	(SKILL_EFFECT_MIN + 37)
+	#define global	SKILL_EFFECT_GAIN_CAT_SISTER	(SKILL_EFFECT_MIN + 38)
+	#define global	SKILL_EFFECT_GAIN_SPEED	(SKILL_EFFECT_MIN + 39)
+	#define global	SKILL_EFFECT_DECREASE_WEIGHT	(SKILL_EFFECT_MIN + 40)
+	#define global	SKILL_EFFECT_ESCAPE	(SKILL_EFFECT_MIN + 41)
+	#define global	SKILL_EFFECT_POTION_SALT	(SKILL_EFFECT_MIN + 42)
+	#define global	SKILL_EFFECT_POTION_DESCENT	(SKILL_EFFECT_MIN + 43)
+	#define global	SKILL_EFFECT_POTION_EVOLUTION	(SKILL_EFFECT_MIN + 44)
+	#define global	SKILL_EFFECT_RENAME_ITEM	(SKILL_EFFECT_MIN + 45)
+	#define global	SKILL_EFFECT_POTION_SODA	(SKILL_EFFECT_MIN + 46)
+	#define global	SKILL_EFFECT_POTION_CAPSULE	(SKILL_EFFECT_MIN + 47)
+	#define global	SKILL_EFFECT_GAIN_OLDER_SISTER	(SKILL_EFFECT_MIN + 48)
+	#define global	SKILL_EFFECT_GAIN_DOG_SISTER	(SKILL_EFFECT_MIN + 49)
+	#define global	SKILL_EFFECT_VERNIS_ORIGINAL	(SKILL_EFFECT_MIN + 50)
+	#define global	SKILL_EFFECT_MUTATE	(SKILL_EFFECT_MIN + 52)
+	#define global	SKILL_EFFECT_GAIN_WRANGWRANG	(SKILL_EFFECT_MIN + 53)
+	#define global	SKILL_EFFECT_POTION_AQUA_SANCTIO	(SKILL_EFFECT_MIN + 54)
+	#define global	SKILL_EFFECT_POTION_DISASTER	(SKILL_EFFECT_MIN + 55)
+	#define global	SKILL_EFFECT_POTION_NEKTAR	(SKILL_EFFECT_MIN + 56)
+	#define global	SKILL_EFFECT_POTION_SOMA	(SKILL_EFFECT_MIN + 57)
+	#define global	SKILL_EFFECT_MYSTERIOUS_DIARY	(SKILL_EFFECT_MIN + 58)
+	#define global	SKILL_EFFECT_POTION_COFFEE	(SKILL_EFFECT_MIN + 59)
+	#define global	SKILL_EFFECT_POTION_JUICE	(SKILL_EFFECT_MIN + 60)
+	#define global	SKILL_EFFECT_POTION_KNEADED_SWEETS	(SKILL_EFFECT_MIN + 61)
+	#define global	SKILL_EFFECT_CONTINENT_MAP	(SKILL_EFFECT_MIN + 62)
+	#define global	SKILL_EFFECT_POTION_ESSENTIAL_OIL	(SKILL_EFFECT_MIN + 63)
+	#define global	SKILL_EFFECT_POTION_GASOLINE	(SKILL_EFFECT_MIN + 64)
+	#define global	SKILL_EFFECT_POTION_GREEN_TEA	(SKILL_EFFECT_MIN + 65)
+	#define global	SKILL_EFFECT_POTION_BLACK_TEA	(SKILL_EFFECT_MIN + 66)
+	#define global	SKILL_EFFECT_POTION_WISDOM	(SKILL_EFFECT_MIN + 67)
+	#define global	SKILL_EFFECT_BUTLERS_DIARY	(SKILL_EFFECT_MIN + 68)
+	#define global	SKILL_EFFECT_BARLEY_TEA	(SKILL_EFFECT_MIN + 69)
+	#define global	SKILL_EFFECT_COLA	(SKILL_EFFECT_MIN + 70)
+	#define global	SKILL_EFFECT_DISINFECTANT	(SKILL_EFFECT_MIN + 71)
 
 	// Basic actions
-	ACTION_MELEE = -1
-	ACTION_RANGE = -2
-	ACTION_WAIT_MELEE = -3
-	ACTION_RANDOM_MOVE = -4
+	#define global	ACTION_MELEE	-1
+	#define global	ACTION_RANGE	-2
+	#define global	ACTION_WAIT_MELEE	-3
+	#define global	ACTION_RANDOM_MOVE	-4
 
 	// Throwing actions
-	ACTION_THROW = -10000
-	ACTION_THROW_POTION_MINOR = -9999
-	ACTION_THROW_POTION_MAJOR = -9998
-	ACTION_THROW_POTION_GREATER = -9997
-	ACTION_THROW_POTION_SALT = -9996
-	MAX_ACTION_THROW = -9995
+	#define global	ACTION_THROW	-10000
+	#define global	ACTION_THROW_POTION_MINOR	-9999
+	#define global	ACTION_THROW_POTION_MAJOR	-9998
+	#define global	ACTION_THROW_POTION_GREATER	-9997
+	#define global	ACTION_THROW_POTION_SALT	-9996
+	#define global	MAX_ACTION_THROW	-9995
 
 	// Other Actions
-	ACTION_NONE = 0
-	ACTION_EAT = 1
-	ACTION_READ = 2
-	ACTION_TRAVEL = 3
-	ACTION_REST = 4
-	ACTION_DIG = 5
-	ACTION_PERFORM = 6
-	ACTION_FISH = 7
-	ACTION_PLANT = 8
-	ACTION_SEARCH = 9
-	ACTION_GENERAL = 10
-	ACTION_SEX = 11
-	ACTION_BLEND = 12
-	ACTION_CHARGE = 13
-	ACTION_CUT_TREE = 14
-	ACTION_PERFORM_PREACH = 15
-	ACTION_MEAL = 16
-	ACTION_PERFORM_DANCE = 17
-	ACTION_XMAS_CAKE = 18
-	ACTION_PERSUASION = 19
-	ACTION_PECULIAR_JOKE = 20
-	ACTION_BLENDED_LIE = 21
-	ACTION_INTIMIDATION = 22
-	ACTION_MYSTERIOUS_SONG = 23
-	ACTION_TUIN_DER_LUSTEN = 24
-
-	ACTION_SLEEP = 100
-	ACTION_CONSTRUCT = 101
-	ACTION_OPEN_HATCH = 102
-	ACTION_HARVEST = 103
-	ACTION_TRAIN = 104
-	ACTION_STEAL = 105
+	#define global	ACTION_NONE	0
+	#define global	ACTION_EAT	1
+	#define global	ACTION_READ	2
+	#define global	ACTION_TRAVEL	3
+	#define global	ACTION_REST	4
+	#define global	ACTION_DIG	5
+	#define global	ACTION_PERFORM	6
+	#define global	ACTION_FISH	7
+	#define global	ACTION_PLANT	8
+	#define global	ACTION_SEARCH	9
+	#define global	ACTION_GENERAL	10
+	#define global	ACTION_SEX	11
+	#define global	ACTION_BLEND	12
+	#define global	ACTION_CHARGE	13
+	#define global	ACTION_CUT_TREE	14
+	#define global	ACTION_PERFORM_PREACH	15
+	#define global	ACTION_MEAL	16
+	#define global	ACTION_PERFORM_DANCE	17
+	#define global	ACTION_XMAS_CAKE	18
+	#define global	ACTION_PERSUASION	19
+	#define global	ACTION_PECULIAR_JOKE	20
+	#define global	ACTION_BLENDED_LIE	21
+	#define global	ACTION_INTIMIDATION	22
+	#define global	ACTION_MYSTERIOUS_SONG	23
+	#define global	ACTION_TUIN_DER_LUSTEN	24
+
+	#define global	ACTION_SLEEP	100
+	#define global	ACTION_CONSTRUCT	101
+	#define global	ACTION_OPEN_HATCH	102
+	#define global	ACTION_HARVEST	103
+	#define global	ACTION_TRAIN	104
+	#define global	ACTION_STEAL	105
 
 	// Skill Dataref
-	SKILL_DATAREF_USE = 0
-	SKILL_DATAREF_TYPE = 1
-	SKILL_DATAREF_COST = 2
+	#define global	SKILL_DATAREF_USE	0
+	#define global	SKILL_DATAREF_TYPE	1
+	#define global	SKILL_DATAREF_COST	2
 
-	SKILL_DATAREF_TG = 3
-	SKILL_DATAREF_TG_RANGE = 3
+	#define global	SKILL_DATAREF_TG	3
+	#define global	SKILL_DATAREF_TG_RANGE	3
 
-	SKILL_DATAREF_RARE = 4
-	SKILL_DATAREF_DIFF = 4
+	#define global	SKILL_DATAREF_RARE	4
+	#define global	SKILL_DATAREF_DIFF	4
 
 	// Skill types
-	STARTING_SKILL_TYPE_BUFF = 1000
+	#define global	STARTING_SKILL_TYPE_BUFF	1000
 
-	SKILL_TYPE_FOV_BALL = 2
-	SKILL_TYPE_FOV_BREATH = 5
-	SKILL_TYPE_FOV_BOLT = 6
-
-	SKILL_TYPE_SP = 0
-	SKILL_TYPE_BOLT = 1
-	SKILL_TYPE_ARROW = 2
-	SKILL_TYPE_BALL = 3
-	SKILL_TYPE_HEAL = 4
-	SKILL_TYPE_TELEPORT = 5
-	SKILL_TYPE_HAND = 6
-	SKILL_TYPE_SUMMON = 7
-	SKILL_TYPE_BREATH = 8
-	SKILL_TYPE_FOV = 9
-	SKILL_TYPE_ATTACK = 10
+	#define global	SKILL_TYPE_FOV_BALL	2
+	#define global	SKILL_TYPE_FOV_BREATH	5
+	#define global	SKILL_TYPE_FOV_BOLT	6
+
+	#define global	SKILL_TYPE_SP	0
+	#define global	SKILL_TYPE_BOLT	1
+	#define global	SKILL_TYPE_ARROW	2
+	#define global	SKILL_TYPE_BALL	3
+	#define global	SKILL_TYPE_HEAL	4
+	#define global	SKILL_TYPE_TELEPORT	5
+	#define global	SKILL_TYPE_HAND	6
+	#define global	SKILL_TYPE_SUMMON	7
+	#define global	SKILL_TYPE_BREATH	8
+	#define global	SKILL_TYPE_FOV	9
+	#define global	SKILL_TYPE_ATTACK	10
 
 	// Target types
-	TARGET_TYPE_NONE = 0
-	TARGET_TYPE_ENEMY = 2000
-	TARGET_TYPE_SELF = 3000
-	TARGET_TYPE_AREA = 4000
-	TARGET_TYPE_DIR = 5000
-	TARGET_TYPE_OTHER = 6000
-	TARGET_TYPE_LOCATION = 7000
-	TARGET_TYPE_DIRECTION = 8000
-	TARGET_TYPE_BOTH = 9000
-	TARGET_TYPE_SELF_ONLY = 10000
+	#define global	TARGET_TYPE_NONE	0
+	#define global	TARGET_TYPE_ENEMY	2000
+	#define global	TARGET_TYPE_SELF	3000
+	#define global	TARGET_TYPE_AREA	4000
+	#define global	TARGET_TYPE_DIR	5000
+	#define global	TARGET_TYPE_OTHER	6000
+	#define global	TARGET_TYPE_LOCATION	7000
+	#define global	TARGET_TYPE_DIRECTION	8000
+	#define global	TARGET_TYPE_BOTH	9000
+	#define global	TARGET_TYPE_SELF_ONLY	10000
 
 	// Damage types/sources
-	DAMAGE_FROM_CHARA = 0
-	DAMAGE_FROM_TRAP = -1
-	DAMAGE_FROM_OVERCAST = -2
-	DAMAGE_FROM_HUNGER = -3
-	DAMAGE_FROM_POISON = -4
-	DAMAGE_FROM_CURSE = -5
-	DAMAGE_FROM_BURDEN = -6
-	DAMAGE_FROM_TUMBLE = -7
-	DAMAGE_FROM_PERFORM = -8
-	DAMAGE_FROM_FIRE = -9
-	DAMAGE_FROM_ATX = -10
-	DAMAGE_FROM_UNSEEN = -11
-	DAMAGE_FROM_BAD_FOOD = -12
-	DAMAGE_FROM_BLEED = -13
-	DAMAGE_FROM_CORRUPT = -14
-	DAMAGE_FROM_ACID = -15
-	DAMAGE_FROM_SUICIDE = -16
-	DAMAGE_FROM_NUKE = -17
-	DAMAGE_FROM_MAIDEN = -18
-	DAMAGE_FROM_GUILLOTINE = -19
-	DAMAGE_FROM_HANGING = -20
-	DAMAGE_FROM_SUFFOCATION = -21
-	DAMAGE_FROM_CHESTNUT = -22
-	DAMAGE_FROM_CHOCO = -23
-	DAMAGE_FROM_EXECUTION = -24
-	DAMAGE_FROM_BRAIN = -25
-	DAMAGE_FROM_SCALP = -26
-	DAMAGE_FROM_DESERT = -27
-	DAMAGE_FROM_WEREWOLF = -28 // guessed, nothing actually seems to use this one
-	DAMAGE_FROM_TOFU = -29
-	DAMAGE_FROM_PERSUASION_LOW = -30
-	DAMAGE_FROM_PERSUASION_HIGH = -31
-
-	DAMAGE_TYPE_NORMAL = 0
-	DAMAGE_TYPE_SUB = 1
-	DAMAGE_TYPE_ROW = 2
+	#define global	DAMAGE_FROM_CHARA	0
+	#define global	DAMAGE_FROM_TRAP	-1
+	#define global	DAMAGE_FROM_OVERCAST	-2
+	#define global	DAMAGE_FROM_HUNGER	-3
+	#define global	DAMAGE_FROM_POISON	-4
+	#define global	DAMAGE_FROM_CURSE	-5
+	#define global	DAMAGE_FROM_BURDEN	-6
+	#define global	DAMAGE_FROM_TUMBLE	-7
+	#define global	DAMAGE_FROM_PERFORM	-8
+	#define global	DAMAGE_FROM_FIRE	-9
+	#define global	DAMAGE_FROM_ATX	-10
+	#define global	DAMAGE_FROM_UNSEEN	-11
+	#define global	DAMAGE_FROM_BAD_FOOD	-12
+	#define global	DAMAGE_FROM_BLEED	-13
+	#define global	DAMAGE_FROM_CORRUPT	-14
+	#define global	DAMAGE_FROM_ACID	-15
+	#define global	DAMAGE_FROM_SUICIDE	-16
+	#define global	DAMAGE_FROM_NUKE	-17
+	#define global	DAMAGE_FROM_MAIDEN	-18
+	#define global	DAMAGE_FROM_GUILLOTINE	-19
+	#define global	DAMAGE_FROM_HANGING	-20
+	#define global	DAMAGE_FROM_SUFFOCATION	-21
+	#define global	DAMAGE_FROM_CHESTNUT	-22
+	#define global	DAMAGE_FROM_CHOCO	-23
+	#define global	DAMAGE_FROM_EXECUTION	-24
+	#define global	DAMAGE_FROM_BRAIN	-25
+	#define global	DAMAGE_FROM_SCALP	-26
+	#define global	DAMAGE_FROM_DESERT	-27
+	#define global	DAMAGE_FROM_WEREWOLF	-28 // guessed, nothing actually seems to use this one
+	#define global	DAMAGE_FROM_TOFU	-29
+	#define global	DAMAGE_FROM_PERSUASION_LOW	-30
+	#define global	DAMAGE_FROM_PERSUASION_HIGH	-31
+
+	#define global	DAMAGE_TYPE_NORMAL	0
+	#define global	DAMAGE_TYPE_SUB	1
+	#define global	DAMAGE_TYPE_ROW	2
 
 	// Music list
-	STARTING_MUSICLIST = 50
+	#define global	STARTING_MUSICLIST	50
 
-	MUSICLIST_NONE = 0
-	MUSICLIST_MCTOWN1 = 51
-	MUSICLIST_MCTOWN2 = 52
-	MUSICLIST_MCTOWN3 = 53
-	MUSICLIST_MCTOWN4 = 54
-	MUSICLIST_MCDUNGEON1 = 55
-	MUSICLIST_MCDUNGEON2 = 56
-	MUSICLIST_MCDUNGEON3 = 57
-	MUSICLIST_MCDUNGEON4 = 58
-	MUSICLIST_MCDUNGEON5 = 59
-	MUSICLIST_MCDUNGEON6 = 60
-	MUSICLIST_MCPUTI = 61
-	MUSICLIST_MCBOSS = 62
-	MUSICLIST_MCBOSS2 = 63
-	MUSICLIST_MCVICTORY = 64
-	MUSICLIST_MCOPENING = 65
-	MUSICLIST_MCLASTBOSS = 66
-	MUSICLIST_MCHOME = 67
-	MUSICLIST_MCLONELY = 68
-	MUSICLIST_MCCHAOS = 69
-	MUSICLIST_MCMARCH1 = 70
-	MUSICLIST_MCMARCH2 = 71
-	MUSICLIST_MCMARCH3 = 72
-	MUSICLIST_MCARENA = 73
-	MUSICLIST_MCFANFARE = 74
-	MUSICLIST_MCVILLAGE1 = 75
-	MUSICLIST_MCBATTLE1 = 76
-	MUSICLIST_MCCASINO = 77
-	MUSICLIST_MCCODA = 78
-	MUSICLIST_MCRUIN = 79
-	MUSICLIST_MCWEDDING = 80
-	MUSICLIST_MCPETARENA = 81
-	MUSICLIST_MCUNREST = 82
-	MUSICLIST_MCTOWN5 = 83
-	MUSICLIST_MCUNREST2 = 84
-	MUSICLIST_MCTOWN6 = 85
-	MUSICLIST_MCFIELD1 = 86
-	MUSICLIST_MCFIELD2 = 87
-	MUSICLIST_MCFIELD3 = 88
-	MUSICLIST_MCMEMORY = 89
-	MUSICLIST_MCINTRO = 90
-	MUSICLIST_MCBATTLE2 = 91
-	MUSICLIST_MCBOSS3 = 92
-	MUSICLIST_MCTOWN7 = 93
-	MUSICLIST_MCTOWN8 = 94
-	MUSICLIST_MCTOWN9 = 95
-	MUSICLIST_MCDUNGEON7 = 96
-	MUSICLIST_MCDUNGEON8 = 97
-	MUSICLIST_MCDUNGEON9 = 98
-	MUSICLIST_MCLOG = 99
-	MUSICLIST_MCVOYAGE = 100
-	MUSICLIST_MCOPENING2 = 101
-	MUSICLIST_MCMAID = 102
-	MUSICLIST_MCLONELY2 = 103
-	MUSICLIST_MCMEMORY2 = 104
-	MUSICLIST_MCOPENING3 = 105
-	MUSICLIST_MCLASTBOSS3 = 106
-	MUSICLIST_MCBOSS4 = 107
-	MUSICLIST_MCUNREST3 = 108
-	MUSICLIST_MCDUNGEON10 = 109
-	MUSICLIST_MCFEST = 110
-	MUSICLIST_MCJAPAN = 111
-	MUSICLIST_MCSAND = 112
-	MUSICLIST_MCBOSS5 = 113
-	MUSICLIST_MCTOWN10 = 114
-	MUSICLIST_MCDUNGEON11 = 115
-	MUSICLIST_MCLOST1 = 116
-	MUSICLIST_MCLOST2 = 117
-	MUSICLIST_MCLOST3 = 118
-	MUSICLIST_MCTOWN11 = 119
-	MUSICLIST_MCTOWN12 = 120
-	MUSICLIST_MCSAD = 121
-	MUSICLIST_MCEND = 122
-	MUSICLIST_MCEND2 = 123
-	MUSICLIST_MCHUGE = 124
-	MUSICLIST_MCLASTBOSS4 = 125
-	MUSICLIST_MCLASTBOSS5 = 126
-	MUSICLIST_UNDEFINED_1 = 127
-	MUSICLIST_UNDEFINED_2 = 128
-	MUSICLIST_UNDEFINED_3 = 129
-	MUSICLIST_UNDEFINED_4 = 130
-	MUSICLIST_UNDEFINED_5 = 131
-	MUSICLIST_MCHOME0 = 132
-	MUSICLIST_SCENE_MUSIC = 133
+	#define global	MUSICLIST_NONE	0
+	#define global	MUSICLIST_MCTOWN1	51
+	#define global	MUSICLIST_MCTOWN2	52
+	#define global	MUSICLIST_MCTOWN3	53
+	#define global	MUSICLIST_MCTOWN4	54
+	#define global	MUSICLIST_MCDUNGEON1	55
+	#define global	MUSICLIST_MCDUNGEON2	56
+	#define global	MUSICLIST_MCDUNGEON3	57
+	#define global	MUSICLIST_MCDUNGEON4	58
+	#define global	MUSICLIST_MCDUNGEON5	59
+	#define global	MUSICLIST_MCDUNGEON6	60
+	#define global	MUSICLIST_MCPUTI	61
+	#define global	MUSICLIST_MCBOSS	62
+	#define global	MUSICLIST_MCBOSS2	63
+	#define global	MUSICLIST_MCVICTORY	64
+	#define global	MUSICLIST_MCOPENING	65
+	#define global	MUSICLIST_MCLASTBOSS	66
+	#define global	MUSICLIST_MCHOME	67
+	#define global	MUSICLIST_MCLONELY	68
+	#define global	MUSICLIST_MCCHAOS	69
+	#define global	MUSICLIST_MCMARCH1	70
+	#define global	MUSICLIST_MCMARCH2	71
+	#define global	MUSICLIST_MCMARCH3	72
+	#define global	MUSICLIST_MCARENA	73
+	#define global	MUSICLIST_MCFANFARE	74
+	#define global	MUSICLIST_MCVILLAGE1	75
+	#define global	MUSICLIST_MCBATTLE1	76
+	#define global	MUSICLIST_MCCASINO	77
+	#define global	MUSICLIST_MCCODA	78
+	#define global	MUSICLIST_MCRUIN	79
+	#define global	MUSICLIST_MCWEDDING	80
+	#define global	MUSICLIST_MCPETARENA	81
+	#define global	MUSICLIST_MCUNREST	82
+	#define global	MUSICLIST_MCTOWN5	83
+	#define global	MUSICLIST_MCUNREST2	84
+	#define global	MUSICLIST_MCTOWN6	85
+	#define global	MUSICLIST_MCFIELD1	86
+	#define global	MUSICLIST_MCFIELD2	87
+	#define global	MUSICLIST_MCFIELD3	88
+	#define global	MUSICLIST_MCMEMORY	89
+	#define global	MUSICLIST_MCINTRO	90
+	#define global	MUSICLIST_MCBATTLE2	91
+	#define global	MUSICLIST_MCBOSS3	92
+	#define global	MUSICLIST_MCTOWN7	93
+	#define global	MUSICLIST_MCTOWN8	94
+	#define global	MUSICLIST_MCTOWN9	95
+	#define global	MUSICLIST_MCDUNGEON7	96
+	#define global	MUSICLIST_MCDUNGEON8	97
+	#define global	MUSICLIST_MCDUNGEON9	98
+	#define global	MUSICLIST_MCLOG	99
+	#define global	MUSICLIST_MCVOYAGE	100
+	#define global	MUSICLIST_MCOPENING2	101
+	#define global	MUSICLIST_MCMAID	102
+	#define global	MUSICLIST_MCLONELY2	103
+	#define global	MUSICLIST_MCMEMORY2	104
+	#define global	MUSICLIST_MCOPENING3	105
+	#define global	MUSICLIST_MCLASTBOSS3	106
+	#define global	MUSICLIST_MCBOSS4	107
+	#define global	MUSICLIST_MCUNREST3	108
+	#define global	MUSICLIST_MCDUNGEON10	109
+	#define global	MUSICLIST_MCFEST	110
+	#define global	MUSICLIST_MCJAPAN	111
+	#define global	MUSICLIST_MCSAND	112
+	#define global	MUSICLIST_MCBOSS5	113
+	#define global	MUSICLIST_MCTOWN10	114
+	#define global	MUSICLIST_MCDUNGEON11	115
+	#define global	MUSICLIST_MCLOST1	116
+	#define global	MUSICLIST_MCLOST2	117
+	#define global	MUSICLIST_MCLOST3	118
+	#define global	MUSICLIST_MCTOWN11	119
+	#define global	MUSICLIST_MCTOWN12	120
+	#define global	MUSICLIST_MCSAD	121
+	#define global	MUSICLIST_MCEND	122
+	#define global	MUSICLIST_MCEND2	123
+	#define global	MUSICLIST_MCHUGE	124
+	#define global	MUSICLIST_MCLASTBOSS4	125
+	#define global	MUSICLIST_MCLASTBOSS5	126
+	#define global	MUSICLIST_UNDEFINED_1	127
+	#define global	MUSICLIST_UNDEFINED_2	128
+	#define global	MUSICLIST_UNDEFINED_3	129
+	#define global	MUSICLIST_UNDEFINED_4	130
+	#define global	MUSICLIST_UNDEFINED_5	131
+	#define global	MUSICLIST_MCHOME0	132
+	#define global	MUSICLIST_SCENE_MUSIC	133
 
-	MUSICLIST_MAX = MUSICLIST_SCENE_MUSIC + 1
+	#define global	MUSICLIST_MAX	(MUSICLIST_SCENE_MUSIC + 1)
 
 	// SND list
-	SOUNDLIST_NONE = 0
-	SOUNDLIST_POP1 = 1
-	SOUNDLIST_ATK1 = 2
-	SOUNDLIST_ATK2 = 3
-	SOUNDLIST_MISS = 4
-	SOUNDLIST_CURSOR1 = 5
-	SOUNDLIST_FIRE1 = 6
-	SOUNDLIST_KILL1 = 8
-	SOUNDLIST_KILL2 = 9
-	SOUNDLIST_MORE1 = 10
-	SOUNDLIST_GETGOLD1 = 11
-	SOUNDLIST_PAYGOLD1 = 12
-	SOUNDLIST_EQUIP1 = 13
-	SOUNDLIST_GET1 = 14
-	SOUNDLIST_GET2 = 15
-	SOUNDLIST_DROP1 = 16
-	SOUNDLIST_DRINK1 = 17
-	SOUNDLIST_EAT1 = 18
-	SOUNDLIST_SPEND1 = 19
-	SOUNDLIST_OK1 = 20
-	SOUNDLIST_ALERT1 = 21
-	SOUNDLIST_LOCKED1 = 22
-	SOUNDLIST_CHEST1 = 23
-	SOUNDLIST_DING2 = 24
-	SOUNDLIST_COOK1 = 25
-	SOUNDLIST_POP2 = 26
-	SOUNDLIST_FAIL1 = 27
-	SOUNDLIST_SCENE_SOUND = 28
-	SOUNDLIST_BOW1 = 29
-	SOUNDLIST_GUN1 = 30
-	SOUNDLIST_THROW1 = 31
-	SOUNDLIST_HEART1 = 32
-	SOUNDLIST_HEAL1 = 33
-	SOUNDLIST_BALL1 = 34
-	SOUNDLIST_BREATH1 = 35
-	SOUNDLIST_ARROW1 = 36
-	SOUNDLIST_BOLT1 = 37
-	SOUNDLIST_CURSE1 = 38
-	SOUNDLIST_POP3 = 39
-	SOUNDLIST_CLICK1 = 40
-	SOUNDLIST_GET3 = 41
-	SOUNDLIST_LASER1 = 42
-	SOUNDLIST_FOOT = 43
-	SOUNDLIST_WRITE1 = 44
-	SOUNDLIST_CRUSH1 = 45
-	SOUNDLIST_WATER2 = 46
-	SOUNDLIST_CRUSH2 = 47
-	SOUNDLIST_DOOR1 = 48
-	SOUNDLIST_EXITMAP1 = 49
-	SOUNDLIST_DEAD1 = 50
-	SOUNDLIST_COMPLETE1 = 51
-	SOUNDLIST_DIG1 = 52
-	SOUNDLIST_CHIME = 53
-	SOUNDLIST_DIG2 = 54
-	SOUNDLIST_BUSH1 = 55
-	SOUNDLIST_GASHA = 56
-	SOUNDLIST_WATER = 57
-	SOUNDLIST_BUILD1 = 58
-	SOUNDLIST_BOOK1 = 59
-	SOUNDLIST_DING1 = 60
-	SOUNDLIST_DING3 = 61
-	SOUNDLIST_POP4 = 62
-	SOUNDLIST_PUNISH1 = 63
-	SOUNDLIST_PRAY1 = 64
-	SOUNDLIST_OFFER1 = 65
-	SOUNDLIST_FIZZLE = 66
-	SOUNDLIST_DOOR2 = 67
-	SOUNDLIST_WEB = 68
-	SOUNDLIST_CHEER = 69
-	SOUNDLIST_TRAP1 = 70
-	SOUNDLIST_CARD1 = 71
-	SOUNDLIST_TELEPORT1 = 72
-	SOUNDLIST_BASH1 = 73
-	SOUNDLIST_NIGHT = 74
-	SOUNDLIST_BG_RAIN = 75
-	SOUNDLIST_BG_THUNDER = 76
-	SOUNDLIST_BG_WIND = 77
-	SOUNDLIST_BG_SEA = 78
-	SOUNDLIST_BG_TOWN = 79
-	SOUNDLIST_BG_FIRE = 80
-	SOUNDLIST_FOOT1A = 81
-	SOUNDLIST_FOOT1B = 82
-	SOUNDLIST_FOOT2A = 83
-	SOUNDLIST_FOOT2B = 84
-	SOUNDLIST_FOOT2C = 85
-	SOUNDLIST_SNOW = 86
-	SOUNDLIST_FISH_CAST = 87
-	SOUNDLIST_FISH_GET = 88
-	SOUNDLIST_FISH_FIGHT = 89
-	SOUNDLIST_AMMO = 90
-	SOUNDLIST_THROW2 = 91
-	SOUNDLIST_SCROLL = 92
-	SOUNDLIST_LOG = 93
-	SOUNDLIST_CHARA = 94
-	SOUNDLIST_WEAR = 95
-	SOUNDLIST_FEAT = 96
-	SOUNDLIST_PORT = 97
-	SOUNDLIST_UNPOP1 = 98
-	SOUNDLIST_CHAT = 99
-	SOUNDLIST_INV = 100
-	SOUNDLIST_SKILL = 101
-	SOUNDLIST_SPELL = 102
-	SOUNDLIST_DICE = 103
-	SOUNDLIST_VOMIT = 104
-	SOUNDLIST_ATKSWORD = 105
-	SOUNDLIST_ATK_ICE = 106
-	SOUNDLIST_ATK_ELEC = 107
-	SOUNDLIST_ATK_FIRE = 108
-	SOUNDLIST_ATK_HELL = 109
-	SOUNDLIST_ATK_POISON = 110
-	SOUNDLIST_ATK_NERVE = 111
-	SOUNDLIST_ATK_SOUND = 112
-	SOUNDLIST_ATK_MIND = 113
-	SOUNDLIST_ATK_CHAOS = 114
-	SOUNDLIST_ATK_DARK = 115
-	SOUNDLIST_CURSE2 = 116
-	SOUNDLIST_CURSE3 = 117
-	SOUNDLIST_ENC = 118
-	SOUNDLIST_ENC2 = 119
-	SOUNDLIST_PRAY2 = 120
-	SOUNDLIST_OFFER2 = 121
-	SOUNDLIST_GONG = 122
-	SOUNDLIST_SLAP = 123
-	SOUNDLIST_CEFFECT = 124
-	SOUNDLIST_RAIN = 125
-	SOUNDLIST_WAVE = 126
-	SOUNDLIST_WHISTLE = 127
-	SOUNDLIST_QUIZBAD = 128
-	SOUNDLIST_POWER = 129
-	SOUNDLIST_PIANO1 = 130
-	SOUNDLIST_PIANO2B = 131
-	SOUNDLIST_PIANO3 = 132
-	SOUNDLIST_PIANO4B = 133
-	SOUNDLIST_PIANO5 = 134
-	SOUNDLIST_PIANO6 = 135
-	SOUNDLIST_PIANO7B = 136
-	SOUNDLIST_PIANO8 = 137
-	SOUNDLIST_PIANO9B = 138
-	SOUNDLIST_PIANO10 = 139
-	SOUNDLIST_PIANO11B = 140
-	SOUNDLIST_PIANO12 = 141
-	SOUNDLIST_PIANO13 = 142
-	SOUNDLIST_PIANO14B = 143
-	SOUNDLIST_PIANO15 = 144
-	SOUNDLIST_PIANO16B = 145
-	SOUNDLIST_PIANO17 = 146
-	SOUNDLIST_PIANO18 = 147
-	SOUNDLIST_PIANO19B = 148
-	SOUNDLIST_PIANO20 = 149
-	SOUNDLIST_PIANO21B = 150
-	SOUNDLIST_PIANO22 = 151
-	SOUNDLIST_PIANO23B = 152
-	SOUNDLIST_PIANO24 = 153
-	SOUNDLIST_SONIC = 154
-	SOUNDLIST_SHOTS = 155
-	SOUNDLIST_STAB = 156
-	SOUNDLIST_MIZU = 157
-	SOUNDLIST_BUBLE = 158
-	SOUNDLIST_SCREAM = 159
-	SOUNDLIST_SWING = 160
-	SOUNDLIST_BEAST02 = 161
-	SOUNDLIST_MIND000 = 162
-	SOUNDLIST_LOAD = 163
-	SOUNDLIST_EXPLOSION = 164
-	SOUNDLIST_CLAP2F = 165
-	SOUNDLIST_CLAP4F = 166
-	SOUNDLIST_CHIME000R = 167
-	SOUNDLIST_GUNSHOT1 = 168
-	SOUNDLIST_GUNSHOT3 = 169
-	SOUNDLIST_CRACK = 170
-	SOUNDLIST_CRACK2 = 171
-	SOUNDLIST_ATTACK00 = 172
-	SOUNDLIST_BOM03 = 173
-	SOUNDLIST_BOM06 = 174
-	SOUNDLIST_BOM15 = 175
-	SOUNDLIST_SWING39 = 176
-	SOUNDLIST_MECHA20 = 177
-	SOUNDLIST_WATERM = 178
+	#define global	SOUNDLIST_NONE	0
+	#define global	SOUNDLIST_POP1	1
+	#define global	SOUNDLIST_ATK1	2
+	#define global	SOUNDLIST_ATK2	3
+	#define global	SOUNDLIST_MISS	4
+	#define global	SOUNDLIST_CURSOR1	5
+	#define global	SOUNDLIST_FIRE1	6
+	#define global	SOUNDLIST_KILL1	8
+	#define global	SOUNDLIST_KILL2	9
+	#define global	SOUNDLIST_MORE1	10
+	#define global	SOUNDLIST_GETGOLD1	11
+	#define global	SOUNDLIST_PAYGOLD1	12
+	#define global	SOUNDLIST_EQUIP1	13
+	#define global	SOUNDLIST_GET1	14
+	#define global	SOUNDLIST_GET2	15
+	#define global	SOUNDLIST_DROP1	16
+	#define global	SOUNDLIST_DRINK1	17
+	#define global	SOUNDLIST_EAT1	18
+	#define global	SOUNDLIST_SPEND1	19
+	#define global	SOUNDLIST_OK1	20
+	#define global	SOUNDLIST_ALERT1	21
+	#define global	SOUNDLIST_LOCKED1	22
+	#define global	SOUNDLIST_CHEST1	23
+	#define global	SOUNDLIST_DING2	24
+	#define global	SOUNDLIST_COOK1	25
+	#define global	SOUNDLIST_POP2	26
+	#define global	SOUNDLIST_FAIL1	27
+	#define global	SOUNDLIST_SCENE_SOUND	28
+	#define global	SOUNDLIST_BOW1	29
+	#define global	SOUNDLIST_GUN1	30
+	#define global	SOUNDLIST_THROW1	31
+	#define global	SOUNDLIST_HEART1	32
+	#define global	SOUNDLIST_HEAL1	33
+	#define global	SOUNDLIST_BALL1	34
+	#define global	SOUNDLIST_BREATH1	35
+	#define global	SOUNDLIST_ARROW1	36
+	#define global	SOUNDLIST_BOLT1	37
+	#define global	SOUNDLIST_CURSE1	38
+	#define global	SOUNDLIST_POP3	39
+	#define global	SOUNDLIST_CLICK1	40
+	#define global	SOUNDLIST_GET3	41
+	#define global	SOUNDLIST_LASER1	42
+	#define global	SOUNDLIST_FOOT	43
+	#define global	SOUNDLIST_WRITE1	44
+	#define global	SOUNDLIST_CRUSH1	45
+	#define global	SOUNDLIST_WATER2	46
+	#define global	SOUNDLIST_CRUSH2	47
+	#define global	SOUNDLIST_DOOR1	48
+	#define global	SOUNDLIST_EXITMAP1	49
+	#define global	SOUNDLIST_DEAD1	50
+	#define global	SOUNDLIST_COMPLETE1	51
+	#define global	SOUNDLIST_DIG1	52
+	#define global	SOUNDLIST_CHIME	53
+	#define global	SOUNDLIST_DIG2	54
+	#define global	SOUNDLIST_BUSH1	55
+	#define global	SOUNDLIST_GASHA	56
+	#define global	SOUNDLIST_WATER	57
+	#define global	SOUNDLIST_BUILD1	58
+	#define global	SOUNDLIST_BOOK1	59
+	#define global	SOUNDLIST_DING1	60
+	#define global	SOUNDLIST_DING3	61
+	#define global	SOUNDLIST_POP4	62
+	#define global	SOUNDLIST_PUNISH1	63
+	#define global	SOUNDLIST_PRAY1	64
+	#define global	SOUNDLIST_OFFER1	65
+	#define global	SOUNDLIST_FIZZLE	66
+	#define global	SOUNDLIST_DOOR2	67
+	#define global	SOUNDLIST_WEB	68
+	#define global	SOUNDLIST_CHEER	69
+	#define global	SOUNDLIST_TRAP1	70
+	#define global	SOUNDLIST_CARD1	71
+	#define global	SOUNDLIST_TELEPORT1	72
+	#define global	SOUNDLIST_BASH1	73
+	#define global	SOUNDLIST_NIGHT	74
+	#define global	SOUNDLIST_BG_RAIN	75
+	#define global	SOUNDLIST_BG_THUNDER	76
+	#define global	SOUNDLIST_BG_WIND	77
+	#define global	SOUNDLIST_BG_SEA	78
+	#define global	SOUNDLIST_BG_TOWN	79
+	#define global	SOUNDLIST_BG_FIRE	80
+	#define global	SOUNDLIST_FOOT1A	81
+	#define global	SOUNDLIST_FOOT1B	82
+	#define global	SOUNDLIST_FOOT2A	83
+	#define global	SOUNDLIST_FOOT2B	84
+	#define global	SOUNDLIST_FOOT2C	85
+	#define global	SOUNDLIST_SNOW	86
+	#define global	SOUNDLIST_FISH_CAST	87
+	#define global	SOUNDLIST_FISH_GET	88
+	#define global	SOUNDLIST_FISH_FIGHT	89
+	#define global	SOUNDLIST_AMMO	90
+	#define global	SOUNDLIST_THROW2	91
+	#define global	SOUNDLIST_SCROLL	92
+	#define global	SOUNDLIST_LOG	93
+	#define global	SOUNDLIST_CHARA	94
+	#define global	SOUNDLIST_WEAR	95
+	#define global	SOUNDLIST_FEAT	96
+	#define global	SOUNDLIST_PORT	97
+	#define global	SOUNDLIST_UNPOP1	98
+	#define global	SOUNDLIST_CHAT	99
+	#define global	SOUNDLIST_INV	100
+	#define global	SOUNDLIST_SKILL	101
+	#define global	SOUNDLIST_SPELL	102
+	#define global	SOUNDLIST_DICE	103
+	#define global	SOUNDLIST_VOMIT	104
+	#define global	SOUNDLIST_ATKSWORD	105
+	#define global	SOUNDLIST_ATK_ICE	106
+	#define global	SOUNDLIST_ATK_ELEC	107
+	#define global	SOUNDLIST_ATK_FIRE	108
+	#define global	SOUNDLIST_ATK_HELL	109
+	#define global	SOUNDLIST_ATK_POISON	110
+	#define global	SOUNDLIST_ATK_NERVE	111
+	#define global	SOUNDLIST_ATK_SOUND	112
+	#define global	SOUNDLIST_ATK_MIND	113
+	#define global	SOUNDLIST_ATK_CHAOS	114
+	#define global	SOUNDLIST_ATK_DARK	115
+	#define global	SOUNDLIST_CURSE2	116
+	#define global	SOUNDLIST_CURSE3	117
+	#define global	SOUNDLIST_ENC	118
+	#define global	SOUNDLIST_ENC2	119
+	#define global	SOUNDLIST_PRAY2	120
+	#define global	SOUNDLIST_OFFER2	121
+	#define global	SOUNDLIST_GONG	122
+	#define global	SOUNDLIST_SLAP	123
+	#define global	SOUNDLIST_CEFFECT	124
+	#define global	SOUNDLIST_RAIN	125
+	#define global	SOUNDLIST_WAVE	126
+	#define global	SOUNDLIST_WHISTLE	127
+	#define global	SOUNDLIST_QUIZBAD	128
+	#define global	SOUNDLIST_POWER	129
+	#define global	SOUNDLIST_PIANO1	130
+	#define global	SOUNDLIST_PIANO2B	131
+	#define global	SOUNDLIST_PIANO3	132
+	#define global	SOUNDLIST_PIANO4B	133
+	#define global	SOUNDLIST_PIANO5	134
+	#define global	SOUNDLIST_PIANO6	135
+	#define global	SOUNDLIST_PIANO7B	136
+	#define global	SOUNDLIST_PIANO8	137
+	#define global	SOUNDLIST_PIANO9B	138
+	#define global	SOUNDLIST_PIANO10	139
+	#define global	SOUNDLIST_PIANO11B	140
+	#define global	SOUNDLIST_PIANO12	141
+	#define global	SOUNDLIST_PIANO13	142
+	#define global	SOUNDLIST_PIANO14B	143
+	#define global	SOUNDLIST_PIANO15	144
+	#define global	SOUNDLIST_PIANO16B	145
+	#define global	SOUNDLIST_PIANO17	146
+	#define global	SOUNDLIST_PIANO18	147
+	#define global	SOUNDLIST_PIANO19B	148
+	#define global	SOUNDLIST_PIANO20	149
+	#define global	SOUNDLIST_PIANO21B	150
+	#define global	SOUNDLIST_PIANO22	151
+	#define global	SOUNDLIST_PIANO23B	152
+	#define global	SOUNDLIST_PIANO24	153
+	#define global	SOUNDLIST_SONIC	154
+	#define global	SOUNDLIST_SHOTS	155
+	#define global	SOUNDLIST_STAB	156
+	#define global	SOUNDLIST_MIZU	157
+	#define global	SOUNDLIST_BUBLE	158
+	#define global	SOUNDLIST_SCREAM	159
+	#define global	SOUNDLIST_SWING	160
+	#define global	SOUNDLIST_BEAST02	161
+	#define global	SOUNDLIST_MIND000	162
+	#define global	SOUNDLIST_LOAD	163
+	#define global	SOUNDLIST_EXPLOSION	164
+	#define global	SOUNDLIST_CLAP2F	165
+	#define global	SOUNDLIST_CLAP4F	166
+	#define global	SOUNDLIST_CHIME000R	167
+	#define global	SOUNDLIST_GUNSHOT1	168
+	#define global	SOUNDLIST_GUNSHOT3	169
+	#define global	SOUNDLIST_CRACK	170
+	#define global	SOUNDLIST_CRACK2	171
+	#define global	SOUNDLIST_ATTACK00	172
+	#define global	SOUNDLIST_BOM03	173
+	#define global	SOUNDLIST_BOM06	174
+	#define global	SOUNDLIST_BOM15	175
+	#define global	SOUNDLIST_SWING39	176
+	#define global	SOUNDLIST_MECHA20	177
+	#define global	SOUNDLIST_WATERM	178
 
-	SOUNDLIST_MAX = SOUNDLIST_WATERM + 1
+	#define global	SOUNDLIST_MAX	(SOUNDLIST_WATERM + 1)
 
 	// Item effects
-	EFFECT_NONE = 0
-	EFFECT_CARPENTRY = 1
-	EFFECT_ALCHEMY = 2
-	EFFECT_JEWELER = 3
-	EFFECT_TAILOR = 4
-	EFFECT_STETHOSCOPE = 5
-	EFFECT_MUSIC_DISC = 6
-	EFFECT_SHELTER = 7
-	EFFECT_HOUSE_BOARD = 8
-	EFFECT_TRAIN = 9
-	EFFECT_PLAYBACK_DISC = 10
-	EFFECT_KITTY_BANK = 11
-	EFFECT_FREEZER = 12
-	EFFECT_TORCH = 13
-	EFFECT_SNOW = 14
-	EFFECT_COOKING = 15
-	EFFECT_FISHING = 16
-	EFFECT_PERFORM = 17
-	EFFECT_BITE = 18
-	EFFECT_MIRROR = 19
-	EFFECT_INCOGNITO = 20
-	EFFECT_MATERIAL_KIT = 21
-	EFFECT_RUNE = 22
-	EFFECT_LEASH = 23
-	EFFECT_MINE = 24
-	EFFECT_UNICORN_HORN = 25
-	EFFECT_OPATOS_STATUE = 26
-	EFFECT_LULWY_STATUE = 27
-	EFFECT_NUKE = 28
-	EFFECT_SECRET_TREASURE = 29
-	EFFECT_OBJET_OF_HEART = 30
-	EFFECT_KUMIROMI_GEMSTONE = 31
-	EFFECT_GENE_MERGE = 32
-	EFFECT_MONSTER_BALL = 33
-	EFFECT_JURE_STATUE = 34
-	EFFECT_IRON_MAIDEN = 35
-	EFFECT_GUILLOTINE = 36
-	EFFECT_DECK = 37
-	EFFECT_CARD = 38
-	EFFECT_WHISTLE = 39
-	EFFECT_EVOLUTION = 40
-	EFFECT_SECRET_EXP_KUMIROMI = 41
-	EFFECT_SECRET_EXP_LOMIAS = 42
-	EFFECT_EHEKATL_STATUE = 43
-	EFFECT_CHAIR = 44
-	EFFECT_SANDBAG = 45
-	EFFECT_ROPE = 46
-	EFFECT_SUMMONING_CRYSTAL = 47
-	EFFECT_CREATOR_STATUE = 48
-	EFFECT_GAROK_HAMMER = 49
-	EFFECT_KUMIROMI_STATUE = 50
-	EFFECT_MANI_STATUE = 51
-	EFFECT_TAMERS_WHIP = 52
-	EFFECT_YACATECT_GEMSTONE = 53
-	EFFECT_SATELLITE_SHOOTER = 54
-	EFFECT_YACATECT_STATUE = 55
-	EFFECT_ITZPALT_STATUE = 56
-	EFFECT_COMMAND_FLAG = 57
-	EFFECT_EVOLUTION_ITEM = 58
-	EFFECT_STONE_MASK = 59
-	EFFECT_BUSINESS_CARD = 60
-	EFFECT_CLEANING_DOLL = 61
-	EFFECT_ASTRAL_LIGHT_PEN = 62
-	EFFECT_COFFIN = 63
-	EFFECT_CHOCO_KIT = 64
-	EFFECT_FERTILIZER = 65
-	EFFECT_SOUL_SPINDLE = 66
-	EFFECT_WAKEUP_NEFIA = 67
-	EFFECT_JUKE_BOX = 68
-	EFFECT_NINE_GOD_SIGN = 69
-	EFFECT_DOG_WHISTLE = 70
-	EFFECT_PIPE = 71 // Since this offset wasn't used, I'm using it for the drug kiseru effect
-	EFFECT_INSIGHT_LENS = 72
-	EFFECT_WONDER_BODY_FORMER = 73
-	EFFECT_DD_CEMETERY_KEY = 74
-	EFFECT_PICNIC_BASKET = 75
-	EFFECT_4DIM_MIRROR = 76
-	EFFECT_SHIFT_CORE = 77
-	EFFECT_JUICE_MIXER = 78
-	EFFECT_TAKTSTOCK = 79
-	EFFECT_AMMO_BOX = 80
-	EFFECT_FIRST_AID = 81
-	EFFECT_PANZERFAUST_X = 82
-	EFFECT_M202_SPECIAL = 83
-	EFFECT_ATOMIC_LAUNCHER = 84
-	EFFECT_ELEMENTS_EYES = 85
-	EFFECT_TOBACCO1 = 86
-	EFFECT_TOBACCO2 = 87
-	EFFECT_TOBACCO3 = 88
-	EFFECT_TOBACCO4 = 89
-	EFFECT_TOBACCO = 90
-	EFFECT_UNDEAD_FUSION = 91
-	EFFECT_FIREWORK = 92
-	EFFECT_SEASONING = 93
-	EFFECT_CRAFT_REPAIR_KIT = 94
-	EFFECT_BIO_PRINTER = 95
-	EFFECT_STARDUST = 96
-	EFFECT_HEART_OF_TWILIGHT = 97
-	EFFECT_SEPPUKU = 98
-	EFFECT_YACATECTS_BANK = 99
-	EFFECT_XMAS_CAKE = 100
-	EFFECT_GROUND_BAIT = 101
-	EFFECT_ENCOUNTER_CANCELLER = 102
-	EFFECT_DEVIL_FRAGMENT = 103
-	EFFECT_FIXITY_ANCHOR = 104
-	EFFECT_TWIG = 105
+	#define global	EFFECT_NONE	0
+	#define global	EFFECT_CARPENTRY	1
+	#define global	EFFECT_ALCHEMY	2
+	#define global	EFFECT_JEWELER	3
+	#define global	EFFECT_TAILOR	4
+	#define global	EFFECT_STETHOSCOPE	5
+	#define global	EFFECT_MUSIC_DISC	6
+	#define global	EFFECT_SHELTER	7
+	#define global	EFFECT_HOUSE_BOARD	8
+	#define global	EFFECT_TRAIN	9
+	#define global	EFFECT_PLAYBACK_DISC	10
+	#define global	EFFECT_KITTY_BANK	11
+	#define global	EFFECT_FREEZER	12
+	#define global	EFFECT_TORCH	13
+	#define global	EFFECT_SNOW	14
+	#define global	EFFECT_COOKING	15
+	#define global	EFFECT_FISHING	16
+	#define global	EFFECT_PERFORM	17
+	#define global	EFFECT_BITE	18
+	#define global	EFFECT_MIRROR	19
+	#define global	EFFECT_INCOGNITO	20
+	#define global	EFFECT_MATERIAL_KIT	21
+	#define global	EFFECT_RUNE	22
+	#define global	EFFECT_LEASH	23
+	#define global	EFFECT_MINE	24
+	#define global	EFFECT_UNICORN_HORN	25
+	#define global	EFFECT_OPATOS_STATUE	26
+	#define global	EFFECT_LULWY_STATUE	27
+	#define global	EFFECT_NUKE	28
+	#define global	EFFECT_SECRET_TREASURE	29
+	#define global	EFFECT_OBJET_OF_HEART	30
+	#define global	EFFECT_KUMIROMI_GEMSTONE	31
+	#define global	EFFECT_GENE_MERGE	32
+	#define global	EFFECT_MONSTER_BALL	33
+	#define global	EFFECT_JURE_STATUE	34
+	#define global	EFFECT_IRON_MAIDEN	35
+	#define global	EFFECT_GUILLOTINE	36
+	#define global	EFFECT_DECK	37
+	#define global	EFFECT_CARD	38
+	#define global	EFFECT_WHISTLE	39
+	#define global	EFFECT_EVOLUTION	40
+	#define global	EFFECT_SECRET_EXP_KUMIROMI	41
+	#define global	EFFECT_SECRET_EXP_LOMIAS	42
+	#define global	EFFECT_EHEKATL_STATUE	43
+	#define global	EFFECT_CHAIR	44
+	#define global	EFFECT_SANDBAG	45
+	#define global	EFFECT_ROPE	46
+	#define global	EFFECT_SUMMONING_CRYSTAL	47
+	#define global	EFFECT_CREATOR_STATUE	48
+	#define global	EFFECT_GAROK_HAMMER	49
+	#define global	EFFECT_KUMIROMI_STATUE	50
+	#define global	EFFECT_MANI_STATUE	51
+	#define global	EFFECT_TAMERS_WHIP	52
+	#define global	EFFECT_YACATECT_GEMSTONE	53
+	#define global	EFFECT_SATELLITE_SHOOTER	54
+	#define global	EFFECT_YACATECT_STATUE	55
+	#define global	EFFECT_ITZPALT_STATUE	56
+	#define global	EFFECT_COMMAND_FLAG	57
+	#define global	EFFECT_EVOLUTION_ITEM	58
+	#define global	EFFECT_STONE_MASK	59
+	#define global	EFFECT_BUSINESS_CARD	60
+	#define global	EFFECT_CLEANING_DOLL	61
+	#define global	EFFECT_ASTRAL_LIGHT_PEN	62
+	#define global	EFFECT_COFFIN	63
+	#define global	EFFECT_CHOCO_KIT	64
+	#define global	EFFECT_FERTILIZER	65
+	#define global	EFFECT_SOUL_SPINDLE	66
+	#define global	EFFECT_WAKEUP_NEFIA	67
+	#define global	EFFECT_JUKE_BOX	68
+	#define global	EFFECT_NINE_GOD_SIGN	69
+	#define global	EFFECT_DOG_WHISTLE	70
+	#define global	EFFECT_PIPE	71 // Since this offset wasn't used, I'm using it for the drug kiseru effect
+	#define global	EFFECT_INSIGHT_LENS	72
+	#define global	EFFECT_WONDER_BODY_FORMER	73
+	#define global	EFFECT_DD_CEMETERY_KEY	74
+	#define global	EFFECT_PICNIC_BASKET	75
+	#define global	EFFECT_4DIM_MIRROR	76
+	#define global	EFFECT_SHIFT_CORE	77
+	#define global	EFFECT_JUICE_MIXER	78
+	#define global	EFFECT_TAKTSTOCK	79
+	#define global	EFFECT_AMMO_BOX	80
+	#define global	EFFECT_FIRST_AID	81
+	#define global	EFFECT_PANZERFAUST_X	82
+	#define global	EFFECT_M202_SPECIAL	83
+	#define global	EFFECT_ATOMIC_LAUNCHER	84
+	#define global	EFFECT_ELEMENTS_EYES	85
+	#define global	EFFECT_TOBACCO1	86
+	#define global	EFFECT_TOBACCO2	87
+	#define global	EFFECT_TOBACCO3	88
+	#define global	EFFECT_TOBACCO4	89
+	#define global	EFFECT_TOBACCO	90
+	#define global	EFFECT_UNDEAD_FUSION	91
+	#define global	EFFECT_FIREWORK	92
+	#define global	EFFECT_SEASONING	93
+	#define global	EFFECT_CRAFT_REPAIR_KIT	94
+	#define global	EFFECT_BIO_PRINTER	95
+	#define global	EFFECT_STARDUST	96
+	#define global	EFFECT_HEART_OF_TWILIGHT	97
+	#define global	EFFECT_SEPPUKU	98
+	#define global	EFFECT_YACATECTS_BANK	99
+	#define global	EFFECT_XMAS_CAKE	100
+	#define global	EFFECT_GROUND_BAIT	101
+	#define global	EFFECT_ENCOUNTER_CANCELLER	102
+	#define global	EFFECT_DEVIL_FRAGMENT	103
+	#define global	EFFECT_FIXITY_ANCHOR	104
+	#define global	EFFECT_TWIG	105
 	
 	// Traits (feats)
-	TRAIT_NORMAL_OTHER_MUTANT = 0
-	TRAIT_NORMAL_STAT_LUC = 1
-	TRAIT_NORMAL_STAT_LIFE = 2
-	TRAIT_NORMAL_SPACT_DRAIN_BLOOD = 3
-	TRAIT_NORMAL_STAT_SPD = 4
-	TRAIT_NORMAL_SPACT_UNCONTROL = 5
-	TRAIT_NORMAL_SPACT_BLADE_STRINGS = 6
-	TRAIT_NORMAL_STAT_PV = 7
-	TRAIT_NORMAL_STAT_DV = 8
-	TRAIT_NORMAL_SPACT_GRAVITY_ACCEL = 9
-	TRAIT_NORMAL_SKILL_EVASION = 10
-	TRAIT_NORMAL_STAT_MANA = 11
-	TRAIT_NORMAL_SKILL_CASTING = 12
-	TRAIT_NORMAL_SPACT_DIMENSIONAL_MOVE = 13
-	TRAIT_NORMAL_SPACT_FIRE_BREATH = 14
-	TRAIT_NORMAL_RES_DARKNESS = 15
-	TRAIT_NORMAL_SKILL_NEGOTIATION = 16
-	TRAIT_NORMAL_SKILL_FAITH = 17
-	TRAIT_NORMAL_RES_POISON = 18
-	TRAIT_NORMAL_SKILL_DUAL_WIELD = 19
-	TRAIT_NORMAL_SPACT_VINDALIAN_JIUJITSU = 20
-	TRAIT_NORMAL_SPACT_FASCINATION_DANCE = 21
-	TRAIT_NORMAL_SPACT_TOUCH_OF_SLEEP = 22
-	TRAIT_NORMAL_SPACT_TOUCH_OF_POISON = 23
-	TRAIT_NORMAL_STAT_STAMINA = 24
-	TRAIT_MUTATION_STAT_PV = 25
-	TRAIT_MUTATION_STAT_DEX = 26
-	TRAIT_MUTATION_SKILL_HEALING = 27
-	TRAIT_MUTATION_STAT_SPD = 28
-	TRAIT_MUTATION_STAT_STR = 29
-	TRAIT_MUTATION_STAT_CHR = 30
-	TRAIT_MUTATION_SKILL_MEMORIZATION = 31
-	TRAIT_MUTATION_RES_MAGIC = 32
-	TRAIT_MUTATION_RES_SOUND = 33
-	TRAIT_MUTATION_RES_FIRE = 34
-	TRAIT_MUTATION_RES_COLD = 35
-	TRAIT_MUTATION_RES_LIGHTNING = 36
-	TRAIT_MUTATION_STAT_PER = 37
-	TRAIT_NORMAL_OTHER_ACCOUNTANT = 38
-	TRAIT_NORMAL_OTHER_QUARTERMASTER = 39
-	TRAIT_NORMAL_SPACT_CHEER = 40
-	TRAIT_NORMAL_OTHER_CANNIBALISM = 41
-	TRAIT_NORMAL_OTHER_RES_CURSE = 42
-	TRAIT_NORMAL_OTHER_SHIELD_BASH = 43
-	TRAIT_NORMAL_OTHER_GENTLE_FACE = 44
-	TRAIT_NORMAL_SPACT_KNOCKOUT = 45
-	TRAIT_NORMAL_OTHER_INDEPENDENT = 46
-	TRAIT_NORMAL_SPACT_EYE_OF_MANA = 47
-	TRAIT_NORMAL_OTHER_MOUNT_BOND = 48
-	TRAIT_NORMAL_SPACT_MISTELTEIN = 49
-	MAX_NORMAL_TRAIT = 50
-
-	TRAIT_RACE_RES_FIRE = 150
-	TRAIT_RACE_RES_COLD = 151
-	TRAIT_RACE_RES_POISON = 152
-	TRAIT_RACE_RES_MAGIC = 153
-	TRAIT_RACE_BONUS_SKILLPOINT = 154
-	TRAIT_RACE_RES_DARKNESS = 155
-	TRAIT_RACE_MAGIC_REACTION = 156
-	TRAIT_RACE_RES_DIM = 157
-	TRAIT_RACE_SLOW_DIGESTION = 158
-	TRAIT_RACE_BONUS_MATERIAL = 159
-	TRAIT_RACE_BONUS_RESISTANCE = 160
-	TRAIT_RACE_WEAK = 161
-	TRAIT_OTHER_WICKED = 162
-	TRAIT_GOD_EHEKATL = 163
-	TRAIT_GOD_OPATOS = 164
-	TRAIT_GOD_ITZPALT = 165
-	TRAIT_GOD_JURE = 166
-	TRAIT_OTHER_MOE = 167
-	TRAIT_RACE_RES_ETHER = 168
-	TRAIT_OTHER_SAINT = 169
-
-	STARTING_TRAIT_ETHER = 200
-	TRAIT_ETHER_WEIGHT = STARTING_TRAIT_ETHER + 1
-	TRAIT_ETHER_SORE_FACE = STARTING_TRAIT_ETHER + 2
-	TRAIT_ETHER_EQUIP_LEG = STARTING_TRAIT_ETHER + 3
-	TRAIT_ETHER_FOUR_EYES = STARTING_TRAIT_ETHER + 4
-	TRAIT_ETHER_EQUIP_BACK = STARTING_TRAIT_ETHER + 5
-	TRAIT_ETHER_EQUIP_NECK = STARTING_TRAIT_ETHER + 6
-	TRAIT_ETHER_VIOLENCE = STARTING_TRAIT_ETHER + 7
-	TRAIT_ETHER_HUGE_HEAD = STARTING_TRAIT_ETHER + 8
-	TRAIT_ETHER_RAIN_CLOUD = STARTING_TRAIT_ETHER + 9
-	TRAIT_ETHER_ADDICTED_POTION = STARTING_TRAIT_ETHER + 10
-	TRAIT_ETHER_DEBILITATION = STARTING_TRAIT_ETHER + 11
-	TRAIT_ETHER_DEMENTIA = STARTING_TRAIT_ETHER + 12
-	TRAIT_ETHER_CARAPACE = STARTING_TRAIT_ETHER + 13
-	TRAIT_ETHER_RANDOM_TELEPORT = STARTING_TRAIT_ETHER + 14
-	TRAIT_ETHER_ABSORB_ROD = STARTING_TRAIT_ETHER + 15
-	TRAIT_ETHER_POISON_HANDS = STARTING_TRAIT_ETHER + 16
-	TRAIT_ETHER_EQUIP_HEAD = STARTING_TRAIT_ETHER + 17
-	MAX_TRAIT_ETHER = STARTING_TRAIT_ETHER + 18
+	#define global	TRAIT_NORMAL_OTHER_MUTANT	0
+	#define global	TRAIT_NORMAL_STAT_LUC	1
+	#define global	TRAIT_NORMAL_STAT_LIFE	2
+	#define global	TRAIT_NORMAL_SPACT_DRAIN_BLOOD	3
+	#define global	TRAIT_NORMAL_STAT_SPD	4
+	#define global	TRAIT_NORMAL_SPACT_UNCONTROL	5
+	#define global	TRAIT_NORMAL_SPACT_BLADE_STRINGS	6
+	#define global	TRAIT_NORMAL_STAT_PV	7
+	#define global	TRAIT_NORMAL_STAT_DV	8
+	#define global	TRAIT_NORMAL_SPACT_GRAVITY_ACCEL	9
+	#define global	TRAIT_NORMAL_SKILL_EVASION	10
+	#define global	TRAIT_NORMAL_STAT_MANA	11
+	#define global	TRAIT_NORMAL_SKILL_CASTING	12
+	#define global	TRAIT_NORMAL_SPACT_DIMENSIONAL_MOVE	13
+	#define global	TRAIT_NORMAL_SPACT_FIRE_BREATH	14
+	#define global	TRAIT_NORMAL_RES_DARKNESS	15
+	#define global	TRAIT_NORMAL_SKILL_NEGOTIATION	16
+	#define global	TRAIT_NORMAL_SKILL_FAITH	17
+	#define global	TRAIT_NORMAL_RES_POISON	18
+	#define global	TRAIT_NORMAL_SKILL_DUAL_WIELD	19
+	#define global	TRAIT_NORMAL_SPACT_VINDALIAN_JIUJITSU	20
+	#define global	TRAIT_NORMAL_SPACT_FASCINATION_DANCE	21
+	#define global	TRAIT_NORMAL_SPACT_TOUCH_OF_SLEEP	22
+	#define global	TRAIT_NORMAL_SPACT_TOUCH_OF_POISON	23
+	#define global	TRAIT_NORMAL_STAT_STAMINA	24
+	#define global	TRAIT_MUTATION_STAT_PV	25
+	#define global	TRAIT_MUTATION_STAT_DEX	26
+	#define global	TRAIT_MUTATION_SKILL_HEALING	27
+	#define global	TRAIT_MUTATION_STAT_SPD	28
+	#define global	TRAIT_MUTATION_STAT_STR	29
+	#define global	TRAIT_MUTATION_STAT_CHR	30
+	#define global	TRAIT_MUTATION_SKILL_MEMORIZATION	31
+	#define global	TRAIT_MUTATION_RES_MAGIC	32
+	#define global	TRAIT_MUTATION_RES_SOUND	33
+	#define global	TRAIT_MUTATION_RES_FIRE	34
+	#define global	TRAIT_MUTATION_RES_COLD	35
+	#define global	TRAIT_MUTATION_RES_LIGHTNING	36
+	#define global	TRAIT_MUTATION_STAT_PER	37
+	#define global	TRAIT_NORMAL_OTHER_ACCOUNTANT	38
+	#define global	TRAIT_NORMAL_OTHER_QUARTERMASTER	39
+	#define global	TRAIT_NORMAL_SPACT_CHEER	40
+	#define global	TRAIT_NORMAL_OTHER_CANNIBALISM	41
+	#define global	TRAIT_NORMAL_OTHER_RES_CURSE	42
+	#define global	TRAIT_NORMAL_OTHER_SHIELD_BASH	43
+	#define global	TRAIT_NORMAL_OTHER_GENTLE_FACE	44
+	#define global	TRAIT_NORMAL_SPACT_KNOCKOUT	45
+	#define global	TRAIT_NORMAL_OTHER_INDEPENDENT	46
+	#define global	TRAIT_NORMAL_SPACT_EYE_OF_MANA	47
+	#define global	TRAIT_NORMAL_OTHER_MOUNT_BOND	48
+	#define global	TRAIT_NORMAL_SPACT_MISTELTEIN	49
+	#define global	MAX_NORMAL_TRAIT	50
+
+	#define global	TRAIT_RACE_RES_FIRE	150
+	#define global	TRAIT_RACE_RES_COLD	151
+	#define global	TRAIT_RACE_RES_POISON	152
+	#define global	TRAIT_RACE_RES_MAGIC	153
+	#define global	TRAIT_RACE_BONUS_SKILLPOINT	154
+	#define global	TRAIT_RACE_RES_DARKNESS	155
+	#define global	TRAIT_RACE_MAGIC_REACTION	156
+	#define global	TRAIT_RACE_RES_DIM	157
+	#define global	TRAIT_RACE_SLOW_DIGESTION	158
+	#define global	TRAIT_RACE_BONUS_MATERIAL	159
+	#define global	TRAIT_RACE_BONUS_RESISTANCE	160
+	#define global	TRAIT_RACE_WEAK	161
+	#define global	TRAIT_OTHER_WICKED	162
+	#define global	TRAIT_GOD_EHEKATL	163
+	#define global	TRAIT_GOD_OPATOS	164
+	#define global	TRAIT_GOD_ITZPALT	165
+	#define global	TRAIT_GOD_JURE	166
+	#define global	TRAIT_OTHER_MOE	167
+	#define global	TRAIT_RACE_RES_ETHER	168
+	#define global	TRAIT_OTHER_SAINT	169
+
+	#define global	STARTING_TRAIT_ETHER	200
+	#define global	TRAIT_ETHER_WEIGHT	(STARTING_TRAIT_ETHER + 1)
+	#define global	TRAIT_ETHER_SORE_FACE	(STARTING_TRAIT_ETHER + 2)
+	#define global	TRAIT_ETHER_EQUIP_LEG	(STARTING_TRAIT_ETHER + 3)
+	#define global	TRAIT_ETHER_FOUR_EYES	(STARTING_TRAIT_ETHER + 4)
+	#define global	TRAIT_ETHER_EQUIP_BACK	(STARTING_TRAIT_ETHER + 5)
+	#define global	TRAIT_ETHER_EQUIP_NECK	(STARTING_TRAIT_ETHER + 6)
+	#define global	TRAIT_ETHER_VIOLENCE	(STARTING_TRAIT_ETHER + 7)
+	#define global	TRAIT_ETHER_HUGE_HEAD	(STARTING_TRAIT_ETHER + 8)
+	#define global	TRAIT_ETHER_RAIN_CLOUD	(STARTING_TRAIT_ETHER + 9)
+	#define global	TRAIT_ETHER_ADDICTED_POTION	(STARTING_TRAIT_ETHER + 10)
+	#define global	TRAIT_ETHER_DEBILITATION	(STARTING_TRAIT_ETHER + 11)
+	#define global	TRAIT_ETHER_DEMENTIA	(STARTING_TRAIT_ETHER + 12)
+	#define global	TRAIT_ETHER_CARAPACE	(STARTING_TRAIT_ETHER + 13)
+	#define global	TRAIT_ETHER_RANDOM_TELEPORT	(STARTING_TRAIT_ETHER + 14)
+	#define global	TRAIT_ETHER_ABSORB_ROD	(STARTING_TRAIT_ETHER + 15)
+	#define global	TRAIT_ETHER_POISON_HANDS	(STARTING_TRAIT_ETHER + 16)
+	#define global	TRAIT_ETHER_EQUIP_HEAD	(STARTING_TRAIT_ETHER + 17)
+	#define global	MAX_TRAIT_ETHER	(STARTING_TRAIT_ETHER + 18)
 
-	MAX_TRAIT = MAX_TRAIT_ETHER
+	#define global	MAX_TRAIT	MAX_TRAIT_ETHER
 
 	// Sprite sheet lengths
-	SPRITE_SHEET_COLS_MAP = 33
-	SPRITE_SHEET_ROWS_MAP = 25
-	SPRITE_SHEET_COLS_ITEM = 33
-	SPRITE_SHEET_ROWS_ITEM = 36
-	SPRITE_SHEET_COLS_CHARA = 33
-	SPRITE_SHEET_ROWS_CHARA = 34
+	#define global	SPRITE_SHEET_COLS_MAP	33
+	#define global	SPRITE_SHEET_ROWS_MAP	25
+	#define global	SPRITE_SHEET_COLS_ITEM	33
+	#define global	SPRITE_SHEET_ROWS_ITEM	36
+	#define global	SPRITE_SHEET_COLS_CHARA	33
+	#define global	SPRITE_SHEET_ROWS_CHARA	34
 
-	SPRITE_SIZE_ITEM = 48
+	#define global	SPRITE_SIZE_ITEM	48
 
 	// CLOUD //
-	CLOUD_X = 0
-	CLOUD_Y = 1
-	CLOUD_PX = 2
-	CLOUD_PY = 3
-	CLOUD_WIDTH = 4
-	CLOUD_HEIGHT = 5
+	#define global	CLOUD_X	0
+	#define global	CLOUD_Y	1
+	#define global	CLOUD_PX	2
+	#define global	CLOUD_PY	3
+	#define global	CLOUD_WIDTH	4
+	#define global	CLOUD_HEIGHT	5
 
-	MAX_CLOUD = 12
+	#define global	MAX_CLOUD	12
 
 	// CHIPC - CHIPI - CHIPM //
-	CHIPC_X = 0
-	CHIPC_Y = 1
-	CHIPC_WIDTH = 2
-	CHIPC_HEIGHT = 3
-	CHIPC_F = 4
-
-	CHIPI_X = 0
-	CHIPI_Y = 1
-	CHIPI_WIDTH = 2
-	CHIPI_HEIGHT = 3
-	CHIPI_F = 4
-	CHIPI_S = 5
-	CHIPI_SH = 6
-	CHIPI_ANIM = 7
-
-	CHIPM_ROLE = 0
-	CHIPM_ROLE_SUB = 1
-	CHIPM_WALL = 2
-	CHIPM_ANIM = 3
-	CHIPM_F = 5
-	CHIPM_H = 6
-	CHIPM_ATTRIB = 7
+	#define global	CHIPC_X	0
+	#define global	CHIPC_Y	1
+	#define global	CHIPC_WIDTH	2
+	#define global	CHIPC_HEIGHT	3
+	#define global	CHIPC_F	4
+
+	#define global	CHIPI_X	0
+	#define global	CHIPI_Y	1
+	#define global	CHIPI_WIDTH	2
+	#define global	CHIPI_HEIGHT	3
+	#define global	CHIPI_F	4
+	#define global	CHIPI_S	5
+	#define global	CHIPI_SH	6
+	#define global	CHIPI_ANIM	7
+
+	#define global	CHIPM_ROLE	0
+	#define global	CHIPM_ROLE_SUB	1
+	#define global	CHIPM_WALL	2
+	#define global	CHIPM_ANIM	3
+	#define global	CHIPM_F	5
+	#define global	CHIPM_H	6
+	#define global	CHIPM_ATTRIB	7
 
 	// Map chip attribs
-	CHIPM_ATTRIB_CANT_SEE = 1
-	CHIPM_ATTRIB_CANT_PASS = 4
-	CHIPM_ATTRIB_CANT_SEE_OR_PASS = 5
+	#define global	CHIPM_ATTRIB_CANT_SEE	1
+	#define global	CHIPM_ATTRIB_CANT_PASS	4
+	#define global	CHIPM_ATTRIB_CANT_SEE_OR_PASS	5
 
 	// Map chip roles
-	MAP_CHIP_ROLE_NONE = 0
-	MAP_CHIP_ROLE_DRYROCK = 1
-	MAP_CHIP_ROLE_CROP = 2
-	MAP_CHIP_ROLE_WATER = 3
-	MAP_CHIP_ROLE_SNOW = 4
-	MAP_CHIP_ROLE_MOUNTAIN_WATER = 5
-	MAP_CHIP_ROLE_HARD_WALL = 6
-	MAP_CHIP_ROLE_SAND = 7
-	MAP_CHIP_ROLE_SAND_HARD = 8
-	MAP_CHIP_ROLE_COAST = 9
-	MAP_CHIP_ROLE_SAND_WATER = 10
-	MAP_CHIP_ROLE_COMPOST = 11
+	#define global	MAP_CHIP_ROLE_NONE	0
+	#define global	MAP_CHIP_ROLE_DRYROCK	1
+	#define global	MAP_CHIP_ROLE_CROP	2
+	#define global	MAP_CHIP_ROLE_WATER	3
+	#define global	MAP_CHIP_ROLE_SNOW	4
+	#define global	MAP_CHIP_ROLE_MOUNTAIN_WATER	5
+	#define global	MAP_CHIP_ROLE_HARD_WALL	6
+	#define global	MAP_CHIP_ROLE_SAND	7
+	#define global	MAP_CHIP_ROLE_SAND_HARD	8
+	#define global	MAP_CHIP_ROLE_COAST	9
+	#define global	MAP_CHIP_ROLE_SAND_WATER	10
+	#define global	MAP_CHIP_ROLE_COMPOST	11
 
-	MAP_CHIP_ROLE_DISPLAY_SPACE = 37
+	#define global	MAP_CHIP_ROLE_DISPLAY_SPACE	37
 
-	MAX_MAP_CHIP_ROLE = MAP_CHIP_ROLE_DISPLAY_SPACE + 1
+	#define global	MAX_MAP_CHIP_ROLE	(MAP_CHIP_ROLE_DISPLAY_SPACE + 1)
 
 	// Map effect
-	MEFSUBREF_X = 0
-	MEFSUBREF_Y = 1
-	MEFSUBREF_TYPE = 2
+	#define global	MEFSUBREF_X	0
+	#define global	MEFSUBREF_Y	1
+	#define global	MEFSUBREF_TYPE	2
 
 	// Map effect types
-	MAP_EFFECT_TYPE_NONE = 0
-	MAP_EFFECT_TYPE_FOOT = 1
+	#define global	MAP_EFFECT_TYPE_NONE	0
+	#define global	MAP_EFFECT_TYPE_FOOT	1
 
 	// Map effects
-	MAP_EFFECT_NONE = 0
-	MAP_EFFECT_RIPPLE = 1
-	MAP_EFFECT_FOOT = 2
-	MAP_EFFECT_SNOW = 3
-	MAP_EFFECT_SPLASH = 4
-	MAP_EFFECT_SPLASH2 = 5
+	#define global	MAP_EFFECT_NONE	0
+	#define global	MAP_EFFECT_RIPPLE	1
+	#define global	MAP_EFFECT_FOOT	2
+	#define global	MAP_EFFECT_SNOW	3
+	#define global	MAP_EFFECT_SPLASH	4
+	#define global	MAP_EFFECT_SPLASH2	5
 
-	MAX_MAP_EFFECT = MAP_EFFECT_SPLASH2 + 1
+	#define global	MAX_MAP_EFFECT	(MAP_EFFECT_SPLASH2 + 1)
 
 	// Cell features
-	CELL_FEATURE_UPSTAIRS = 10
-	CELL_FEATURE_DOWNSTAIRS = 11
-	CELL_FEATURE_TRAP = 14
-	CELL_FEATURE_NEFIA = 15
-	CELL_FEATURE_DOOR_OPENED = 20
-	CELL_FEATURE_DOOR_CLOSED = 21
-	CELL_FEATURE_HIDDEN_PATH = 22
-	CELL_FEATURE_SAMPLING_SPOT_DETECTION = 24
-	CELL_FEATURE_SAMPLING_SPOT_MINING = 25
-	CELL_FEATURE_SAMPLING_SPOT_FISHING = 26
-	CELL_FEATURE_SAMPLING_SPOT_GENE_ENGINEER = 27
-	CELL_FEATURE_SAMPLING_SPOT_GARDENING = 28
-	CELL_FEATURE_PLANTED_SEED = 29
-	CELL_FEATURE_POT = 30
-	CELL_FEATURE_SMALL_MEDAL = 32
-	CELL_FEATURE_BUILDING = 34
-
-	CELL_SUB_FEATURE_TRAP_IMPALEMENT = 0
-	CELL_SUB_FEATURE_TRAP_POISON = 1
-	CELL_SUB_FEATURE_TRAP_SLEEP = 2
-	CELL_SUB_FEATURE_TRAP_TELEPORT = 3
-	CELL_SUB_FEATURE_TRAP_BLIND = 4
-	CELL_SUB_FEATURE_TRAP_CONFUSION = 5
-	CELL_SUB_FEATURE_TRAP_PARALYZE = 6
-	CELL_SUB_FEATURE_TRAP_QUEST_MINE = 7
-	CELL_SUB_FEATURE_TRAP_BLADE_STRINGS = 8
-	CELL_SUB_FEATURE_TRAP_QUEST_PITFALL = 9
-	CELL_SUB_FEATURE_TRAP_HOSTILE_BLADE_STRINGS = 20
-	CELL_SUB_FEATURE_TRAP_PITFALL = 21
-	CELL_SUB_FEATURE_TRAP_MINE = 22
-	CELL_SUB_FEATURE_SEED_VEGETABLE = 36
-	CELL_SUB_FEATURE_SEED_FRUIT = 37
-	CELL_SUB_FEATURE_SEED_HERB = 38
-	CELL_SUB_FEATURE_SEED_STRANGE = 39
-	CELL_SUB_FEATURE_SEED_ARTIFACT = 40
-	CELL_SUB_FEATURE_SEED_GEM = 41
-	CELL_SUB_FEATURE_SEED_MAGIC = 42
+	#define global	CELL_FEATURE_UPSTAIRS	10
+	#define global	CELL_FEATURE_DOWNSTAIRS	11
+	#define global	CELL_FEATURE_TRAP	14
+	#define global	CELL_FEATURE_NEFIA	15
+	#define global	CELL_FEATURE_DOOR_OPENED	20
+	#define global	CELL_FEATURE_DOOR_CLOSED	21
+	#define global	CELL_FEATURE_HIDDEN_PATH	22
+	#define global	CELL_FEATURE_SAMPLING_SPOT_DETECTION	24
+	#define global	CELL_FEATURE_SAMPLING_SPOT_MINING	25
+	#define global	CELL_FEATURE_SAMPLING_SPOT_FISHING	26
+	#define global	CELL_FEATURE_SAMPLING_SPOT_GENE_ENGINEER	27
+	#define global	CELL_FEATURE_SAMPLING_SPOT_GARDENING	28
+	#define global	CELL_FEATURE_PLANTED_SEED	29
+	#define global	CELL_FEATURE_POT	30
+	#define global	CELL_FEATURE_SMALL_MEDAL	32
+	#define global	CELL_FEATURE_BUILDING	34
+
+	#define global	CELL_SUB_FEATURE_TRAP_IMPALEMENT	0
+	#define global	CELL_SUB_FEATURE_TRAP_POISON	1
+	#define global	CELL_SUB_FEATURE_TRAP_SLEEP	2
+	#define global	CELL_SUB_FEATURE_TRAP_TELEPORT	3
+	#define global	CELL_SUB_FEATURE_TRAP_BLIND	4
+	#define global	CELL_SUB_FEATURE_TRAP_CONFUSION	5
+	#define global	CELL_SUB_FEATURE_TRAP_PARALYZE	6
+	#define global	CELL_SUB_FEATURE_TRAP_QUEST_MINE	7
+	#define global	CELL_SUB_FEATURE_TRAP_BLADE_STRINGS	8
+	#define global	CELL_SUB_FEATURE_TRAP_QUEST_PITFALL	9
+	#define global	CELL_SUB_FEATURE_TRAP_HOSTILE_BLADE_STRINGS	20
+	#define global	CELL_SUB_FEATURE_TRAP_PITFALL	21
+	#define global	CELL_SUB_FEATURE_TRAP_MINE	22
+	#define global	CELL_SUB_FEATURE_SEED_VEGETABLE	36
+	#define global	CELL_SUB_FEATURE_SEED_FRUIT	37
+	#define global	CELL_SUB_FEATURE_SEED_HERB	38
+	#define global	CELL_SUB_FEATURE_SEED_STRANGE	39
+	#define global	CELL_SUB_FEATURE_SEED_ARTIFACT	40
+	#define global	CELL_SUB_FEATURE_SEED_GEM	41
+	#define global	CELL_SUB_FEATURE_SEED_MAGIC	42
 
 	// LIGHTDATA //
-	LIGHTDATA_PIC = 0
-	LIGHTDATA_ANIM = 1
-	LIGHTDATA_BRIGHT = 2
-	LIGHTDATA_Y = 3
-	LIGHTDATA_POWER = 4
-	LIGHTDATA_FLICK = 5
-	LIGHTDATA_TIME = 6
+	#define global	LIGHTDATA_PIC	0
+	#define global	LIGHTDATA_ANIM	1
+	#define global	LIGHTDATA_BRIGHT	2
+	#define global	LIGHTDATA_Y	3
+	#define global	LIGHTDATA_POWER	4
+	#define global	LIGHTDATA_FLICK	5
+	#define global	LIGHTDATA_TIME	6
 
 	// Light types
-	LIGHT_TYPE_NONE = 0
-	LIGHT_TYPE_TORCH = 1
-	LIGHT_TYPE_TORCH_LAMP = 2
-	LIGHT_TYPE_LAMP = 3
-	LIGHT_TYPE_LANTERN = 4
-	LIGHT_TYPE_TOWN_LIGHT = 5
-	LIGHT_TYPE_STOVE = 6
-	LIGHT_TYPE_CRYSTAL = 7
-	LIGHT_TYPE_CRYSTAL_MIDDLE = 8
-	LIGHT_TYPE_ITEM = 9
-	LIGHT_TYPE_ITEM_MIDDLE = 10
-	LIGHT_TYPE_TOWN = 11
-	LIGHT_TYPE_CANDLE = 12
-	LIGHT_TYPE_CANDLE_LOW = 13
-	LIGHT_TYPE_PORT_LIGHT = 14
-	LIGHT_TYPE_PORT_LIGHT_SNOW = 15
-	LIGHT_TYPE_CRYSTAL_HIGH = 16
-	LIGHT_TYPE_WINDOW = 17
-	LIGHT_TYPE_GATE = 18
-	LIGHT_TYPE_WINDOW_RED = 19
-	LIGHT_TYPE_SAKURA = 20
+	#define global	LIGHT_TYPE_NONE	0
+	#define global	LIGHT_TYPE_TORCH	1
+	#define global	LIGHT_TYPE_TORCH_LAMP	2
+	#define global	LIGHT_TYPE_LAMP	3
+	#define global	LIGHT_TYPE_LANTERN	4
+	#define global	LIGHT_TYPE_TOWN_LIGHT	5
+	#define global	LIGHT_TYPE_STOVE	6
+	#define global	LIGHT_TYPE_CRYSTAL	7
+	#define global	LIGHT_TYPE_CRYSTAL_MIDDLE	8
+	#define global	LIGHT_TYPE_ITEM	9
+	#define global	LIGHT_TYPE_ITEM_MIDDLE	10
+	#define global	LIGHT_TYPE_TOWN	11
+	#define global	LIGHT_TYPE_CANDLE	12
+	#define global	LIGHT_TYPE_CANDLE_LOW	13
+	#define global	LIGHT_TYPE_PORT_LIGHT	14
+	#define global	LIGHT_TYPE_PORT_LIGHT_SNOW	15
+	#define global	LIGHT_TYPE_CRYSTAL_HIGH	16
+	#define global	LIGHT_TYPE_WINDOW	17
+	#define global	LIGHT_TYPE_GATE	18
+	#define global	LIGHT_TYPE_WINDOW_RED	19
+	#define global	LIGHT_TYPE_SAKURA	20
 
-	MAX_LIGHT_TYPE = LIGHT_TYPE_SAKURA + 1
+	#define global	MAX_LIGHT_TYPE	(LIGHT_TYPE_SAKURA + 1)
 
 	// INV //
-	INV_ITEM_NUM = 0
-	INV_ITEM_VALUE = 1
-	INV_ITEM_PIC = 2
-	INV_ITEM_ID = 3
-	INV_ITEM_QUALITY = 4
-	INV_ITEM_X = 5
-	INV_ITEM_Y = 6
-	INV_ITEM_WEIGHT = 7
-	INV_ITEM_KNOWN = 8
-	INV_ITEM_CHARGE = 9
-	INV_ITEM_FILE = 9
-	INV_ITEM_AMMO = 9
-	INV_ITEM_NEXT_PERIOD = 9
-	INV_ITEM_CLIENT = 9
-	INV_ITEM_DICE1 = 10
-	INV_ITEM_DICE2 = 11
-	INV_ITEM_DAMAGE = 12
-	INV_ITEM_ATTACK = 13
-	INV_ITEM_DV = 14
-	INV_ITEM_PV = 15
-	INV_ITEM_SKILL_REF = 16
-	INV_ITEM_STATUS = 17
-	INV_ITEM_EQUIP = 18
-	INV_ITEM_EFFECT = 19
-	INV_ITEM_LEVEL = 20
-	INV_ITEM_PROPERTY = 21
-	INV_ITEM_COL = 22
-	INV_ITEM_SUB_NAME = 23
-	INV_ITEM_MATERIAL = 24
-	INV_ITEM_PARAM1 = 25
-	INV_ITEM_GOD = 25
-	INV_ITEM_BOOK_ID = 25
-	INV_ITEM_GROWTH = 25
-	INV_ITEM_PARAM2 = 26
-	INV_ITEM_EXP = 26
-	INV_ITEM_PARAM3 = 27
-	INV_ITEM_ROT = 27
-	INV_ITEM_INTERVAL = 27
-	INV_ITEM_PARAM4 = 28
-	INV_ITEM_FISHING_BAIT = 28
-	INV_ITEM_IDENTIFY_LEVEL = 29
-	INV_ITEM_TURN = 30
-	INV_ITEM_AMUR_CAGE = 31
-	INV_ITEM_SHOP_SAMPLE = 32
-	INV_ITEM_NEED_SLEEP = 33
-	INV_ITEM_CHARA_PIC = 34
-	STARTING_INV_ITEM_BIT = 35
-	RANGE_INV_ITEM_BIT = 5
-
-	STARTING_INV_ITEM_ENCHANT = 40
-	RANGE_INV_ITEM_ENCHANT = 15
-	RANGE_INV_ITEM_FIXED_ENCHANT = 10
+	#define global	INV_ITEM_NUM	0
+	#define global	INV_ITEM_VALUE	1
+	#define global	INV_ITEM_PIC	2
+	#define global	INV_ITEM_ID	3
+	#define global	INV_ITEM_QUALITY	4
+	#define global	INV_ITEM_X	5
+	#define global	INV_ITEM_Y	6
+	#define global	INV_ITEM_WEIGHT	7
+	#define global	INV_ITEM_KNOWN	8
+	#define global	INV_ITEM_CHARGE	9
+	#define global	INV_ITEM_FILE	9
+	#define global	INV_ITEM_AMMO	9
+	#define global	INV_ITEM_NEXT_PERIOD	9
+	#define global	INV_ITEM_CLIENT	9
+	#define global	INV_ITEM_DICE1	10
+	#define global	INV_ITEM_DICE2	11
+	#define global	INV_ITEM_DAMAGE	12
+	#define global	INV_ITEM_ATTACK	13
+	#define global	INV_ITEM_DV	14
+	#define global	INV_ITEM_PV	15
+	#define global	INV_ITEM_SKILL_REF	16
+	#define global	INV_ITEM_STATUS	17
+	#define global	INV_ITEM_EQUIP	18
+	#define global	INV_ITEM_EFFECT	19
+	#define global	INV_ITEM_LEVEL	20
+	#define global	INV_ITEM_PROPERTY	21
+	#define global	INV_ITEM_COL	22
+	#define global	INV_ITEM_SUB_NAME	23
+	#define global	INV_ITEM_MATERIAL	24
+	#define global	INV_ITEM_PARAM1	25
+	#define global	INV_ITEM_GOD	25
+	#define global	INV_ITEM_BOOK_ID	25
+	#define global	INV_ITEM_GROWTH	25
+	#define global	INV_ITEM_PARAM2	26
+	#define global	INV_ITEM_EXP	26
+	#define global	INV_ITEM_PARAM3	27
+	#define global	INV_ITEM_ROT	27
+	#define global	INV_ITEM_INTERVAL	27
+	#define global	INV_ITEM_PARAM4	28
+	#define global	INV_ITEM_FISHING_BAIT	28
+	#define global	INV_ITEM_IDENTIFY_LEVEL	29
+	#define global	INV_ITEM_TURN	30
+	#define global	INV_ITEM_AMUR_CAGE	31
+	#define global	INV_ITEM_SHOP_SAMPLE	32
+	#define global	INV_ITEM_NEED_SLEEP	33
+	#define global	INV_ITEM_CHARA_PIC	34
+	#define global	STARTING_INV_ITEM_BIT	35
+	#define global	RANGE_INV_ITEM_BIT	5
+
+	#define global	STARTING_INV_ITEM_ENCHANT	40
+	#define global	RANGE_INV_ITEM_ENCHANT	15
+	#define global	RANGE_INV_ITEM_FIXED_ENCHANT	10
 
-	INV_ITEM_MAX = 70
+	#define global	INV_ITEM_MAX	70
 
 	// Item bits
-	ITEM_BIT_NONE = 0
-	ITEM_BIT_ACIDPROOF = 1
-	ITEM_BIT_FIREPROOF = 2
-	ITEM_BIT_COLDPROOF = 3
-	ITEM_BIT_CHARGE_ITEM = 4
-	ITEM_BIT_PRECIOUS = 5
-	ITEM_BIT_LOVE_BLEND = 6
-	ITEM_BIT_PERIOD = 7
-	ITEM_BIT_REMAKE = 8
-	ITEM_BIT_STOLEN = 9
-	ITEM_BIT_ALIVE = 10
-	ITEM_BIT_DEST_ITEM = 11
-	ITEM_BIT_DROP = 12
-	ITEM_BIT_NO_DROP = 13
-	ITEM_BIT_POISON_BLEND = 14
-	ITEM_BIT_ULTIMATE = 15
-	ITEM_BIT_GUEST_USE = 16
-	ITEM_BIT_HANDMADE = 17
-	ITEM_BIT_HERBED_IN = 18
-	ITEM_BIT_ANTISEPTIC = 19
-	ITEM_BIT_HAZARD = 20
+	#define global	ITEM_BIT_NONE	0
+	#define global	ITEM_BIT_ACIDPROOF	1
+	#define global	ITEM_BIT_FIREPROOF	2
+	#define global	ITEM_BIT_COLDPROOF	3
+	#define global	ITEM_BIT_CHARGE_ITEM	4
+	#define global	ITEM_BIT_PRECIOUS	5
+	#define global	ITEM_BIT_LOVE_BLEND	6
+	#define global	ITEM_BIT_PERIOD	7
+	#define global	ITEM_BIT_REMAKE	8
+	#define global	ITEM_BIT_STOLEN	9
+	#define global	ITEM_BIT_ALIVE	10
+	#define global	ITEM_BIT_DEST_ITEM	11
+	#define global	ITEM_BIT_DROP	12
+	#define global	ITEM_BIT_NO_DROP	13
+	#define global	ITEM_BIT_POISON_BLEND	14
+	#define global	ITEM_BIT_ULTIMATE	15
+	#define global	ITEM_BIT_GUEST_USE	16
+	#define global	ITEM_BIT_HANDMADE	17
+	#define global	ITEM_BIT_HERBED_IN	18
+	#define global	ITEM_BIT_ANTISEPTIC	19
+	#define global	ITEM_BIT_HAZARD	20
 
 	// Inventory File IDs
-	ITEM_ROLE_FILE_NONE = 0
-	ITEM_ROLE_FILE_WANDER = 1
-	ITEM_ROLE_FILE_TXT_ADV = 2
-	ITEM_ROLE_FILE_HEIR_TRUNK = 3
-	ITEM_ROLE_FILE_INCOME = 4
-	ITEM_ROLE_FILE_SHOP_INCOME = 5
-	ITEM_ROLE_FILE_FREEZER = 6
-	ITEM_ROLE_FILE_COOLER_BOX = 7
-	ITEM_ROLE_FILE_POCKET = 8
-	ITEM_ROLE_FILE_DD_CEMETERY_KEY = 9
-	ITEM_ROLE_FILE_POTION_RACK = 10
-	ITEM_ROLE_FILE_BREAD_DISPLAY = 11
-	ITEM_ROLE_FILE_BOOKSHELF = 12
-	STARTING_ITEM_ROLE_FILE_SHELTER = 100
+	#define global	ITEM_ROLE_FILE_NONE	0
+	#define global	ITEM_ROLE_FILE_WANDER	1
+	#define global	ITEM_ROLE_FILE_TXT_ADV	2
+	#define global	ITEM_ROLE_FILE_HEIR_TRUNK	3
+	#define global	ITEM_ROLE_FILE_INCOME	4
+	#define global	ITEM_ROLE_FILE_SHOP_INCOME	5
+	#define global	ITEM_ROLE_FILE_FREEZER	6
+	#define global	ITEM_ROLE_FILE_COOLER_BOX	7
+	#define global	ITEM_ROLE_FILE_POCKET	8
+	#define global	ITEM_ROLE_FILE_DD_CEMETERY_KEY	9
+	#define global	ITEM_ROLE_FILE_POTION_RACK	10
+	#define global	ITEM_ROLE_FILE_BREAD_DISPLAY	11
+	#define global	ITEM_ROLE_FILE_BOOKSHELF	12
+	#define global	STARTING_ITEM_ROLE_FILE_SHELTER	100
 
 	// Item proprietary
-	PROP_NONE = 0
-	PROP_NPC = 1
-	PROP_SHOP = 2
-	PROP_CONSTRUCT = 3
-	PROP_QUEST = 4
-	PROP_SPECIAL = 5
+	#define global	PROP_NONE	0
+	#define global	PROP_NPC	1
+	#define global	PROP_SHOP	2
+	#define global	PROP_CONSTRUCT	3
+	#define global	PROP_QUEST	4
+	#define global	PROP_SPECIAL	5
 
 	// Item identification level
-	ITEM_KNOWN_NONE = 0
-	ITEM_KNOWN_NAME = 1
-	ITEM_KNOWN_QUALITY = 2
-	ITEM_KNOWN_FULL = 3
-	ITEM_KNOWN_NECRO = 10
+	#define global	ITEM_KNOWN_NONE	0
+	#define global	ITEM_KNOWN_NAME	1
+	#define global	ITEM_KNOWN_QUALITY	2
+	#define global	ITEM_KNOWN_FULL	3
+	#define global	ITEM_KNOWN_NECRO	10
 
 	// Item status
-	ITEM_STATUS_DOOMED = -2
-	ITEM_STATUS_CURSED = -1
-	ITEM_STATUS_NORMAL = 0
-	ITEM_STATUS_BLESSED = 1
+	#define global	ITEM_STATUS_DOOMED	-2
+	#define global	ITEM_STATUS_CURSED	-1
+	#define global	ITEM_STATUS_NORMAL	0
+	#define global	ITEM_STATUS_BLESSED	1
 
 	// Item/Chara quality
-	FIX_QUALITY_NONE = 0
-	FIX_QUALITY_BAD = 1
-	FIX_QUALITY_GOOD = 2
-	FIX_QUALITY_GREAT = 3
-	FIX_QUALITY_MIRACLE = 4
-	FIX_QUALITY_GODLY = 5
-	FIX_QUALITY_UNIQUE = 6
+	#define global	FIX_QUALITY_NONE	0
+	#define global	FIX_QUALITY_BAD	1
+	#define global	FIX_QUALITY_GOOD	2
+	#define global	FIX_QUALITY_GREAT	3
+	#define global	FIX_QUALITY_MIRACLE	4
+	#define global	FIX_QUALITY_GODLY	5
+	#define global	FIX_QUALITY_UNIQUE	6
 
 	// Item Materials
-	ITEM_MATERIAL_SAND = 0
-	ITEM_MATERIAL_LEATHER = 1
-	ITEM_MATERIAL_SILK = 2
-	ITEM_MATERIAL_CLOTH = 3
-	ITEM_MATERIAL_SCALE = 4
-	ITEM_MATERIAL_GLASS = 5
-
-	ITEM_MATERIAL_MITHRIL = 7
-	ITEM_MATERIAL_ETHER = 8
-	ITEM_MATERIAL_STEEL = 9
-	ITEM_MATERIAL_METAL = 10
-	ITEM_MATERIAL_CRYSTAL = 11
-	ITEM_MATERIAL_BRONZE = 12
-	ITEM_MATERIAL_DIAMOND = 13
-	ITEM_MATERIAL_SPIRIT = 14
-	ITEM_MATERIAL_RUBYNUS = 15
-	ITEM_MATERIAL_PAPER = 16
-	ITEM_MATERIAL_DUSK = 17
-	ITEM_MATERIAL_BONE = 18
-	ITEM_MATERIAL_CHAIN = 19
-	ITEM_MATERIAL_OBSIDIAN = 20
-	ITEM_MATERIAL_MICA = 21
-	ITEM_MATERIAL_PEARL = 22
-	ITEM_MATERIAL_EMERALD = 23
-	ITEM_MATERIAL_DRAGON = 24
-	ITEM_MATERIAL_SILVER = 25
-	ITEM_MATERIAL_PLATINUM = 26
-	ITEM_MATERIAL_ZYLON = 27
-	ITEM_MATERIAL_GRIFFON = 28
-	ITEM_MATERIAL_TITANIUM = 29
-	ITEM_MATERIAL_CHROME = 30
-	ITEM_MATERIAL_ADAMANTIUM = 31
-	ITEM_MATERIAL_GOLD = 32
-	ITEM_MATERIAL_CORAL = 33
-	ITEM_MATERIAL_IRON = 34
-	ITEM_MATERIAL_RAW = 35
-	ITEM_MATERIAL_PLANT_VEGETABLE = 36
-	ITEM_MATERIAL_PLANT_FRUIT = 37
-	ITEM_MATERIAL_PLANT_HERB = 38
-	ITEM_MATERIAL_PLANT_UNKNOWN = 39
-	ITEM_MATERIAL_PLANT_ARTIFACT = 40
-	ITEM_MATERIAL_PLANT_GEM = 41
-	ITEM_MATERIAL_PLANT_MAGIC = 42
-	ITEM_MATERIAL_WOOD = 43
-	ITEM_MATERIAL_BAMBOO = 44
-	ITEM_MATERIAL_NANOMACHINE = 45
+	#define global	ITEM_MATERIAL_SAND	0
+	#define global	ITEM_MATERIAL_LEATHER	1
+	#define global	ITEM_MATERIAL_SILK	2
+	#define global	ITEM_MATERIAL_CLOTH	3
+	#define global	ITEM_MATERIAL_SCALE	4
+	#define global	ITEM_MATERIAL_GLASS	5
+
+	#define global	ITEM_MATERIAL_MITHRIL	7
+	#define global	ITEM_MATERIAL_ETHER	8
+	#define global	ITEM_MATERIAL_STEEL	9
+	#define global	ITEM_MATERIAL_METAL	10
+	#define global	ITEM_MATERIAL_CRYSTAL	11
+	#define global	ITEM_MATERIAL_BRONZE	12
+	#define global	ITEM_MATERIAL_DIAMOND	13
+	#define global	ITEM_MATERIAL_SPIRIT	14
+	#define global	ITEM_MATERIAL_RUBYNUS	15
+	#define global	ITEM_MATERIAL_PAPER	16
+	#define global	ITEM_MATERIAL_DUSK	17
+	#define global	ITEM_MATERIAL_BONE	18
+	#define global	ITEM_MATERIAL_CHAIN	19
+	#define global	ITEM_MATERIAL_OBSIDIAN	20
+	#define global	ITEM_MATERIAL_MICA	21
+	#define global	ITEM_MATERIAL_PEARL	22
+	#define global	ITEM_MATERIAL_EMERALD	23
+	#define global	ITEM_MATERIAL_DRAGON	24
+	#define global	ITEM_MATERIAL_SILVER	25
+	#define global	ITEM_MATERIAL_PLATINUM	26
+	#define global	ITEM_MATERIAL_ZYLON	27
+	#define global	ITEM_MATERIAL_GRIFFON	28
+	#define global	ITEM_MATERIAL_TITANIUM	29
+	#define global	ITEM_MATERIAL_CHROME	30
+	#define global	ITEM_MATERIAL_ADAMANTIUM	31
+	#define global	ITEM_MATERIAL_GOLD	32
+	#define global	ITEM_MATERIAL_CORAL	33
+	#define global	ITEM_MATERIAL_IRON	34
+	#define global	ITEM_MATERIAL_RAW	35
+	#define global	ITEM_MATERIAL_PLANT_VEGETABLE	36
+	#define global	ITEM_MATERIAL_PLANT_FRUIT	37
+	#define global	ITEM_MATERIAL_PLANT_HERB	38
+	#define global	ITEM_MATERIAL_PLANT_UNKNOWN	39
+	#define global	ITEM_MATERIAL_PLANT_ARTIFACT	40
+	#define global	ITEM_MATERIAL_PLANT_GEM	41
+	#define global	ITEM_MATERIAL_PLANT_MAGIC	42
+	#define global	ITEM_MATERIAL_WOOD	43
+	#define global	ITEM_MATERIAL_BAMBOO	44
+	#define global	ITEM_MATERIAL_NANOMACHINE	45
 
-	ITEM_MATERIAL_MAX = 50
+	#define global	ITEM_MATERIAL_MAX	50
 
-	ITEM_MATERIAL_TYPE_METAL = 1000
-	ITEM_MATERIAL_TYPE_LEATHER = 1001
+	#define global	ITEM_MATERIAL_TYPE_METAL	1000
+	#define global	ITEM_MATERIAL_TYPE_LEATHER	1001
 
-	ITEM_MATERIA_GROUP_MAX = 4
-	ITEM_MATERIAL_LEVEL_MAX = 5
+	#define global	ITEM_MATERIA_GROUP_MAX	4
+	#define global	ITEM_MATERIAL_LEVEL_MAX	5
 
 	// FISHDATA - FISHDATAN //
-	FISHDATA_PIC = 0
-	FISHDATA_LEVEL = 1
-	FISHDATA_RARE = 2
-	FISHDATA_POWER = 3
-	FISHDATA_SPEED = 4
-	FISHDATA_WEIGHT = 5
-	FISHDATA_VALUE = 6
-	FISHDATA_ID = 7
+	#define global	FISHDATA_PIC	0
+	#define global	FISHDATA_LEVEL	1
+	#define global	FISHDATA_RARE	2
+	#define global	FISHDATA_POWER	3
+	#define global	FISHDATA_SPEED	4
+	#define global	FISHDATA_WEIGHT	5
+	#define global	FISHDATA_VALUE	6
+	#define global	FISHDATA_ID	7
 
-	FISHDATAN_NAME = 0
+	#define global	FISHDATAN_NAME	0
 
-	MAX_FISH = 100
+	#define global	MAX_FISH	100
 
 	// Materials
-	MATERIAL_GARBAGE = 0
-	MATERIAL_CASINO_CHIP = 1
-	MATERIAL_CHARCOAL = 2
-	MATERIAL_DRIFTWOOD = 3
-	MATERIAL_BIRDS_FEATHER = 4
-	MATERIAL_WATERDROP = 5
-	MATERIAL_STICK = 6
-	MATERIAL_MITHRIL_FRAGMENT = 7
-	MATERIAL_ETHER_FRAGMENT = 8
-	MATERIAL_IRON_FRAGMENT = 9
-	MATERIAL_ANGELS_TEAR = 10
-	MATERIAL_WITCHS_TEAR = 11
-	MATERIAL_SEAWATER = 12
-	MATERIAL_HOWLING_WEED = 13
-	MATERIAL_RED_WEED = 14
-	MATERIAL_BLUE_WEED = 15
-	MATERIAL_CURSE_WEED = 16
-	MATERIAL_HOLY_WEED = 17
-	MATERIAL_RABBITS_TAIL = 18
-	MATERIAL_TROLL_GENE = 19
-	MATERIAL_SNOW = 20
-	MATERIAL_FAIRY_DUST = 21
-	MATERIAL_ELEMENT_FRAGMENT = 22
-	MATERIAL_ELECTRICITY = 23
-	MATERIAL_BLACK_MIST = 24
-	MATERIAL_HOT_WATER = 25
-	MATERIAL_FIRE_STONE = 26
-	MATERIAL_ICE_STONE = 27
-	MATERIAL_DISCHARGING_STONE = 28
-	MATERIAL_SHINING_WEED = 29
-	MATERIAL_MAGIC_MASS = 30
-	MATERIAL_HUMAN_GENE = 31
-	MATERIAL_WITCHS_EYE = 32
-	MATERIAL_LEATHER = 33
-	MATERIAL_SAP_OF_YAGGDRASIL = 34
-	MATERIAL_MAGIC_PAPER = 35
-	MATERIAL_MAGIC_INK = 36
-	MATERIAL_CURVED_STICK = 37
-	MATERIAL_YELLING_MADMAN = 38
-	MATERIAL_BEARS_TAIL = 39
-	MATERIAL_100_YEN_COIN = 40
-	MATERIAL_500_YEN_COIN = 41
-	MATERIAL_MEDICINAL_WEED = 42
-	MATERIAL_PAPER = 43
-	MATERIAL_GENERATOR = 44
-	MATERIAL_CLOTH = 45
-	MATERIAL_BRANCH = 46
-	MATERIAL_THICK_WOOD = 47
-	MATERIAL_PEBBLE = 48
-	MATERIAL_MEMORY_FRAGMENT = 49
-	MATERIAL_MAGIC_FRAGMENT = 50
-	MATERIAL_CHAOS_STONE = 51
-	MATERIAL_FINE_STONE = 52
-	MATERIAL_VEIN = 53
-	MATERIAL_ADHESIVE = 54
-	MATERIAL_GOOD_PAPER = 55
-	MATERIAL_DURABLE_CLOTH = 56
-	MATERIAL_LOG = 57
-	MATERIAL_WHITE_WEED = 58
+	#define global	MATERIAL_GARBAGE	0
+	#define global	MATERIAL_CASINO_CHIP	1
+	#define global	MATERIAL_CHARCOAL	2
+	#define global	MATERIAL_DRIFTWOOD	3
+	#define global	MATERIAL_BIRDS_FEATHER	4
+	#define global	MATERIAL_WATERDROP	5
+	#define global	MATERIAL_STICK	6
+	#define global	MATERIAL_MITHRIL_FRAGMENT	7
+	#define global	MATERIAL_ETHER_FRAGMENT	8
+	#define global	MATERIAL_IRON_FRAGMENT	9
+	#define global	MATERIAL_ANGELS_TEAR	10
+	#define global	MATERIAL_WITCHS_TEAR	11
+	#define global	MATERIAL_SEAWATER	12
+	#define global	MATERIAL_HOWLING_WEED	13
+	#define global	MATERIAL_RED_WEED	14
+	#define global	MATERIAL_BLUE_WEED	15
+	#define global	MATERIAL_CURSE_WEED	16
+	#define global	MATERIAL_HOLY_WEED	17
+	#define global	MATERIAL_RABBITS_TAIL	18
+	#define global	MATERIAL_TROLL_GENE	19
+	#define global	MATERIAL_SNOW	20
+	#define global	MATERIAL_FAIRY_DUST	21
+	#define global	MATERIAL_ELEMENT_FRAGMENT	22
+	#define global	MATERIAL_ELECTRICITY	23
+	#define global	MATERIAL_BLACK_MIST	24
+	#define global	MATERIAL_HOT_WATER	25
+	#define global	MATERIAL_FIRE_STONE	26
+	#define global	MATERIAL_ICE_STONE	27
+	#define global	MATERIAL_DISCHARGING_STONE	28
+	#define global	MATERIAL_SHINING_WEED	29
+	#define global	MATERIAL_MAGIC_MASS	30
+	#define global	MATERIAL_HUMAN_GENE	31
+	#define global	MATERIAL_WITCHS_EYE	32
+	#define global	MATERIAL_LEATHER	33
+	#define global	MATERIAL_SAP_OF_YAGGDRASIL	34
+	#define global	MATERIAL_MAGIC_PAPER	35
+	#define global	MATERIAL_MAGIC_INK	36
+	#define global	MATERIAL_CURVED_STICK	37
+	#define global	MATERIAL_YELLING_MADMAN	38
+	#define global	MATERIAL_BEARS_TAIL	39
+	#define global	MATERIAL_100_YEN_COIN	40
+	#define global	MATERIAL_500_YEN_COIN	41
+	#define global	MATERIAL_MEDICINAL_WEED	42
+	#define global	MATERIAL_PAPER	43
+	#define global	MATERIAL_GENERATOR	44
+	#define global	MATERIAL_CLOTH	45
+	#define global	MATERIAL_BRANCH	46
+	#define global	MATERIAL_THICK_WOOD	47
+	#define global	MATERIAL_PEBBLE	48
+	#define global	MATERIAL_MEMORY_FRAGMENT	49
+	#define global	MATERIAL_MAGIC_FRAGMENT	50
+	#define global	MATERIAL_CHAOS_STONE	51
+	#define global	MATERIAL_FINE_STONE	52
+	#define global	MATERIAL_VEIN	53
+	#define global	MATERIAL_ADHESIVE	54
+	#define global	MATERIAL_GOOD_PAPER	55
+	#define global	MATERIAL_DURABLE_CLOTH	56
+	#define global	MATERIAL_LOG	57
+	#define global	MATERIAL_WHITE_WEED	58
 
-	MAX_MATERIAL = MATERIAL_WHITE_WEED
+	#define global	MAX_MATERIAL	MATERIAL_WHITE_WEED
 
-	MAX_MATERIAL_COUNT = 400
+	#define global	MAX_MATERIAL_COUNT	400
 
 	// MATREF
-	MATREF_LEVEL = 0
-	MATREF_RARITY = 1
-	MATREF_PIC = 2
+	#define global	MATREF_LEVEL	0
+	#define global	MATREF_RARITY	1
+	#define global	MATREF_PIC	2
 
 	// MTREF //
-	MTREF_WEIGHT = 0
-	MTREF_VALUE = 1
-	MTREF_ATTACK = 2
-	MTREF_DAMAGE = 3
-	MTREF_DV = 4
-	MTREF_PV = 5
-	MTREF_DICE = 6
-	MTREF_COL = 7
+	#define global	MTREF_WEIGHT	0
+	#define global	MTREF_VALUE	1
+	#define global	MTREF_ATTACK	2
+	#define global	MTREF_DAMAGE	3
+	#define global	MTREF_DV	4
+	#define global	MTREF_PV	5
+	#define global	MTREF_DICE	6
+	#define global	MTREF_COL	7
 
 	// ATX
-	ATX_RANDOM = 0
-	ATX_DUNGEON = 1
-	ATX_FOREST = 2
-	ATX_FIELD = 3
-	ATX_BUILDING = 4
-	ATX_WATER = 5
-	ATX_MINE = 6
-	ATX_BUSH = 7
-	ATX_REMAIN = 8
-	ATX_DUNGEON1 = 9
-	ATX_FOREST1 = 10
-	ATX_FIELD1 = 11
-	ATX_BUILDING1 = 12
-	ATX_WATER1 = 13
-	ATX_MINE1 = 14
-	ATX_BUSH1 = 15
-	ATX_REMAIN1 = 16
-	ATX_GEN1 = 17
-	ATX_GLOBAL1 = 18
-	ATX_GENERAL1 = 19
+	#define global	ATX_RANDOM	0
+	#define global	ATX_DUNGEON	1
+	#define global	ATX_FOREST	2
+	#define global	ATX_FIELD	3
+	#define global	ATX_BUILDING	4
+	#define global	ATX_WATER	5
+	#define global	ATX_MINE	6
+	#define global	ATX_BUSH	7
+	#define global	ATX_REMAIN	8
+	#define global	ATX_DUNGEON1	9
+	#define global	ATX_FOREST1	10
+	#define global	ATX_FIELD1	11
+	#define global	ATX_BUILDING1	12
+	#define global	ATX_WATER1	13
+	#define global	ATX_MINE1	14
+	#define global	ATX_BUSH1	15
+	#define global	ATX_REMAIN1	16
+	#define global	ATX_GEN1	17
+	#define global	ATX_GLOBAL1	18
+	#define global	ATX_GENERAL1	19
 
 	// Weapon wielding styles
-	STYLE_NONE = 0
-	STYLE_SHIELD = 1
-	STYLE_TWOHAND = 2
-	STYLE_DUAL_WIELD = 4
+	#define global	STYLE_NONE	0
+	#define global	STYLE_SHIELD	1
+	#define global	STYLE_TWOHAND	2
+	#define global	STYLE_DUAL_WIELD	4
 
 	// Character bits
-	RANGE_TEMP_CHARA_BIT = 30
-	MAX_CHARA_BIT = 50
+	#define global	RANGE_TEMP_CHARA_BIT	30
+	#define global	MAX_CHARA_BIT	50
 
-	CHARA_BIT_FLOAT = 5
-	CHARA_BIT_INVISIBLE = 6
-	CHARA_BIT_SEE_INVISIBLE = 7
-	CHARA_BIT_RES_CONFUSE = 8
-	CHARA_BIT_RES_BLIND = 9
-	CHARA_BIT_RES_FEAR = 10
-	CHARA_BIT_RES_SLEEP = 11
-	CHARA_BIT_RES_PARALYZE = 12
-	CHARA_BIT_RES_POISON = 13
-	CHARA_BIT_EAT_ROTTEN = 14
-	CHARA_BIT_RES_STEAL = 15
-	CHARA_BIT_INCOGNITO = 16
-	CHARA_BIT_DROP_GOLD = 17
-	CHARA_BIT_SUICIDE = 18
-	CHARA_BIT_DEATH_MASTER = 19
-	CHARA_BIT_RAPID_MAGIC = 20
-	CHARA_BIT_LAY_HANDS = 21
-	CHARA_BIT_SUPERIOR_RIDING = 22
-	CHARA_BIT_SPLIT_KEEP_EFFECT = 23
-	CHARA_BIT_RES_CURSE = 24
-	CHARA_BIT_INFERIOR_RIDING = 25
-	CHARA_BIT_RES_ELEMENTAL = 26
-	CHARA_BIT_SPLIT_NO_EFFECT = 27
-	CHARA_BIT_METAL = 28
-	CHARA_BIT_CURE_BLEEDING = 29
-	CHARA_BIT_BREAK_WALLS = 30
-	CHARA_BIT_IMMUNE_MINE = 31
-	CHARA_BIT_TEMPER = 32
-	CHARA_BIT_ARMOUR = 33
-	CHARA_BIT_QUICK_SHOOTING = 34
-
-	CHARA_BIT_LIVESTOCK = 960 // RANGE_TEMP_CHARA_BIT * 32
-	CHARA_BIT_MARRIED = 961
-	CHARA_BIT_MAKE_GENE = 962
-	CHARA_BIT_BODYGUARD = 963
-	CHARA_BIT_SUMMONED = 964
-	CHARA_BIT_SHUT_UP = 965
-	CHARA_BIT_STETHOSCOPE = 966
-	CHARA_BIT_PCC = 967
-	CHARA_BIT_LEASHED = 968
-	CHARA_BIT_HIRED = 969
-	CHARA_BIT_QUEST_TARGET = 970
-	CHARA_BIT_GUARD_TEMP = 971 // set on the puppy, which you must protect
-	CHARA_BIT_SUICIDE_SWITCH = 972
-	CHARA_BIT_DEATH_COUNT = 973
-	CHARA_BIT_EXCLUSIVE_SKILL_CHARGE = 974
-	CHARA_BIT_RIDE = 975
-	CHARA_BIT_PRECIOUS = 976
-	CHARA_BIT_HAS_NAME = 977
-	CHARA_BIT_PREGNANT = 978
-	CHARA_BIT_NO_TARGET = 979
-	CHARA_BIT_CONTINGENCY = 980
-	CHARA_BIT_REFRESH = 981
-	CHARA_BIT_EVENT_TALK = 982
-	CHARA_BIT_STONE_BLOOD = 983
-	CHARA_BIT_TOKEN_FRIEND = 984
-	CHARA_BIT_SANDBAG = 985
-	CHARA_BIT_ANOREXIA = 986
-	CHARA_BIT_POISON_FLAG = 987
-	CHARA_BIT_AI_SAVE_MANA = 988
-	CHARA_BIT_MSG_FILE = 989
-	CHARA_BIT_NO_GOD = 990
-	CHARA_BIT_FESTIVAL = 991
-	CHARA_BIT_NECRO = 992
-	CHARA_BIT_AWAKE_INSULT = 993
-	CHARA_BIT_AWAKE_CRYSTAL_SPEAR = 994
-	CHARA_BIT_AWAKE_TACTICAL_HEAL = 995
-	CHARA_BIT_AWAKE_DIMENSIONAL_MOVE = 996
-	CHARA_BIT_AWAKE_TACTICAL_ATTACK = 997
-	CHARA_BIT_AWAKE_TACTICAL_MARTIAL_ARTS = 998
-	CHARA_BIT_AWAKE_CHARGE_ATTACK = 999
-	CHARA_BIT_AWAKE_PROXIMITY_ATTACK = 1000
-	CHARA_BIT_AWAKE_RANGED_ATTACK = 1001
-	CHARA_BIT_AWAKE_DIM_ATTACKER = 1002
-	CHARA_BIT_AWAKE_NEAR_DEATH_EVASION = 1003
-	CHARA_BIT_AWAKE_NEAR_DEATH_DAMAGE = 1004
-	CHARA_BIT_AWAKE_MP_BARRIER = 1005
-	CHARA_BIT_AWAKE_PROVOKE = 1006
-	CHARA_BIT_AWAKE_TACTICAL_CURSE = 1007
-	CHARA_BIT_AWAKE_VARIABLE_BREATH = 1008
-	CHARA_BIT_AWAKE_VARIABLE_STORM = 1009
-	CHARA_BIT_UNKNOWN_1010 = 1010 //seems to be unused, probably some removed awakened ability
-	CHARA_BIT_ALTERED_LIMBS = 1011
-	CHARA_BIT_BRUSHED = 1012
-	CHARA_BIT_AWAKE_ZERO_SHOOT = 1013
-	CHARA_BIT_AWAKE_STRUCK_OUT = 1014
-	CHARA_BIT_CRADLE_15TH = 1015
-	CHARA_BIT_AWAKE_MAGIC_ATTACK = 1016
-	CHARA_BIT_BLUE_SPIRIT = 1017
-	CHARA_BIT_SQUEEZED = 1018
-	CHARA_BIT_GUEST = 1019
-	CHARA_BIT_SHOP_ELEGANCE = 1020
-	CHARA_BIT_SHOP_AESTHETIC_SENSE = 1021
-	CHARA_BIT_SHOP_SALES_ROUTE = 1022
-	CHARA_BIT_SHOP_STRONG_ALLY = 1023
-	CHARA_BIT_SHOP_BUSINESS_SMILE = 1024
-	CHARA_BIT_MARK_ITEM = 1025
+	#define global	CHARA_BIT_FLOAT	5
+	#define global	CHARA_BIT_INVISIBLE	6
+	#define global	CHARA_BIT_SEE_INVISIBLE	7
+	#define global	CHARA_BIT_RES_CONFUSE	8
+	#define global	CHARA_BIT_RES_BLIND	9
+	#define global	CHARA_BIT_RES_FEAR	10
+	#define global	CHARA_BIT_RES_SLEEP	11
+	#define global	CHARA_BIT_RES_PARALYZE	12
+	#define global	CHARA_BIT_RES_POISON	13
+	#define global	CHARA_BIT_EAT_ROTTEN	14
+	#define global	CHARA_BIT_RES_STEAL	15
+	#define global	CHARA_BIT_INCOGNITO	16
+	#define global	CHARA_BIT_DROP_GOLD	17
+	#define global	CHARA_BIT_SUICIDE	18
+	#define global	CHARA_BIT_DEATH_MASTER	19
+	#define global	CHARA_BIT_RAPID_MAGIC	20
+	#define global	CHARA_BIT_LAY_HANDS	21
+	#define global	CHARA_BIT_SUPERIOR_RIDING	22
+	#define global	CHARA_BIT_SPLIT_KEEP_EFFECT	23
+	#define global	CHARA_BIT_RES_CURSE	24
+	#define global	CHARA_BIT_INFERIOR_RIDING	25
+	#define global	CHARA_BIT_RES_ELEMENTAL	26
+	#define global	CHARA_BIT_SPLIT_NO_EFFECT	27
+	#define global	CHARA_BIT_METAL	28
+	#define global	CHARA_BIT_CURE_BLEEDING	29
+	#define global	CHARA_BIT_BREAK_WALLS	30
+	#define global	CHARA_BIT_IMMUNE_MINE	31
+	#define global	CHARA_BIT_TEMPER	32
+	#define global	CHARA_BIT_ARMOUR	33
+	#define global	CHARA_BIT_QUICK_SHOOTING	34
+
+	#define global	CHARA_BIT_LIVESTOCK	960 // RANGE_TEMP_CHARA_BIT * 32
+	#define global	CHARA_BIT_MARRIED	961
+	#define global	CHARA_BIT_MAKE_GENE	962
+	#define global	CHARA_BIT_BODYGUARD	963
+	#define global	CHARA_BIT_SUMMONED	964
+	#define global	CHARA_BIT_SHUT_UP	965
+	#define global	CHARA_BIT_STETHOSCOPE	966
+	#define global	CHARA_BIT_PCC	967
+	#define global	CHARA_BIT_LEASHED	968
+	#define global	CHARA_BIT_HIRED	969
+	#define global	CHARA_BIT_QUEST_TARGET	970
+	#define global	CHARA_BIT_GUARD_TEMP	971 // set on the puppy, which you must protect
+	#define global	CHARA_BIT_SUICIDE_SWITCH	972
+	#define global	CHARA_BIT_DEATH_COUNT	973
+	#define global	CHARA_BIT_EXCLUSIVE_SKILL_CHARGE	974
+	#define global	CHARA_BIT_RIDE	975
+	#define global	CHARA_BIT_PRECIOUS	976
+	#define global	CHARA_BIT_HAS_NAME	977
+	#define global	CHARA_BIT_PREGNANT	978
+	#define global	CHARA_BIT_NO_TARGET	979
+	#define global	CHARA_BIT_CONTINGENCY	980
+	#define global	CHARA_BIT_REFRESH	981
+	#define global	CHARA_BIT_EVENT_TALK	982
+	#define global	CHARA_BIT_STONE_BLOOD	983
+	#define global	CHARA_BIT_TOKEN_FRIEND	984
+	#define global	CHARA_BIT_SANDBAG	985
+	#define global	CHARA_BIT_ANOREXIA	986
+	#define global	CHARA_BIT_POISON_FLAG	987
+	#define global	CHARA_BIT_AI_SAVE_MANA	988
+	#define global	CHARA_BIT_MSG_FILE	989
+	#define global	CHARA_BIT_NO_GOD	990
+	#define global	CHARA_BIT_FESTIVAL	991
+	#define global	CHARA_BIT_NECRO	992
+	#define global	CHARA_BIT_AWAKE_INSULT	993
+	#define global	CHARA_BIT_AWAKE_CRYSTAL_SPEAR	994
+	#define global	CHARA_BIT_AWAKE_TACTICAL_HEAL	995
+	#define global	CHARA_BIT_AWAKE_DIMENSIONAL_MOVE	996
+	#define global	CHARA_BIT_AWAKE_TACTICAL_ATTACK	997
+	#define global	CHARA_BIT_AWAKE_TACTICAL_MARTIAL_ARTS	998
+	#define global	CHARA_BIT_AWAKE_CHARGE_ATTACK	999
+	#define global	CHARA_BIT_AWAKE_PROXIMITY_ATTACK	1000
+	#define global	CHARA_BIT_AWAKE_RANGED_ATTACK	1001
+	#define global	CHARA_BIT_AWAKE_DIM_ATTACKER	1002
+	#define global	CHARA_BIT_AWAKE_NEAR_DEATH_EVASION	1003
+	#define global	CHARA_BIT_AWAKE_NEAR_DEATH_DAMAGE	1004
+	#define global	CHARA_BIT_AWAKE_MP_BARRIER	1005
+	#define global	CHARA_BIT_AWAKE_PROVOKE	1006
+	#define global	CHARA_BIT_AWAKE_TACTICAL_CURSE	1007
+	#define global	CHARA_BIT_AWAKE_VARIABLE_BREATH	1008
+	#define global	CHARA_BIT_AWAKE_VARIABLE_STORM	1009
+	#define global	CHARA_BIT_UNKNOWN_1010	1010 //seems to be unused, probably some removed awakened ability
+	#define global	CHARA_BIT_ALTERED_LIMBS	1011
+	#define global	CHARA_BIT_BRUSHED	1012
+	#define global	CHARA_BIT_AWAKE_ZERO_SHOOT	1013
+	#define global	CHARA_BIT_AWAKE_STRUCK_OUT	1014
+	#define global	CHARA_BIT_CRADLE_15TH	1015
+	#define global	CHARA_BIT_AWAKE_MAGIC_ATTACK	1016
+	#define global	CHARA_BIT_BLUE_SPIRIT	1017
+	#define global	CHARA_BIT_SQUEEZED	1018
+	#define global	CHARA_BIT_GUEST	1019
+	#define global	CHARA_BIT_SHOP_ELEGANCE	1020
+	#define global	CHARA_BIT_SHOP_AESTHETIC_SENSE	1021
+	#define global	CHARA_BIT_SHOP_SALES_ROUTE	1022
+	#define global	CHARA_BIT_SHOP_STRONG_ALLY	1023
+	#define global	CHARA_BIT_SHOP_BUSINESS_SMILE	1024
+	#define global	CHARA_BIT_MARK_ITEM	1025
 
 	// Database modes
-	DBMODE_NONE = 0
-	DBMODE_FIND = 1
-	DBMODE_REF = 2
-	DBMODE_SET = 3
-	DBMODE_INITIAL_EQUIP = 4
-	DBMODE_REF_EAT = 5
-	DBMODE_REF_READ = 6
-	DBMODE_REF_ZAP = 7
-	DBMODE_REF_DRINK = 8
-	DBMODE_REF_PLAYABLE = 9
-	DBMODE_SET_STATS = 10
-	DBMODE_REF_CM = 11
-	DBMODE_ON_EAT = 12
-	DBMODE_ON_READ = 13
-	DBMODE_ON_ZAP = 14
-	DBMODE_ON_DRINK = 15
-	DBMODE_REF_SPEC = 16
-	DBMODE_DESC = 17
+	#define global	DBMODE_NONE	0
+	#define global	DBMODE_FIND	1
+	#define global	DBMODE_REF	2
+	#define global	DBMODE_SET	3
+	#define global	DBMODE_INITIAL_EQUIP	4
+	#define global	DBMODE_REF_EAT	5
+	#define global	DBMODE_REF_READ	6
+	#define global	DBMODE_REF_ZAP	7
+	#define global	DBMODE_REF_DRINK	8
+	#define global	DBMODE_REF_PLAYABLE	9
+	#define global	DBMODE_SET_STATS	10
+	#define global	DBMODE_REF_CM	11
+	#define global	DBMODE_ON_EAT	12
+	#define global	DBMODE_ON_READ	13
+	#define global	DBMODE_ON_ZAP	14
+	#define global	DBMODE_ON_DRINK	15
+	#define global	DBMODE_REF_SPEC	16
+	#define global	DBMODE_DESC	17
 
 	// Flavor text modes
-	DBMODE_FLAVOR_PASSIVE = 100
-	DBMODE_FLAVOR_ANGERED = 101
-	DBMODE_FLAVOR_DEATH = 102
-	DBMODE_FLAVOR_KILL = 103
-	DBMODE_FLAVOR_WELCOME = 104
-
-	DBMODE_FLAVOR_DIALOG = 106
-	DBMODE_FLAVOR_NIGHT = 107
-	DBMODE_FLAVOR_INSULT = 108
-	DBMODE_FLAVOR_KISS = 109
-	DBMODE_FLAVOR_CHOCO = 110
-	DBMODE_FLAVOR_DISCIPLINE = 111
-	DBMODE_FLAVOR_DISCIPLINE_OFF = 112
-	DBMODE_FLAVOR_DISCIPLINE_EAT = 113
-	DBMODE_FLAVOR_CHARGE = 114
-	DBMODE_FLAVOR_KIZUNA = 115
-	DBMODE_FLAVOR_CHARGE_S = 116
-	DBMODE_FLAVOR_CHARGE_A = 117
-	DBMODE_FLAVOR_NADE = 118
-	DBMODE_FLAVOR_SPECIAL = 119
-	DBMODE_FLAVOR_HUG = 120
-	DBMODE_FLAVOR_MIDNIGHT = 121
-	DBMODE_FLAVOR_DISCIPLINE2 = 122
-	DBMODE_FLAVOR_INSULT2 = 123
-	DBMODE_FLAVOR_RIDE_OFF = 124
-	DBMODE_FLAVOR_RIDE_OFF_PC = 125
-	DBMODE_FLAVOR_RIDE_ON = 126
-	DBMODE_FLAVOR_RIDE_ON_PC = 127
-	DBMODE_FLAVOR_FAWN_ON = 128
-	DBMODE_FLAVOR_LIMIT = 129
-	DBMODE_FLAVOR_BREAKFAST = 130
-	DBMODE_FLAVOR_MATERIAL = 131
-	DBMODE_FLAVOR_MULTIPLE = 132
-	DBMODE_FLAVOR_DRAIN = 133
-	DBMODE_FLAVOR_CREATE = 134
-	DBMODE_FLAVOR_EX_ACT = 135
-	DBMODE_FLAVOR_EX_REACT = 136
-	DBMODE_FLAVOR_DIALOG_B = 137
-	DBMODE_FLAVOR_DIALOG_E = 138
-	DBMODE_FLAVOR_DIALOG_F = 139
-	DBMODE_FLAVOR_DIALOG_H = 140
-	DBMODE_FLAVOR_MEAL = 141
-	DBMODE_FLAVOR_SHIFT = 142
-	DBMODE_FLAVOR_BTALK = 143
+	#define global	DBMODE_FLAVOR_PASSIVE	100
+	#define global	DBMODE_FLAVOR_ANGERED	101
+	#define global	DBMODE_FLAVOR_DEATH	102
+	#define global	DBMODE_FLAVOR_KILL	103
+	#define global	DBMODE_FLAVOR_WELCOME	104
+
+	#define global	DBMODE_FLAVOR_DIALOG	106
+	#define global	DBMODE_FLAVOR_NIGHT	107
+	#define global	DBMODE_FLAVOR_INSULT	108
+	#define global	DBMODE_FLAVOR_KISS	109
+	#define global	DBMODE_FLAVOR_CHOCO	110
+	#define global	DBMODE_FLAVOR_DISCIPLINE	111
+	#define global	DBMODE_FLAVOR_DISCIPLINE_OFF	112
+	#define global	DBMODE_FLAVOR_DISCIPLINE_EAT	113
+	#define global	DBMODE_FLAVOR_CHARGE	114
+	#define global	DBMODE_FLAVOR_KIZUNA	115
+	#define global	DBMODE_FLAVOR_CHARGE_S	116
+	#define global	DBMODE_FLAVOR_CHARGE_A	117
+	#define global	DBMODE_FLAVOR_NADE	118
+	#define global	DBMODE_FLAVOR_SPECIAL	119
+	#define global	DBMODE_FLAVOR_HUG	120
+	#define global	DBMODE_FLAVOR_MIDNIGHT	121
+	#define global	DBMODE_FLAVOR_DISCIPLINE2	122
+	#define global	DBMODE_FLAVOR_INSULT2	123
+	#define global	DBMODE_FLAVOR_RIDE_OFF	124
+	#define global	DBMODE_FLAVOR_RIDE_OFF_PC	125
+	#define global	DBMODE_FLAVOR_RIDE_ON	126
+	#define global	DBMODE_FLAVOR_RIDE_ON_PC	127
+	#define global	DBMODE_FLAVOR_FAWN_ON	128
+	#define global	DBMODE_FLAVOR_LIMIT	129
+	#define global	DBMODE_FLAVOR_BREAKFAST	130
+	#define global	DBMODE_FLAVOR_MATERIAL	131
+	#define global	DBMODE_FLAVOR_MULTIPLE	132
+	#define global	DBMODE_FLAVOR_DRAIN	133
+	#define global	DBMODE_FLAVOR_CREATE	134
+	#define global	DBMODE_FLAVOR_EX_ACT	135
+	#define global	DBMODE_FLAVOR_EX_REACT	136
+	#define global	DBMODE_FLAVOR_DIALOG_B	137
+	#define global	DBMODE_FLAVOR_DIALOG_E	138
+	#define global	DBMODE_FLAVOR_DIALOG_F	139
+	#define global	DBMODE_FLAVOR_DIALOG_H	140
+	#define global	DBMODE_FLAVOR_MEAL	141
+	#define global	DBMODE_FLAVOR_SHIFT	142
+	#define global	DBMODE_FLAVOR_BTALK	143
 
 	// Database specs
-	DBSPEC_CAN_READ = 2
-	DBSPEC_CAN_ZAP = 3
-	DBSPEC_CAN_DRINK = 4
-	DBSPEC_TYPE = 5
-	DBSPEC_OBJ_LEVEL = 7
-	DBSPEC_RARE_LEVEL = 8
-	DBSPEC_TYPE_MINOR = 9
-	DBSPEC_CARGO = 10
-	DBSPEC_CAN_USE = 11
-	DBSPEC_OFFER = 12
-	DBSPEC_PCC = 18
-	DBSPEC_PARAM3_ORG = 19
-	DBSPEC_VALUE_ORG = 20
-
-	DBSPEC_CHARA_NONE = 1
-	DBSPEC_CHARA_NAME_ORG = 2
-	DBSPEC_CHARA_LOOT = 3
-	DBSPEC_CLASS_EQUIP_TYPE = 4
-	DBSPEC_CHARA_COL = 5
-	DBSPEC_CHARA_RARE = 6
-	DBSPEC_RACE_BLOOD = 7
-	DBSPEC_CHARA_FILTER = 8
-	DBSPEC_RACE_BREEDER = 9
+	#define global	DBSPEC_CAN_READ	2
+	#define global	DBSPEC_CAN_ZAP	3
+	#define global	DBSPEC_CAN_DRINK	4
+	#define global	DBSPEC_TYPE	5
+	#define global	DBSPEC_OBJ_LEVEL	7
+	#define global	DBSPEC_RARE_LEVEL	8
+	#define global	DBSPEC_TYPE_MINOR	9
+	#define global	DBSPEC_CARGO	10
+	#define global	DBSPEC_CAN_USE	11
+	#define global	DBSPEC_OFFER	12
+	#define global	DBSPEC_PCC	18
+	#define global	DBSPEC_PARAM3_ORG	19
+	#define global	DBSPEC_VALUE_ORG	20
+
+	#define global	DBSPEC_CHARA_NONE	1
+	#define global	DBSPEC_CHARA_NAME_ORG	2
+	#define global	DBSPEC_CHARA_LOOT	3
+	#define global	DBSPEC_CLASS_EQUIP_TYPE	4
+	#define global	DBSPEC_CHARA_COL	5
+	#define global	DBSPEC_CHARA_RARE	6
+	#define global	DBSPEC_RACE_BLOOD	7
+	#define global	DBSPEC_CHARA_FILTER	8
+	#define global	DBSPEC_RACE_BREEDER	9
 
 	// Enchants
-	STARTING_ENCHANT_NORMAL = 20
-	MAX_ENCHANTMENT_LEVEL = 4
-	MAX_EHCHANTMENT_PROC = 27 + 1
-
-	MAX_ITEM_MATERIAL_ENCHANT = 8
-
-	ENCHANT_NONE = 0
-	ENCHANT_ATTRIBUTE = 1
-	ENCHANT_RESISTANCE = 2
-	ENCHANT_SKILL = 3
-	ENCHANT_SPELL = 4
-
-	ENCHANT_SUSTAIN = 6
-	ENCHANT_ELEMENTAL_DMG = 7
-	ENCHANT_PROC = 8
-	ENCHANT_AMMO = 9
-	ENCHANT_FOOD = 10
-
-	ENCHANT_AMMO_RAPID = 0
-	ENCHANT_AMMO_EXPLOSIVE = 1
-	ENCHANT_AMMO_PIERCING = 2
-	ENCHANT_AMMO_MAGIC = 3
-	ENCHANT_AMMO_TIME_STOP = 4
-	ENCHANT_AMMO_BURST = 5
-	ENCHANT_AMMO_MAX = 6
-
-	ENCHANT_RANDOM_TELEPORT = 21
-	ENCHANT_PREVENT_TELEPORT = 22
-	ENCHANT_RES_BLIND = 23
-	ENCHANT_RES_PARALYZE = 24
-	ENCHANT_RES_CONFUSE = 25
-	ENCHANT_RES_FEAR = 26
-	ENCHANT_RES_SLEEP = 27
-	ENCHANT_RES_POISON = 28
-	ENCHANT_FAST_TRAVEL = 29
-	ENCHANT_RES_ETHERWIND = 30
-	ENCHANT_RES_WEATHER = 31
-	ENCHANT_FLOAT = 32
-	ENCHANT_RES_MUTATION = 33
-	ENCHANT_ENHANCE_SPELL = 34
-	ENCHANT_SEE_INVISIBLE = 35
-	ENCHANT_ABSORB_STAMINA = 36
-	ENCHANT_RAGNAROK = 37
-	ENCHANT_ABSORB_MP = 38
-	ENCHANT_PIERCING_CHANCE = 39
-	ENCHANT_TIME_STOP = 40
-	ENCHANT_RES_STEAL = 41
-	ENCHANT_EAT_ROTTEN = 42
-	ENCHANT_RES_CURSE = 43
-	ENCHANT_CRIT_CHANCE = 44
-	ENCHANT_SUCK_BLOOD = 45
-	ENCHANT_DISTURB_GROWTH = 46
-	ENCHANT_ATTRACT_MONSTER = 47
-	ENCHANT_RES_PREGNANCY = 48
-	ENCHANT_REWARD_QUALITY = 49
-	ENCHANT_EXTRA_MELEE = 50
-	ENCHANT_EXTRA_RANGED = 51
-	ENCHANT_RES_PHYSICAL = 52
-	ENCHANT_IMMUNE_DAMAGE = 53
-	ENCHANT_REFLECT_DAMAGE = 54
-	ENCHANT_CURE_BLEEDING = 55
-	ENCHANT_GOD_SIGNALS = 56
-	ENCHANT_BANE_DRAGON = 57
-	ENCHANT_BANE_UNDEAD = 58
-	ENCHANT_SHOW_RELIGION = 59
-	ENCHANT_DRUNK_LISTENER = 60
-	ENCHANT_BANE_GOD = 61
-	ENCHANT_REFLECT_MAGIC = 62
-	ENCHANT_REMOTE_BLOW = 63
-	ENCHANT_DEC_ENEMY_CRIT_CHANCE = 64
-	ENCHANT_SHOOTING_MECHANISM = 65
-	ENCHANT_PROXIMITY_ASSIST = 66
-	ENCHANT_MANA_TO_ATTACK = 67
-	ENCHANT_ENHANCE_BREATH = 68
-	ENCHANT_ROCK_THROWING = 69
-	ENCHANT_QUICK_SHOOTING = 70
-	ENCHANT_CHARGING = 71
-	ENCHANT_SUCK_MP = 72
-	ENCHANT_FIRE_AND_COLD = 73
-	ENCHANT_MIND_AND_SOUND = 74
-	ENCHANT_POISON_AND_NERVE = 75
-	ENCHANT_BANE_FLYING = 76
-
-	MAX_ENCHANTMENT = ENCHANT_BANE_FLYING + 1
-
-	ENCHANT_PROC_ELEMENT_SCAR = 0
-	ENCHANT_PROC_DRAW_SHADOW = 1
-	ENCHANT_PROC_NIGHTMARE = 2
-	ENCHANT_PROC_RAGING_ROAR = 3
-	ENCHANT_PROC_CHAOS_BALL = 4
-	ENCHANT_PROC_LULWYS_TRICK = 5
-	ENCHANT_PROC_DIMENSIONAL_MOVE = 6
-	ENCHANT_PROC_FEATHER = 7
-	ENCHANT_PROC_LIGHTNING_BREATH = 8
-	ENCHANT_PROC_NERVE_BREATH = 9
-	ENCHANT_PROC_NETHER_BREATH = 10
-	ENCHANT_PROC_DIVINE_WISDOM = 11
-	ENCHANT_PROC_HOLY_VEIL = 12
-	ENCHANT_PROC_HERO = 13
-	ENCHANT_PROC_SPEED = 14
-	ENCHANT_PROC_REGENERATION = 15
-	ENCHANT_PROC_HOLY_SHIELD = 16
-	ENCHANT_PROC_MIST_OF_SILENCE = 17
-	ENCHANT_PROC_WEB = 18
-	ENCHANT_PROC_LIGHTNING_BOLT = 19
-	ENCHANT_PROC_DARKNESS_BOLT = 20
-	ENCHANT_PROC_MIND_BOLT = 21
-	ENCHANT_PROC_ICE_BOLT = 22
-	ENCHANT_PROC_HEALING_RAIN = 23
-	ENCHANT_PROC_GRENADE = 24
-	ENCHANT_PROC_DECAPITATION = 25
-	ENCHANT_PROC_GRAVITY_SPHERE = 26
-	ENCHANT_PROC_SHINING_WAVE = 27
+	#define global	STARTING_ENCHANT_NORMAL	20
+	#define global	MAX_ENCHANTMENT_LEVEL	4
+	#define global	MAX_EHCHANTMENT_PROC	(27 + 1)
+
+	#define global	MAX_ITEM_MATERIAL_ENCHANT	8
+
+	#define global	ENCHANT_NONE	0
+	#define global	ENCHANT_ATTRIBUTE	1
+	#define global	ENCHANT_RESISTANCE	2
+	#define global	ENCHANT_SKILL	3
+	#define global	ENCHANT_SPELL	4
+
+	#define global	ENCHANT_SUSTAIN	6
+	#define global	ENCHANT_ELEMENTAL_DMG	7
+	#define global	ENCHANT_PROC	8
+	#define global	ENCHANT_AMMO	9
+	#define global	ENCHANT_FOOD	10
+
+	#define global	ENCHANT_AMMO_RAPID	0
+	#define global	ENCHANT_AMMO_EXPLOSIVE	1
+	#define global	ENCHANT_AMMO_PIERCING	2
+	#define global	ENCHANT_AMMO_MAGIC	3
+	#define global	ENCHANT_AMMO_TIME_STOP	4
+	#define global	ENCHANT_AMMO_BURST	5
+	#define global	ENCHANT_AMMO_MAX	6
+
+	#define global	ENCHANT_RANDOM_TELEPORT	21
+	#define global	ENCHANT_PREVENT_TELEPORT	22
+	#define global	ENCHANT_RES_BLIND	23
+	#define global	ENCHANT_RES_PARALYZE	24
+	#define global	ENCHANT_RES_CONFUSE	25
+	#define global	ENCHANT_RES_FEAR	26
+	#define global	ENCHANT_RES_SLEEP	27
+	#define global	ENCHANT_RES_POISON	28
+	#define global	ENCHANT_FAST_TRAVEL	29
+	#define global	ENCHANT_RES_ETHERWIND	30
+	#define global	ENCHANT_RES_WEATHER	31
+	#define global	ENCHANT_FLOAT	32
+	#define global	ENCHANT_RES_MUTATION	33
+	#define global	ENCHANT_ENHANCE_SPELL	34
+	#define global	ENCHANT_SEE_INVISIBLE	35
+	#define global	ENCHANT_ABSORB_STAMINA	36
+	#define global	ENCHANT_RAGNAROK	37
+	#define global	ENCHANT_ABSORB_MP	38
+	#define global	ENCHANT_PIERCING_CHANCE	39
+	#define global	ENCHANT_TIME_STOP	40
+	#define global	ENCHANT_RES_STEAL	41
+	#define global	ENCHANT_EAT_ROTTEN	42
+	#define global	ENCHANT_RES_CURSE	43
+	#define global	ENCHANT_CRIT_CHANCE	44
+	#define global	ENCHANT_SUCK_BLOOD	45
+	#define global	ENCHANT_DISTURB_GROWTH	46
+	#define global	ENCHANT_ATTRACT_MONSTER	47
+	#define global	ENCHANT_RES_PREGNANCY	48
+	#define global	ENCHANT_REWARD_QUALITY	49
+	#define global	ENCHANT_EXTRA_MELEE	50
+	#define global	ENCHANT_EXTRA_RANGED	51
+	#define global	ENCHANT_RES_PHYSICAL	52
+	#define global	ENCHANT_IMMUNE_DAMAGE	53
+	#define global	ENCHANT_REFLECT_DAMAGE	54
+	#define global	ENCHANT_CURE_BLEEDING	55
+	#define global	ENCHANT_GOD_SIGNALS	56
+	#define global	ENCHANT_BANE_DRAGON	57
+	#define global	ENCHANT_BANE_UNDEAD	58
+	#define global	ENCHANT_SHOW_RELIGION	59
+	#define global	ENCHANT_DRUNK_LISTENER	60
+	#define global	ENCHANT_BANE_GOD	61
+	#define global	ENCHANT_REFLECT_MAGIC	62
+	#define global	ENCHANT_REMOTE_BLOW	63
+	#define global	ENCHANT_DEC_ENEMY_CRIT_CHANCE	64
+	#define global	ENCHANT_SHOOTING_MECHANISM	65
+	#define global	ENCHANT_PROXIMITY_ASSIST	66
+	#define global	ENCHANT_MANA_TO_ATTACK	67
+	#define global	ENCHANT_ENHANCE_BREATH	68
+	#define global	ENCHANT_ROCK_THROWING	69
+	#define global	ENCHANT_QUICK_SHOOTING	70
+	#define global	ENCHANT_CHARGING	71
+	#define global	ENCHANT_SUCK_MP	72
+	#define global	ENCHANT_FIRE_AND_COLD	73
+	#define global	ENCHANT_MIND_AND_SOUND	74
+	#define global	ENCHANT_POISON_AND_NERVE	75
+	#define global	ENCHANT_BANE_FLYING	76
+
+	#define global	MAX_ENCHANTMENT	(ENCHANT_BANE_FLYING + 1)
+
+	#define global	ENCHANT_PROC_ELEMENT_SCAR	0
+	#define global	ENCHANT_PROC_DRAW_SHADOW	1
+	#define global	ENCHANT_PROC_NIGHTMARE	2
+	#define global	ENCHANT_PROC_RAGING_ROAR	3
+	#define global	ENCHANT_PROC_CHAOS_BALL	4
+	#define global	ENCHANT_PROC_LULWYS_TRICK	5
+	#define global	ENCHANT_PROC_DIMENSIONAL_MOVE	6
+	#define global	ENCHANT_PROC_FEATHER	7
+	#define global	ENCHANT_PROC_LIGHTNING_BREATH	8
+	#define global	ENCHANT_PROC_NERVE_BREATH	9
+	#define global	ENCHANT_PROC_NETHER_BREATH	10
+	#define global	ENCHANT_PROC_DIVINE_WISDOM	11
+	#define global	ENCHANT_PROC_HOLY_VEIL	12
+	#define global	ENCHANT_PROC_HERO	13
+	#define global	ENCHANT_PROC_SPEED	14
+	#define global	ENCHANT_PROC_REGENERATION	15
+	#define global	ENCHANT_PROC_HOLY_SHIELD	16
+	#define global	ENCHANT_PROC_MIST_OF_SILENCE	17
+	#define global	ENCHANT_PROC_WEB	18
+	#define global	ENCHANT_PROC_LIGHTNING_BOLT	19
+	#define global	ENCHANT_PROC_DARKNESS_BOLT	20
+	#define global	ENCHANT_PROC_MIND_BOLT	21
+	#define global	ENCHANT_PROC_ICE_BOLT	22
+	#define global	ENCHANT_PROC_HEALING_RAIN	23
+	#define global	ENCHANT_PROC_GRENADE	24
+	#define global	ENCHANT_PROC_DECAPITATION	25
+	#define global	ENCHANT_PROC_GRAVITY_SPHERE	26
+	#define global	ENCHANT_PROC_SHINING_WAVE	27
 
-	MAX_ENCHANT_PROC = ENCHANT_PROC_SHINING_WAVE + 1
+	#define global	MAX_ENCHANT_PROC	(ENCHANT_PROC_SHINING_WAVE + 1)
 
 	// Equip type
-	EQUIP_TYPE_NOTHING = 0
-	EQUIP_TYPE_WARRIOR = 1
-	EQUIP_TYPE_MAGE = 2
-	EQUIP_TYPE_ARCHER = 3
-	EQUIP_TYPE_GUNNER = 4
-	EQUIP_TYPE_WARMAGE = 5
-	EQUIP_TYPE_PRIEST = 6
-	EQUIP_TYPE_THIEF = 7
-	EQUIP_TYPE_CLAYMORE = 8
+	#define global	EQUIP_TYPE_NOTHING	0
+	#define global	EQUIP_TYPE_WARRIOR	1
+	#define global	EQUIP_TYPE_MAGE	2
+	#define global	EQUIP_TYPE_ARCHER	3
+	#define global	EQUIP_TYPE_GUNNER	4
+	#define global	EQUIP_TYPE_WARMAGE	5
+	#define global	EQUIP_TYPE_PRIEST	6
+	#define global	EQUIP_TYPE_THIEF	7
+	#define global	EQUIP_TYPE_CLAYMORE	8
 
 	// Loot type
-	LOOT_TYPE_NONE = 0
-	LOOT_TYPE_ANIMAL = 1
-	LOOT_TYPE_INSECT = 2
-	LOOT_TYPE_HUMANOID = 3
-	LOOT_TYPE_DRAKE = 4
-	LOOT_TYPE_DRAGON = 5
-	LOOT_TYPE_LICH = 6
+	#define global	LOOT_TYPE_NONE	0
+	#define global	LOOT_TYPE_ANIMAL	1
+	#define global	LOOT_TYPE_INSECT	2
+	#define global	LOOT_TYPE_HUMANOID	3
+	#define global	LOOT_TYPE_DRAKE	4
+	#define global	LOOT_TYPE_DRAGON	5
+	#define global	LOOT_TYPE_LICH	6
 
 	// EXTs
-	EXT_EQUIP_SLOTS = 10000
-	EXT_FOOD = 1000
-	EXT_SDATAREF = 1000
-	EXT_ENCHANTMENT = 10000
-	EXT_ENCHANTMENT_AMMO = 1000
-	EXT_TARGET_TYPE = 1000
-	EXT_RECIPES = 100000
-	EXT_RPACTION = 10000
-	EXT_RF = 9000
-	EXT_RP = 400
-	EXT_FLT = 10000
+	#define global	EXT_EQUIP_SLOTS	10000
+	#define global	EXT_FOOD	1000
+	#define global	EXT_SDATAREF	1000
+	#define global	EXT_ENCHANTMENT	10000
+	#define global	EXT_ENCHANTMENT_AMMO	1000
+	#define global	EXT_TARGET_TYPE	1000
+	#define global	EXT_RECIPES	100000
+	#define global	EXT_RPACTION	10000
+	#define global	EXT_RF	9000
+	#define global	EXT_RP	400
+	#define global	EXT_FLT	10000
 
 	// RPDATA - RPDATAN - RFNAMEORG //
-	STARTING_RPID = 200
+	#define global	STARTING_RPID	200
 
-	RPDATA_ITEM = 0
-	RPDATA_TIME = 1
-	RPDATA_TYPE = 2 // 1 = don't consume first material, 2 is the same but repeatedly uses the first material
-	RPDATA_SOURCE = 5
-	RPDATA_SKILL = 10
-	RPDATA_SKILL_REQ = 11
-	RPDATA_MAT = 20
-	RPDATA_EQ = 30
-	RPDATA_MAT_EXT = 40
-	RPDATA_ENC = 50
-	RPDATA_ENC_POW = 51
+	#define global	RPDATA_ITEM	0
+	#define global	RPDATA_TIME	1
+	#define global	RPDATA_TYPE	2 // 1 = don't consume first material, 2 is the same but repeatedly uses the first material
+	#define global	RPDATA_SOURCE	5
+	#define global	RPDATA_SKILL	10
+	#define global	RPDATA_SKILL_REQ	11
+	#define global	RPDATA_MAT	20
+	#define global	RPDATA_EQ	30
+	#define global	RPDATA_MAT_EXT	40
+	#define global	RPDATA_ENC	50
+	#define global	RPDATA_ENC_POW	51
 
-	RPDATAN_NAME = 0
+	#define global	RPDATAN_NAME	0
 
-	RFNAMEORG_ID = 0
-	RFNAMEORG_NAME = 1
+	#define global	RFNAMEORG_ID	0
+	#define global	RFNAMEORG_NAME	1
 
 	// RF IDs
-	RF_FLAVOR = EXT_RF + 1
-	RF_ORE = EXT_RF + 2
-	RF_WOOD = EXT_RF + 3
-	RF_ANY = EXT_RF + 4
-	RF_FISH = EXT_RF + 5
-	RF_EVITEM = EXT_RF + 6
-	RF_HERB = EXT_RF + 7
-	RF_SEED = EXT_RF + 8
-	RF_VEGE = EXT_RF + 9
-	RF_DIARY = EXT_RF + 10
-	RF_POISON = EXT_RF + 11
-	RF_FRUIT = EXT_RF + 12
-	RF_BREAD = EXT_RF + 13
-	RF_ALE = EXT_RF + 14
-	RF_MAGI = EXT_RF + 15
-	RF_MAKENN = EXT_RF + 16
-	RF_FLOWER = EXT_RF + 17
-	RF_BONE = EXT_RF + 18
-	RF_METAL = EXT_RF + 19
-	RF_SOFT = EXT_RF + 20
-	RF_SHARP = EXT_RF + 21
-	RF_COFFIN = EXT_RF + 22
-	RF_BAIT = EXT_RF + 23
-	RF_BARREL = EXT_RF + 24
-	RF_LEAF = EXT_RF + 25
-	RF_DISINFECTANT = EXT_RF + 26
+	#define global	RF_FLAVOR	(EXT_RF + 1)
+	#define global	RF_ORE	(EXT_RF + 2)
+	#define global	RF_WOOD	(EXT_RF + 3)
+	#define global	RF_ANY	(EXT_RF + 4)
+	#define global	RF_FISH	(EXT_RF + 5)
+	#define global	RF_EVITEM	(EXT_RF + 6)
+	#define global	RF_HERB	(EXT_RF + 7)
+	#define global	RF_SEED	(EXT_RF + 8)
+	#define global	RF_VEGE	(EXT_RF + 9)
+	#define global	RF_DIARY	(EXT_RF + 10)
+	#define global	RF_POISON	(EXT_RF + 11)
+	#define global	RF_FRUIT	(EXT_RF + 12)
+	#define global	RF_BREAD	(EXT_RF + 13)
+	#define global	RF_ALE	(EXT_RF + 14)
+	#define global	RF_MAGI	(EXT_RF + 15)
+	#define global	RF_MAKENN	(EXT_RF + 16)
+	#define global	RF_FLOWER	(EXT_RF + 17)
+	#define global	RF_BONE	(EXT_RF + 18)
+	#define global	RF_METAL	(EXT_RF + 19)
+	#define global	RF_SOFT	(EXT_RF + 20)
+	#define global	RF_SHARP	(EXT_RF + 21)
+	#define global	RF_COFFIN	(EXT_RF + 22)
+	#define global	RF_BAIT	(EXT_RF + 23)
+	#define global	RF_BARREL	(EXT_RF + 24)
+	#define global	RF_LEAF	(EXT_RF + 25)
+	#define global	RF_DISINFECTANT	(EXT_RF + 26)
 
-	MAX_RF = RF_DISINFECTANT + 1
+	#define global	MAX_RF	(RF_DISINFECTANT + 1)
 
 	// RP actions
-	RPACTION_LOVE = EXT_RPACTION
-	RPACTION_DYE = EXT_RPACTION + 1
-	RPACTION_POISON = EXT_RPACTION + 2
-	RPACTION_FIRE_PROOF = EXT_RPACTION + 3
-	RPACTION_ACID_PROOF = EXT_RPACTION + 4
-	RPACTION_BAIT = EXT_RPACTION + 5
-	RPACTION_BLESS = EXT_RPACTION + 6
-	RPACTION_WELL = EXT_RPACTION + 7
-	RPACTION_WELL_DRAW = EXT_RPACTION + 8
-	RPACTION_FUSION = EXT_RPACTION + 9
+	#define global	RPACTION_LOVE	EXT_RPACTION
+	#define global	RPACTION_DYE	(EXT_RPACTION + 1)
+	#define global	RPACTION_POISON	(EXT_RPACTION + 2)
+	#define global	RPACTION_FIRE_PROOF	(EXT_RPACTION + 3)
+	#define global	RPACTION_ACID_PROOF	(EXT_RPACTION + 4)
+	#define global	RPACTION_BAIT	(EXT_RPACTION + 5)
+	#define global	RPACTION_BLESS	(EXT_RPACTION + 6)
+	#define global	RPACTION_WELL	(EXT_RPACTION + 7)
+	#define global	RPACTION_WELL_DRAW	(EXT_RPACTION + 8)
+	#define global	RPACTION_FUSION	(EXT_RPACTION + 9)
 
 	// Recipes
-	STARTING_RECIPE_BLEND_ACTION = 10000
+	#define global	STARTING_RECIPE_BLEND_ACTION	10000
 
-	RECIPE_BLEND_ACTION_HERBED_FOOD = STARTING_RECIPE_BLEND_ACTION
-	RECIPE_BLEND_ACTION_ANOTHER_HEART = 10001
-	RECIPE_BLEND_ACTION_COFFIN = 10002
-	RECIPE_BLEND_ACTION_FIRE_FROOF = 10003
-	RECIPE_BLEND_ACTION_ACID_PROOF = 10004
-	RECIPE_BLEND_ACTION_BAIT = 10005
-	RECIPE_BLEND_ACTION_BLESS = 10006
-	RECIPE_BLEND_ACTION_WELL = 10007
-	RECIPE_BLEND_ACTION_WELL_DRAW = 10008
-	RECIPE_BLEND_ACTION_INSTANT_ALE = 10010
-	RECIPE_BLEND_ACTION_WOODCRAFT = 10011
-	RECIPE_BLEND_ACTION_STONECRAFT = 10012
-	RECIPE_BLEND_ACTION_NECRO_REMODEL = 10013
-	RECIPE_BLEND_ACTION_SOFT_EQUIP_UPDATE = 10014
-	RECIPE_BLEND_ACTION_HARD_EQUIP_UPDATE = 10015
-	RECIPE_BLEND_ACTION_SHARP_EQUIP_UPDATE = 10016
-	RECIPE_BLEND_ACTION_MEAT_FILLING = 10020
-	RECIPE_BLEND_ACTION_BARREL_BOMB = 10021
-	RECIPE_BLEND_ACTION_POTTERY = 10022
-	RECIPE_BLEND_ACTION_BIOLOGICAL_RESTORATION = 10023
+	#define global	RECIPE_BLEND_ACTION_HERBED_FOOD	STARTING_RECIPE_BLEND_ACTION
+	#define global	RECIPE_BLEND_ACTION_ANOTHER_HEART	10001
+	#define global	RECIPE_BLEND_ACTION_COFFIN	10002
+	#define global	RECIPE_BLEND_ACTION_FIRE_FROOF	10003
+	#define global	RECIPE_BLEND_ACTION_ACID_PROOF	10004
+	#define global	RECIPE_BLEND_ACTION_BAIT	10005
+	#define global	RECIPE_BLEND_ACTION_BLESS	10006
+	#define global	RECIPE_BLEND_ACTION_WELL	10007
+	#define global	RECIPE_BLEND_ACTION_WELL_DRAW	10008
+	#define global	RECIPE_BLEND_ACTION_INSTANT_ALE	10010
+	#define global	RECIPE_BLEND_ACTION_WOODCRAFT	10011
+	#define global	RECIPE_BLEND_ACTION_STONECRAFT	10012
+	#define global	RECIPE_BLEND_ACTION_NECRO_REMODEL	10013
+	#define global	RECIPE_BLEND_ACTION_SOFT_EQUIP_UPDATE	10014
+	#define global	RECIPE_BLEND_ACTION_HARD_EQUIP_UPDATE	10015
+	#define global	RECIPE_BLEND_ACTION_SHARP_EQUIP_UPDATE	10016
+	#define global	RECIPE_BLEND_ACTION_MEAT_FILLING	10020
+	#define global	RECIPE_BLEND_ACTION_BARREL_BOMB	10021
+	#define global	RECIPE_BLEND_ACTION_POTTERY	10022
+	#define global	RECIPE_BLEND_ACTION_BIOLOGICAL_RESTORATION	10023
 
 	// Equip slots / limbs
-	EQUIP_SLOT_NONE = 0
-	EQUIP_SLOT_HEAD = 1
-	EQUIP_SLOT_NECK = 2
-	EQUIP_SLOT_BACK = 3
-	EQUIP_SLOT_BODY = 4
-	EQUIP_SLOT_HAND = 5
-	EQUIP_SLOT_RING = 6
-	EQUIP_SLOT_ARM = 7
-	EQUIP_SLOT_WAIST = 8
-	EQUIP_SLOT_LEG = 9
-	EQUIP_SLOT_SHOOT = 10
-	EQUIP_SLOT_AMMO = 11
+	#define global	EQUIP_SLOT_NONE	0
+	#define global	EQUIP_SLOT_HEAD	1
+	#define global	EQUIP_SLOT_NECK	2
+	#define global	EQUIP_SLOT_BACK	3
+	#define global	EQUIP_SLOT_BODY	4
+	#define global	EQUIP_SLOT_HAND	5
+	#define global	EQUIP_SLOT_RING	6
+	#define global	EQUIP_SLOT_ARM	7
+	#define global	EQUIP_SLOT_WAIST	8
+	#define global	EQUIP_SLOT_LEG	9
+	#define global	EQUIP_SLOT_SHOOT	10
+	#define global	EQUIP_SLOT_AMMO	11
 
-	MAX_EQUIP_SLOT = EQUIP_SLOT_AMMO
+	#define global	MAX_EQUIP_SLOT	EQUIP_SLOT_AMMO
 
-	MAX_EQUIP_SLOT_TOTAL = 30
+	#define global	MAX_EQUIP_SLOT_TOTAL	30
 
 	// Filters/Item types
-	FILTER_NOTHING = 0
+	#define global	FILTER_NOTHING	0
 
-	FILTER_RACE_GOBLIN = 1
-	FILTER_RACE_ORC = 2
-	FILTER_RACE_SLIME = 3
-	FILTER_RACE_ELEA = 4
-	FILTER_RACE_KOBOLT = 5
-	FILTER_RACE_SPIDER = 6
-	FILTER_RACE_YEEK = 7
-	FILTER_RACE_MERCENARY = 8
-	FILTER_RACE_ZOMBIE = 9
-	FILTER_RACE_DOG = 10
-	FILTER_RACE_BEAR = 11
-	FILTER_RACE_KAMIKAZE = 12
-	FILTER_RACE_MUMMY = 13
-	FILTER_RACE_HOUND_FIRE = 14
-	FILTER_RACE_HOUND_ICE = 15
-	FILTER_RACE_HOUND_LIGHTNING = 16
-	FILTER_RACE_HOUND_DARKNESS = 17
-	FILTER_RACE_HOUND_MIND = 18
-	FILTER_RACE_HOUND_NERVE = 19
-	FILTER_RACE_HOUND_POISON = 20
-	FILTER_RACE_HOUND_SOUND = 21
-	FILTER_RACE_HOUND_NETHER = 22
-	FILTER_RACE_HOUND_CHAOS = 23
-	FILTER_RACE_RAT = 24
-	FILTER_RACE_WASP = 25
-	FILTER_RACE_ROCK = 26
-	FILTER_RACE_ELEA2 = 27
-	FILTER_RACE_KOBOLT2 = 28
-	FILTER_RACE_KOBOLT3 = 29
-	FILTER_RACE_SPIDER2 = 30
-	FILTER_RACE_CAT = 31
-	FILTER_RACE_YERLES = 32
-	FILTER_RACE_MACHINE = 33
-	FILTER_RACE_NORLAND = 34
-	FILTER_RACE_BAT = 35
-	FILTER_RACE_BAT2 = 36
-	FILTER_RACE_SHEEP = 37
-	FILTER_RACE_BIRD = 38
-	FILTER_RACE_WASP2 = 39
-	FILTER_RACE_DOG2 = 40
-	FILTER_RACE_SPIDER3 = 41
-	FILTER_RACE_GHOST = 42
-	FILTER_RACE_RAT2 = 43
-	FILTER_RACE_SHELL = 44
-	FILTER_RACE_BEETLE = 45
-	FILTER_RACE_BEETLE2 = 46
-	FILTER_RACE_KOBOLT4 = 47
-
-	FILTER_WEAPON = 10000
-	FILTER_WEAPON_HEAVY_SWORD = 10001
-	FILTER_WEAPON_LONGSWORD = 10002
-	FILTER_WEAPON_SHORTSWORD = 10003
-	FILTER_WEAPON_CLUB = 10004
-	FILTER_WEAPON_HAMMER = 10005
-	FILTER_WEAPON_STAVE = 10006
-	FILTER_WEAPON_POLEARM = 10007
-	FILTER_WEAPON_HEAVY_POLEARM = 10008
-	FILTER_WEAPON_SMALL_AXE = 10009
-	FILTER_WEAPON_LARGE_AXE = 10010
-	FILTER_WEAPON_SICKLE = 10011
-
-	FILTER_HELM = 12000
-	FILTER_HELM_HEAVY = 12001
-	FILTER_HELM_LIGHT = 12002
-	FILTER_HELM_MEDIUM = 12003
-
-	FILTER_SHIELD = 14000
-	FILTER_SHIELD_LARGE = 14001
-	FILTER_SHIELD_MEDIUM = 14002
-	FILTER_SHIELD_SMALL = 14003
-
-	FILTER_ARMOR = 16000
-	FILTER_ARMOR_HEAVY = 16001
-	FILTER_ARMOR_MEDIUM = 16002
-	FILTER_ARMOR_LIGHT = 16003
-
-	FILTER_BOOTS = 18000
-	FILTER_BOOTS_HEAVY = 18001
-	FILTER_BOOTS_LIGHT = 18002
-	FILTER_BOOTS_MEDIUM = 18003
-
-	FILTER_GIRDLE = 19000
-	FILTER_GIRDLE_MEDIUM = 19001
-
-	FILTER_CLOAK = 20000
-	FILTER_CLOAK_MEDIUM = 20001
-
-	FILTER_GLOVES = 22000
-	FILTER_GLOVES_HEAVY = 22001
-	FILTER_GLOVES_MEDIUM = 22002
-	FILTER_GLOVES_LIGHT = 22003
-
-	FILTER_RANGE = 24000
-	FILTER_RANGE_SHORTBOW = 24001
-	FILTER_RANGE_CROSSBOW = 24003
-	FILTER_RANGE_PISTOL = 24020
-	FILTER_RANGE_LASER = 24021
-	FILTER_RANGE_ROCK_THROW = 24030
-
-	FILTER_AMMO = 25000
-	FILTER_AMMO_ARROW = 25001
-	FILTER_AMMO_BOLT = 25002
-	FILTER_AMMO_BULLET = 25020
-	FILTER_AMMO_ENERGY = 25030
-
-	FILTER_ACCESSORY = 30000
-	FILTER_ACCESSORY_RING = 32000
-	FILTER_ACCESSORY_SMALL_RING = 32001
-	FILTER_ACCESSORY_AMULET = 34000
-	FILTER_ACCESSORY_SMALL_AMULET = 34001
-
-	FILTER_ITEM_MIN = 50000
-
-	FILTER_ITEM_POTION = 52000
-	FILTER_ITEM_POTION_HEAL = 52001
-	FILTER_ITEM_POTION_ALE = 52002
-
-	FILTER_ITEM_SCROLL = 53000
-	FILTER_ITEM_DEED = 53100
-
-	FILTER_ITEM_SPELLBOOK = 54000
-	FILTER_ITEM_BOOK = 55000
-	FILTER_ITEM_RECIPE = 55500
-
-	FILTER_ITEM_ROD = 56000
-	FILTER_ITEM_ROD_HEALING = 56001
-	FILTER_ITEM_ROD_DAMAGE = 56002
-	FILTER_ITEM_ROD_UTILITY = 56003
-	FILTER_ITEM_ROD_ENVIRONMENTAL = 56004
-
-	FILTER_ITEM_FOOD = 57000
-	FILTER_ITEM_FOOD_BREAD = 57001
-	FILTER_ITEM_FOOD_PASTA = 57002
-	FILTER_ITEM_FOOD_VEGETABLE = 57003
-	FILTER_ITEM_FOOD_FRUIT = 57004
-
-	FILTER_ITEM_LIQUID = 58000
-	FILTER_ITEM_FOOD_HERB = 58005
-	FILTER_ITEM_SEED = 58500
-
-	FILTER_ITEM_TOOL = 59000
-	FILTER_ITEM_TOOL_BLEND = 59500
-
-	FILTER_FURNITURE = 60000
-	FILTER_FURNITURE_WELL = 60001
-	FILTER_FURNITURE_ALTAR = 60002
-	FILTER_FURNITURE_USABLE = 60003
-	FILTER_FURNITURE_BED = 60004
-	FILTER_FURNITURE_INSTRUMENT = 60005
-
-	FILTER_REMAINS = 62000
-
-	FILTER_JUNK = 64000
-	FILTER_JUNK_TOWN = 64100
-
-	FILTER_GOLD = 68000
-	FILTER_PLATINUM = 69000
-
-	FILTER_CONTAINER = 72000
-
-	FILTER_ROCK = 75000
-
-	FILTER_ORE = 77000
-	FILTER_ORE_GEM = 77001
-
-	FILTER_ENVIRONMENT = 80000
-
-	FILTER_CARGO = 90000
-	FILTER_CARGO_FOOD = 91000
-	FILTER_CARGO_TRADE = 92000
+	#define global	FILTER_RACE_GOBLIN	1
+	#define global	FILTER_RACE_ORC	2
+	#define global	FILTER_RACE_SLIME	3
+	#define global	FILTER_RACE_ELEA	4
+	#define global	FILTER_RACE_KOBOLT	5
+	#define global	FILTER_RACE_SPIDER	6
+	#define global	FILTER_RACE_YEEK	7
+	#define global	FILTER_RACE_MERCENARY	8
+	#define global	FILTER_RACE_ZOMBIE	9
+	#define global	FILTER_RACE_DOG	10
+	#define global	FILTER_RACE_BEAR	11
+	#define global	FILTER_RACE_KAMIKAZE	12
+	#define global	FILTER_RACE_MUMMY	13
+	#define global	FILTER_RACE_HOUND_FIRE	14
+	#define global	FILTER_RACE_HOUND_ICE	15
+	#define global	FILTER_RACE_HOUND_LIGHTNING	16
+	#define global	FILTER_RACE_HOUND_DARKNESS	17
+	#define global	FILTER_RACE_HOUND_MIND	18
+	#define global	FILTER_RACE_HOUND_NERVE	19
+	#define global	FILTER_RACE_HOUND_POISON	20
+	#define global	FILTER_RACE_HOUND_SOUND	21
+	#define global	FILTER_RACE_HOUND_NETHER	22
+	#define global	FILTER_RACE_HOUND_CHAOS	23
+	#define global	FILTER_RACE_RAT	24
+	#define global	FILTER_RACE_WASP	25
+	#define global	FILTER_RACE_ROCK	26
+	#define global	FILTER_RACE_ELEA2	27
+	#define global	FILTER_RACE_KOBOLT2	28
+	#define global	FILTER_RACE_KOBOLT3	29
+	#define global	FILTER_RACE_SPIDER2	30
+	#define global	FILTER_RACE_CAT	31
+	#define global	FILTER_RACE_YERLES	32
+	#define global	FILTER_RACE_MACHINE	33
+	#define global	FILTER_RACE_NORLAND	34
+	#define global	FILTER_RACE_BAT	35
+	#define global	FILTER_RACE_BAT2	36
+	#define global	FILTER_RACE_SHEEP	37
+	#define global	FILTER_RACE_BIRD	38
+	#define global	FILTER_RACE_WASP2	39
+	#define global	FILTER_RACE_DOG2	40
+	#define global	FILTER_RACE_SPIDER3	41
+	#define global	FILTER_RACE_GHOST	42
+	#define global	FILTER_RACE_RAT2	43
+	#define global	FILTER_RACE_SHELL	44
+	#define global	FILTER_RACE_BEETLE	45
+	#define global	FILTER_RACE_BEETLE2	46
+	#define global	FILTER_RACE_KOBOLT4	47
+
+	#define global	FILTER_WEAPON	10000
+	#define global	FILTER_WEAPON_HEAVY_SWORD	10001
+	#define global	FILTER_WEAPON_LONGSWORD	10002
+	#define global	FILTER_WEAPON_SHORTSWORD	10003
+	#define global	FILTER_WEAPON_CLUB	10004
+	#define global	FILTER_WEAPON_HAMMER	10005
+	#define global	FILTER_WEAPON_STAVE	10006
+	#define global	FILTER_WEAPON_POLEARM	10007
+	#define global	FILTER_WEAPON_HEAVY_POLEARM	10008
+	#define global	FILTER_WEAPON_SMALL_AXE	10009
+	#define global	FILTER_WEAPON_LARGE_AXE	10010
+	#define global	FILTER_WEAPON_SICKLE	10011
+
+	#define global	FILTER_HELM	12000
+	#define global	FILTER_HELM_HEAVY	12001
+	#define global	FILTER_HELM_LIGHT	12002
+	#define global	FILTER_HELM_MEDIUM	12003
+
+	#define global	FILTER_SHIELD	14000
+	#define global	FILTER_SHIELD_LARGE	14001
+	#define global	FILTER_SHIELD_MEDIUM	14002
+	#define global	FILTER_SHIELD_SMALL	14003
+
+	#define global	FILTER_ARMOR	16000
+	#define global	FILTER_ARMOR_HEAVY	16001
+	#define global	FILTER_ARMOR_MEDIUM	16002
+	#define global	FILTER_ARMOR_LIGHT	16003
+
+	#define global	FILTER_BOOTS	18000
+	#define global	FILTER_BOOTS_HEAVY	18001
+	#define global	FILTER_BOOTS_LIGHT	18002
+	#define global	FILTER_BOOTS_MEDIUM	18003
+
+	#define global	FILTER_GIRDLE	19000
+	#define global	FILTER_GIRDLE_MEDIUM	19001
+
+	#define global	FILTER_CLOAK	20000
+	#define global	FILTER_CLOAK_MEDIUM	20001
+
+	#define global	FILTER_GLOVES	22000
+	#define global	FILTER_GLOVES_HEAVY	22001
+	#define global	FILTER_GLOVES_MEDIUM	22002
+	#define global	FILTER_GLOVES_LIGHT	22003
+
+	#define global	FILTER_RANGE	24000
+	#define global	FILTER_RANGE_SHORTBOW	24001
+	#define global	FILTER_RANGE_CROSSBOW	24003
+	#define global	FILTER_RANGE_PISTOL	24020
+	#define global	FILTER_RANGE_LASER	24021
+	#define global	FILTER_RANGE_ROCK_THROW	24030
+
+	#define global	FILTER_AMMO	25000
+	#define global	FILTER_AMMO_ARROW	25001
+	#define global	FILTER_AMMO_BOLT	25002
+	#define global	FILTER_AMMO_BULLET	25020
+	#define global	FILTER_AMMO_ENERGY	25030
+
+	#define global	FILTER_ACCESSORY	30000
+	#define global	FILTER_ACCESSORY_RING	32000
+	#define global	FILTER_ACCESSORY_SMALL_RING	32001
+	#define global	FILTER_ACCESSORY_AMULET	34000
+	#define global	FILTER_ACCESSORY_SMALL_AMULET	34001
+
+	#define global	FILTER_ITEM_MIN	50000
+
+	#define global	FILTER_ITEM_POTION	52000
+	#define global	FILTER_ITEM_POTION_HEAL	52001
+	#define global	FILTER_ITEM_POTION_ALE	52002
+
+	#define global	FILTER_ITEM_SCROLL	53000
+	#define global	FILTER_ITEM_DEED	53100
+
+	#define global	FILTER_ITEM_SPELLBOOK	54000
+	#define global	FILTER_ITEM_BOOK	55000
+	#define global	FILTER_ITEM_RECIPE	55500
+
+	#define global	FILTER_ITEM_ROD	56000
+	#define global	FILTER_ITEM_ROD_HEALING	56001
+	#define global	FILTER_ITEM_ROD_DAMAGE	56002
+	#define global	FILTER_ITEM_ROD_UTILITY	56003
+	#define global	FILTER_ITEM_ROD_ENVIRONMENTAL	56004
+
+	#define global	FILTER_ITEM_FOOD	57000
+	#define global	FILTER_ITEM_FOOD_BREAD	57001
+	#define global	FILTER_ITEM_FOOD_PASTA	57002
+	#define global	FILTER_ITEM_FOOD_VEGETABLE	57003
+	#define global	FILTER_ITEM_FOOD_FRUIT	57004
+
+	#define global	FILTER_ITEM_LIQUID	58000
+	#define global	FILTER_ITEM_FOOD_HERB	58005
+	#define global	FILTER_ITEM_SEED	58500
+
+	#define global	FILTER_ITEM_TOOL	59000
+	#define global	FILTER_ITEM_TOOL_BLEND	59500
+
+	#define global	FILTER_FURNITURE	60000
+	#define global	FILTER_FURNITURE_WELL	60001
+	#define global	FILTER_FURNITURE_ALTAR	60002
+	#define global	FILTER_FURNITURE_USABLE	60003
+	#define global	FILTER_FURNITURE_BED	60004
+	#define global	FILTER_FURNITURE_INSTRUMENT	60005
+
+	#define global	FILTER_REMAINS	62000
+
+	#define global	FILTER_JUNK	64000
+	#define global	FILTER_JUNK_TOWN	64100
+
+	#define global	FILTER_GOLD	68000
+	#define global	FILTER_PLATINUM	69000
+
+	#define global	FILTER_CONTAINER	72000
+
+	#define global	FILTER_ROCK	75000
+
+	#define global	FILTER_ORE	77000
+	#define global	FILTER_ORE_GEM	77001
+
+	#define global	FILTER_ENVIRONMENT	80000
+
+	#define global	FILTER_CARGO	90000
+	#define global	FILTER_CARGO_FOOD	91000
+	#define global	FILTER_CARGO_TRADE	92000
 
-	FILTER_NONE = 99999
+	#define global	FILTER_NONE	99999
 
 	// Database for race
-	DB_RACE_KOBOLT = 1
-	DB_RACE_ORC = 2
-	DB_RACE_LARGE_ANIMAL = 3
-	DB_RACE_LIZARDMAN = 4
-	DB_RACE_MINOTAUR = 5
-	DB_RACE_YERLES = 6
-	DB_RACE_NORLAND = 7
-	DB_RACE_EULDERNA = 8
-	DB_RACE_FAIRY = 9
-	DB_RACE_ASURA = 10
-	DB_RACE_SLIME = 11
-	DB_RACE_DOG_GOD = 12
-	DB_RACE_DWARF = 13
-	DB_RACE_JUERE = 14
-	DB_RACE_ZOMBIE = 15
-	DB_RACE_ELEA = 16
-	DB_RACE_RABBIT = 17
-	DB_RACE_SHEEP = 18
-	DB_RACE_FROG = 19
-	DB_RACE_WORM = 20
-	DB_RACE_SNAIL = 21
-	DB_RACE_MANDRAKE = 22
-	DB_RACE_BEETLE = 23
-	DB_RACE_MUSHROOM = 24
-	DB_RACE_BAT = 25
-	DB_RACE_ENT = 26
-	DB_RACE_LICH = 27
-	DB_RACE_BACTERIA = 28
-	DB_RACE_GHOST = 29
-	DB_RACE_SPIRIT = 30
-	DB_RACE_EYE = 31
-	DB_RACE_MAZIN = 32
-	DB_RACE_WASP = 33
-	DB_RACE_GIANT = 34
-	DB_RACE_IMP = 35
-	DB_RACE_HAND = 36
-	DB_RACE_SNAKE = 37
-	DB_RACE_DRAKE = 38
-	DB_RACE_GOBLIN = 39
-	DB_RACE_BEAR = 40
-	DB_RACE_ARMOR = 41
-	DB_RACE_MEDUSA = 42
-	DB_RACE_CUPID = 43
-	DB_RACE_KARUNE = 44
-	DB_RACE_HARPY = 45
-	DB_RACE_DRAGON = 46
-	DB_RACE_DINOSAUR = 47
-	DB_RACE_BEAST = 48
-	DB_RACE_SPIDER = 49
-	DB_RACE_GOLEM = 50
-	DB_RACE_ROCK = 51
-	DB_RACE_ZANAN = 52
-	DB_RACE_SKELETON = 53
-	DB_RACE_PIECE = 54
-	DB_RACE_CAT = 55
-	DB_RACE_DOG = 56
-	DB_RACE_RORAN = 57
-	DB_RACE_RAT = 58
-	DB_RACE_SHELL = 59
-	DB_RACE_CAT_GOD = 60
-	DB_RACE_MACHINE_GOD = 61
-	DB_RACE_UNDEAD_GOD = 62
-	DB_RACE_MACHINE = 63
-	DB_RACE_WISP = 64
-	DB_RACE_BIRD = 65
-	DB_RACE_SEA_MONSTER = 66
-	DB_RACE_CAT_SISTER = 67
-	DB_RACE_MUTANT = 68
-	DB_RACE_YEEK = 69
-	DB_RACE_YITH = 70
-	DB_RACE_SERVANT = 71
-	DB_RACE_HORSE = 72
-	DB_RACE_GOD = 73
-	DB_RACE_QUICKLING = 74
-	DB_RACE_METAL = 75
-	DB_RACE_BEHICLE = 76
+	#define global	DB_RACE_KOBOLT	1
+	#define global	DB_RACE_ORC	2
+	#define global	DB_RACE_LARGE_ANIMAL	3
+	#define global	DB_RACE_LIZARDMAN	4
+	#define global	DB_RACE_MINOTAUR	5
+	#define global	DB_RACE_YERLES	6
+	#define global	DB_RACE_NORLAND	7
+	#define global	DB_RACE_EULDERNA	8
+	#define global	DB_RACE_FAIRY	9
+	#define global	DB_RACE_ASURA	10
+	#define global	DB_RACE_SLIME	11
+	#define global	DB_RACE_DOG_GOD	12
+	#define global	DB_RACE_DWARF	13
+	#define global	DB_RACE_JUERE	14
+	#define global	DB_RACE_ZOMBIE	15
+	#define global	DB_RACE_ELEA	16
+	#define global	DB_RACE_RABBIT	17
+	#define global	DB_RACE_SHEEP	18
+	#define global	DB_RACE_FROG	19
+	#define global	DB_RACE_WORM	20
+	#define global	DB_RACE_SNAIL	21
+	#define global	DB_RACE_MANDRAKE	22
+	#define global	DB_RACE_BEETLE	23
+	#define global	DB_RACE_MUSHROOM	24
+	#define global	DB_RACE_BAT	25
+	#define global	DB_RACE_ENT	26
+	#define global	DB_RACE_LICH	27
+	#define global	DB_RACE_BACTERIA	28
+	#define global	DB_RACE_GHOST	29
+	#define global	DB_RACE_SPIRIT	30
+	#define global	DB_RACE_EYE	31
+	#define global	DB_RACE_MAZIN	32
+	#define global	DB_RACE_WASP	33
+	#define global	DB_RACE_GIANT	34
+	#define global	DB_RACE_IMP	35
+	#define global	DB_RACE_HAND	36
+	#define global	DB_RACE_SNAKE	37
+	#define global	DB_RACE_DRAKE	38
+	#define global	DB_RACE_GOBLIN	39
+	#define global	DB_RACE_BEAR	40
+	#define global	DB_RACE_ARMOR	41
+	#define global	DB_RACE_MEDUSA	42
+	#define global	DB_RACE_CUPID	43
+	#define global	DB_RACE_KARUNE	44
+	#define global	DB_RACE_HARPY	45
+	#define global	DB_RACE_DRAGON	46
+	#define global	DB_RACE_DINOSAUR	47
+	#define global	DB_RACE_BEAST	48
+	#define global	DB_RACE_SPIDER	49
+	#define global	DB_RACE_GOLEM	50
+	#define global	DB_RACE_ROCK	51
+	#define global	DB_RACE_ZANAN	52
+	#define global	DB_RACE_SKELETON	53
+	#define global	DB_RACE_PIECE	54
+	#define global	DB_RACE_CAT	55
+	#define global	DB_RACE_DOG	56
+	#define global	DB_RACE_RORAN	57
+	#define global	DB_RACE_RAT	58
+	#define global	DB_RACE_SHELL	59
+	#define global	DB_RACE_CAT_GOD	60
+	#define global	DB_RACE_MACHINE_GOD	61
+	#define global	DB_RACE_UNDEAD_GOD	62
+	#define global	DB_RACE_MACHINE	63
+	#define global	DB_RACE_WISP	64
+	#define global	DB_RACE_BIRD	65
+	#define global	DB_RACE_SEA_MONSTER	66
+	#define global	DB_RACE_CAT_SISTER	67
+	#define global	DB_RACE_MUTANT	68
+	#define global	DB_RACE_YEEK	69
+	#define global	DB_RACE_YITH	70
+	#define global	DB_RACE_SERVANT	71
+	#define global	DB_RACE_HORSE	72
+	#define global	DB_RACE_GOD	73
+	#define global	DB_RACE_QUICKLING	74
+	#define global	DB_RACE_METAL	75
+	#define global	DB_RACE_BEHICLE	76
 
 	// Animation
-	ANIMATION_BOLT = 0
-	ANIMATION_ARROW = 1
-	ANIMATION_BALL = 2
-	ANIMATION_BREATH = 3
-	ANIMATION_TAIL = 4
-	ANIMATION_HEAL = 5
-	ANIMATION_CURSE = 6
-	ANIMATION_OFFER = 7
-	ANIMATION_FIZZLE = 8
-	ANIMATION_ATTACK = 9
-	ANIMATION_BLOOD = 10
-	ANIMATION_HEAL_FAST = 11
-	ANIMATION_NORMAL_ATTACK = 12
-	ANIMATION_THUNDER = 13
-	ANIMATION_CRUSH = 14
-	ANIMATION_THROW = 15
-	ANIMATION_SAND = 16
-	ANIMATION_BALL_NUKE = 17
-	ANIMATION_SPORE = 18
-	ANIMATION_HOLY = 19
-	ANIMATION_GENE = 20
-	ANIMATION_RAGNA = 21
-	ANIMATION_METEOR = 22
-	ANIMATION_THUNDERCLAP = 23
-	ANIMATION_MP_BREATH = 24
-	ANIMATION_NUCLEAR = 25
-	ANIMATION_GIGA = 26
-	ANIMATION_STARS = 28
-	ANIMATION_FIREWORK = 29
-	ANIMATION_GOLDENSTORM = 30
-	ANIMATION_GARDEN = 31
-	ANIMATION_AROMAGEDDON = 32
-	ANIMATION_ARROW_RAIN = 33
-	ANIMATION_PARTICLE_CANNON = 34
-	ANIMATION_GAMEWIN3 = 35
-	ANIMATION_CHAOS_CHILD = 36
-	ANIMATION_INNERVATION = 37
-	ANIMATION_DISTANT_ATK = 38
-	ANIMATION_UNISON_IMPACT1 = 39
-	ANIMATION_UNISON_IMPACT2 = 40
-	ANIMATION_UNISON_IMPACT3 = 41
-	ANIMATION_UNISON_IMPACT4 = 42
-
-	ANIMATION_UNUSED1 = 108
-	ANIMATION_UNUSED2 = 109
-	ANIMATION_UNUSED3 = 110
-	ANIMATION_UNUSED4 = 111
+	#define global	ANIMATION_BOLT	0
+	#define global	ANIMATION_ARROW	1
+	#define global	ANIMATION_BALL	2
+	#define global	ANIMATION_BREATH	3
+	#define global	ANIMATION_TAIL	4
+	#define global	ANIMATION_HEAL	5
+	#define global	ANIMATION_CURSE	6
+	#define global	ANIMATION_OFFER	7
+	#define global	ANIMATION_FIZZLE	8
+	#define global	ANIMATION_ATTACK	9
+	#define global	ANIMATION_BLOOD	10
+	#define global	ANIMATION_HEAL_FAST	11
+	#define global	ANIMATION_NORMAL_ATTACK	12
+	#define global	ANIMATION_THUNDER	13
+	#define global	ANIMATION_CRUSH	14
+	#define global	ANIMATION_THROW	15
+	#define global	ANIMATION_SAND	16
+	#define global	ANIMATION_BALL_NUKE	17
+	#define global	ANIMATION_SPORE	18
+	#define global	ANIMATION_HOLY	19
+	#define global	ANIMATION_GENE	20
+	#define global	ANIMATION_RAGNA	21
+	#define global	ANIMATION_METEOR	22
+	#define global	ANIMATION_THUNDERCLAP	23
+	#define global	ANIMATION_MP_BREATH	24
+	#define global	ANIMATION_NUCLEAR	25
+	#define global	ANIMATION_GIGA	26
+	#define global	ANIMATION_STARS	28
+	#define global	ANIMATION_FIREWORK	29
+	#define global	ANIMATION_GOLDENSTORM	30
+	#define global	ANIMATION_GARDEN	31
+	#define global	ANIMATION_AROMAGEDDON	32
+	#define global	ANIMATION_ARROW_RAIN	33
+	#define global	ANIMATION_PARTICLE_CANNON	34
+	#define global	ANIMATION_GAMEWIN3	35
+	#define global	ANIMATION_CHAOS_CHILD	36
+	#define global	ANIMATION_INNERVATION	37
+	#define global	ANIMATION_DISTANT_ATK	38
+	#define global	ANIMATION_UNISON_IMPACT1	39
+	#define global	ANIMATION_UNISON_IMPACT2	40
+	#define global	ANIMATION_UNISON_IMPACT3	41
+	#define global	ANIMATION_UNISON_IMPACT4	42
+
+	#define global	ANIMATION_UNUSED1	108
+	#define global	ANIMATION_UNUSED2	109
+	#define global	ANIMATION_UNUSED3	110
+	#define global	ANIMATION_UNUSED4	111
 
 	// Mode list
-	MODELIST_MAIN = 0
-	MODELIST_CHARA_CREATION = 1
-	MODELIST_NEW = 2
-	MODELIST_CONTINUE = 3
-	MODELIST_QUICK_START = 4
-	MODELIST_NORMAL_START = 5
-	MODELIST_SHOP = 6
-	MODELIST_EVENT = 7
-	MODELIST_QUEST_CHAT = 8
-	MODELIST_TXT_ADV = 9
-	MODELIST_TITLE = 10
-	MODELIST_MAP = 11
-	MODELIST_RP = 12
+	#define global	MODELIST_MAIN	0
+	#define global	MODELIST_CHARA_CREATION	1
+	#define global	MODELIST_NEW	2
+	#define global	MODELIST_CONTINUE	3
+	#define global	MODELIST_QUICK_START	4
+	#define global	MODELIST_NORMAL_START	5
+	#define global	MODELIST_SHOP	6
+	#define global	MODELIST_EVENT	7
+	#define global	MODELIST_QUEST_CHAT	8
+	#define global	MODELIST_TXT_ADV	9
+	#define global	MODELIST_TITLE	10
+	#define global	MODELIST_MAP	11
+	#define global	MODELIST_RP	12
 
 	// Encounter types
-	ENCOUNTER_NONE = 0
-	ENCOUNTER_ENEMY = 1
-	ENCOUNTER_MERCHANT = 2
-	ENCOUNTER_ASSASSIN = 3
-	ENCOUNTER_ROGUE = 4
+	#define global	ENCOUNTER_NONE	0
+	#define global	ENCOUNTER_ENEMY	1
+	#define global	ENCOUNTER_MERCHANT	2
+	#define global	ENCOUNTER_ASSASSIN	3
+	#define global	ENCOUNTER_ROGUE	4
 
 	// Random event types
-	RANDOM_EVENT_LUCKY = 1
-	RANDOM_EVENT_DREAM_MAGIC = 2
-	RANDOM_EVENT_DREAM_GROWTH = 3
-	RANDOM_EVENT_DREAM_LOSE_RES = 4
-	RANDOM_EVENT_DREAM_CURSE = 5
-	RANDOM_EVENT_DREAM_REGEN_HP = 6
-	RANDOM_EVENT_DREAM_REGEN_MP = 7
-	RANDOM_EVENT_THIEF = 8
-	RANDOM_EVENT_GAIN_PLATINUM = 9
-	RANDOM_EVENT_REMAINS_CAMP = 10
-	RANDOM_EVENT_REMAINS_ADV = 11
-	RANDOM_EVENT_GAIN_MATERIAL = 12
-	RANDOM_EVENT_HUNGRY = 13
-	RANDOM_EVENT_BLOATED = 14
-	RANDOM_EVENT_MURDER = 15
-	RANDOM_EVENT_GAIN_GOLD = 16
-	RANDOM_EVENT_PRIEST = 17
-	RANDOM_EVENT_FAITH = 18
-	RANDOM_EVENT_DREAM_TREASURE = 19
-	RANDOM_EVENT_DREAM_LUCKY = 20
-	RANDOM_EVENT_DREAM_EHEKATL = 21
-	RANDOM_EVENT_DREAM_MUTATION = 22
-	RANDOM_EVENT_DREAM_MATERIAL = 23
-	RANDOM_EVENT_DREAM_POTENTIAL = 24
-	RANDOM_EVENT_SLEEP_SHARING = 25
-	RANDOM_EVENT_FORCED_SLEEP_SHARING = 26
-	RANDOM_EVENT_BREAKFAST = 27
-	RANDOM_EVENT_WEREWOLF = 28
-	RANDOM_EVENT_HANDMADE_GIFT = 29
-	RANDOM_EVENT_HANDKNITTED_GIFT = 30
-	RANDOM_EVENT_WEREWOLF_EXECUTION = 31
+	#define global	RANDOM_EVENT_LUCKY	1
+	#define global	RANDOM_EVENT_DREAM_MAGIC	2
+	#define global	RANDOM_EVENT_DREAM_GROWTH	3
+	#define global	RANDOM_EVENT_DREAM_LOSE_RES	4
+	#define global	RANDOM_EVENT_DREAM_CURSE	5
+	#define global	RANDOM_EVENT_DREAM_REGEN_HP	6
+	#define global	RANDOM_EVENT_DREAM_REGEN_MP	7
+	#define global	RANDOM_EVENT_THIEF	8
+	#define global	RANDOM_EVENT_GAIN_PLATINUM	9
+	#define global	RANDOM_EVENT_REMAINS_CAMP	10
+	#define global	RANDOM_EVENT_REMAINS_ADV	11
+	#define global	RANDOM_EVENT_GAIN_MATERIAL	12
+	#define global	RANDOM_EVENT_HUNGRY	13
+	#define global	RANDOM_EVENT_BLOATED	14
+	#define global	RANDOM_EVENT_MURDER	15
+	#define global	RANDOM_EVENT_GAIN_GOLD	16
+	#define global	RANDOM_EVENT_PRIEST	17
+	#define global	RANDOM_EVENT_FAITH	18
+	#define global	RANDOM_EVENT_DREAM_TREASURE	19
+	#define global	RANDOM_EVENT_DREAM_LUCKY	20
+	#define global	RANDOM_EVENT_DREAM_EHEKATL	21
+	#define global	RANDOM_EVENT_DREAM_MUTATION	22
+	#define global	RANDOM_EVENT_DREAM_MATERIAL	23
+	#define global	RANDOM_EVENT_DREAM_POTENTIAL	24
+	#define global	RANDOM_EVENT_SLEEP_SHARING	25
+	#define global	RANDOM_EVENT_FORCED_SLEEP_SHARING	26
+	#define global	RANDOM_EVENT_BREAKFAST	27
+	#define global	RANDOM_EVENT_WEREWOLF	28
+	#define global	RANDOM_EVENT_HANDMADE_GIFT	29
+	#define global	RANDOM_EVENT_HANDKNITTED_GIFT	30
+	#define global	RANDOM_EVENT_WEREWOLF_EXECUTION	31
 
 	// Event types
-	EVENT_NONE = 0
-	EVENT_WIN_LESIMAS = 1
-	EVENT_OPENING = 2
-	EVENT_BOSS_LESIMAS = 3
-	EVENT_BOSS_RANDOM = 4
-	EVENT_WIN_BOSS_RANDOM = 5
-	EVENT_DEAD = 6
-	EVENT_VERNIS_SPEECH = 7
-	EVENT_QUEST_ELEMINATE = 8
-	EVENT_QUEST_FAIL = 9
-	EVENT_QUEST_CHECK = 10
-	EVENT_SHOP_WANDER = 11
-	EVENT_FIRST_ALLY = 12
-	EVENT_MARRY = 13
-	EVENT_QUEST_TIMEOUT = 14
-	EVENT_CLIENT_DEAD = 15
-	EVENT_CLIENT_REACHED = 16
-	EVENT_WELCOME = 17
-	EVENT_RAGNAROK = 18
-	EVENT_SHOW_HOUSE = 19
-	EVENT_KILL_MOTHER = 20
-	EVENT_NUKE = 21
-	EVENT_GUILD = 22
-	EVENT_ROGUE = 23
-	EVENT_INIT_ECONOMY = 24
-	EVENT_VISITOR = 25
-	EVENT_SLEEP_AMBUSH = 26
-	EVENT_LITTLE_SISTER = 27
-	EVENT_GOD_INSIDE_LULWY = 28
-	EVENT_GOD_INSIDE_EHEKATL = 29
-	EVENT_GOD_INSIDE_OPATOS = 30
-	EVENT_GOD_INSIDE_KUMIROMI = 31
-	EVENT_GOD_INSIDE_MANI = 32
-	EVENT_GOD_INSIDE_JURE = 33
-	EVENT_VOID = 34
-	EVENT_NORTH_BORDER = 35
-	EVENT_WIN_REMIDO = 36
-	EVENT_H_SISTER = 37
-	EVENT_SECRET_CHAR = 38
-	EVENT_ORPHE = 39
-	EVENT_MESHERA_ALPHA = 40
-	EVENT_GOD_INSIDE_ITZPALT = 41
-	EVENT_GOD_INSIDE_YACATECT = 42
-	EVENT_KUNOICHI = 43
-	EVENT_SPAWN_EVENT_NPCS = 44
-	EVENT_JOIN_ISCA = 45
-	EVENT_JOIN_LITYOU = 46
-	EVENT_JOIN_MUDER_KNIGHT = 47
-	EVENT_JOIN_WING_SNAIL = 48
-	EVENT_JOIN_PASCAL = 49
-	EVENT_FESTIVAL_MUSIC = 50
-	EVENT_MOBILE_COMM_EQUIP = 51
-	EVENT_JOIN_GODA = 52
-	EVENT_JOIN_MAD_SCIENTIST = 53
-	EVENT_JOIN_DUNGEON_CLEANER = 54
-	EVENT_MESHERA_PLANT = 55
-	EVENT_BOSS_MUSIC = 56
-	EVENT_NORNE = 57
-	EVENT_MELUGAST = 58
-	EVENT_COFFIN = 59
-	EVENT_CHESTNUT_GIANT = 60
-	EVENT_NEFIA_EFFECT = 61
-	EVENT_MARKA = 62
-	EVENT_SOUTH_TYRIS = 63
-	EVENT_ERYSTIA = 64
-	EVENT_SPECIAL_SPAWN_COND = 65
-	EVENT_LANKATA = 66
-	EVENT_AIKAGE = 67
-	EVENT_SQUEEZE = 68
-	EVENT_BIRTHDAY = 69
-	EVENT_SEMINAR = 70
-	EVENT_TEZCATLIPOCA = 71
-	EVENT_TEZCATLIPOCA_ADDS = 72
-	EVENT_TEZCATLIPOCA2 = 73
-	EVENT_ENTHUMESIS = 74
-	EVENT_ENTHUMESIS2 = 75
-	EVENT_TEZCATLIPOCA_ADDS2 = 76
-	EVENT_LESIMAS = 77
-	EVENT_NAGAREW = 78
-	EVENT_JOIN_SUNRISE = 79
-	EVENT_KARAVIKA_MUSIC = 80
-	EVENT_KARAVIKA_SETUP_MAP = 81
+	#define global	EVENT_NONE	0
+	#define global	EVENT_WIN_LESIMAS	1
+	#define global	EVENT_OPENING	2
+	#define global	EVENT_BOSS_LESIMAS	3
+	#define global	EVENT_BOSS_RANDOM	4
+	#define global	EVENT_WIN_BOSS_RANDOM	5
+	#define global	EVENT_DEAD	6
+	#define global	EVENT_VERNIS_SPEECH	7
+	#define global	EVENT_QUEST_ELEMINATE	8
+	#define global	EVENT_QUEST_FAIL	9
+	#define global	EVENT_QUEST_CHECK	10
+	#define global	EVENT_SHOP_WANDER	11
+	#define global	EVENT_FIRST_ALLY	12
+	#define global	EVENT_MARRY	13
+	#define global	EVENT_QUEST_TIMEOUT	14
+	#define global	EVENT_CLIENT_DEAD	15
+	#define global	EVENT_CLIENT_REACHED	16
+	#define global	EVENT_WELCOME	17
+	#define global	EVENT_RAGNAROK	18
+	#define global	EVENT_SHOW_HOUSE	19
+	#define global	EVENT_KILL_MOTHER	20
+	#define global	EVENT_NUKE	21
+	#define global	EVENT_GUILD	22
+	#define global	EVENT_ROGUE	23
+	#define global	EVENT_INIT_ECONOMY	24
+	#define global	EVENT_VISITOR	25
+	#define global	EVENT_SLEEP_AMBUSH	26
+	#define global	EVENT_LITTLE_SISTER	27
+	#define global	EVENT_GOD_INSIDE_LULWY	28
+	#define global	EVENT_GOD_INSIDE_EHEKATL	29
+	#define global	EVENT_GOD_INSIDE_OPATOS	30
+	#define global	EVENT_GOD_INSIDE_KUMIROMI	31
+	#define global	EVENT_GOD_INSIDE_MANI	32
+	#define global	EVENT_GOD_INSIDE_JURE	33
+	#define global	EVENT_VOID	34
+	#define global	EVENT_NORTH_BORDER	35
+	#define global	EVENT_WIN_REMIDO	36
+	#define global	EVENT_H_SISTER	37
+	#define global	EVENT_SECRET_CHAR	38
+	#define global	EVENT_ORPHE	39
+	#define global	EVENT_MESHERA_ALPHA	40
+	#define global	EVENT_GOD_INSIDE_ITZPALT	41
+	#define global	EVENT_GOD_INSIDE_YACATECT	42
+	#define global	EVENT_KUNOICHI	43
+	#define global	EVENT_SPAWN_EVENT_NPCS	44
+	#define global	EVENT_JOIN_ISCA	45
+	#define global	EVENT_JOIN_LITYOU	46
+	#define global	EVENT_JOIN_MUDER_KNIGHT	47
+	#define global	EVENT_JOIN_WING_SNAIL	48
+	#define global	EVENT_JOIN_PASCAL	49
+	#define global	EVENT_FESTIVAL_MUSIC	50
+	#define global	EVENT_MOBILE_COMM_EQUIP	51
+	#define global	EVENT_JOIN_GODA	52
+	#define global	EVENT_JOIN_MAD_SCIENTIST	53
+	#define global	EVENT_JOIN_DUNGEON_CLEANER	54
+	#define global	EVENT_MESHERA_PLANT	55
+	#define global	EVENT_BOSS_MUSIC	56
+	#define global	EVENT_NORNE	57
+	#define global	EVENT_MELUGAST	58
+	#define global	EVENT_COFFIN	59
+	#define global	EVENT_CHESTNUT_GIANT	60
+	#define global	EVENT_NEFIA_EFFECT	61
+	#define global	EVENT_MARKA	62
+	#define global	EVENT_SOUTH_TYRIS	63
+	#define global	EVENT_ERYSTIA	64
+	#define global	EVENT_SPECIAL_SPAWN_COND	65
+	#define global	EVENT_LANKATA	66
+	#define global	EVENT_AIKAGE	67
+	#define global	EVENT_SQUEEZE	68
+	#define global	EVENT_BIRTHDAY	69
+	#define global	EVENT_SEMINAR	70
+	#define global	EVENT_TEZCATLIPOCA	71
+	#define global	EVENT_TEZCATLIPOCA_ADDS	72
+	#define global	EVENT_TEZCATLIPOCA2	73
+	#define global	EVENT_ENTHUMESIS	74
+	#define global	EVENT_ENTHUMESIS2	75
+	#define global	EVENT_TEZCATLIPOCA_ADDS2	76
+	#define global	EVENT_LESIMAS	77
+	#define global	EVENT_NAGAREW	78
+	#define global	EVENT_JOIN_SUNRISE	79
+	#define global	EVENT_KARAVIKA_MUSIC	80
+	#define global	EVENT_KARAVIKA_SETUP_MAP	81
 
 	// Map stuff
-	MAP_TYPE_WORLD = 1
-	MAP_TYPE_VILLAGE = 2
-	MAP_TYPE_TOWN = 3
-	MAP_TYPE_LOCAL = 4
-	MAP_TYPE_HOME = 5
-	MAP_TYPE_FIELD = 6
-	MAP_TYPE_QUEST = 7
-
-	MAP_TYPE_DUNGEON_MIN = 20
-	MAP_TYPE_DUNGEON_RANGE = 8
-
-	MAP_TYPE_DUNGEON = 20
-	MAP_TYPE_TOWER = 21
-	MAP_TYPE_FOREST = 22
-	MAP_TYPE_FORT = 23
-	MAP_TYPE_NEST = 24
-	MAP_TYPE_CEMETERY = 25
-	MAP_TYPE_MINE = 26
-	MAP_TYPE_LAKE = 27
-
-	MAP_TYPE_DUNGEON_MAX = 27
-
-	MAP_FIELD_INDOOR = 1
-	MAP_FIELD_OUTDOOR = 2
-
-	MAP_START_UPSTAIRS = 1
-	MAP_START_DOWNSTAIRS = 2
-	MAP_START_EDGE = 3
-	MAP_START_CENTER = 4
-	MAP_START_RANDOM = 5
-	MAP_START_WORLD = 6
-	MAP_START_SPEC = 7
-	MAP_START_BOTTOM = 8
-
-	MAP_EXIT_TELEPORT = 2
-	MAP_EXIT_DEAD = 3
-	MAP_EXIT_NORMAL = 4
-	MAP_EXIT_NONE = 5
-
-	OBJECT_UPSTAIRS = 10
-	OBJECT_DOWNSTAIRS = 11
-	OBJECT_DOWNLOCKED = 12
-	OBJECT_TRAP = 14
-	OBJECT_AREA = 15
-	OBJECT_DOOR_OPEN = 20
-	OBJECT_DOOR_CLOSED = 21
-	OBJECT_HIDDEN_PATH = 22
-	OBJECT_BOARD = 23
-	OBJECT_RE = 24
-	OBJECT_RE_MINE = 25
-	OBJECT_RE_SPRING = 26
-	OBJECT_RE_REMAIN = 27
-	OBJECT_RE_BUSH = 28
-	OBJECT_PLANT = 29
-	OBJECT_BARREL = 30
-	OBJECT_VOTE_BOX = 31
-	OBJECT_MEDAL = 32
-	OBJECT_TOWN_BOARD = 33
-	OBJECT_BUILDING = 34
+	#define global	MAP_TYPE_WORLD	1
+	#define global	MAP_TYPE_VILLAGE	2
+	#define global	MAP_TYPE_TOWN	3
+	#define global	MAP_TYPE_LOCAL	4
+	#define global	MAP_TYPE_HOME	5
+	#define global	MAP_TYPE_FIELD	6
+	#define global	MAP_TYPE_QUEST	7
+
+	#define global	MAP_TYPE_DUNGEON_MIN	20
+	#define global	MAP_TYPE_DUNGEON_RANGE	8
+
+	#define global	MAP_TYPE_DUNGEON	20
+	#define global	MAP_TYPE_TOWER	21
+	#define global	MAP_TYPE_FOREST	22
+	#define global	MAP_TYPE_FORT	23
+	#define global	MAP_TYPE_NEST	24
+	#define global	MAP_TYPE_CEMETERY	25
+	#define global	MAP_TYPE_MINE	26
+	#define global	MAP_TYPE_LAKE	27
+
+	#define global	MAP_TYPE_DUNGEON_MAX	27
+
+	#define global	MAP_FIELD_INDOOR	1
+	#define global	MAP_FIELD_OUTDOOR	2
+
+	#define global	MAP_START_UPSTAIRS	1
+	#define global	MAP_START_DOWNSTAIRS	2
+	#define global	MAP_START_EDGE	3
+	#define global	MAP_START_CENTER	4
+	#define global	MAP_START_RANDOM	5
+	#define global	MAP_START_WORLD	6
+	#define global	MAP_START_SPEC	7
+	#define global	MAP_START_BOTTOM	8
+
+	#define global	MAP_EXIT_TELEPORT	2
+	#define global	MAP_EXIT_DEAD	3
+	#define global	MAP_EXIT_NORMAL	4
+	#define global	MAP_EXIT_NONE	5
+
+	#define global	OBJECT_UPSTAIRS	10
+	#define global	OBJECT_DOWNSTAIRS	11
+	#define global	OBJECT_DOWNLOCKED	12
+	#define global	OBJECT_TRAP	14
+	#define global	OBJECT_AREA	15
+	#define global	OBJECT_DOOR_OPEN	20
+	#define global	OBJECT_DOOR_CLOSED	21
+	#define global	OBJECT_HIDDEN_PATH	22
+	#define global	OBJECT_BOARD	23
+	#define global	OBJECT_RE	24
+	#define global	OBJECT_RE_MINE	25
+	#define global	OBJECT_RE_SPRING	26
+	#define global	OBJECT_RE_REMAIN	27
+	#define global	OBJECT_RE_BUSH	28
+	#define global	OBJECT_PLANT	29
+	#define global	OBJECT_BARREL	30
+	#define global	OBJECT_VOTE_BOX	31
+	#define global	OBJECT_MEDAL	32
+	#define global	OBJECT_TOWN_BOARD	33
+	#define global	OBJECT_BUILDING	34
 
 	// MDATA - MDATAN //
-	MDATA_WIDTH = 0
-	MDATA_HEIGHT = 1
-	MDATA_TILE_FILE = 2
-	MDATA_RENEW = 3
-	MDATA_DOWNSTAIRS_POS = 4
-	MDATA_UPSTAIRS_POS = 5
-	MDATA_TYPE = 6
-	MDATA_CAN_SAVE = 7
-	MDATA_RESTORE_POS = 8
-	MDATA_TIMESCALE = 9
-	MDATA_MODERATE_CROWD = 10
-	MDATA_LEVEL = 11
-	MDATA_TILESET = 12
-	MDATA_MUSIC = 13
-	MDATA_FIELD = 14
-	MDATA_WALL = 15
-	MDATA_RENEW_MINOR = 16
-	MDATA_NO_RENEW = 17
-	MDATA_MAX_INV = 18
-	MDATA_VERSION = 19
-	MDATA_FIRE_SOUND = 20
-	MDATA_VERSION_FIX1 = 21
-	MDATA_CITY_PROPERTY_VALUE = 22
-	MDATA_CITY_DEAD_PEOPLE = 23
-	MDATA_CITY_WATER_POLLUTION = 24
-	MDATA_CITY_TOURISM_REVENUE = 25
-	MDATA_CITY_AUTHORITY = 26
-	MDATA_CITY_APPROVAL_RATE = 27
-	MDATA_CITY_ETHER_CORRUPTION = 28
-	MDATA_CITY_COMPLAINTS = 29
-	MDATA_CITY_MAINTENANCE_COST = 30
-	MDATA_CITY_TAXES = 31
-	MDATA_CITY_BUDGET = 32
-	MDATA_WEREWOLF_STAGE = 33
+	#define global	MDATA_WIDTH	0
+	#define global	MDATA_HEIGHT	1
+	#define global	MDATA_TILE_FILE	2
+	#define global	MDATA_RENEW	3
+	#define global	MDATA_DOWNSTAIRS_POS	4
+	#define global	MDATA_UPSTAIRS_POS	5
+	#define global	MDATA_TYPE	6
+	#define global	MDATA_CAN_SAVE	7
+	#define global	MDATA_RESTORE_POS	8
+	#define global	MDATA_TIMESCALE	9
+	#define global	MDATA_MODERATE_CROWD	10
+	#define global	MDATA_LEVEL	11
+	#define global	MDATA_TILESET	12
+	#define global	MDATA_MUSIC	13
+	#define global	MDATA_FIELD	14
+	#define global	MDATA_WALL	15
+	#define global	MDATA_RENEW_MINOR	16
+	#define global	MDATA_NO_RENEW	17
+	#define global	MDATA_MAX_INV	18
+	#define global	MDATA_VERSION	19
+	#define global	MDATA_FIRE_SOUND	20
+	#define global	MDATA_VERSION_FIX1	21
+	#define global	MDATA_CITY_PROPERTY_VALUE	22
+	#define global	MDATA_CITY_DEAD_PEOPLE	23
+	#define global	MDATA_CITY_WATER_POLLUTION	24
+	#define global	MDATA_CITY_TOURISM_REVENUE	25
+	#define global	MDATA_CITY_AUTHORITY	26
+	#define global	MDATA_CITY_APPROVAL_RATE	27
+	#define global	MDATA_CITY_ETHER_CORRUPTION	28
+	#define global	MDATA_CITY_COMPLAINTS	29
+	#define global	MDATA_CITY_MAINTENANCE_COST	30
+	#define global	MDATA_CITY_TAXES	31
+	#define global	MDATA_CITY_BUDGET	32
+	#define global	MDATA_WEREWOLF_STAGE	33
 
-	MDATAN_NAME = 0
+	#define global	MDATAN_NAME	0
 
 	// Areas
-	MAX_AREA_COUNT = 500
-	MAX_AREA_OLD = 200
-	MAX_AREA_DATA = 40
-	STARTING_USER_AREA = 300
-	STARTING_RANDOM_AREA = 450
-	STARTING_USER_AREA_OLD = 100
-	STARTING_RANDOM_AREA_OLD = 150
-
-	AREA_NONE = 0
-	AREA_WORLD = 1
-	AREA_WILDERNESS = 2
-	AREA_LESIMAS = 3
-	AREA_NORTH_TYRIS = 4
-	AREA_VERNIS = 5
-	AREA_ARENA = 6
-	AREA_HOME = 7
-	AREA_RANDOM_DUNGEON = 8
-	AREA_TEST_GROUND = 9
-	AREA_GRAVEYARD = 10
-	AREA_PORT_KAPUL = 11
-	AREA_YOWYN = 12
-	AREA_QUEST = 13
-	AREA_DERPHY = 14
-	AREA_PALMIA = 15
-	AREA_TOWER_OF_FIRE = 16
-	AREA_CRYPT_OF_THE_DAMNED = 17
-	AREA_ANCIENT_CASTLE = 18
-	AREA_DRAGON_NEST = 19
-	AREA_TRUCE_GROUND = 20
-	AREA_CYBER_DOME = 21
-	AREA_BEAST_FORT = 22
-	AREA_MACHINE_FORT = 23
-	AREA_COLLAPSED_FORT = 24
-	AREA_LARNA = 25
-	AREA_MOUNTAIN_PASS = 26
-	AREA_PUPPY_CAVE = 27
-	AREA_YEEK_NEST = 28
-	AREA_SISTER_MANSION = 29
-	AREA_SHELTER = 30
-	AREA_RANCH = 31
-	AREA_EMBASSY = 32
-	AREA_NOYEL = 33
-	AREA_MIROK_WORKSHOP = 34
-	AREA_SHOW_HOUSE = 35
-	AREA_LUMIEST = 36
-	AREA_PYRAMID = 37
-	AREA_MINOTAUR_NEST = 38
-	AREA_DUNGEON = 39
-	AREA_PET_ARENA = 40
-	AREA_JAIL = 41
-	AREA_VOID = 42
-	AREA_NT_SOUTH_BORDER = 43
-	AREA_SOUTH_TYRIS = 44
-	AREA_ST_NORTH_BORDER = 45
-	AREA_SMOKE_AND_PIPE = 46
-	AREA_TEST_WORLD = 47
-	AREA_TW_NORTH_BORDER = 48
-	AREA_REMIDO = 49
-	AREA_EIREL = 50
-	AREA_RUOZA = 51
-	AREA_MELKAWN = 52
-	AREA_KURUALM = 53
-	AREA_VALM = 54
-	AREA_MELUGAS = 55
-	AREA_ARCBELC = 56
-	AREA_LUDUS = 57
-	AREA_CHAOS_SHRINE = 58
-	AREA_VALLEY_HADES = 59
-	AREA_MACHINERY_FORT = 60
-	AREA_MAID_MANSION = 61
-	AREA_DESTRUCTION_FORT = 62
-	AREA_WEAPONS_FORT = 63
-	AREA_HELL_FORT = 64
-	AREA_ANCIENT_GARDEN = 65
-	AREA_JAIL2 = 66
-	AREA_DOJO = 67
-	AREA_MOUNTAIN_PASS_WINDY = 68
-	AREA_DOGGOD_FOREST = 69
-	AREA_LOST_YLVA = 70
-	AREA_ULM_LESON = 71
-	AREA_YLVA_LIBRARY = 72
-	AREA_BLIMP = 73
-	AREA_AMUR_CAGE = 74
-	AREA_MIRAGE_TOWER = 75
-	AREA_CHAOS_CRADLE = 76
-	AREA_RUST_PLAZA = 77
-	AREA_DRAGON_VOLCANO = 78
-	AREA_GUARDIAN_SHRINE = 79
-	AREA_DOCK = 80
-	AREA_OL_DRAN = 81
-	AREA_IRMA_THALIA_WORKSHOP = 82
-	AREA_HARVEST_SHIP = 83
-	AREA_ABODE_OF_WITCH = 84
-	AREA_OBLIVION_PALACE = 85
-	AREA_WAR_GROUND = 86
-	AREA_SEMINAR = 87
-	AREA_MELKA_FOREST = 88
-	AREA_GRAVITY_VALLEY = 89
-	AREA_MOUNTAIN_RUIN = 90
-	AREA_AIMWELL = 91
-	AREA_ZAILE = 92
-	AREA_DEVIL_CAPE = 93
-	AREA_SEBI = 94
-	AREA_RASKILIS = 95
-
-	AREA_DISCARDED_RANCH = 100
-	AREA_MUSEUM = 101
-	AREA_SHOP = 102
-	AREA_CROP = 103
-	AREA_STORAGE_HOUSE = 104
+	#define global	MAX_AREA_COUNT	500
+	#define global	MAX_AREA_OLD	200
+	#define global	MAX_AREA_DATA	40
+	#define global	STARTING_USER_AREA	300
+	#define global	STARTING_RANDOM_AREA	450
+	#define global	STARTING_USER_AREA_OLD	100
+	#define global	STARTING_RANDOM_AREA_OLD	150
+
+	#define global	AREA_NONE	0
+	#define global	AREA_WORLD	1
+	#define global	AREA_WILDERNESS	2
+	#define global	AREA_LESIMAS	3
+	#define global	AREA_NORTH_TYRIS	4
+	#define global	AREA_VERNIS	5
+	#define global	AREA_ARENA	6
+	#define global	AREA_HOME	7
+	#define global	AREA_RANDOM_DUNGEON	8
+	#define global	AREA_TEST_GROUND	9
+	#define global	AREA_GRAVEYARD	10
+	#define global	AREA_PORT_KAPUL	11
+	#define global	AREA_YOWYN	12
+	#define global	AREA_QUEST	13
+	#define global	AREA_DERPHY	14
+	#define global	AREA_PALMIA	15
+	#define global	AREA_TOWER_OF_FIRE	16
+	#define global	AREA_CRYPT_OF_THE_DAMNED	17
+	#define global	AREA_ANCIENT_CASTLE	18
+	#define global	AREA_DRAGON_NEST	19
+	#define global	AREA_TRUCE_GROUND	20
+	#define global	AREA_CYBER_DOME	21
+	#define global	AREA_BEAST_FORT	22
+	#define global	AREA_MACHINE_FORT	23
+	#define global	AREA_COLLAPSED_FORT	24
+	#define global	AREA_LARNA	25
+	#define global	AREA_MOUNTAIN_PASS	26
+	#define global	AREA_PUPPY_CAVE	27
+	#define global	AREA_YEEK_NEST	28
+	#define global	AREA_SISTER_MANSION	29
+	#define global	AREA_SHELTER	30
+	#define global	AREA_RANCH	31
+	#define global	AREA_EMBASSY	32
+	#define global	AREA_NOYEL	33
+	#define global	AREA_MIROK_WORKSHOP	34
+	#define global	AREA_SHOW_HOUSE	35
+	#define global	AREA_LUMIEST	36
+	#define global	AREA_PYRAMID	37
+	#define global	AREA_MINOTAUR_NEST	38
+	#define global	AREA_DUNGEON	39
+	#define global	AREA_PET_ARENA	40
+	#define global	AREA_JAIL	41
+	#define global	AREA_VOID	42
+	#define global	AREA_NT_SOUTH_BORDER	43
+	#define global	AREA_SOUTH_TYRIS	44
+	#define global	AREA_ST_NORTH_BORDER	45
+	#define global	AREA_SMOKE_AND_PIPE	46
+	#define global	AREA_TEST_WORLD	47
+	#define global	AREA_TW_NORTH_BORDER	48
+	#define global	AREA_REMIDO	49
+	#define global	AREA_EIREL	50
+	#define global	AREA_RUOZA	51
+	#define global	AREA_MELKAWN	52
+	#define global	AREA_KURUALM	53
+	#define global	AREA_VALM	54
+	#define global	AREA_MELUGAS	55
+	#define global	AREA_ARCBELC	56
+	#define global	AREA_LUDUS	57
+	#define global	AREA_CHAOS_SHRINE	58
+	#define global	AREA_VALLEY_HADES	59
+	#define global	AREA_MACHINERY_FORT	60
+	#define global	AREA_MAID_MANSION	61
+	#define global	AREA_DESTRUCTION_FORT	62
+	#define global	AREA_WEAPONS_FORT	63
+	#define global	AREA_HELL_FORT	64
+	#define global	AREA_ANCIENT_GARDEN	65
+	#define global	AREA_JAIL2	66
+	#define global	AREA_DOJO	67
+	#define global	AREA_MOUNTAIN_PASS_WINDY	68
+	#define global	AREA_DOGGOD_FOREST	69
+	#define global	AREA_LOST_YLVA	70
+	#define global	AREA_ULM_LESON	71
+	#define global	AREA_YLVA_LIBRARY	72
+	#define global	AREA_BLIMP	73
+	#define global	AREA_AMUR_CAGE	74
+	#define global	AREA_MIRAGE_TOWER	75
+	#define global	AREA_CHAOS_CRADLE	76
+	#define global	AREA_RUST_PLAZA	77
+	#define global	AREA_DRAGON_VOLCANO	78
+	#define global	AREA_GUARDIAN_SHRINE	79
+	#define global	AREA_DOCK	80
+	#define global	AREA_OL_DRAN	81
+	#define global	AREA_IRMA_THALIA_WORKSHOP	82
+	#define global	AREA_HARVEST_SHIP	83
+	#define global	AREA_ABODE_OF_WITCH	84
+	#define global	AREA_OBLIVION_PALACE	85
+	#define global	AREA_WAR_GROUND	86
+	#define global	AREA_SEMINAR	87
+	#define global	AREA_MELKA_FOREST	88
+	#define global	AREA_GRAVITY_VALLEY	89
+	#define global	AREA_MOUNTAIN_RUIN	90
+	#define global	AREA_AIMWELL	91
+	#define global	AREA_ZAILE	92
+	#define global	AREA_DEVIL_CAPE	93
+	#define global	AREA_SEBI	94
+	#define global	AREA_RASKILIS	95
+
+	#define global	AREA_DISCARDED_RANCH	100
+	#define global	AREA_MUSEUM	101
+	#define global	AREA_SHOP	102
+	#define global	AREA_CROP	103
+	#define global	AREA_STORAGE_HOUSE	104
 
 	// ADATA //
-	ADATA_TYPE = 0
-	ADATA_X = 1
-	ADATA_Y = 2
-	ADATA_START_ON = 3
-	ADATA_TILE_FILE = 4
-	ADATA_NAME = 5
-	ADATA_DEEPEST = 6
-	ADATA_INITIALIZED = 7
-	ADATA_TIME_SCALE = 9
-	ADATA_MAX_LEVEL = 10
-	ADATA_CAN_SAVE = 11
-	ADATA_RESTORE_POS = 12
-	ADATA_SHOP_TYPE = 13
-	ADATA_ICON = 15
-	ADATA_ID = 16
-	ADATA_MIN_LEVEL = 17
-	ADATA_TILESET = 18
-	ADATA_LAST_VISIT = 19
-	ADATA_BOSS = 20
-	ADATA_FIELD = 21
-	ADATA_ARENA_WIN = 22
-	ADATA_PET_ARENA_WIN = 23
-	ADATA_RANDOM_SEED = 24
-	ADATA_RANDOM_RENEW = 25
-	ADATA_ARENA_RENEW1 = 26
-	ADATA_ARENA_RENEW2 = 27
-	ADATA_ECONOMY = 28
-	ADATA_FESTIVAL = 29
-	ADATA_PARENT = 30
-	ADATA_WAKEUP_NEFIA = 32
-	ADATA_ICON_ORG = 33
-	ADATA_QUEST_RENEW = 34
-	ADATA_NEFIA_GEM_CHANCE = 35
-	ADATA_REVIVED_CITIZENS = 36
+	#define global	ADATA_TYPE	0
+	#define global	ADATA_X	1
+	#define global	ADATA_Y	2
+	#define global	ADATA_START_ON	3
+	#define global	ADATA_TILE_FILE	4
+	#define global	ADATA_NAME	5
+	#define global	ADATA_DEEPEST	6
+	#define global	ADATA_INITIALIZED	7
+	#define global	ADATA_TIME_SCALE	9
+	#define global	ADATA_MAX_LEVEL	10
+	#define global	ADATA_CAN_SAVE	11
+	#define global	ADATA_RESTORE_POS	12
+	#define global	ADATA_SHOP_TYPE	13
+	#define global	ADATA_ICON	15
+	#define global	ADATA_ID	16
+	#define global	ADATA_MIN_LEVEL	17
+	#define global	ADATA_TILESET	18
+	#define global	ADATA_LAST_VISIT	19
+	#define global	ADATA_BOSS	20
+	#define global	ADATA_FIELD	21
+	#define global	ADATA_ARENA_WIN	22
+	#define global	ADATA_PET_ARENA_WIN	23
+	#define global	ADATA_RANDOM_SEED	24
+	#define global	ADATA_RANDOM_RENEW	25
+	#define global	ADATA_ARENA_RENEW1	26
+	#define global	ADATA_ARENA_RENEW2	27
+	#define global	ADATA_ECONOMY	28
+	#define global	ADATA_FESTIVAL	29
+	#define global	ADATA_PARENT	30
+	#define global	ADATA_WAKEUP_NEFIA	32
+	#define global	ADATA_ICON_ORG	33
+	#define global	ADATA_QUEST_RENEW	34
+	#define global	ADATA_NEFIA_GEM_CHANCE	35
+	#define global	ADATA_REVIVED_CITIZENS	36
 
-	ADATA_SHOP_SALE_RESTRICTION = 37
-	ADATA_RANCH_BREED_RESTRICTION = 37
+	#define global	ADATA_SHOP_SALE_RESTRICTION	37
+	#define global	ADATA_RANCH_BREED_RESTRICTION	37
 
-	ADATA_EXTRA_MEDAL = 38
+	#define global	ADATA_EXTRA_MEDAL	38
 
-	ADATA_SHOP_TYPE_CHANGE_COOLDOWN = 39
-	ADATA_RANCH_PRODUCE_RESTRICTION = 39
+	#define global	ADATA_SHOP_TYPE_CHANGE_COOLDOWN	39
+	#define global	ADATA_RANCH_PRODUCE_RESTRICTION	39
 
 	// Wake up nefia types
-	WAKEUP_NEFIA_NONE = 0
-	WAKEUP_NEFIA_NORMAL = 100
-	WAKEUP_NEFIA_TIME = 103
-	WAKEUP_NEFIA_POISON = 105
-	WAKEUP_NEFIA_GRAVITY = 108
+	#define global	WAKEUP_NEFIA_NONE	0
+	#define global	WAKEUP_NEFIA_NORMAL	100
+	#define global	WAKEUP_NEFIA_TIME	103
+	#define global	WAKEUP_NEFIA_POISON	105
+	#define global	WAKEUP_NEFIA_GRAVITY	108
 
 	// Shop types
-	SHOP_TYPE_GOODS = 0
-	SHOP_TYPE_FOOD = 1
-	SHOP_TYPE_MAGIC = 2
-	SHOP_TYPE_BLACKSMITH = 3
-	SHOP_TYPE_INN = 4
+	#define global	SHOP_TYPE_GOODS	0
+	#define global	SHOP_TYPE_FOOD	1
+	#define global	SHOP_TYPE_MAGIC	2
+	#define global	SHOP_TYPE_BLACKSMITH	3
+	#define global	SHOP_TYPE_INN	4
 
 	// Shop sales restrictions
-	SHOP_SALE_NONE = 0
-	SHOP_SALE_15_ITEMS = 1
-	SHOP_SALE_5_ITEMS = 2
+	#define global	SHOP_SALE_NONE	0
+	#define global	SHOP_SALE_15_ITEMS	1
+	#define global	SHOP_SALE_5_ITEMS	2
 
 	// QDATA //
-	QDATA_MAX_SIZE = 20
-	QDATA_MAX_CLIENT = 500
-	QNAME_MAX_SIZE = 40
-
-	QDATA_CLIENT = 0
-	QDATA_MAP = 1
-	QDATA_RENEW = 2
-	QDATA_EXIST = 3
-	QDATA_VAR = 4
-	QDATA_LEVEL = 5
-	QDATA_REWARD = 6
-	QDATA_REWARD_ITEM = 7
-	QDATA_STATUS = 8
-	QDATA_DEADLINE = 9
-
-	QDATA_ENCOUNTER = 10
-	QDATA_DEST_CLIENT = 10
-
-	QDATA_DEST_ITEM = 11
-	QDATA_PARAM1 = 12
-	QDATA_PARAM2 = 13
-	QDATA_TYPE = 14
-	QDATA_QUEST_TARGET = 15
+	#define global	QDATA_MAX_SIZE	20
+	#define global	QDATA_MAX_CLIENT	500
+	#define global	QNAME_MAX_SIZE	40
+
+	#define global	QDATA_CLIENT	0
+	#define global	QDATA_MAP	1
+	#define global	QDATA_RENEW	2
+	#define global	QDATA_EXIST	3
+	#define global	QDATA_VAR	4
+	#define global	QDATA_LEVEL	5
+	#define global	QDATA_REWARD	6
+	#define global	QDATA_REWARD_ITEM	7
+	#define global	QDATA_STATUS	8
+	#define global	QDATA_DEADLINE	9
+
+	#define global	QDATA_ENCOUNTER	10
+	#define global	QDATA_DEST_CLIENT	10
+
+	#define global	QDATA_DEST_ITEM	11
+	#define global	QDATA_PARAM1	12
+	#define global	QDATA_PARAM2	13
+	#define global	QDATA_TYPE	14
+	#define global	QDATA_QUEST_TARGET	15
 
 	// Quest types and subtypes
-	STARTING_QUEST_TYPE = 1000
+	#define global	STARTING_QUEST_TYPE	1000
 
-	QUEST_TYPE_HUNT = 1001
-	QUEST_TYPE_DELIVER = 1002
-	QUEST_TYPE_COOK = 1003
-	QUEST_TYPE_SUPPLY = 1004
-	QUEST_TYPE_MUSIC = 1005
-	QUEST_TYPE_HARVEST = 1006
-	QUEST_TYPE_ESCORT = 1007
-	QUEST_TYPE_CONQUER = 1008
-	QUEST_TYPE_PARTY = 1009
-	QUEST_TYPE_HUNTEX = 1010
-	QUEST_TYPE_COLLECT = 1011
-	QUEST_TYPE_THIEVES = 1012
-	QUEST_TYPE_MINEFIELD = 1013
-
-	QUEST_TYPE_NONE = 0
-	QUEST_SUBTYPE_ELIMINATE = 1
-	QUEST_SUBTYPE_DELIVER = 2
-	QUEST_SUBTYPE_SUPPLY = 3
-	QUEST_SUBTYPE_MUSIC = 4
-	QUEST_SUBTYPE_CARRY = 5
-	QUEST_SUBTYPE_GUARD = 6
-	QUEST_SUBTYPE_PERFORM = 7
-	QUEST_SUBTYPE_CONQUER = 8
-	QUEST_SUBTYPE_COLLECT = 9
-	QUEST_SUBTYPE_TRAP = 10
+	#define global	QUEST_TYPE_HUNT	1001
+	#define global	QUEST_TYPE_DELIVER	1002
+	#define global	QUEST_TYPE_COOK	1003
+	#define global	QUEST_TYPE_SUPPLY	1004
+	#define global	QUEST_TYPE_MUSIC	1005
+	#define global	QUEST_TYPE_HARVEST	1006
+	#define global	QUEST_TYPE_ESCORT	1007
+	#define global	QUEST_TYPE_CONQUER	1008
+	#define global	QUEST_TYPE_PARTY	1009
+	#define global	QUEST_TYPE_HUNTEX	1010
+	#define global	QUEST_TYPE_COLLECT	1011
+	#define global	QUEST_TYPE_THIEVES	1012
+	#define global	QUEST_TYPE_MINEFIELD	1013
+
+	#define global	QUEST_TYPE_NONE	0
+	#define global	QUEST_SUBTYPE_ELIMINATE	1
+	#define global	QUEST_SUBTYPE_DELIVER	2
+	#define global	QUEST_SUBTYPE_SUPPLY	3
+	#define global	QUEST_SUBTYPE_MUSIC	4
+	#define global	QUEST_SUBTYPE_CARRY	5
+	#define global	QUEST_SUBTYPE_GUARD	6
+	#define global	QUEST_SUBTYPE_PERFORM	7
+	#define global	QUEST_SUBTYPE_CONQUER	8
+	#define global	QUEST_SUBTYPE_COLLECT	9
+	#define global	QUEST_SUBTYPE_TRAP	10
 
 	// Quest states
-	QUEST_STATE_NONE = 0
-	QUEST_STATE_ONGOING = 1
-	QUEST_STATE_FAIL = 2
-	QUEST_STATE_SUCCESS = 3
+	#define global	QUEST_STATE_NONE	0
+	#define global	QUEST_STATE_ONGOING	1
+	#define global	QUEST_STATE_FAIL	2
+	#define global	QUEST_STATE_SUCCESS	3
 
 	// Quest reward type
-	QUEST_REWARD_NONE = 0
-	QUEST_REWARD_WEAR = 1
-	QUEST_REWARD_MAGIC = 2
-	QUEST_REWARD_ARMOR = 3
-	QUEST_REWARD_WEAPON = 4
-	QUEST_REWARD_SUPPLY = 5
+	#define global	QUEST_REWARD_NONE	0
+	#define global	QUEST_REWARD_WEAR	1
+	#define global	QUEST_REWARD_MAGIC	2
+	#define global	QUEST_REWARD_ARMOR	3
+	#define global	QUEST_REWARD_WEAPON	4
+	#define global	QUEST_REWARD_SUPPLY	5
 
 	// Text colors
-	COLOR_DEFAULT = 0
-	COLOR_RANDOM = 1
-	COLOR_GREEN = 2
-	COLOR_RED = 3
-	COLOR_BLUE = 4
-	COLOR_YELLOW = 5
-	COLOR_BROWN = 6
-	COLOR_BLACK = 7
-	COLOR_PURPLE = 8
-	COLOR_SKY_BLUE = 9
-	COLOR_PINK = 10
-	COLOR_ORANGE = 11
-	COLOR_WHITE = 12
-	COLOR_FRESH = 13
-	COLOR_DARK_GREEN = 14
-	COLOR_GRAY = 15
-	COLOR_LIGHT_RED = 16
-	COLOR_LIGHT_BLUE = 17
-	COLOR_LIGHT_PURPLE = 18
-	COLOR_LIGHT_GREEN = 19
-	COLOR_TALK = 20
-	COLOR_LIGHT_BLUE2 = 21
-	COLOR_RED2 = 22
-	COLOR_LIME = 23
-	COLOR_DARK_GRAY = 24
-	COLOR_YELLOW2 = 25
-	COLOR_LIGHT_BROWN = 26
-	COLOR_PURPLE2 = 27
-	COLOR_DARK_GRAY2 = 28
-	COLOR_DARK_GRAY3 = 29
+	#define global	COLOR_DEFAULT	0
+	#define global	COLOR_RANDOM	1
+	#define global	COLOR_GREEN	2
+	#define global	COLOR_RED	3
+	#define global	COLOR_BLUE	4
+	#define global	COLOR_YELLOW	5
+	#define global	COLOR_BROWN	6
+	#define global	COLOR_BLACK	7
+	#define global	COLOR_PURPLE	8
+	#define global	COLOR_SKY_BLUE	9
+	#define global	COLOR_PINK	10
+	#define global	COLOR_ORANGE	11
+	#define global	COLOR_WHITE	12
+	#define global	COLOR_FRESH	13
+	#define global	COLOR_DARK_GREEN	14
+	#define global	COLOR_GRAY	15
+	#define global	COLOR_LIGHT_RED	16
+	#define global	COLOR_LIGHT_BLUE	17
+	#define global	COLOR_LIGHT_PURPLE	18
+	#define global	COLOR_LIGHT_GREEN	19
+	#define global	COLOR_TALK	20
+	#define global	COLOR_LIGHT_BLUE2	21
+	#define global	COLOR_RED2	22
+	#define global	COLOR_LIME	23
+	#define global	COLOR_DARK_GRAY	24
+	#define global	COLOR_YELLOW2	25
+	#define global	COLOR_LIGHT_BROWN	26
+	#define global	COLOR_PURPLE2	27
+	#define global	COLOR_DARK_GRAY2	28
+	#define global	COLOR_DARK_GRAY3	29
 
-	MAX_COLOR = COLOR_DARK_GRAY3 + 1
+	#define global	MAX_COLOR	(COLOR_DARK_GRAY3 + 1)
 
-	COLOR_TINT_MULT = 1000
+	#define global	COLOR_TINT_MULT	1000
 
 	// GODS
-	GOD_EYTH = 0
-	GOD_MANI = 1
-	GOD_LULWY = 2
-	GOD_ITZPALT = 3
-	GOD_EHEKATL = 4
-	GOD_OPATOS = 5
-	GOD_JURE = 6
-	GOD_KUMIROMI = 7
-	GOD_YACATECT = 8
-
-	GOD_TEXT_BETRAY = 1
-	GOD_TEXT_TAKE_OVER = 2
-	GOD_TEXT_TAKE_OVER_FAIL = 3
-	GOD_TEXT_OFFER_GREAT = 4
-	GOD_TEXT_JOIN = 5
-	GOD_TEXT_GIFT = 6
-	GOD_TEXT_LIKE = 7
-	GOD_TEXT_LOVE = 8
-	GOD_TEXT_KILL = 9
-	GOD_TEXT_SLEEP = 10
-	GOD_TEXT_WELCOME = 11
-	GOD_TEXT_RANDOM = 12
-	GOD_TEXT_WIP = 13
+	#define global	GOD_EYTH	0
+	#define global	GOD_MANI	1
+	#define global	GOD_LULWY	2
+	#define global	GOD_ITZPALT	3
+	#define global	GOD_EHEKATL	4
+	#define global	GOD_OPATOS	5
+	#define global	GOD_JURE	6
+	#define global	GOD_KUMIROMI	7
+	#define global	GOD_YACATECT	8
+
+	#define global	GOD_TEXT_BETRAY	1
+	#define global	GOD_TEXT_TAKE_OVER	2
+	#define global	GOD_TEXT_TAKE_OVER_FAIL	3
+	#define global	GOD_TEXT_OFFER_GREAT	4
+	#define global	GOD_TEXT_JOIN	5
+	#define global	GOD_TEXT_GIFT	6
+	#define global	GOD_TEXT_LIKE	7
+	#define global	GOD_TEXT_LOVE	8
+	#define global	GOD_TEXT_KILL	9
+	#define global	GOD_TEXT_SLEEP	10
+	#define global	GOD_TEXT_WELCOME	11
+	#define global	GOD_TEXT_RANDOM	12
+	#define global	GOD_TEXT_WIP	13
 
 	// NPC Roles
-	ROLE_NONE = 0
-	ROLE_SHOPKEEPER = 1
-	ROLE_CHEF = 2
-	ROLE_SPECIAL = 3
-	ROLE_CITIZEN = 4
-	ROLE_IDENTIFIER = 5
-	ROLE_MAYOR = 6
-	ROLE_TRAINER = 7
-	ROLE_INFORMER = 8
-	ROLE_BARTENDER = 9
-	ROLE_ARENA_MASTER = 10
-	ROLE_PET_ARENA_MASTER = 11
-	ROLE_HEALER = 12
-	ROLE_ADVENTURER = 13
-	ROLE_GUARD = 14
-	ROLE_KING = 15
-	ROLE_SHOP_GUARD = 16
-	ROLE_SLAVER = 17
-	ROLE_MAID = 18
-	ROLE_SISTER = 19
-	ROLE_USER = 20
-	ROLE_RETURNER = 21
-	ROLE_HORSE_MASTER = 22
-	ROLE_CARAVAN_MASTER = 23
-	ROLE_BOUNTY_HUNTER = 24
-
-	ROLE_SHOP_MIN = 1000
-	ROLE_SHOP_WEAPON = 1000
-	ROLE_SHOP_ARMOR = 1001
-	ROLE_SHOP_FOOD = 1002
-	ROLE_SHOP_BAKERY = 1003
-	ROLE_SHOP_MAGIC = 1004
-	ROLE_SHOP_INN = 1005
-	ROLE_SHOP_GENERAL = 1006
-	ROLE_SHOP_BLACKMARKET = 1007
-	ROLE_SHOP_GOODS = 1008
-	ROLE_SHOP_TRADE = 1009
-	ROLE_SHOP_WANDER = 1010
-	ROLE_SHOP_SALESPERSON = 1011
-	ROLE_SHOP_OFFICE = 1012
-	ROLE_SHOP_DEED = 1013
-	ROLE_SHOP_FISH = 1014
-	ROLE_SHOP_NOYEL = 1015
-	ROLE_SHOP_MIROK = 1016
-	ROLE_SHOP_MOUNTAIN1 = 1017
-	ROLE_SHOP_MOUNTAIN2 = 1018
-	ROLE_SHOP_SISTER = 1019
-	ROLE_SHOP_BOOK_RESERVE = 1020
-	ROLE_SHOP_THIEF = 1021
-	ROLE_SHOP_FESTIVAL = 1022
-	ROLE_SHOP_STOKE = 1023
-	ROLE_SHOP_MOYER = 1024
-	ROLE_GUEST_HALLOWEEN = 1025
-
-	ROLE_GUEST_MIN = 2000
-	ROLE_GUEST_BEGGAR = 2000
-	ROLE_GUEST_SEX = 2001
-	ROLE_GUEST_CITIZEN = 2002
-	ROLE_GUEST_MERCHANT = 2003
-	ROLE_GUEST_CRITIC = 2004
-	ROLE_GUEST_TRAINER = 2005
-	ROLE_GUEST_PRODUCER = 2006
-	MAX_ROLE_GUEST = 3000
+	#define global	ROLE_NONE	0
+	#define global	ROLE_SHOPKEEPER	1
+	#define global	ROLE_CHEF	2
+	#define global	ROLE_SPECIAL	3
+	#define global	ROLE_CITIZEN	4
+	#define global	ROLE_IDENTIFIER	5
+	#define global	ROLE_MAYOR	6
+	#define global	ROLE_TRAINER	7
+	#define global	ROLE_INFORMER	8
+	#define global	ROLE_BARTENDER	9
+	#define global	ROLE_ARENA_MASTER	10
+	#define global	ROLE_PET_ARENA_MASTER	11
+	#define global	ROLE_HEALER	12
+	#define global	ROLE_ADVENTURER	13
+	#define global	ROLE_GUARD	14
+	#define global	ROLE_KING	15
+	#define global	ROLE_SHOP_GUARD	16
+	#define global	ROLE_SLAVER	17
+	#define global	ROLE_MAID	18
+	#define global	ROLE_SISTER	19
+	#define global	ROLE_USER	20
+	#define global	ROLE_RETURNER	21
+	#define global	ROLE_HORSE_MASTER	22
+	#define global	ROLE_CARAVAN_MASTER	23
+	#define global	ROLE_BOUNTY_HUNTER	24
+
+	#define global	ROLE_SHOP_MIN	1000
+	#define global	ROLE_SHOP_WEAPON	1000
+	#define global	ROLE_SHOP_ARMOR	1001
+	#define global	ROLE_SHOP_FOOD	1002
+	#define global	ROLE_SHOP_BAKERY	1003
+	#define global	ROLE_SHOP_MAGIC	1004
+	#define global	ROLE_SHOP_INN	1005
+	#define global	ROLE_SHOP_GENERAL	1006
+	#define global	ROLE_SHOP_BLACKMARKET	1007
+	#define global	ROLE_SHOP_GOODS	1008
+	#define global	ROLE_SHOP_TRADE	1009
+	#define global	ROLE_SHOP_WANDER	1010
+	#define global	ROLE_SHOP_SALESPERSON	1011
+	#define global	ROLE_SHOP_OFFICE	1012
+	#define global	ROLE_SHOP_DEED	1013
+	#define global	ROLE_SHOP_FISH	1014
+	#define global	ROLE_SHOP_NOYEL	1015
+	#define global	ROLE_SHOP_MIROK	1016
+	#define global	ROLE_SHOP_MOUNTAIN1	1017
+	#define global	ROLE_SHOP_MOUNTAIN2	1018
+	#define global	ROLE_SHOP_SISTER	1019
+	#define global	ROLE_SHOP_BOOK_RESERVE	1020
+	#define global	ROLE_SHOP_THIEF	1021
+	#define global	ROLE_SHOP_FESTIVAL	1022
+	#define global	ROLE_SHOP_STOKE	1023
+	#define global	ROLE_SHOP_MOYER	1024
+	#define global	ROLE_GUEST_HALLOWEEN	1025
+
+	#define global	ROLE_GUEST_MIN	2000
+	#define global	ROLE_GUEST_BEGGAR	2000
+	#define global	ROLE_GUEST_SEX	2001
+	#define global	ROLE_GUEST_CITIZEN	2002
+	#define global	ROLE_GUEST_MERCHANT	2003
+	#define global	ROLE_GUEST_CRITIC	2004
+	#define global	ROLE_GUEST_TRAINER	2005
+	#define global	ROLE_GUEST_PRODUCER	2006
+	#define global	MAX_ROLE_GUEST	3000
 
 	// PCC //
-	PCC_HAIR = 1
-	PCC_CHEST = 2
-	PCC_LEG = 3
-	PCC_MANTLE = 4
-	PCC_BELT = 5
-	PCC_BOOTS = 6
-	PCC_PANTS = 7
-	PCC_GLOVE = 8
-	PCC_CLOTH = 9
-	PCC_SUB_HAIR = 10
-	PCC_ETC1 = 11
-	PCC_ETC2 = 12
-	PCC_ETC3 = 13
-	PCC_EYE = 14
-	PCC_BODY = 15
-	PCC_RIDE = 16
-
-	STARTING_PCC_HIDE = 20
-	PCC_HIDE_CHEST = 20
-	PCC_HIDE_LEG = 21
-	PCC_HIDE_BELT = 22
-	PCC_HIDE_GLOVE = 23
-	PCC_HIDE_MANTLE = 24
+	#define global	PCC_HAIR	1
+	#define global	PCC_CHEST	2
+	#define global	PCC_LEG	3
+	#define global	PCC_MANTLE	4
+	#define global	PCC_BELT	5
+	#define global	PCC_BOOTS	6
+	#define global	PCC_PANTS	7
+	#define global	PCC_GLOVE	8
+	#define global	PCC_CLOTH	9
+	#define global	PCC_SUB_HAIR	10
+	#define global	PCC_ETC1	11
+	#define global	PCC_ETC2	12
+	#define global	PCC_ETC3	13
+	#define global	PCC_EYE	14
+	#define global	PCC_BODY	15
+	#define global	PCC_RIDE	16
+
+	#define global	STARTING_PCC_HIDE	20
+	#define global	PCC_HIDE_CHEST	20
+	#define global	PCC_HIDE_LEG	21
+	#define global	PCC_HIDE_BELT	22
+	#define global	PCC_HIDE_GLOVE	23
+	#define global	PCC_HIDE_MANTLE	24
 
 	// Character states
-	CHAR_STATE_DEAD = 0
-	CHAR_STATE_ALIVE = 1
-	CHAR_STATE_SPIRIT = 2
-	CHAR_STATE_ADV = 3
-	CHAR_STATE_ADV_HOSPITAL = 4
-	CHAR_STATE_ADV_DEAD = 5
-	CHAR_STATE_ALLY_DEAD = 6
-	CHAR_STATE_ALLY_WAIT = 7
-	CHAR_STATE_SUSPEND = 8
-	CHAR_STATE_ALLY_WORK = 9
-	CHAR_STATE_TEMP = 10
+	#define global	CHAR_STATE_DEAD	0
+	#define global	CHAR_STATE_ALIVE	1
+	#define global	CHAR_STATE_SPIRIT	2
+	#define global	CHAR_STATE_ADV	3
+	#define global	CHAR_STATE_ADV_HOSPITAL	4
+	#define global	CHAR_STATE_ADV_DEAD	5
+	#define global	CHAR_STATE_ALLY_DEAD	6
+	#define global	CHAR_STATE_ALLY_WAIT	7
+	#define global	CHAR_STATE_SUSPEND	8
+	#define global	CHAR_STATE_ALLY_WORK	9
+	#define global	CHAR_STATE_TEMP	10
 
 	// Environment effect
-	ENVIRONMENT_EFFECT_NONE = 0
-	ENVIRONMENT_EFFECT_ACID = 100
-	ENVIRONMENT_EFFECT_FIRE = 200
-	ENVIRONMENT_EFFECT_WATER = 400
+	#define global	ENVIRONMENT_EFFECT_NONE	0
+	#define global	ENVIRONMENT_EFFECT_ACID	100
+	#define global	ENVIRONMENT_EFFECT_FIRE	200
+	#define global	ENVIRONMENT_EFFECT_WATER	400
 
 	// Directive modes
-	DIRECTIVE_MODE_TEMPORARY = -1
-	DIRECTIVE_MODE_OFFENSIVE = 0
-	DIRECTIVE_MODE_DEFENSIVE = 1
-	DIRECTIVE_MODE_INTERCEPT = 2
-	DIRECTIVE_MODE_TALKING = 3
+	#define global	DIRECTIVE_MODE_TEMPORARY	-1
+	#define global	DIRECTIVE_MODE_OFFENSIVE	0
+	#define global	DIRECTIVE_MODE_DEFENSIVE	1
+	#define global	DIRECTIVE_MODE_INTERCEPT	2
+	#define global	DIRECTIVE_MODE_TALKING	3
 
 	// CDATA - CDATAN //
-	CDATA_EXIST = 0
-	CDATA_X = 1
-	CDATA_Y = 2
-	CDATA_X_NEW = 3
-	CDATA_Y_NEW = 4
-	CDATA_RESPAWN = 5
-	CDATA_SYNC = 6
-	CDATA_PIC = 7
-	CDATA_SEX = 8
-	CDATA_RELATION = 9
-	CDATA_SPEED_SUM = 10
-	CDATA_SPEED = 11
-	CDATA_AI_ITEM = 12
-	CDATA_PORTRAIT = 13
-	CDATA_INTEREST = 14
-	CDATA_INTEREST_RENEW = 15
-	CDATA_PERSONALITY = 16
-	CDATA_IMPRESSION = 17
-	CDATA_TONE = 18
-	CDATA_HEIGHT = 19
-	CDATA_WEIGHT = 20
-	CDATA_AGE = 21
-	CDATA_HUNGER = 22
-	CDATA_TXT = 23
-	CDATA_UNIQUE = 24
-	CDATA_QUALITY = 25
-	CDATA_TURN = 26
-	CDATA_ID = 27
-	CDATA_FOV = 28
-	CDATA_TARGET = 29
-	CDATA_GOLD = 30
-	CDATA_PLATINUM = 31
-	CDATA_ATTACK_STYLE = 32
-	CDATA_MELEE_STYLE = 33
-	CDATA_FAME = 34
-	CDATA_EXP = 35
-	CDATA_EXP_TO_NEXT_LVL = 36
-	CDATA_TIME_SCALE = 37
-	CDATA_LEVEL = 38
-	CDATA_SPEED_FIX = 39
-	CDATA_ALIGNMENT = 40
-	CDATA_SKILLPOINT = 41
-	CDATA_SP_EARNED = 42
-	CDATA_INV_WEIGHT = 43
-	CDATA_CARRY_LIMIT = 44
-	CDATA_BURDEN = 45
-	CDATA_MARK_ITEM_ADJUST_Z = 46
-	CDATA_MARK_ITEM_ADJUST_R = 47
-	CDATA_LEVEL_ORG = 48
-	CDATA_KARMA = 49
-	CDATA_HP = 50
-	CDATA_MAX_HP = 51
-	CDATA_SP = 52
-	CDATA_MAX_SP = 53
-	CDATA_MARK_ITEM_COL = 54
-	CDATA_MP = 55
-	CDATA_MAX_MP = 56
-	CDATA_REMOTE_BLOW = 57
-	CDATA_ALLIED = 58
-	CDATA_SPRITE_SIZE_MILK = 59
-	CDATA_DRAIN_HP = 60
-	CDATA_GOD = 61
-	CDATA_PIETY = 62
-	CDATA_PRAY = 63
-	CDATA_EQUIP_WEIGHT = 64
-	CDATA_CAST_STYLE = 65
-	CDATA_PIERCING_CHANCE = 66
-	CDATA_CRIT_CHANCE = 67
-	CDATA_BODY_SPEED_FIX = 68
-	CDATA_RELATION_ORG = 69
-	CDATA_PV = 70
-	CDATA_DV = 71
-	CDATA_ATTACK = 72
-	CDATA_DAMAGE = 73
-	CDATA_R_ATTACK = 74
-	CDATA_R_DAMAGE = 75
-	CDATA_PV_FIX = 76
-	CDATA_DV_FIX = 77
-	CDATA_BARRIER = 78
-	CDATA_EMO_ICON = 79
-	CDATA_AREA = 80
-	CDATA_AREA_LEVEL = 81
-	CDATA_QUEST_NPC = 82
-	CDATA_DIR = 83
-	CDATA_HIRE_DATE = 84
-	CDATA_FRIENDSHIP = 85
-	CDATA_SANITY = 86
-	CDATA_CURSE = 87
-	CDATA_EXTRA_MELEE = 88
-	CDATA_EXTRA_SHOOT = 89
-	CDATA_RES_DAMAGE = 90
-	CDATA_IMMUNE_DAMAGE = 91
-	CDATA_REFLECT_DAMAGE = 92
-	CDATA_VOMIT = 93
-	CDATA_REFLECT_MAGIC = 94
-	CDATA_PIC_ORG = 95
-	CDATA_SHIELD_STYLE_TYPE = 96
-	CDATA_WEAPON_STYLE_TYPE = 97
-	CDATA_ENHANCE_SPELL = 98
-	CDATA_PRECIOUS_ALLY = 99
-
-	CDATA_STARTING_EQUIP_SLOTS = 100
-
-	CDATA_EQUIP_SLOT_1 = 100
-	CDATA_EQUIP_SLOT_2 = 101
-	CDATA_EQUIP_SLOT_3 = 102
-	CDATA_EQUIP_SLOT_4 = 103
-	CDATA_EQUIP_SLOT_5 = 104
-	CDATA_EQUIP_SLOT_6 = 105
-	CDATA_EQUIP_SLOT_7 = 106
-	CDATA_EQUIP_SLOT_8 = 107
-	CDATA_EQUIP_SLOT_9 = 108
-	CDATA_EQUIP_SLOT_10 = 109
-	CDATA_EQUIP_SLOT_11 = 110
-	CDATA_EQUIP_SLOT_12 = 111
-	CDATA_EQUIP_SLOT_13 = 112
-	CDATA_EQUIP_SLOT_14 = 113
-	CDATA_EQUIP_SLOT_15 = 114
-	CDATA_EQUIP_SLOT_16 = 115
-	CDATA_EQUIP_SLOT_17 = 116
-	CDATA_EQUIP_SLOT_18 = 117
-	CDATA_EQUIP_SLOT_19 = 118
-	CDATA_EQUIP_SLOT_20 = 119
-	CDATA_EQUIP_SLOT_21 = 120
-	CDATA_EQUIP_SLOT_22 = 121
-	CDATA_EQUIP_SLOT_23 = 122
-	CDATA_EQUIP_SLOT_24 = 123
-	CDATA_EQUIP_SLOT_25 = 124
-	CDATA_EQUIP_SLOT_26 = 125
-	CDATA_EQUIP_SLOT_27 = 126
-	CDATA_EQUIP_SLOT_28 = 127
-	CDATA_EQUIP_SLOT_29 = 128
-	CDATA_EQUIP_SLOT_30 = 129
-
-	CDATA_ROW_ACT = 140
-	CDATA_ACTION_PERIOD = 141
-	CDATA_ITEM_USING = 142
-	CDATA_ROW_ACT_WARNING = 143
-	CDATA_PERFORM_SCORE = 144
-	CDATA_PERFORM_GOLD = 145
-	CDATA_NECRO_FORCE = 146
-	CDATA_SHOP_INVEST = 147
-	CDATA_EVASION_PENALTY = 148
-	CDATA_ROLE = 150
-	CDATA_ROLE_SHOP_LEVEL = 151
-	CDATA_ROW_ACT_TC = 152
-	CDATA_ROLE_FILE_ID = 153
-	CDATA_ROLE_RESTOCK = 154
-	CDATA_ROLE_VAL = 155
-	CDATA_AI_INT = 156
-	CDATA_USERNPC_ID = 157
-	CDATA_RACE_ID = 158
-	CDATA_AP_TOTAL = 159
-	CDATA_INIT_LIFEMANA = 160
-	CDATA_BACKGROUND_PART_A1 = 161
-	CDATA_BACKGROUND_PART_A2 = 162
-	CDATA_BACKGROUND_PART_B1 = 163
-	CDATA_BACKGROUND_PART_B2 = 164
-	CDATA_BACKGROUND_PART_B3 = 165
-	CDATA_CAN_REVIVE = 166
-	CDATA_TAGTEAM_PARTNER = 167
-	CDATA_IN_TAGTEAM = 168
-	CDATA_MASTER_SERVANT = 169
-	CDATA_ENVIRONMENT_EFFECT = 170
-	CDATA_X_ORG = 171
-	CDATA_Y_ORG = 172
-	CDATA_AP_CURRENT = 173
-	CDATA_ATTRIBUTE_ELE = 174
-	CDATA_CONDITION_WINCE = 175
-	CDATA_CONDITION_CHILLS = 176
-	CDATA_BRUSH_LEVEL = 177
-	CDATA_GAUGE_COOLDOWN = 178
-	CDATA_PROT_PENALTY = 179
-	CDATA_SEALED_MAGIC = 180
-	CDATA_SEALED_ABILITY = 181
-	CDATA_POWER_GAUGE = 182
-	CDATA_GAUGE_COOLDOWN2 = 183
-	CDATA_DAMAGE_FIX = 184
-	CDATA_DIRECTIVE_MODE_ORG = 185
-	CDATA_MASTER_SERVANT2 = 186
-	CDATA_TAMER_WHIP_PICKUP = 187
-	CDATA_TONE_SEX = 188
-	CDATA_SPINDLE_COMBINATION_A = 189
-	CDATA_SPINDLE_COMBINATION_B = 190
-	CDATA_MATERIAL1_COUNTER = 191
-	CDATA_MATERIAL2_COUNTER = 192
-	CDATA_MATERIAL3_COUNTER = 193
-	CDATA_MATERIAL4_COUNTER = 194
-	CDATA_MATERIAL5_COUNTER = 195
-	CDATA_RIDING = 196
-	CDATA_CHARACTER_TIER = 197
-	CDATA_INIT_ATTR = 198
-	CDATA_INIT_SPEED = 199
-	CDATA_AI = 200
-	CDATA_AI_AGGRO = 201
-	CDATA_AI_CALM = 202
-	CDATA_MOVE_AROUND = 203
-	CDATA_MOVE_DIR = 204
-	CDATA_X_DEST = 205
-	CDATA_Y_DEST = 206
-	CDATA_AI_MOVE_FREQ = 207
-	CDATA_AI_DISTANCE = 208
-	CDATA_AI_SUB = 209
-	CDATA_ACT_RANGE = 210
-	CDATA_ACT_HEAL = 211
-	CDATA_ACT_INDEX = 212
-	CDATA_TAMER_WHIP_EAT = 213
-	CDATA_EVOLUTION_STAGE = 214
-
-	STARTING_CDATA_ACT_MAIN = 215
-	RANGE_CDATA_ACT_MAIN = 5
-	STARTING_CDATA_ACT_SUB = 220
-	RANGE_CDATA_ACT_SUB = 5
-
-	CDATA_ELEMENT = 230
-
-	STARTING_CDATA_ATTR = 240
-
-	CDATA_CONDITION_POISON = 250
-	CDATA_CONDITION_SLEEP = 251
-	CDATA_CONDITION_PARALYZE = 252
-	CDATA_CONDITION_BLIND = 253
-	CDATA_CONDITION_CONFUSE = 254
-	CDATA_CONDITION_FEAR = 255
-	CDATA_CONDITION_DIM = 256
-	CDATA_CONDITION_DRUNK = 257
-	CDATA_CONDITION_BLEED = 258
-	CDATA_CONDITION_WET = 259
-	CDATA_CONDITION_INSANE = 260
-	CDATA_CONDITION_SICK = 261
-	CDATA_CONDITION_GRAVITY = 262
-	CDATA_CONDITION_SUFFOCATION = 263
-	CDATA_CONDITION_ANGRY = 264
-	CDATA_CONDITION_METAL = 265
-	CDATA_DIRECTIVE_MODE = 266
-	CDATA_CONDITION_ATROPHY = 267
-	CDATA_CONDITION_BIND = 268
-	CDATA_CONDITION_BRAINWASH = 269
-
-	STARTING_CDATA_FOOD_EXP = 270
-	RANGE_CDATA_FOOD_EXP = 10
-
-	STARTING_CDATA_BUFF = 280
-	ARRAY_CDATA_BUFF = 3
-	MAX_BLESSINGS = 8
-	MAX_HEXES = 8
-
-	CDATA_JOIN_DATE_MONTH = 400
-	CDATA_JOIN_DATE_DAY = 401
-	CDATA_JOIN_DATE_YEAR = 402
-	CDATA_DEC_ENEMY_CRIT_CHANCE = 403
-	CDATA_ALCOHOL_CONSUMED = 404
-	CDATA_EXTRA_ATTACKS_TYPE = 405
-	CDATA_EXTRA_ATTACKS = 406
-	CDATA_LIVESTOCK_QUALITY = 407
-	CDATA_LIVESTOCK_PRODUCE_QUALITY = 408
-	CDATA_SHIFT_FORM = 409
-	CDATA_FORM_SHIFT_PIC = 410
-	CDATA_FORM_SHIFT_PCC_HAIR = 411
-	CDATA_CONDITION_OIL = 412
-	CDATA_VOTES_RECEIVED = 413
-	CDATA_ELEMENTS_EYES_ELE = 414
-	CDATA_CONDITION_JIU_JITSU = 415
-	CDATA_FORM_SHIFT_PCC_PANTS = 417
-	CDATA_ENHANCE_BREATH = 418
-	CDATA_FORM_SHIFT_PCC_CLOTH = 419
-	CDATA_FORM_SHIFT_PCC_SUB_HAIR = 420
-	CDATA_FORM_SHIFT_PCC_ETC1 = 421
-	CDATA_FORM_SHIFT_PCC_ETC2 = 422
-	CDATA_FORM_SHIFT_PCC_ETC3 = 423
-	CDATA_FORM_SHIFT_PCC_EYE = 424
-	CDATA_FORM_SHIFT_PCC_BODY = 425
-	CDATA_FORM_SHIFT_PCC_RIDE = 426
-	CDATA_FORM_SHIFT_PORTRAIT = 427
-	CDATA_CUSTOM_TALK_LINE = 428
-	CDATA_ROCK_THROWING = 429
-	CDATA_INFANT = 430
-	CDATA_FACE = 431
-	CDATA_FORM_SHIFT_FACE = 432
-	CDATA_EVOCHAT_POINTS = 433
-	CDATA_CONDITION_INVERT = 434
-	CDATA_CHARA_PIC = 435
-	CDATA_SHIELD_PARRY = 436
-	CDATA_CHARA_PIC_ORG = 437
-	CDATA_HOME = 438
-	CDATA_SALES_EXP = 439
-	CDATA_SALES_FEATS = 440
-	CDATA_CONDITION_SEPPUKU = 441
-	CDATA_TOBACCO_DEPENDENCE = 442
-	CDATA_DRUG_DEPENDENCE = 443
-	CDATA_CHAIN_ATTACK_COUNT = 444
-	CDATA_CONDITION_MPOISON = 445
-	CDATA_THIRST = 446
-	CDATA_MARK_ITEM_PIC = 447
-	CDATA_MARK_ITEM_X = 448
-	CDATA_MARK_ITEM_Y = 449
-
-	STARTING_CDATA_CHARA_BIT = 450
-
-	CDATAN_NAME = 0
-	CDATAN_AKA = 1
-	CDATAN_RACE = 2
-	CDATAN_CLASS = 3
-	CDATAN_MSG = 4
-	CDATAN_USER_NPC_TAG = 5
-	CDATAN_FAKE_CLASS = 6
-	CDATAN_CUSTOM_RACE = 7
-	CDATAN_NEWSEX = 8
-	CDATAN_FORM_SHIFT_NAME = 9
+	#define global	CDATA_EXIST	0
+	#define global	CDATA_X	1
+	#define global	CDATA_Y	2
+	#define global	CDATA_X_NEW	3
+	#define global	CDATA_Y_NEW	4
+	#define global	CDATA_RESPAWN	5
+	#define global	CDATA_SYNC	6
+	#define global	CDATA_PIC	7
+	#define global	CDATA_SEX	8
+	#define global	CDATA_RELATION	9
+	#define global	CDATA_SPEED_SUM	10
+	#define global	CDATA_SPEED	11
+	#define global	CDATA_AI_ITEM	12
+	#define global	CDATA_PORTRAIT	13
+	#define global	CDATA_INTEREST	14
+	#define global	CDATA_INTEREST_RENEW	15
+	#define global	CDATA_PERSONALITY	16
+	#define global	CDATA_IMPRESSION	17
+	#define global	CDATA_TONE	18
+	#define global	CDATA_HEIGHT	19
+	#define global	CDATA_WEIGHT	20
+	#define global	CDATA_AGE	21
+	#define global	CDATA_HUNGER	22
+	#define global	CDATA_TXT	23
+	#define global	CDATA_UNIQUE	24
+	#define global	CDATA_QUALITY	25
+	#define global	CDATA_TURN	26
+	#define global	CDATA_ID	27
+	#define global	CDATA_FOV	28
+	#define global	CDATA_TARGET	29
+	#define global	CDATA_GOLD	30
+	#define global	CDATA_PLATINUM	31
+	#define global	CDATA_ATTACK_STYLE	32
+	#define global	CDATA_MELEE_STYLE	33
+	#define global	CDATA_FAME	34
+	#define global	CDATA_EXP	35
+	#define global	CDATA_EXP_TO_NEXT_LVL	36
+	#define global	CDATA_TIME_SCALE	37
+	#define global	CDATA_LEVEL	38
+	#define global	CDATA_SPEED_FIX	39
+	#define global	CDATA_ALIGNMENT	40
+	#define global	CDATA_SKILLPOINT	41
+	#define global	CDATA_SP_EARNED	42
+	#define global	CDATA_INV_WEIGHT	43
+	#define global	CDATA_CARRY_LIMIT	44
+	#define global	CDATA_BURDEN	45
+	#define global	CDATA_MARK_ITEM_ADJUST_Z	46
+	#define global	CDATA_MARK_ITEM_ADJUST_R	47
+	#define global	CDATA_LEVEL_ORG	48
+	#define global	CDATA_KARMA	49
+	#define global	CDATA_HP	50
+	#define global	CDATA_MAX_HP	51
+	#define global	CDATA_SP	52
+	#define global	CDATA_MAX_SP	53
+	#define global	CDATA_MARK_ITEM_COL	54
+	#define global	CDATA_MP	55
+	#define global	CDATA_MAX_MP	56
+	#define global	CDATA_REMOTE_BLOW	57
+	#define global	CDATA_ALLIED	58
+	#define global	CDATA_SPRITE_SIZE_MILK	59
+	#define global	CDATA_DRAIN_HP	60
+	#define global	CDATA_GOD	61
+	#define global	CDATA_PIETY	62
+	#define global	CDATA_PRAY	63
+	#define global	CDATA_EQUIP_WEIGHT	64
+	#define global	CDATA_CAST_STYLE	65
+	#define global	CDATA_PIERCING_CHANCE	66
+	#define global	CDATA_CRIT_CHANCE	67
+	#define global	CDATA_BODY_SPEED_FIX	68
+	#define global	CDATA_RELATION_ORG	69
+	#define global	CDATA_PV	70
+	#define global	CDATA_DV	71
+	#define global	CDATA_ATTACK	72
+	#define global	CDATA_DAMAGE	73
+	#define global	CDATA_R_ATTACK	74
+	#define global	CDATA_R_DAMAGE	75
+	#define global	CDATA_PV_FIX	76
+	#define global	CDATA_DV_FIX	77
+	#define global	CDATA_BARRIER	78
+	#define global	CDATA_EMO_ICON	79
+	#define global	CDATA_AREA	80
+	#define global	CDATA_AREA_LEVEL	81
+	#define global	CDATA_QUEST_NPC	82
+	#define global	CDATA_DIR	83
+	#define global	CDATA_HIRE_DATE	84
+	#define global	CDATA_FRIENDSHIP	85
+	#define global	CDATA_SANITY	86
+	#define global	CDATA_CURSE	87
+	#define global	CDATA_EXTRA_MELEE	88
+	#define global	CDATA_EXTRA_SHOOT	89
+	#define global	CDATA_RES_DAMAGE	90
+	#define global	CDATA_IMMUNE_DAMAGE	91
+	#define global	CDATA_REFLECT_DAMAGE	92
+	#define global	CDATA_VOMIT	93
+	#define global	CDATA_REFLECT_MAGIC	94
+	#define global	CDATA_PIC_ORG	95
+	#define global	CDATA_SHIELD_STYLE_TYPE	96
+	#define global	CDATA_WEAPON_STYLE_TYPE	97
+	#define global	CDATA_ENHANCE_SPELL	98
+	#define global	CDATA_PRECIOUS_ALLY	99
+
+	#define global	CDATA_STARTING_EQUIP_SLOTS	100
+
+	#define global	CDATA_EQUIP_SLOT_1	100
+	#define global	CDATA_EQUIP_SLOT_2	101
+	#define global	CDATA_EQUIP_SLOT_3	102
+	#define global	CDATA_EQUIP_SLOT_4	103
+	#define global	CDATA_EQUIP_SLOT_5	104
+	#define global	CDATA_EQUIP_SLOT_6	105
+	#define global	CDATA_EQUIP_SLOT_7	106
+	#define global	CDATA_EQUIP_SLOT_8	107
+	#define global	CDATA_EQUIP_SLOT_9	108
+	#define global	CDATA_EQUIP_SLOT_10	109
+	#define global	CDATA_EQUIP_SLOT_11	110
+	#define global	CDATA_EQUIP_SLOT_12	111
+	#define global	CDATA_EQUIP_SLOT_13	112
+	#define global	CDATA_EQUIP_SLOT_14	113
+	#define global	CDATA_EQUIP_SLOT_15	114
+	#define global	CDATA_EQUIP_SLOT_16	115
+	#define global	CDATA_EQUIP_SLOT_17	116
+	#define global	CDATA_EQUIP_SLOT_18	117
+	#define global	CDATA_EQUIP_SLOT_19	118
+	#define global	CDATA_EQUIP_SLOT_20	119
+	#define global	CDATA_EQUIP_SLOT_21	120
+	#define global	CDATA_EQUIP_SLOT_22	121
+	#define global	CDATA_EQUIP_SLOT_23	122
+	#define global	CDATA_EQUIP_SLOT_24	123
+	#define global	CDATA_EQUIP_SLOT_25	124
+	#define global	CDATA_EQUIP_SLOT_26	125
+	#define global	CDATA_EQUIP_SLOT_27	126
+	#define global	CDATA_EQUIP_SLOT_28	127
+	#define global	CDATA_EQUIP_SLOT_29	128
+	#define global	CDATA_EQUIP_SLOT_30	129
+
+	#define global	CDATA_ROW_ACT	140
+	#define global	CDATA_ACTION_PERIOD	141
+	#define global	CDATA_ITEM_USING	142
+	#define global	CDATA_ROW_ACT_WARNING	143
+	#define global	CDATA_PERFORM_SCORE	144
+	#define global	CDATA_PERFORM_GOLD	145
+	#define global	CDATA_NECRO_FORCE	146
+	#define global	CDATA_SHOP_INVEST	147
+	#define global	CDATA_EVASION_PENALTY	148
+	#define global	CDATA_ROLE	150
+	#define global	CDATA_ROLE_SHOP_LEVEL	151
+	#define global	CDATA_ROW_ACT_TC	152
+	#define global	CDATA_ROLE_FILE_ID	153
+	#define global	CDATA_ROLE_RESTOCK	154
+	#define global	CDATA_ROLE_VAL	155
+	#define global	CDATA_AI_INT	156
+	#define global	CDATA_USERNPC_ID	157
+	#define global	CDATA_RACE_ID	158
+	#define global	CDATA_AP_TOTAL	159
+	#define global	CDATA_INIT_LIFEMANA	160
+	#define global	CDATA_BACKGROUND_PART_A1	161
+	#define global	CDATA_BACKGROUND_PART_A2	162
+	#define global	CDATA_BACKGROUND_PART_B1	163
+	#define global	CDATA_BACKGROUND_PART_B2	164
+	#define global	CDATA_BACKGROUND_PART_B3	165
+	#define global	CDATA_CAN_REVIVE	166
+	#define global	CDATA_TAGTEAM_PARTNER	167
+	#define global	CDATA_IN_TAGTEAM	168
+	#define global	CDATA_MASTER_SERVANT	169
+	#define global	CDATA_ENVIRONMENT_EFFECT	170
+	#define global	CDATA_X_ORG	171
+	#define global	CDATA_Y_ORG	172
+	#define global	CDATA_AP_CURRENT	173
+	#define global	CDATA_ATTRIBUTE_ELE	174
+	#define global	CDATA_CONDITION_WINCE	175
+	#define global	CDATA_CONDITION_CHILLS	176
+	#define global	CDATA_BRUSH_LEVEL	177
+	#define global	CDATA_GAUGE_COOLDOWN	178
+	#define global	CDATA_PROT_PENALTY	179
+	#define global	CDATA_SEALED_MAGIC	180
+	#define global	CDATA_SEALED_ABILITY	181
+	#define global	CDATA_POWER_GAUGE	182
+	#define global	CDATA_GAUGE_COOLDOWN2	183
+	#define global	CDATA_DAMAGE_FIX	184
+	#define global	CDATA_DIRECTIVE_MODE_ORG	185
+	#define global	CDATA_MASTER_SERVANT2	186
+	#define global	CDATA_TAMER_WHIP_PICKUP	187
+	#define global	CDATA_TONE_SEX	188
+	#define global	CDATA_SPINDLE_COMBINATION_A	189
+	#define global	CDATA_SPINDLE_COMBINATION_B	190
+	#define global	CDATA_MATERIAL1_COUNTER	191
+	#define global	CDATA_MATERIAL2_COUNTER	192
+	#define global	CDATA_MATERIAL3_COUNTER	193
+	#define global	CDATA_MATERIAL4_COUNTER	194
+	#define global	CDATA_MATERIAL5_COUNTER	195
+	#define global	CDATA_RIDING	196
+	#define global	CDATA_CHARACTER_TIER	197
+	#define global	CDATA_INIT_ATTR	198
+	#define global	CDATA_INIT_SPEED	199
+	#define global	CDATA_AI	200
+	#define global	CDATA_AI_AGGRO	201
+	#define global	CDATA_AI_CALM	202
+	#define global	CDATA_MOVE_AROUND	203
+	#define global	CDATA_MOVE_DIR	204
+	#define global	CDATA_X_DEST	205
+	#define global	CDATA_Y_DEST	206
+	#define global	CDATA_AI_MOVE_FREQ	207
+	#define global	CDATA_AI_DISTANCE	208
+	#define global	CDATA_AI_SUB	209
+	#define global	CDATA_ACT_RANGE	210
+	#define global	CDATA_ACT_HEAL	211
+	#define global	CDATA_ACT_INDEX	212
+	#define global	CDATA_TAMER_WHIP_EAT	213
+	#define global	CDATA_EVOLUTION_STAGE	214
+
+	#define global	STARTING_CDATA_ACT_MAIN	215
+	#define global	RANGE_CDATA_ACT_MAIN	5
+	#define global	STARTING_CDATA_ACT_SUB	220
+	#define global	RANGE_CDATA_ACT_SUB	5
+
+	#define global	CDATA_ELEMENT	230
+
+	#define global	STARTING_CDATA_ATTR	240
+
+	#define global	CDATA_CONDITION_POISON	250
+	#define global	CDATA_CONDITION_SLEEP	251
+	#define global	CDATA_CONDITION_PARALYZE	252
+	#define global	CDATA_CONDITION_BLIND	253
+	#define global	CDATA_CONDITION_CONFUSE	254
+	#define global	CDATA_CONDITION_FEAR	255
+	#define global	CDATA_CONDITION_DIM	256
+	#define global	CDATA_CONDITION_DRUNK	257
+	#define global	CDATA_CONDITION_BLEED	258
+	#define global	CDATA_CONDITION_WET	259
+	#define global	CDATA_CONDITION_INSANE	260
+	#define global	CDATA_CONDITION_SICK	261
+	#define global	CDATA_CONDITION_GRAVITY	262
+	#define global	CDATA_CONDITION_SUFFOCATION	263
+	#define global	CDATA_CONDITION_ANGRY	264
+	#define global	CDATA_CONDITION_METAL	265
+	#define global	CDATA_DIRECTIVE_MODE	266
+	#define global	CDATA_CONDITION_ATROPHY	267
+	#define global	CDATA_CONDITION_BIND	268
+	#define global	CDATA_CONDITION_BRAINWASH	269
+
+	#define global	STARTING_CDATA_FOOD_EXP	270
+	#define global	RANGE_CDATA_FOOD_EXP	10
+
+	#define global	STARTING_CDATA_BUFF	280
+	#define global	ARRAY_CDATA_BUFF	3
+	#define global	MAX_BLESSINGS	8
+	#define global	MAX_HEXES	8
+
+	#define global	CDATA_JOIN_DATE_MONTH	400
+	#define global	CDATA_JOIN_DATE_DAY	401
+	#define global	CDATA_JOIN_DATE_YEAR	402
+	#define global	CDATA_DEC_ENEMY_CRIT_CHANCE	403
+	#define global	CDATA_ALCOHOL_CONSUMED	404
+	#define global	CDATA_EXTRA_ATTACKS_TYPE	405
+	#define global	CDATA_EXTRA_ATTACKS	406
+	#define global	CDATA_LIVESTOCK_QUALITY	407
+	#define global	CDATA_LIVESTOCK_PRODUCE_QUALITY	408
+	#define global	CDATA_SHIFT_FORM	409
+	#define global	CDATA_FORM_SHIFT_PIC	410
+	#define global	CDATA_FORM_SHIFT_PCC_HAIR	411
+	#define global	CDATA_CONDITION_OIL	412
+	#define global	CDATA_VOTES_RECEIVED	413
+	#define global	CDATA_ELEMENTS_EYES_ELE	414
+	#define global	CDATA_CONDITION_JIU_JITSU	415
+	#define global	CDATA_FORM_SHIFT_PCC_PANTS	417
+	#define global	CDATA_ENHANCE_BREATH	418
+	#define global	CDATA_FORM_SHIFT_PCC_CLOTH	419
+	#define global	CDATA_FORM_SHIFT_PCC_SUB_HAIR	420
+	#define global	CDATA_FORM_SHIFT_PCC_ETC1	421
+	#define global	CDATA_FORM_SHIFT_PCC_ETC2	422
+	#define global	CDATA_FORM_SHIFT_PCC_ETC3	423
+	#define global	CDATA_FORM_SHIFT_PCC_EYE	424
+	#define global	CDATA_FORM_SHIFT_PCC_BODY	425
+	#define global	CDATA_FORM_SHIFT_PCC_RIDE	426
+	#define global	CDATA_FORM_SHIFT_PORTRAIT	427
+	#define global	CDATA_CUSTOM_TALK_LINE	428
+	#define global	CDATA_ROCK_THROWING	429
+	#define global	CDATA_INFANT	430
+	#define global	CDATA_FACE	431
+	#define global	CDATA_FORM_SHIFT_FACE	432
+	#define global	CDATA_EVOCHAT_POINTS	433
+	#define global	CDATA_CONDITION_INVERT	434
+	#define global	CDATA_CHARA_PIC	435
+	#define global	CDATA_SHIELD_PARRY	436
+	#define global	CDATA_CHARA_PIC_ORG	437
+	#define global	CDATA_HOME	438
+	#define global	CDATA_SALES_EXP	439
+	#define global	CDATA_SALES_FEATS	440
+	#define global	CDATA_CONDITION_SEPPUKU	441
+	#define global	CDATA_TOBACCO_DEPENDENCE	442
+	#define global	CDATA_DRUG_DEPENDENCE	443
+	#define global	CDATA_CHAIN_ATTACK_COUNT	444
+	#define global	CDATA_CONDITION_MPOISON	445
+	#define global	CDATA_THIRST	446
+	#define global	CDATA_MARK_ITEM_PIC	447
+	#define global	CDATA_MARK_ITEM_X	448
+	#define global	CDATA_MARK_ITEM_Y	449
+
+	#define global	STARTING_CDATA_CHARA_BIT	450
+
+	#define global	CDATAN_NAME	0
+	#define global	CDATAN_AKA	1
+	#define global	CDATAN_RACE	2
+	#define global	CDATAN_CLASS	3
+	#define global	CDATAN_MSG	4
+	#define global	CDATAN_USER_NPC_TAG	5
+	#define global	CDATAN_FAKE_CLASS	6
+	#define global	CDATAN_CUSTOM_RACE	7
+	#define global	CDATAN_NEWSEX	8
+	#define global	CDATAN_FORM_SHIFT_NAME	9
 
 	// Character tier
-	CHARACTER_TIER_NONE = 0
-	CHARACTER_TIER_SUMMONED_NORMAL = 10
-	CHARACTER_TIER_GOD = 20
-	CHARACTER_TIER_SUMMONED_GOD_TRUCE = 30
-	CHARACTER_TIER_SUMMONED_GOD_HOME = 40
+	#define global	CHARACTER_TIER_NONE	0
+	#define global	CHARACTER_TIER_SUMMONED_NORMAL	10
+	#define global	CHARACTER_TIER_GOD	20
+	#define global	CHARACTER_TIER_SUMMONED_GOD_TRUCE	30
+	#define global	CHARACTER_TIER_SUMMONED_GOD_HOME	40
 
 	// Conditions
-	CONDITION_POISON = 1
-	CONDITION_SLEEP = 2
-	CONDITION_PARALYZE = 3
-	CONDITION_BLIND = 4
-	CONDITION_CONFUSE = 5
-	CONDITION_FEAR = 6
-	CONDITION_DIM = 7
-	CONDITION_DRUNK = 8
-	CONDITION_BLEED = 9
-	CONDITION_WET = 10
-	CONDITION_INSANE = 11
-	CONDITION_SICK = 12
+	#define global	CONDITION_POISON	1
+	#define global	CONDITION_SLEEP	2
+	#define global	CONDITION_PARALYZE	3
+	#define global	CONDITION_BLIND	4
+	#define global	CONDITION_CONFUSE	5
+	#define global	CONDITION_FEAR	6
+	#define global	CONDITION_DIM	7
+	#define global	CONDITION_DRUNK	8
+	#define global	CONDITION_BLEED	9
+	#define global	CONDITION_WET	10
+	#define global	CONDITION_INSANE	11
+	#define global	CONDITION_SICK	12
 
-	CONDITION_OIL = 18
+	#define global	CONDITION_OIL	18
 
-	CONDITION_INVERT = 20
-	CONDITION_MPOISON = 21
+	#define global	CONDITION_INVERT	20
+	#define global	CONDITION_MPOISON	21
 
 	// Shield style type
-	SHIELD_STYLE_NORMAL = 1
-	SHIELD_STYLE_TONFA = 2
+	#define global	SHIELD_STYLE_NORMAL	1
+	#define global	SHIELD_STYLE_TONFA	2
 
 	// Weapon style type
-	WEAPON_STYLE_LONGSWORD = 1
-	WEAPON_STYLE_SHORTSWORD2 = 2
-	WEAPON_STYLE_LONGSWORD2 = 3
-	WEAPON_STYLE_BLUDGEON = 4
-	WEAPON_STYLE_POLEARM = 5
-	WEAPON_STYLE_STAVE2 = 6
-	WEAPON_STYLE_SICKLE = 7
-
-	WEAPON_STYLE_SHORTSWORD = 101
-	WEAPON_STYLE_AXE = 103
-	WEAPON_STYLE_STAVE = 105
+	#define global	WEAPON_STYLE_LONGSWORD	1
+	#define global	WEAPON_STYLE_SHORTSWORD2	2
+	#define global	WEAPON_STYLE_LONGSWORD2	3
+	#define global	WEAPON_STYLE_BLUDGEON	4
+	#define global	WEAPON_STYLE_POLEARM	5
+	#define global	WEAPON_STYLE_STAVE2	6
+	#define global	WEAPON_STYLE_SICKLE	7
+
+	#define global	WEAPON_STYLE_SHORTSWORD	101
+	#define global	WEAPON_STYLE_AXE	103
+	#define global	WEAPON_STYLE_STAVE	105
 	
-	WEAPON_STYLE_SWORDCANE = 1001
+	#define global	WEAPON_STYLE_SWORDCANE	1001
 
 	// Shift forms
-	SHIFT_FORM_NONE = 0
-	SHIFT_FORM_ALPHA = 1
-	SHIFT_FORM_BETA = 2
-	SHIFT_FORM_GAMMA = 3
-	SHIFT_FORM_DELTA = 4
-	SHIFT_FORM_OMEGA = 5
-
-	// GDATA = GDATAN //
-	GDATA_DEATH = 0
-	GDATA_DEEPEST = 1
-	GDATA_KILLED = 2
-	GDATA_CROWD = 3
-	GDATA_TURN = 4
-	GDATA_WORLD_X = 5
-	GDATA_WORLD_Y = 6
-	GDATA_DAY_PAST = 7
-	GDATA_RAND_SEED_A = 8
-	GDATA_RAND_SEED_B = 9
-	GDATA_YEAR = 10
-	GDATA_MONTH = 11
-	GDATA_DAY = 12
-	GDATA_HOUR = 13
-	GDATA_MIN = 14
-	GDATA_SEC = 15
-	GDATA_COUNT_SHOP = 16
-	GDATA_WEATHER = 17
-	GDATA_NEXT_WEATHER = 18
-	GDATA_AREA_PREV = 19
-	GDATA_AREA = 20
-	GDATA_SUB_AREA = 21
-	GDATA_LEVEL = 22
-	GDATA_SUB_LEVEL = 23
-	GDATA_HOME_LEVEL = 24
-	GDATA_ABSORB_CHARGE = 25
-	GDATA_LEVEL_START_ON = 26
-	GDATA_COUNT_SHELTER = 27
-	GDATA_TRAVEL_SPEED = 28
-	GDATA_RES_ETHERWIND = 29
-	GDATA_RUN = 30
-	GDATA_RUN_LEFT = 31
-	GDATA_RUN_UP = 32
-	GDATA_RUN_RIGHT = 33
-	GDATA_RUN_DOWN = 34
-	GDATA_RUN_DIR = 35
-	GDATA_STORY_BOOKMARK = 36
-	GDATA_LIGHT_SOURCE = 37
-	GDATA_QUIT_Y = 38
-	GDATA_LEARNED = 39
-
-	STARTING_GDATA_SHORTCUT = 40
-	RANGE_GDATA_SHORTCUT = 20
-
-	GDATA_LAST_EDGE_X = 60
-	GDATA_LAST_EDGE_Y = 61
-	GDATA_WORLD_TILE = 62
-	GDATA_RETURN = 63
-	GDATA_TELEPORT_AREA = 64
-	GDATA_TELEPORT_LEVEL = 65
-	GDATA_RETURN_AREA = 66
-	GDATA_RETURN_LEVEL = 67
-	GDATA_RETURN_X = 68
-	GDATA_RETURN_Y = 69
-	GDATA_QUEST = 70
-	GDATA_QUEST_TYPE = 71
-	GDATA_QUEST_REF = 72
-	GDATA_QUEST_STATUS = 73
-	GDATA_QUEST_FAME = 74
-	GDATA_CLIENT = 75
-	GDATA_HOME_BASE = 76
-	GDATA_HOME_FURNITURE = 77
-	GDATA_HOME_VALUE = 78
-	GDATA_WORLD_RENEW = 79
-	GDATA_CARGO_WEIGHT = 80
-	GDATA_CARGO_LIMIT_ORG = 81
-	GDATA_CARGO_LIMIT = 82
-	GDATA_RES_WEATHER = 83
-	GDATA_TIME_LIMIT = 84
-	GDATA_CORRUPTION = 85
-	GDATA_USERNPC_COUNT = 86
-	GDATA_COUNT_NOTICE = 87
-	GDATA_NEXT_TRAIN = 88
-	GDATA_LIGHT = 89
-	GDATA_SLEEP = 90
-	GDATA_ROW_ACT = 91
-	GDATA_SLEEP_EXP = 92
-	GDATA_TRAIT_POINT = 93
-	GDATA_SCOPE = 94
-	GDATA_WELL_WISH = 95
-	GDATA_VERSION = 96
-	GDATA_HEIR_DEED = 97
-	GDATA_SLEEP_GENE = 98
-	GDATA_NEXT_VOTE = 99
-
-	STARTING_GDATA_RANK = 120
-	GDATA_RANK_ARENA = 120
-	GDATA_RANK_PET_ARENA = 121
-	GDATA_RANK_CRAWLER = 122
-	GDATA_RANK_MUSEUM = 123
-	GDATA_RANK_HOME = 124
-	GDATA_RANK_SHOP = 125
-	GDATA_RANK_VOTE = 126
-	GDATA_RANK_FISHING = 127
-	GDATA_RANK_GUILD = 128
-
-	STARTING_GDATA_RANK_NORMA = 140
-
-	GDATA_QUEST_POOL = 160
-
-	GDATA_COST_HIRE = 170
-	GDATA_MAP_EVENT = 171
-	GDATA_ACTIVATE_PROC = 172
-	GDATA_SENSE_OBJECT = 173
-	GDATA_ADVENTURER_ORACLE = 174
-	GDATA_TEMPORARY_FLAGS = 175
-	GDATA_PIERCING_BONUS = 176
-	GDATA_SKILLBOOK_COOLDOWN = 177
-	GDATA_BILL = 179
-	GDATA_TRAVEL_DISTANCE = 180
-	GDATA_TRAVEL_TIME = 181
-	GDATA_LAST_TOWN = 182
-	GDATA_RIDER = 183
-	GDATA_MAP_VERSION = 184
-	GDATA_GOD_TALK = 185
-	GDATA_VOID_BOSS = 186
-	GDATA_GOD_DETECT = 187
-	GDATA_DOJO_TURNS = 188
-	GDATA_DEEPEST_LEVEL = 189
-	GDATA_GATHERING_ATTEMPS = 190
-	GDATA_CUSTOM_TALK = 191
-	GDATA_RAPID_FIRE = 192
-	GDATA_TEMPORARY_FLAGS2 = 193
-	GDATA_TEMPORARY_FLAGS3 = 194
-	GDATA_CUSTOM_TEXT_DIALOG = 195
-	GDATA_GAMEMODE_PENALTY = 196
-	GDATA_QUICK_USE = 197
-	GDATA_SPINDLE_COMBINATION = 198
-	GDATA_SPEEDSUM_RESET = 199
-
-	STARTING_GDATA_HELP = 200
-
-	STARTING_GDATA_FLAG = 250
-	GDATA_FLAG_TUTORIAL = STARTING_GDATA_FLAG + 0
-	GDATA_FLAG_MAIN = STARTING_GDATA_FLAG + 2
-	GDATA_FLAG_MAIN_FOOL = STARTING_GDATA_FLAG + 3
-	GDATA_FLAG_MAIN_SAGE = STARTING_GDATA_FLAG + 4
-	GDATA_FLAG_MAIN_KING = STARTING_GDATA_FLAG + 5
-	GDATA_FLAG_CASINO = STARTING_GDATA_FLAG + 6
-	GDATA_FLAG_ALLY = STARTING_GDATA_FLAG + 7
-	GDATA_FLAG_FIRE_GIANT = STARTING_GDATA_FLAG + 8
-	GDATA_FLAG_GIANT_ID = STARTING_GDATA_FLAG + 9
-	GDATA_FLAG_HOLY_WELL = STARTING_GDATA_FLAG + 10
-	GDATA_FLAG_KAMIKAZE = STARTING_GDATA_FLAG + 11
-	GDATA_FLAG_RENEW_DUNGEON = STARTING_GDATA_FLAG + 12
-	GDATA_FLAG_GUILD_MAGE = STARTING_GDATA_FLAG + 13
-	GDATA_FLAG_GUILD_FIGHTER = STARTING_GDATA_FLAG + 14
-	GDATA_FLAG_GUILD_THIEF = STARTING_GDATA_FLAG + 15
-	GDATA_FLAG_GUILD_MAGE_NORMA = STARTING_GDATA_FLAG + 16
-	GDATA_FLAG_GUILD_FIGHTER_NORMA = STARTING_GDATA_FLAG + 17
-	GDATA_FLAG_GUILD_FIGHTER_THIEF = STARTING_GDATA_FLAG + 18
-	GDATA_FLAG_GUILD_THIEF_NORMA = STARTING_GDATA_FLAG + 19
-	GDATA_FLAG_MAIN_ANKH = STARTING_GDATA_FLAG + 20
-	GDATA_FLAG_MAIN_DATA_CHIP = STARTING_GDATA_FLAG + 21
-	GDATA_FLAG_MAIN_CHAOS_WINGS = STARTING_GDATA_FLAG + 22
-	GDATA_FLAG_GAME_MODE = STARTING_GDATA_FLAG + 23
-	GDATA_FLAG_NEFIA_CONQUERED = STARTING_GDATA_FLAG + 24
-	GDATA_FLAG_JOBS_COMPLETED = STARTING_GDATA_FLAG + 25
-	GDATA_FLAG_MILES_TRAVELED = STARTING_GDATA_FLAG + 26
-	GDATA_FLAG_HIGHEST_NORMAL_DAMAGE = STARTING_GDATA_FLAG + 27
-	GDATA_FLAG_PROSTITUTION_COUNTER = STARTING_GDATA_FLAG + 28
-	GDATA_FLAG_NUCLEAR_EXPLOSIONS = STARTING_GDATA_FLAG + 29
-	GDATA_FLAG_HUMANS_EATEN = STARTING_GDATA_FLAG + 30
-	GDATA_FLAG_TIMES_MARRIED = STARTING_GDATA_FLAG + 31
-	GDATA_FLAG_TIMES_CONVERTED = STARTING_GDATA_FLAG + 32
-	GDATA_FLAG_TREASURE_FOUND = STARTING_GDATA_FLAG + 33
-	GDATA_FLAG_CAT_DOG_KILLED = STARTING_GDATA_FLAG + 34
-	GDATA_FLAG_RAGNAROK_STARTED = STARTING_GDATA_FLAG + 35
-	GDATA_FLAG_WISHES_MADE = STARTING_GDATA_FLAG + 36
-	GDATA_FLAG_YOUNGER_SISTERS = STARTING_GDATA_FLAG + 37
-	GDATA_FLAG_JOBS_FAILED = STARTING_GDATA_FLAG + 38
-	GDATA_FLAG_HOURS_SLEPT = STARTING_GDATA_FLAG + 39
-	GDATA_FLAG_BANDITS_KILLED = STARTING_GDATA_FLAG + 40
-	GDATA_FLAG_TOTAL_PLATINUM = STARTING_GDATA_FLAG + 41
-	GDATA_FLAG_BREAD_EATEN = STARTING_GDATA_FLAG + 42
-	GDATA_FLAG_PANTIES_EATEN = STARTING_GDATA_FLAG + 43
-	GDATA_FLAG_TIMES_EATEN_IN_SECRET = STARTING_GDATA_FLAG + 44
-	GDATA_FLAG_STOLEN_GOODS = STARTING_GDATA_FLAG + 45
-	GDATA_FLAG_WALLS_MINED = STARTING_GDATA_FLAG + 46
-	GDATA_FLAG_CREATED_BY_ALCHEMY = STARTING_GDATA_FLAG + 47
-	GDATA_FLAG_CREATED_BY_CARPENTRY = STARTING_GDATA_FLAG + 48
-	GDATA_FLAG_CREATED_BY_JEWELRY = STARTING_GDATA_FLAG + 49
-	GDATA_FLAG_CREATED_BY_TAILORING = STARTING_GDATA_FLAG + 50
-	GDATA_FLAG_HOUSE_VISITORS = STARTING_GDATA_FLAG + 51
-	GDATA_FLAG_GWEN_KILLED = STARTING_GDATA_FLAG + 52
-	GDATA_FLAG_LOMIAS_KILLED = STARTING_GDATA_FLAG + 53
-	GDATA_FLAG_TREES_FELLED = STARTING_GDATA_FLAG + 54
-	GDATA_FLAG_PEOPLE_CONVERTED = STARTING_GDATA_FLAG + 55
-	GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE = STARTING_GDATA_FLAG + 56
-	GDATA_FLAG_HIGHEST_ARENA_STREAK = STARTING_GDATA_FLAG + 57
-	GDATA_FLAG_HIGHEST_PET_ARENA_STREAK = STARTING_GDATA_FLAG + 58
-	GDATA_FLAG_TIMES_DUELED = STARTING_GDATA_FLAG + 59
-
-	GDATA_FLAG_SUB_SLIME = STARTING_GDATA_FLAG + 200
-	GDATA_FLAG_SUB_ROGUE = STARTING_GDATA_FLAG + 201
-	GDATA_FLAG_SUB_NIGHTMARE = STARTING_GDATA_FLAG + 202
-	GDATA_FLAG_SUB_MOTHER = STARTING_GDATA_FLAG + 203
-	GDATA_FLAG_SUB_WIFE = STARTING_GDATA_FLAG + 204
-	GDATA_FLAG_SUB_DOG = STARTING_GDATA_FLAG + 205
-	GDATA_FLAG_SUB_CAT = STARTING_GDATA_FLAG + 206
-	GDATA_FLAG_SUB_WAR = STARTING_GDATA_FLAG + 207
-	GDATA_FLAG_SUB_YEEK = STARTING_GDATA_FLAG + 208
-	GDATA_FLAG_SUB_KAMIKAZE = STARTING_GDATA_FLAG + 209
-	GDATA_FLAG_SUB_MIAS_DREAM = STARTING_GDATA_FLAG + 210
-	GDATA_FLAG_SUB_VEIN = STARTING_GDATA_FLAG + 211
-	GDATA_FLAG_SUB_PYRAMID = STARTING_GDATA_FLAG + 212
-	GDATA_FLAG_SUB_NUKE = STARTING_GDATA_FLAG + 213
-	GDATA_FLAG_SUB_BIOLOGIST = STARTING_GDATA_FLAG + 214
-	GDATA_FLAG_SUB_SEWER = STARTING_GDATA_FLAG + 215
-	GDATA_FLAG_SUB_GUILD_MAGE = STARTING_GDATA_FLAG + 216
-	GDATA_FLAG_SUB_GUILD_FIGHTER = STARTING_GDATA_FLAG + 217
-	GDATA_FLAG_SUB_GUILD_THIEF = STARTING_GDATA_FLAG + 218
-	GDATA_FLAG_SUB_MAGE_1 = STARTING_GDATA_FLAG + 219
-	GDATA_FLAG_SUB_FIGHTER_1 = STARTING_GDATA_FLAG + 220
-	GDATA_FLAG_SUB_THIEF_1 = STARTING_GDATA_FLAG + 221
-	GDATA_FLAG_SUB_MINOTAUR = STARTING_GDATA_FLAG + 222
-	GDATA_FLAG_SUB_DADDY = STARTING_GDATA_FLAG + 223
-	GDATA_FLAG_SUB_KANEDA = STARTING_GDATA_FLAG + 224
-	GDATA_FLAG_SUB_LOST_KITTY = STARTING_GDATA_FLAG + 225
-	GDATA_FLAG_SUB_DIVERSIONARY_TACTICS = STARTING_GDATA_FLAG + 226
-	GDATA_FLAG_SUB_JUERES_IMPERTINENCE = STARTING_GDATA_FLAG + 227
-	GDATA_FLAG_SUB_PIRATE_HUNTING = STARTING_GDATA_FLAG + 228
-	GDATA_FLAG_SUB_FALLEN_PRINCESS = STARTING_GDATA_FLAG + 229
-	GDATA_FLAG_SUB_UNPAID_COMPENSATION = STARTING_GDATA_FLAG + 230
-	GDATA_FLAG_SUB_MANSION_FOR_SALE = STARTING_GDATA_FLAG + 231
-	GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE = STARTING_GDATA_FLAG + 232
-	GDATA_FLAG_SUB_STRUGGLE_AGAINST_INSANITY = STARTING_GDATA_FLAG + 233
-	GDATA_FLAG_SUB_H_SISTER = STARTING_GDATA_FLAG + 234
-	GDATA_FLAG_SUMMONED_LULWY = STARTING_GDATA_FLAG + 235
-	GDATA_FLAG_SUMMONED_EHEKATL = STARTING_GDATA_FLAG + 236
-	GDATA_FLAG_SUMMONED_OPATOS = STARTING_GDATA_FLAG + 237
-	GDATA_FLAG_SUMMONED_KUMIROMI = STARTING_GDATA_FLAG + 238
-	GDATA_FLAG_SUMMONED_MANI = STARTING_GDATA_FLAG + 239
-	GDATA_FLAG_SUMMONED_JURE = STARTING_GDATA_FLAG + 240
-	GDATA_FLAG_SUMMONED_YACATECT = STARTING_GDATA_FLAG + 241
-	GDATA_FLAG_SUMMONED_ITZPALT = STARTING_GDATA_FLAG + 242
-	GDATA_FLAG_SUB_PRINCESS_COMPANION = STARTING_GDATA_FLAG + 243
-	GDATA_FLAG_SUB_LAW_OF_NINJAS = STARTING_GDATA_FLAG + 244
-	GDATA_FLAG_SUB_MONOCHROME_DELIVERY_SERVICE = STARTING_GDATA_FLAG + 245
-	GDATA_FLAG_SUB_MONOCHROME_DELIVERY_SERVICE_LETTER = STARTING_GDATA_FLAG + 246
-	GDATA_FLAG_SUB_GUILD_WARS1 = STARTING_GDATA_FLAG + 247
-	GDATA_FLAG_SUB_GUILD_WARS2 = STARTING_GDATA_FLAG + 248
-	GDATA_FLAG_SUB_GUILD_WARS3 = STARTING_GDATA_FLAG + 249
-	GDATA_FLAG_GWEN_STAGE = STARTING_GDATA_FLAG + 250
-	GDATA_FLAG_SUB_DOGS_TAIL = STARTING_GDATA_FLAG + 251
-	GDATA_FLAG_VISITED_LARNA = STARTING_GDATA_FLAG + 252
-	GDATA_FLAG_DIALOG_NAZUNA = STARTING_GDATA_FLAG + 253
-	GDATA_FLAG_LEOLD_LOCATION_STATE = STARTING_GDATA_FLAG + 254
-	GDATA_FLAG_CAN_RECEIVE_CHOCOLATE = STARTING_GDATA_FLAG + 255
-	GDATA_FLAG_VISITED_ARCBELC = STARTING_GDATA_FLAG + 256
-	GDATA_FLAG_VISITED_MELKAWN = STARTING_GDATA_FLAG + 257
-	GDATA_FLAG_VISITED_VALM = STARTING_GDATA_FLAG + 258
-	GDATA_FLAG_HOME_MOVED = STARTING_GDATA_FLAG + 259
-	GDATA_FLAG_VISITED_ULM_LESON = STARTING_GDATA_FLAG + 260
-	GDATA_FLAG_VISITED_ANCIENT_GARDEN = STARTING_GDATA_FLAG + 261
-	GDATA_FLAG_THROWN_CHESTNUTS = STARTING_GDATA_FLAG + 262
-	GDATA_FLAG_MAIN_CHAOS_CRADLE_4 = STARTING_GDATA_FLAG + 263
-	GDATA_FLAG_CHOCOLATE_KIT_LIMIT = STARTING_GDATA_FLAG + 264
-	GDATA_FLAG_CHOCOLATE_KIT_YOURSELF = STARTING_GDATA_FLAG + 265
-	GDATA_FLAG_SUB_THE_TRUE_APPEARANCE = STARTING_GDATA_FLAG + 266
-	GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC = STARTING_GDATA_FLAG + 267
-	GDATA_FLAG_DIALOG_LEOLD = STARTING_GDATA_FLAG + 268
-	GDATA_FLAG_SUB_THE_DISTANT_SEA_OF_STARS = STARTING_GDATA_FLAG + 269
-	GDATA_FLAG_SUB_BEYOND_THE_GENERATIONS = STARTING_GDATA_FLAG + 270
-	GDATA_FLAG_SUB_WHEN_THE_FLAME_BURNS_OUT = STARTING_GDATA_FLAG + 271
-	GDATA_FLAG_VISITED_MELUGAS = STARTING_GDATA_FLAG + 272
-	GDATA_FLAG_SUB_NORNE_THE_GUIDE = STARTING_GDATA_FLAG + 273
-
-	GDATA_FLAG_GOD_REWARD_LULWY = STARTING_GDATA_FLAG + 276
-	GDATA_FLAG_GOD_REWARD_EHEKATL = STARTING_GDATA_FLAG + 277
-	GDATA_FLAG_GOD_REWARD_OPATOS = STARTING_GDATA_FLAG + 278
-	GDATA_FLAG_GOD_REWARD_KUMIROMI = STARTING_GDATA_FLAG + 279
-	GDATA_FLAG_GOD_REWARD_MANI = STARTING_GDATA_FLAG + 280
-	GDATA_FLAG_GOD_REWARD_JURE = STARTING_GDATA_FLAG + 281
-	GDATA_FLAG_GOD_REWARD_YACATECT = STARTING_GDATA_FLAG + 282
-	GDATA_FLAG_GOD_REWARD_ITZPALT = STARTING_GDATA_FLAG + 283
-	GDATA_FLAG_AP_FEAT_CONTINUOUS_ATTACK = STARTING_GDATA_FLAG + 284
-	GDATA_FLAG_AP_FEAT_PROVOKE = STARTING_GDATA_FLAG + 285
-	GDATA_FLAG_AP_FEAT_METAL_GUARD = STARTING_GDATA_FLAG + 286
-	GDATA_FLAG_AP_FEAT_SYNCHRO_HEARTS = STARTING_GDATA_FLAG + 287
-	GDATA_FLAG_AP_FEAT_CHARGE = STARTING_GDATA_FLAG + 288
-	GDATA_FLAG_SUB_URCAGUARY_THE_TENACIOUS_GEM = STARTING_GDATA_FLAG + 289
-	GDATA_FLAG_SUB_IRMA_DAGGER = STARTING_GDATA_FLAG + 290
-	GDATA_FLAG_SUB_REGULUS_ZANAN = STARTING_GDATA_FLAG + 291
-	GDATA_FLAG_SUB_REGULUS_EULDERNA = STARTING_GDATA_FLAG + 292
-	GDATA_FLAG_SUB_REGULUS_KIKKASU = STARTING_GDATA_FLAG + 293
-	GDATA_FLAG_SUB_REGULUS_MAYROON = STARTING_GDATA_FLAG + 294
-	GDATA_FLAG_NEGATE_SPAWN_FRON = STARTING_GDATA_FLAG + 295
-	GDATA_FLAG_SUB_SOCKS_THIEF = STARTING_GDATA_FLAG + 296
-	GDATA_FLAG_VISITED_OL_DRAN = STARTING_GDATA_FLAG + 297
-	GDATA_FLAG_BOSS_MUSIC = STARTING_GDATA_FLAG + 298
-	GDATA_FLAG_TRUCE_GROUND_SUMMONING = STARTING_GDATA_FLAG + 299
-	GDATA_FLAG_INVITED_GOD = STARTING_GDATA_FLAG + 300
-	GDATA_FLAG_END_TAGTEAM = STARTING_GDATA_FLAG + 301
-	GDATA_FLAG_CAN_USE_WONDER_BODY_FORMER = STARTING_GDATA_FLAG + 302
-	GDATA_FLAG_PICNIC_MULTIPLIER = STARTING_GDATA_FLAG + 303
-	GDATA_FLAG_PICNIC_BASKET_MAID_MANSION = STARTING_GDATA_FLAG + 304
-	GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD = STARTING_GDATA_FLAG + 305
-	GDATA_FLAG_DUEL_TARGET = STARTING_GDATA_FLAG + 306
-	GDATA_FLAG_MELGET_SCORE = STARTING_GDATA_FLAG + 307
-	GDATA_FLAG_MELGET_HISCORE = STARTING_GDATA_FLAG + 308
-	GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD = STARTING_GDATA_FLAG + 309
-	GDATA_FLAG_DUPLICANE = STARTING_GDATA_FLAG + 310
-	GDATA_FLAG_STATUE_OPATOS = STARTING_GDATA_FLAG + 311
-	GDATA_FLAG_SUB_SOPHIA_THE_WISE = STARTING_GDATA_FLAG + 312
-	GDATA_FLAG_SUB_SOPHIA_THE_WISE_YEAR = STARTING_GDATA_FLAG + 313
-	GDATA_FLAG_SUB_SOPHIA_THE_WISE_DAY = STARTING_GDATA_FLAG + 314
-	GDATA_FLAG_SUB_SOPHIA_THE_WISE_MONTH = STARTING_GDATA_FLAG + 315
-	GDATA_FLAG_SUB_MANYTIA_THE_ADVENTURE_MERCHANT = STARTING_GDATA_FLAG + 316
-	GDATA_FLAG_SUB_VICE_STAFF_RECEIVED = STARTING_GDATA_FLAG + 317
-	GDATA_FLAG_MAIN_CHAOS_CRADLE_25 = STARTING_GDATA_FLAG + 318
-
-	GDATA_FLAG_MAIN_CHAOS_CRADLE_30 = STARTING_GDATA_FLAG + 324
-	GDATA_FLAG_MAIN_CHAOS_CRADLE_34 = STARTING_GDATA_FLAG + 325
-
-	GDATA_FLAG_RARE_DROP = STARTING_GDATA_FLAG + 347
-
-	GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM = STARTING_GDATA_FLAG + 357
-	GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM_CREATURE = STARTING_GDATA_FLAG + 358
-
-	GDATA_FLAG_SMOKING_FREQUENCY = STARTING_GDATA_FLAG + 364
-
-	GDATA_FLAG_SUB_RESEARCH_DESTRUCTION_CRISIS = STARTING_GDATA_FLAG + 374
-
-	GDATA_FLAG_SUB_KARAVIKA_OF_SONG_AND_DANCE = STARTING_GDATA_FLAG + 377
-
-	GDATA_FLAG_LEOLD_JOB_TIER = STARTING_GDATA_FLAG + 382
-	GDATA_FLAG_LEOLD_JOB_STAGE = STARTING_GDATA_FLAG + 383
-	GDATA_FLAG_SLEEP_PREVENTION = STARTING_GDATA_FLAG + 384
-	GDATA_FLAG_SPELL_POTENTIAL_RECOVERY_POSTPONE = STARTING_GDATA_FLAG + 385
-	GDATA_FLAG_TALKING_USED = STARTING_GDATA_FLAG + 386
-	GDATA_FLAG_INVULNERABLE_TURNS = STARTING_GDATA_FLAG + 387
-	GDATA_FLAG_REMAINING_LIVES = STARTING_GDATA_FLAG + 388
-	GDATA_FLAG_OVERDOSE_MODE_EXP_MULT = STARTING_GDATA_FLAG + 389
-
-	STARTING_GDATA_CORRUPTION = 700
-
-	STARTING_GDATA_DISPLAY_SKILL = 750
-
-	GDATA_ETHER_SPEED = 800
-	GDATA_TIME_STOP_TIME = 801
-	GDATA_EX_BATTLE_WIN = 802
-	GDATA_EX_BATTLE_MAX_LVL = 803
-	GDATA_NEXT_UPLOAD = 804
-	GDATA_PLAY_TIME = 805
-	GDATA_LAST_ETHER = 806
-	GDATA_GOD_RANK = 807
-	GDATA_EQUIP_CHANGE = 808
-	GDATA_DMG_TYPE = 809
-	GDATA_SISTER_KILLED = 810
-	GDATA_SISTER_SAVED = 811
-	GDATA_SISTER_REWARD = 812
-	GDATA_DECK = 813
-	GDATA_GUEST = 814
-	GDATA_CAPITAL = 815
-	GDATA_YACTECT_GEMSTONE_MSG = 816
-	GDATA_GWEN_PITILESS_LVL = 817
-	GDATA_THALIA_LIMIT = 818
-	GDATA_BASIC_TAX = 820
-	GDATA_PETS_IN_DOJO = 821
-	GDATA_ACTIVE_GOD_PETS = 822
-	GDATA_YEARS_AFTER_VICTORY = 823
-	GDATA_USING_SUPER_LURE = 824
-	GDATA_GUILD_TRAINER = 825
-	GDATA_ITEM_TURN = 826
-	GDATA_NEW_FEAT = 827
-	GDATA_WIZARD = 828
-	GDATA_TOKEN = 829
-	GDATA_DECK_SIZE = 830
+	#define global	SHIFT_FORM_NONE	0
+	#define global	SHIFT_FORM_ALPHA	1
+	#define global	SHIFT_FORM_BETA	2
+	#define global	SHIFT_FORM_GAMMA	3
+	#define global	SHIFT_FORM_DELTA	4
+	#define global	SHIFT_FORM_OMEGA	5
+
+	// #define global	GDATA	GDATAN //
+	#define global	GDATA_DEATH	0
+	#define global	GDATA_DEEPEST	1
+	#define global	GDATA_KILLED	2
+	#define global	GDATA_CROWD	3
+	#define global	GDATA_TURN	4
+	#define global	GDATA_WORLD_X	5
+	#define global	GDATA_WORLD_Y	6
+	#define global	GDATA_DAY_PAST	7
+	#define global	GDATA_RAND_SEED_A	8
+	#define global	GDATA_RAND_SEED_B	9
+	#define global	GDATA_YEAR	10
+	#define global	GDATA_MONTH	11
+	#define global	GDATA_DAY	12
+	#define global	GDATA_HOUR	13
+	#define global	GDATA_MIN	14
+	#define global	GDATA_SEC	15
+	#define global	GDATA_COUNT_SHOP	16
+	#define global	GDATA_WEATHER	17
+	#define global	GDATA_NEXT_WEATHER	18
+	#define global	GDATA_AREA_PREV	19
+	#define global	GDATA_AREA	20
+	#define global	GDATA_SUB_AREA	21
+	#define global	GDATA_LEVEL	22
+	#define global	GDATA_SUB_LEVEL	23
+	#define global	GDATA_HOME_LEVEL	24
+	#define global	GDATA_ABSORB_CHARGE	25
+	#define global	GDATA_LEVEL_START_ON	26
+	#define global	GDATA_COUNT_SHELTER	27
+	#define global	GDATA_TRAVEL_SPEED	28
+	#define global	GDATA_RES_ETHERWIND	29
+	#define global	GDATA_RUN	30
+	#define global	GDATA_RUN_LEFT	31
+	#define global	GDATA_RUN_UP	32
+	#define global	GDATA_RUN_RIGHT	33
+	#define global	GDATA_RUN_DOWN	34
+	#define global	GDATA_RUN_DIR	35
+	#define global	GDATA_STORY_BOOKMARK	36
+	#define global	GDATA_LIGHT_SOURCE	37
+	#define global	GDATA_QUIT_Y	38
+	#define global	GDATA_LEARNED	39
+
+	#define global	STARTING_GDATA_SHORTCUT	40
+	#define global	RANGE_GDATA_SHORTCUT	20
+
+	#define global	GDATA_LAST_EDGE_X	60
+	#define global	GDATA_LAST_EDGE_Y	61
+	#define global	GDATA_WORLD_TILE	62
+	#define global	GDATA_RETURN	63
+	#define global	GDATA_TELEPORT_AREA	64
+	#define global	GDATA_TELEPORT_LEVEL	65
+	#define global	GDATA_RETURN_AREA	66
+	#define global	GDATA_RETURN_LEVEL	67
+	#define global	GDATA_RETURN_X	68
+	#define global	GDATA_RETURN_Y	69
+	#define global	GDATA_QUEST	70
+	#define global	GDATA_QUEST_TYPE	71
+	#define global	GDATA_QUEST_REF	72
+	#define global	GDATA_QUEST_STATUS	73
+	#define global	GDATA_QUEST_FAME	74
+	#define global	GDATA_CLIENT	75
+	#define global	GDATA_HOME_BASE	76
+	#define global	GDATA_HOME_FURNITURE	77
+	#define global	GDATA_HOME_VALUE	78
+	#define global	GDATA_WORLD_RENEW	79
+	#define global	GDATA_CARGO_WEIGHT	80
+	#define global	GDATA_CARGO_LIMIT_ORG	81
+	#define global	GDATA_CARGO_LIMIT	82
+	#define global	GDATA_RES_WEATHER	83
+	#define global	GDATA_TIME_LIMIT	84
+	#define global	GDATA_CORRUPTION	85
+	#define global	GDATA_USERNPC_COUNT	86
+	#define global	GDATA_COUNT_NOTICE	87
+	#define global	GDATA_NEXT_TRAIN	88
+	#define global	GDATA_LIGHT	89
+	#define global	GDATA_SLEEP	90
+	#define global	GDATA_ROW_ACT	91
+	#define global	GDATA_SLEEP_EXP	92
+	#define global	GDATA_TRAIT_POINT	93
+	#define global	GDATA_SCOPE	94
+	#define global	GDATA_WELL_WISH	95
+	#define global	GDATA_VERSION	96
+	#define global	GDATA_HEIR_DEED	97
+	#define global	GDATA_SLEEP_GENE	98
+	#define global	GDATA_NEXT_VOTE	99
+
+	#define global	STARTING_GDATA_RANK	120
+	#define global	GDATA_RANK_ARENA	120
+	#define global	GDATA_RANK_PET_ARENA	121
+	#define global	GDATA_RANK_CRAWLER	122
+	#define global	GDATA_RANK_MUSEUM	123
+	#define global	GDATA_RANK_HOME	124
+	#define global	GDATA_RANK_SHOP	125
+	#define global	GDATA_RANK_VOTE	126
+	#define global	GDATA_RANK_FISHING	127
+	#define global	GDATA_RANK_GUILD	128
+
+	#define global	STARTING_GDATA_RANK_NORMA	140
+
+	#define global	GDATA_QUEST_POOL	160
+
+	#define global	GDATA_COST_HIRE	170
+	#define global	GDATA_MAP_EVENT	171
+	#define global	GDATA_ACTIVATE_PROC	172
+	#define global	GDATA_SENSE_OBJECT	173
+	#define global	GDATA_ADVENTURER_ORACLE	174
+	#define global	GDATA_TEMPORARY_FLAGS	175
+	#define global	GDATA_PIERCING_BONUS	176
+	#define global	GDATA_SKILLBOOK_COOLDOWN	177
+	#define global	GDATA_BILL	179
+	#define global	GDATA_TRAVEL_DISTANCE	180
+	#define global	GDATA_TRAVEL_TIME	181
+	#define global	GDATA_LAST_TOWN	182
+	#define global	GDATA_RIDER	183
+	#define global	GDATA_MAP_VERSION	184
+	#define global	GDATA_GOD_TALK	185
+	#define global	GDATA_VOID_BOSS	186
+	#define global	GDATA_GOD_DETECT	187
+	#define global	GDATA_DOJO_TURNS	188
+	#define global	GDATA_DEEPEST_LEVEL	189
+	#define global	GDATA_GATHERING_ATTEMPS	190
+	#define global	GDATA_CUSTOM_TALK	191
+	#define global	GDATA_RAPID_FIRE	192
+	#define global	GDATA_TEMPORARY_FLAGS2	193
+	#define global	GDATA_TEMPORARY_FLAGS3	194
+	#define global	GDATA_CUSTOM_TEXT_DIALOG	195
+	#define global	GDATA_GAMEMODE_PENALTY	196
+	#define global	GDATA_QUICK_USE	197
+	#define global	GDATA_SPINDLE_COMBINATION	198
+	#define global	GDATA_SPEEDSUM_RESET	199
+
+	#define global	STARTING_GDATA_HELP	200
+
+	#define global	STARTING_GDATA_FLAG	250
+	#define global	GDATA_FLAG_TUTORIAL	(STARTING_GDATA_FLAG + 0)
+	#define global	GDATA_FLAG_MAIN	(STARTING_GDATA_FLAG + 2)
+	#define global	GDATA_FLAG_MAIN_FOOL	(STARTING_GDATA_FLAG + 3)
+	#define global	GDATA_FLAG_MAIN_SAGE	(STARTING_GDATA_FLAG + 4)
+	#define global	GDATA_FLAG_MAIN_KING	(STARTING_GDATA_FLAG + 5)
+	#define global	GDATA_FLAG_CASINO	(STARTING_GDATA_FLAG + 6)
+	#define global	GDATA_FLAG_ALLY	(STARTING_GDATA_FLAG + 7)
+	#define global	GDATA_FLAG_FIRE_GIANT	(STARTING_GDATA_FLAG + 8)
+	#define global	GDATA_FLAG_GIANT_ID	(STARTING_GDATA_FLAG + 9)
+	#define global	GDATA_FLAG_HOLY_WELL	(STARTING_GDATA_FLAG + 10)
+	#define global	GDATA_FLAG_KAMIKAZE	(STARTING_GDATA_FLAG + 11)
+	#define global	GDATA_FLAG_RENEW_DUNGEON	(STARTING_GDATA_FLAG + 12)
+	#define global	GDATA_FLAG_GUILD_MAGE	(STARTING_GDATA_FLAG + 13)
+	#define global	GDATA_FLAG_GUILD_FIGHTER	(STARTING_GDATA_FLAG + 14)
+	#define global	GDATA_FLAG_GUILD_THIEF	(STARTING_GDATA_FLAG + 15)
+	#define global	GDATA_FLAG_GUILD_MAGE_NORMA	(STARTING_GDATA_FLAG + 16)
+	#define global	GDATA_FLAG_GUILD_FIGHTER_NORMA	(STARTING_GDATA_FLAG + 17)
+	#define global	GDATA_FLAG_GUILD_FIGHTER_THIEF	(STARTING_GDATA_FLAG + 18)
+	#define global	GDATA_FLAG_GUILD_THIEF_NORMA	(STARTING_GDATA_FLAG + 19)
+	#define global	GDATA_FLAG_MAIN_ANKH	(STARTING_GDATA_FLAG + 20)
+	#define global	GDATA_FLAG_MAIN_DATA_CHIP	(STARTING_GDATA_FLAG + 21)
+	#define global	GDATA_FLAG_MAIN_CHAOS_WINGS	(STARTING_GDATA_FLAG + 22)
+	#define global	GDATA_FLAG_GAME_MODE	(STARTING_GDATA_FLAG + 23)
+	#define global	GDATA_FLAG_NEFIA_CONQUERED	(STARTING_GDATA_FLAG + 24)
+	#define global	GDATA_FLAG_JOBS_COMPLETED	(STARTING_GDATA_FLAG + 25)
+	#define global	GDATA_FLAG_MILES_TRAVELED	(STARTING_GDATA_FLAG + 26)
+	#define global	GDATA_FLAG_HIGHEST_NORMAL_DAMAGE	(STARTING_GDATA_FLAG + 27)
+	#define global	GDATA_FLAG_PROSTITUTION_COUNTER	(STARTING_GDATA_FLAG + 28)
+	#define global	GDATA_FLAG_NUCLEAR_EXPLOSIONS	(STARTING_GDATA_FLAG + 29)
+	#define global	GDATA_FLAG_HUMANS_EATEN	(STARTING_GDATA_FLAG + 30)
+	#define global	GDATA_FLAG_TIMES_MARRIED	(STARTING_GDATA_FLAG + 31)
+	#define global	GDATA_FLAG_TIMES_CONVERTED	(STARTING_GDATA_FLAG + 32)
+	#define global	GDATA_FLAG_TREASURE_FOUND	(STARTING_GDATA_FLAG + 33)
+	#define global	GDATA_FLAG_CAT_DOG_KILLED	(STARTING_GDATA_FLAG + 34)
+	#define global	GDATA_FLAG_RAGNAROK_STARTED	(STARTING_GDATA_FLAG + 35)
+	#define global	GDATA_FLAG_WISHES_MADE	(STARTING_GDATA_FLAG + 36)
+	#define global	GDATA_FLAG_YOUNGER_SISTERS	(STARTING_GDATA_FLAG + 37)
+	#define global	GDATA_FLAG_JOBS_FAILED	(STARTING_GDATA_FLAG + 38)
+	#define global	GDATA_FLAG_HOURS_SLEPT	(STARTING_GDATA_FLAG + 39)
+	#define global	GDATA_FLAG_BANDITS_KILLED	(STARTING_GDATA_FLAG + 40)
+	#define global	GDATA_FLAG_TOTAL_PLATINUM	(STARTING_GDATA_FLAG + 41)
+	#define global	GDATA_FLAG_BREAD_EATEN	(STARTING_GDATA_FLAG + 42)
+	#define global	GDATA_FLAG_PANTIES_EATEN	(STARTING_GDATA_FLAG + 43)
+	#define global	GDATA_FLAG_TIMES_EATEN_IN_SECRET	(STARTING_GDATA_FLAG + 44)
+	#define global	GDATA_FLAG_STOLEN_GOODS	(STARTING_GDATA_FLAG + 45)
+	#define global	GDATA_FLAG_WALLS_MINED	(STARTING_GDATA_FLAG + 46)
+	#define global	GDATA_FLAG_CREATED_BY_ALCHEMY	(STARTING_GDATA_FLAG + 47)
+	#define global	GDATA_FLAG_CREATED_BY_CARPENTRY	(STARTING_GDATA_FLAG + 48)
+	#define global	GDATA_FLAG_CREATED_BY_JEWELRY	(STARTING_GDATA_FLAG + 49)
+	#define global	GDATA_FLAG_CREATED_BY_TAILORING	(STARTING_GDATA_FLAG + 50)
+	#define global	GDATA_FLAG_HOUSE_VISITORS	(STARTING_GDATA_FLAG + 51)
+	#define global	GDATA_FLAG_GWEN_KILLED	(STARTING_GDATA_FLAG + 52)
+	#define global	GDATA_FLAG_LOMIAS_KILLED	(STARTING_GDATA_FLAG + 53)
+	#define global	GDATA_FLAG_TREES_FELLED	(STARTING_GDATA_FLAG + 54)
+	#define global	GDATA_FLAG_PEOPLE_CONVERTED	(STARTING_GDATA_FLAG + 55)
+	#define global	GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE	(STARTING_GDATA_FLAG + 56)
+	#define global	GDATA_FLAG_HIGHEST_ARENA_STREAK	(STARTING_GDATA_FLAG + 57)
+	#define global	GDATA_FLAG_HIGHEST_PET_ARENA_STREAK	(STARTING_GDATA_FLAG + 58)
+	#define global	GDATA_FLAG_TIMES_DUELED	(STARTING_GDATA_FLAG + 59)
+
+	#define global	GDATA_FLAG_SUB_SLIME	(STARTING_GDATA_FLAG + 200)
+	#define global	GDATA_FLAG_SUB_ROGUE	(STARTING_GDATA_FLAG + 201)
+	#define global	GDATA_FLAG_SUB_NIGHTMARE	(STARTING_GDATA_FLAG + 202)
+	#define global	GDATA_FLAG_SUB_MOTHER	(STARTING_GDATA_FLAG + 203)
+	#define global	GDATA_FLAG_SUB_WIFE	(STARTING_GDATA_FLAG + 204)
+	#define global	GDATA_FLAG_SUB_DOG	(STARTING_GDATA_FLAG + 205)
+	#define global	GDATA_FLAG_SUB_CAT	(STARTING_GDATA_FLAG + 206)
+	#define global	GDATA_FLAG_SUB_WAR	(STARTING_GDATA_FLAG + 207)
+	#define global	GDATA_FLAG_SUB_YEEK	(STARTING_GDATA_FLAG + 208)
+	#define global	GDATA_FLAG_SUB_KAMIKAZE	(STARTING_GDATA_FLAG + 209)
+	#define global	GDATA_FLAG_SUB_MIAS_DREAM	(STARTING_GDATA_FLAG + 210)
+	#define global	GDATA_FLAG_SUB_VEIN	(STARTING_GDATA_FLAG + 211)
+	#define global	GDATA_FLAG_SUB_PYRAMID	(STARTING_GDATA_FLAG + 212)
+	#define global	GDATA_FLAG_SUB_NUKE	(STARTING_GDATA_FLAG + 213)
+	#define global	GDATA_FLAG_SUB_BIOLOGIST	(STARTING_GDATA_FLAG + 214)
+	#define global	GDATA_FLAG_SUB_SEWER	(STARTING_GDATA_FLAG + 215)
+	#define global	GDATA_FLAG_SUB_GUILD_MAGE	(STARTING_GDATA_FLAG + 216)
+	#define global	GDATA_FLAG_SUB_GUILD_FIGHTER	(STARTING_GDATA_FLAG + 217)
+	#define global	GDATA_FLAG_SUB_GUILD_THIEF	(STARTING_GDATA_FLAG + 218)
+	#define global	GDATA_FLAG_SUB_MAGE_1	(STARTING_GDATA_FLAG + 219)
+	#define global	GDATA_FLAG_SUB_FIGHTER_1	(STARTING_GDATA_FLAG + 220)
+	#define global	GDATA_FLAG_SUB_THIEF_1	(STARTING_GDATA_FLAG + 221)
+	#define global	GDATA_FLAG_SUB_MINOTAUR	(STARTING_GDATA_FLAG + 222)
+	#define global	GDATA_FLAG_SUB_DADDY	(STARTING_GDATA_FLAG + 223)
+	#define global	GDATA_FLAG_SUB_KANEDA	(STARTING_GDATA_FLAG + 224)
+	#define global	GDATA_FLAG_SUB_LOST_KITTY	(STARTING_GDATA_FLAG + 225)
+	#define global	GDATA_FLAG_SUB_DIVERSIONARY_TACTICS	(STARTING_GDATA_FLAG + 226)
+	#define global	GDATA_FLAG_SUB_JUERES_IMPERTINENCE	(STARTING_GDATA_FLAG + 227)
+	#define global	GDATA_FLAG_SUB_PIRATE_HUNTING	(STARTING_GDATA_FLAG + 228)
+	#define global	GDATA_FLAG_SUB_FALLEN_PRINCESS	(STARTING_GDATA_FLAG + 229)
+	#define global	GDATA_FLAG_SUB_UNPAID_COMPENSATION	(STARTING_GDATA_FLAG + 230)
+	#define global	GDATA_FLAG_SUB_MANSION_FOR_SALE	(STARTING_GDATA_FLAG + 231)
+	#define global	GDATA_FLAG_SUB_THE_RESULT_OF_REVENGE	(STARTING_GDATA_FLAG + 232)
+	#define global	GDATA_FLAG_SUB_STRUGGLE_AGAINST_INSANITY	(STARTING_GDATA_FLAG + 233)
+	#define global	GDATA_FLAG_SUB_H_SISTER	(STARTING_GDATA_FLAG + 234)
+	#define global	GDATA_FLAG_SUMMONED_LULWY	(STARTING_GDATA_FLAG + 235)
+	#define global	GDATA_FLAG_SUMMONED_EHEKATL	(STARTING_GDATA_FLAG + 236)
+	#define global	GDATA_FLAG_SUMMONED_OPATOS	(STARTING_GDATA_FLAG + 237)
+	#define global	GDATA_FLAG_SUMMONED_KUMIROMI	(STARTING_GDATA_FLAG + 238)
+	#define global	GDATA_FLAG_SUMMONED_MANI	(STARTING_GDATA_FLAG + 239)
+	#define global	GDATA_FLAG_SUMMONED_JURE	(STARTING_GDATA_FLAG + 240)
+	#define global	GDATA_FLAG_SUMMONED_YACATECT	(STARTING_GDATA_FLAG + 241)
+	#define global	GDATA_FLAG_SUMMONED_ITZPALT	(STARTING_GDATA_FLAG + 242)
+	#define global	GDATA_FLAG_SUB_PRINCESS_COMPANION	(STARTING_GDATA_FLAG + 243)
+	#define global	GDATA_FLAG_SUB_LAW_OF_NINJAS	(STARTING_GDATA_FLAG + 244)
+	#define global	GDATA_FLAG_SUB_MONOCHROME_DELIVERY_SERVICE	(STARTING_GDATA_FLAG + 245)
+	#define global	GDATA_FLAG_SUB_MONOCHROME_DELIVERY_SERVICE_LETTER	(STARTING_GDATA_FLAG + 246)
+	#define global	GDATA_FLAG_SUB_GUILD_WARS1	(STARTING_GDATA_FLAG + 247)
+	#define global	GDATA_FLAG_SUB_GUILD_WARS2	(STARTING_GDATA_FLAG + 248)
+	#define global	GDATA_FLAG_SUB_GUILD_WARS3	(STARTING_GDATA_FLAG + 249)
+	#define global	GDATA_FLAG_GWEN_STAGE	(STARTING_GDATA_FLAG + 250)
+	#define global	GDATA_FLAG_SUB_DOGS_TAIL	(STARTING_GDATA_FLAG + 251)
+	#define global	GDATA_FLAG_VISITED_LARNA	(STARTING_GDATA_FLAG + 252)
+	#define global	GDATA_FLAG_DIALOG_NAZUNA	(STARTING_GDATA_FLAG + 253)
+	#define global	GDATA_FLAG_LEOLD_LOCATION_STATE	(STARTING_GDATA_FLAG + 254)
+	#define global	GDATA_FLAG_CAN_RECEIVE_CHOCOLATE	(STARTING_GDATA_FLAG + 255)
+	#define global	GDATA_FLAG_VISITED_ARCBELC	(STARTING_GDATA_FLAG + 256)
+	#define global	GDATA_FLAG_VISITED_MELKAWN	(STARTING_GDATA_FLAG + 257)
+	#define global	GDATA_FLAG_VISITED_VALM	(STARTING_GDATA_FLAG + 258)
+	#define global	GDATA_FLAG_HOME_MOVED	(STARTING_GDATA_FLAG + 259)
+	#define global	GDATA_FLAG_VISITED_ULM_LESON	(STARTING_GDATA_FLAG + 260)
+	#define global	GDATA_FLAG_VISITED_ANCIENT_GARDEN	(STARTING_GDATA_FLAG + 261)
+	#define global	GDATA_FLAG_THROWN_CHESTNUTS	(STARTING_GDATA_FLAG + 262)
+	#define global	GDATA_FLAG_MAIN_CHAOS_CRADLE_4	(STARTING_GDATA_FLAG + 263)
+	#define global	GDATA_FLAG_CHOCOLATE_KIT_LIMIT	(STARTING_GDATA_FLAG + 264)
+	#define global	GDATA_FLAG_CHOCOLATE_KIT_YOURSELF	(STARTING_GDATA_FLAG + 265)
+	#define global	GDATA_FLAG_SUB_THE_TRUE_APPEARANCE	(STARTING_GDATA_FLAG + 266)
+	#define global	GDATA_FLAG_SUB_THE_ABYSS_OF_MAGIC	(STARTING_GDATA_FLAG + 267)
+	#define global	GDATA_FLAG_DIALOG_LEOLD	(STARTING_GDATA_FLAG + 268)
+	#define global	GDATA_FLAG_SUB_THE_DISTANT_SEA_OF_STARS	(STARTING_GDATA_FLAG + 269)
+	#define global	GDATA_FLAG_SUB_BEYOND_THE_GENERATIONS	(STARTING_GDATA_FLAG + 270)
+	#define global	GDATA_FLAG_SUB_WHEN_THE_FLAME_BURNS_OUT	(STARTING_GDATA_FLAG + 271)
+	#define global	GDATA_FLAG_VISITED_MELUGAS	(STARTING_GDATA_FLAG + 272)
+	#define global	GDATA_FLAG_SUB_NORNE_THE_GUIDE	(STARTING_GDATA_FLAG + 273)
+
+	#define global	GDATA_FLAG_GOD_REWARD_LULWY	(STARTING_GDATA_FLAG + 276)
+	#define global	GDATA_FLAG_GOD_REWARD_EHEKATL	(STARTING_GDATA_FLAG + 277)
+	#define global	GDATA_FLAG_GOD_REWARD_OPATOS	(STARTING_GDATA_FLAG + 278)
+	#define global	GDATA_FLAG_GOD_REWARD_KUMIROMI	(STARTING_GDATA_FLAG + 279)
+	#define global	GDATA_FLAG_GOD_REWARD_MANI	(STARTING_GDATA_FLAG + 280)
+	#define global	GDATA_FLAG_GOD_REWARD_JURE	(STARTING_GDATA_FLAG + 281)
+	#define global	GDATA_FLAG_GOD_REWARD_YACATECT	(STARTING_GDATA_FLAG + 282)
+	#define global	GDATA_FLAG_GOD_REWARD_ITZPALT	(STARTING_GDATA_FLAG + 283)
+	#define global	GDATA_FLAG_AP_FEAT_CONTINUOUS_ATTACK	(STARTING_GDATA_FLAG + 284)
+	#define global	GDATA_FLAG_AP_FEAT_PROVOKE	(STARTING_GDATA_FLAG + 285)
+	#define global	GDATA_FLAG_AP_FEAT_METAL_GUARD	(STARTING_GDATA_FLAG + 286)
+	#define global	GDATA_FLAG_AP_FEAT_SYNCHRO_HEARTS	(STARTING_GDATA_FLAG + 287)
+	#define global	GDATA_FLAG_AP_FEAT_CHARGE	(STARTING_GDATA_FLAG + 288)
+	#define global	GDATA_FLAG_SUB_URCAGUARY_THE_TENACIOUS_GEM	(STARTING_GDATA_FLAG + 289)
+	#define global	GDATA_FLAG_SUB_IRMA_DAGGER	(STARTING_GDATA_FLAG + 290)
+	#define global	GDATA_FLAG_SUB_REGULUS_ZANAN	(STARTING_GDATA_FLAG + 291)
+	#define global	GDATA_FLAG_SUB_REGULUS_EULDERNA	(STARTING_GDATA_FLAG + 292)
+	#define global	GDATA_FLAG_SUB_REGULUS_KIKKASU	(STARTING_GDATA_FLAG + 293)
+	#define global	GDATA_FLAG_SUB_REGULUS_MAYROON	(STARTING_GDATA_FLAG + 294)
+	#define global	GDATA_FLAG_NEGATE_SPAWN_FRON	(STARTING_GDATA_FLAG + 295)
+	#define global	GDATA_FLAG_SUB_SOCKS_THIEF	(STARTING_GDATA_FLAG + 296)
+	#define global	GDATA_FLAG_VISITED_OL_DRAN	(STARTING_GDATA_FLAG + 297)
+	#define global	GDATA_FLAG_BOSS_MUSIC	(STARTING_GDATA_FLAG + 298)
+	#define global	GDATA_FLAG_TRUCE_GROUND_SUMMONING	(STARTING_GDATA_FLAG + 299)
+	#define global	GDATA_FLAG_INVITED_GOD	(STARTING_GDATA_FLAG + 300)
+	#define global	GDATA_FLAG_END_TAGTEAM	(STARTING_GDATA_FLAG + 301)
+	#define global	GDATA_FLAG_CAN_USE_WONDER_BODY_FORMER	(STARTING_GDATA_FLAG + 302)
+	#define global	GDATA_FLAG_PICNIC_MULTIPLIER	(STARTING_GDATA_FLAG + 303)
+	#define global	GDATA_FLAG_PICNIC_BASKET_MAID_MANSION	(STARTING_GDATA_FLAG + 304)
+	#define global	GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD	(STARTING_GDATA_FLAG + 305)
+	#define global	GDATA_FLAG_DUEL_TARGET	(STARTING_GDATA_FLAG + 306)
+	#define global	GDATA_FLAG_MELGET_SCORE	(STARTING_GDATA_FLAG + 307)
+	#define global	GDATA_FLAG_MELGET_HISCORE	(STARTING_GDATA_FLAG + 308)
+	#define global	GDATA_FLAG_SUB_BELPHAT_THE_COSMIC_SWORD	(STARTING_GDATA_FLAG + 309)
+	#define global	GDATA_FLAG_DUPLICANE	(STARTING_GDATA_FLAG + 310)
+	#define global	GDATA_FLAG_STATUE_OPATOS	(STARTING_GDATA_FLAG + 311)
+	#define global	GDATA_FLAG_SUB_SOPHIA_THE_WISE	(STARTING_GDATA_FLAG + 312)
+	#define global	GDATA_FLAG_SUB_SOPHIA_THE_WISE_YEAR	(STARTING_GDATA_FLAG + 313)
+	#define global	GDATA_FLAG_SUB_SOPHIA_THE_WISE_DAY	(STARTING_GDATA_FLAG + 314)
+	#define global	GDATA_FLAG_SUB_SOPHIA_THE_WISE_MONTH	(STARTING_GDATA_FLAG + 315)
+	#define global	GDATA_FLAG_SUB_MANYTIA_THE_ADVENTURE_MERCHANT	(STARTING_GDATA_FLAG + 316)
+	#define global	GDATA_FLAG_SUB_VICE_STAFF_RECEIVED	(STARTING_GDATA_FLAG + 317)
+	#define global	GDATA_FLAG_MAIN_CHAOS_CRADLE_25	(STARTING_GDATA_FLAG + 318)
+
+	#define global	GDATA_FLAG_MAIN_CHAOS_CRADLE_30	(STARTING_GDATA_FLAG + 324)
+	#define global	GDATA_FLAG_MAIN_CHAOS_CRADLE_34	(STARTING_GDATA_FLAG + 325)
+
+	#define global	GDATA_FLAG_RARE_DROP	(STARTING_GDATA_FLAG + 347)
+
+	#define global	GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM	(STARTING_GDATA_FLAG + 357)
+	#define global	GDATA_FLAG_SUB_ARASIEL_OF_THE_SANDSTORM_CREATURE	(STARTING_GDATA_FLAG + 358)
+
+	#define global	GDATA_FLAG_SMOKING_FREQUENCY	(STARTING_GDATA_FLAG + 364)
+
+	#define global	GDATA_FLAG_SUB_RESEARCH_DESTRUCTION_CRISIS	(STARTING_GDATA_FLAG + 374)
+
+	#define global	GDATA_FLAG_SUB_KARAVIKA_OF_SONG_AND_DANCE	(STARTING_GDATA_FLAG + 377)
+
+	#define global	GDATA_FLAG_LEOLD_JOB_TIER	(STARTING_GDATA_FLAG + 382)
+	#define global	GDATA_FLAG_LEOLD_JOB_STAGE	(STARTING_GDATA_FLAG + 383)
+	#define global	GDATA_FLAG_SLEEP_PREVENTION	(STARTING_GDATA_FLAG + 384)
+	#define global	GDATA_FLAG_SPELL_POTENTIAL_RECOVERY_POSTPONE	(STARTING_GDATA_FLAG + 385)
+	#define global	GDATA_FLAG_TALKING_USED	(STARTING_GDATA_FLAG + 386)
+	#define global	GDATA_FLAG_INVULNERABLE_TURNS	(STARTING_GDATA_FLAG + 387)
+	#define global	GDATA_FLAG_REMAINING_LIVES	(STARTING_GDATA_FLAG + 388)
+	#define global	GDATA_FLAG_OVERDOSE_MODE_EXP_MULT	(STARTING_GDATA_FLAG + 389)
+
+	#define global	STARTING_GDATA_CORRUPTION	700
+
+	#define global	STARTING_GDATA_DISPLAY_SKILL	750
+
+	#define global	GDATA_ETHER_SPEED	800
+	#define global	GDATA_TIME_STOP_TIME	801
+	#define global	GDATA_EX_BATTLE_WIN	802
+	#define global	GDATA_EX_BATTLE_MAX_LVL	803
+	#define global	GDATA_NEXT_UPLOAD	804
+	#define global	GDATA_PLAY_TIME	805
+	#define global	GDATA_LAST_ETHER	806
+	#define global	GDATA_GOD_RANK	807
+	#define global	GDATA_EQUIP_CHANGE	808
+	#define global	GDATA_DMG_TYPE	809
+	#define global	GDATA_SISTER_KILLED	810
+	#define global	GDATA_SISTER_SAVED	811
+	#define global	GDATA_SISTER_REWARD	812
+	#define global	GDATA_DECK	813
+	#define global	GDATA_GUEST	814
+	#define global	GDATA_CAPITAL	815
+	#define global	GDATA_YACTECT_GEMSTONE_MSG	816
+	#define global	GDATA_GWEN_PITILESS_LVL	817
+	#define global	GDATA_THALIA_LIMIT	818
+	#define global	GDATA_BASIC_TAX	820
+	#define global	GDATA_PETS_IN_DOJO	821
+	#define global	GDATA_ACTIVE_GOD_PETS	822
+	#define global	GDATA_YEARS_AFTER_VICTORY	823
+	#define global	GDATA_USING_SUPER_LURE	824
+	#define global	GDATA_GUILD_TRAINER	825
+	#define global	GDATA_ITEM_TURN	826
+	#define global	GDATA_NEW_FEAT	827
+	#define global	GDATA_WIZARD	828
+	#define global	GDATA_TOKEN	829
+	#define global	GDATA_DECK_SIZE	830
 
-	GDATA_WORLD = 850
-	GDATA_WALLET = 851
+	#define global	GDATA_WORLD	850
+	#define global	GDATA_WALLET	851
 
-	GDATAN_TEAM1 = 0
-	GDATAN_TEAM2 = 1
+	#define global	GDATAN_TEAM1	0
+	#define global	GDATAN_TEAM2	1
 
 	// Game modes
-	GAMEMODE_ESSENTIAL = 0
-	GAMEMODE_ABNORMAL = 1
-	GAMEMODE_OVERDOSE = 2
-	GAMEMODE_LOSS = 3
-	GAMEMODE_NATURAL = 4
-	GAMEMODE_PURGE = 5
+	#define global	GAMEMODE_ESSENTIAL	0
+	#define global	GAMEMODE_ABNORMAL	1
+	#define global	GAMEMODE_OVERDOSE	2
+	#define global	GAMEMODE_LOSS	3
+	#define global	GAMEMODE_NATURAL	4
+	#define global	GAMEMODE_PURGE	5
 
 	// Ranks
-	RANK_ARENA = 0
-	RANK_PET_ARENA = 1
-	RANK_CRAWLER = 2
-	RANK_MUSEUM = 3
-	RANK_HOME = 4
-	RANK_SHOP = 5
-	RANK_VOTE = 6
-	RANK_FISHING = 7
-	RANK_GUILD = 8
-	MAX_RANK = 9
+	#define global	RANK_ARENA	0
+	#define global	RANK_PET_ARENA	1
+	#define global	RANK_CRAWLER	2
+	#define global	RANK_MUSEUM	3
+	#define global	RANK_HOME	4
+	#define global	RANK_SHOP	5
+	#define global	RANK_VOTE	6
+	#define global	RANK_FISHING	7
+	#define global	RANK_GUILD	8
+	#define global	MAX_RANK	9
 
 	// Weather
-	WEATHER_CLEAR = 0
-	WEATHER_ETHER = 1
-	WEATHER_SNOW = 2
-	WEATHER_RAIN = 3
-	WEATHER_HARD_RAIN = 4
+	#define global	WEATHER_CLEAR	0
+	#define global	WEATHER_ETHER	1
+	#define global	WEATHER_SNOW	2
+	#define global	WEATHER_RAIN	3
+	#define global	WEATHER_HARD_RAIN	4
 
 	// Evolution Items
-	EVITEM_HEART_KING = 11
-	EVITEM_HEART_MACHINE = 12
-	EVITEM_HEART_GOD = 13
-	EVITEM_HEART_ANOTHER = 14
-	EVITEM_HEART_EVOLUTION = 15
-	EVITEM_HEART_MAGIC = 16
+	#define global	EVITEM_HEART_KING	11
+	#define global	EVITEM_HEART_MACHINE	12
+	#define global	EVITEM_HEART_GOD	13
+	#define global	EVITEM_HEART_ANOTHER	14
+	#define global	EVITEM_HEART_EVOLUTION	15
+	#define global	EVITEM_HEART_MAGIC	16
 
 	// Items
-	ITEM_ID_DUMMY = 0
-	ITEM_ID_LONG_SWORD = 1
-	ITEM_ID_DAGGER = 2
-	ITEM_ID_HAND_AXE = 3
-	ITEM_ID_CLUB = 4
-	ITEM_ID_MAGIC_HAT = 5
-	ITEM_ID_FAIRY_HAT = 6
-	ITEM_ID_BREASTPLATE = 7
-	ITEM_ID_ROBE = 8
-	ITEM_ID_DECORATED_GLOVES = 9
-	ITEM_ID_THICK_GAUNTLETS = 10
-	ITEM_ID_HEAVY_BOOTS = 11
-	ITEM_ID_COMPOSITE_BOOTS = 12
-	ITEM_ID_DECORATIVE_RING = 13
-	ITEM_ID_SCROLL_IDENTIFY = 14
-	ITEM_ID_SCROLL_ORACLE = 15
-	ITEM_ID_SCROLL_TELEPORTATION = 16
-	ITEM_ID_SCROLL_INCOGNITO = 17
-	ITEM_ID_ROD_IDENTIFY = 18
-	ITEM_ID_ROD_TELEPORTATION = 19
-	ITEM_ID_SPELLBOOK_TELEPORTATION = 20
-	ITEM_ID_SPELLBOOK_IDENTIFY = 21
-	ITEM_ID_SPELLBOOK_UNCURSE = 22
-	ITEM_ID_BOOK = 23
-	ITEM_ID_RED_BOOK = 24
-	ITEM_ID_BUGGED_BOOK = 25
-	ITEM_ID_BOTTLE_DIRTY_WATER = 26
-	ITEM_ID_POTION_BLINDNESS = 27
-	ITEM_ID_POTION_CONFUSION = 28
-	ITEM_ID_POTION_PARALYSIS = 29
-	ITEM_ID_SLEEPING_DRUG = 30
-	ITEM_ID_BOTTLE_CRIM_ALE = 31
-	ITEM_ID_SPELLBOOK_ICE_BOLT = 32
-	ITEM_ID_SPELLBOOK_FIRE_BOLT = 33
-	ITEM_ID_SPELLBOOK_LIGHTNING_BOLT = 34
-	ITEM_ID_EARTH_CRYSTAL = 35
-	ITEM_ID_MANA_CRYSTAL = 36
-	ITEM_ID_SUN_CRYSTAL = 37
-	ITEM_ID_GOLD_BAR = 38
-	ITEM_ID_RAW_RUBYNUS_ORE = 39
-	ITEM_ID_MICA_ORE = 40
-	ITEM_ID_RAW_EMERALD_ORE = 41
-	ITEM_ID_RAW_DIAMOND_ORE = 42
-	ITEM_ID_WOOD_CHIP = 43
-	ITEM_ID_JUNK_STONE = 44
-	ITEM_ID_GARBAGE = 45
-	ITEM_ID_BROKEN_VASE = 46
-	ITEM_ID_WASHINGS = 47
-	ITEM_ID_BRAZIER_STAND = 48
-	ITEM_ID_FLAG = 49
-	ITEM_ID_BROKEN_SWORD = 50
-	ITEM_ID_BONE_FRAGMENT = 51
-	ITEM_ID_SKELETON = 52
-	ITEM_ID_TOMBSTONE = 53
-	ITEM_ID_GOLD_PIECE = 54
-	ITEM_ID_PLATINUM_COIN = 55
-	ITEM_ID_DIABLOS = 56
-	ITEM_ID_ZANTETSUKEN = 57
-	ITEM_ID_LONG_BOW = 58
-	ITEM_ID_KNIGHT_SHIELD = 59
-	ITEM_ID_PISTOL = 60
-	ITEM_ID_ARROW = 61
-	ITEM_ID_BULLET = 62
-	ITEM_ID_SCYTHE_OF_THE_VOID = 63
-	ITEM_ID_MOURNBLADE = 64
-	ITEM_ID_LIGHT_CLOAK = 65
-	ITEM_ID_GIRDLE = 66
-	ITEM_ID_DECORATIVE_AMULET = 67
-	ITEM_ID_POTION_CURE_MINOR_WOUND = 68
-	ITEM_ID_POTION_CURE_MAJOR_WOUND = 69
-	ITEM_ID_POTION_CURE_CRITICAL_WOUND = 70
-	ITEM_ID_POTION_VITALITY = 71
-	ITEM_ID_POTION_HEALER = 72
-	ITEM_ID_RAGNAROK = 73
-	ITEM_ID_POTION_HEALER_ODINA = 74
-	ITEM_ID_POTION_WHITE_HEALER_ERIS = 75
-	ITEM_ID_POTION_SACRED_HEALER_JURE = 76
-	ITEM_ID_ROUND_CHAIR = 77
-	ITEM_ID_BOOKSHELF = 78
-	ITEM_ID_LUXURY_DRAWER = 79
-	ITEM_ID_CHEAP_BED = 80
-	ITEM_ID_PLUSH_DOLL = 81
-	ITEM_ID_TOY = 82
-	ITEM_ID_MODERN_TABLE = 83
-	ITEM_ID_DINING_TABLE = 84
-	ITEM_ID_ARMOR = 85
-	ITEM_ID_GOODS = 86
-	ITEM_ID_VARIOUS_ACCESSORIES = 87
-	ITEM_ID_GRAND_PIANO = 88
-	ITEM_ID_BAR_TABLE_ALPHA = 89
-	ITEM_ID_BAR_TABLE_BETA = 90
-	ITEM_ID_BARREL = 91
-	ITEM_ID_STYLISH_CHAIR = 92
-	ITEM_ID_PICKAXE = 93
-	ITEM_ID_LANTERN = 94
-	ITEM_ID_ORNAMENTAL_ARMOR = 95
-	ITEM_ID_ANVIL = 96
-	ITEM_ID_SEALED_VASE = 97
-	ITEM_ID_OPEN_VASE = 98
-	ITEM_ID_WRITING_DESK = 99
-	ITEM_ID_POTION_RACK = 100
-	ITEM_ID_SQUARE_CHAIR = 101
-	ITEM_ID_CHEAP_CHAIR = 102
-	ITEM_ID_CUPBOARD = 103
-	ITEM_ID_SHED = 104
-	ITEM_ID_TIDY_BOOKSHELF = 105
-	ITEM_ID_STORAGE_RACK = 106
-	ITEM_ID_VARIETY_TOOLS = 107
-	ITEM_ID_VARIETY_GOODS = 108
-	ITEM_ID_WELL = 109
-	ITEM_ID_VARIETY_CLOTHES = 110
-	ITEM_ID_SMELTER = 111
-	ITEM_ID_OVEN = 112
-	ITEM_ID_SIGN = 113
-	ITEM_ID_SIGNPOST = 114
-	ITEM_ID_NOTICE_BOARD = 115
-	ITEM_ID_SPELLBOOK_MINOR_TELEPORTATION = 116
-	ITEM_ID_EMPTY_BASKET = 117
-	ITEM_ID_SPELLBOOK_SUMMON_MONSTERS = 118
-	ITEM_ID_ROD_CURE_MINOR_WOUND = 119
-	ITEM_ID_ROD_MAGIC_MISSILE = 120
-	ITEM_ID_ROD_SUMMON_MONSTERS = 121
-	ITEM_ID_ROD_ICE_BOLT = 122
-	ITEM_ID_ROD_FIRE_BOLT = 123
-	ITEM_ID_BREAD_DISPLAY = 124
-	ITEM_ID_ROD_LIFE = 125
-	ITEM_ID_BEAKER = 126
-	ITEM_ID_ALCHEMY_TOOLS = 127
-	ITEM_ID_MAGIC_CIRCLE = 128
-	ITEM_ID_SMALL_DECORATIVE_PLANT = 129
-	ITEM_ID_BANKS_ROSE = 130
-	ITEM_ID_LARGE_DECORATIVE_PLANT = 131
-	ITEM_ID_SAGE = 132
-	ITEM_ID_GAZANIA = 133
-	ITEM_ID_NERINE = 134
-	ITEM_ID_ANEMONE = 135
-	ITEM_ID_FOXTAIL_GRASS = 136
-	ITEM_ID_CARNATION = 137
-	ITEM_ID_PLANT_ADORNED_PILLAR = 138
-	ITEM_ID_FLOWER_ADORNED_PILLAR = 139
-	ITEM_ID_PAINTING_TOOLS = 140
-	ITEM_ID_MAP = 141
-	ITEM_ID_FOOD_MAKER = 142
-	ITEM_ID_BOWS = 143
-	ITEM_ID_WEAPONS = 144
-	ITEM_ID_DECORATED_CLOTHING = 145
-	ITEM_ID_DECORATED_ARMOR = 146
-	ITEM_ID_ARMOR_STATUE = 147
-	ITEM_ID_DISORDERLY_BOOKS = 148
-	ITEM_ID_LOT_BOOKS = 149
-	ITEM_ID_CRAFT_RACK = 150
-	ITEM_ID_CRAFT_BOOK_SHELF = 151
-	ITEM_ID_LOT_ALCOHOLS = 152
-	ITEM_ID_KITCHEN = 153
-	ITEM_ID_SINK = 154
-	ITEM_ID_KITCHEN_OVEN = 155
-	ITEM_ID_NARROW_DINING_TABLE = 156
-	ITEM_ID_ELEGANT_TABLE = 157
-	ITEM_ID_GORGEOUS_CANDLESTICK = 158
-	ITEM_ID_SIMPLE_SHELF = 159
-	ITEM_ID_SEWING_KIT = 160
-	ITEM_ID_CARPENTERS_TOOL = 161
-	ITEM_ID_MESSY_CLOTH = 162
-	ITEM_ID_SILK_CLOTH = 163
-	ITEM_ID_COLLAPSED_GRAVE = 164
-	ITEM_ID_CRUMBLED_GRAVE = 165
-	ITEM_ID_GRAVE_ORNAMENTED_WITH_FLOWERS = 166
-	ITEM_ID_BRAND_NEW_GRAVE = 167
-	ITEM_ID_SOLEMN_TOMB = 168
-	ITEM_ID_ANCIENT_TOMB = 169
-	ITEM_ID_OLD_GRAVE = 170
-	ITEM_ID_ALTAR = 171
-	ITEM_ID_CEREMONY_ALTAR = 172
-	ITEM_ID_FOUNTAIN = 173
-	ITEM_ID_BUNK_BED = 174
-	ITEM_ID_ROD_LIGHTNING_BOLT = 175
-	ITEM_ID_ROD_SLOW = 176
-	ITEM_ID_QUWAPANA = 177
-	ITEM_ID_ALOE = 178
-	ITEM_ID_EDIBLE_WILD_PLANT = 179
-	ITEM_ID_APPLE = 180
-	ITEM_ID_GRAPE = 181
-	ITEM_ID_KIWI = 182
-	ITEM_ID_CHERRY = 183
-	ITEM_ID_GUAVA = 184
-	ITEM_ID_CARROT = 185
-	ITEM_ID_RADISH = 186
-	ITEM_ID_SWEET_POTATO = 187
-	ITEM_ID_LETTUCE = 188
-	ITEM_ID_DISH = 189
-	ITEM_ID_IMO = 190
-	ITEM_ID_API_NUT = 191
-	ITEM_ID_STRAWBERRY = 192
-	ITEM_ID_HEALTHY_LEAF = 193
-	ITEM_ID_RAINBOW_FRUIT = 194
-	ITEM_ID_QUCCHE = 195
-	ITEM_ID_TANGERINE = 196
-	ITEM_ID_LEMON = 197
-	ITEM_ID_GREEN_PEA = 198
-	ITEM_ID_SQUASH = 199
-	ITEM_ID_MELON = 200
-	ITEM_ID_LECCHO = 201
-	ITEM_ID_ROD_MAGIC_MAPPING = 202
-	ITEM_ID_ROD_CURE = 203
-	ITEM_ID_CORPSE = 204
-	ITEM_ID_BOTTLE_WHISKY = 205
-	ITEM_ID_ETHER_DAGGER = 206
-	ITEM_ID_BOW_OF_VINDALE = 207
-	ITEM_ID_WORTHLESS_FAKE_GOLD_BAR = 208
-	ITEM_ID_SCROLL_UNCURSE = 209
-	ITEM_ID_STONE = 210
-	ITEM_ID_SICKLE = 211
-	ITEM_ID_STAFF = 212
-	ITEM_ID_SPEAR = 213
-	ITEM_ID_ORE_PIECE = 214
-	ITEM_ID_LOT_EMPTY_BOTTLES = 215
-	ITEM_ID_BASKET = 216
-	ITEM_ID_EMPTY_BOWL = 217
-	ITEM_ID_BOWL = 218
-	ITEM_ID_TIGHT_ROPE = 219
-	ITEM_ID_DEAD_FISH = 220
-	ITEM_ID_STRAW = 221
-	ITEM_ID_ANIMAL_BONE = 222
-	ITEM_ID_POT = 223
-	ITEM_ID_KATANA = 224
-	ITEM_ID_SCIMITAR = 225
-	ITEM_ID_BATTLE_AXE = 226
-	ITEM_ID_HAMMER = 227
-	ITEM_ID_TRIDENT = 228
-	ITEM_ID_LONG_STAFF = 229
-	ITEM_ID_SHORT_BOW = 230
-	ITEM_ID_MACHINE_GUN = 231
-	ITEM_ID_CLAYMORE = 232
-	ITEM_ID_RATION = 233
-	ITEM_ID_BARDISH = 234
-	ITEM_ID_HALBERD = 235
-	ITEM_ID_SCROLL_RETURN = 236
-	ITEM_ID_FIGURINE_WARRIOR = 237
-	ITEM_ID_FIGURINE_SWORD = 238
-	ITEM_ID_BEJEWELED_CHEST = 239
-	ITEM_ID_CHEST = 240
-	ITEM_ID_SAFE = 241
-	ITEM_ID_SCROLL_MAGICAL_MAP = 242
-	ITEM_ID_SCROLL_GAIN_ATTRIBUTE = 243
-	ITEM_ID_SCROLL_WONDER = 244
-	ITEM_ID_SCROLL_MINOR_TELEPORTATION = 245
-	ITEM_ID_SPELLBOOK_MAGIC_MAPPING = 246
-	ITEM_ID_SPELLBOOK_ORACLE = 247
-	ITEM_ID_SPELLBOOK_RETURN = 248
-	ITEM_ID_SPELLBOOK_CURE_MINOR_WOUND = 249
-	ITEM_ID_SPELLBOOK_CURE_CRITICAL_WOUND = 250
-	ITEM_ID_SPELLBOOK_CURE_ERIS = 251
-	ITEM_ID_SPELLBOOK_CURE_JURE = 252
-	ITEM_ID_BOTTLE_BEER = 253
-	ITEM_ID_HORN = 254
-	ITEM_ID_CAMPFIRE = 255
-	ITEM_ID_PORTABLE_COOKING_TOOL = 256
-	ITEM_ID_SPELLBOOK_MAGIC_ARROW = 257
-	ITEM_ID_STICK_BREAD = 258
-	ITEM_ID_RAW_NOODLE = 259
-	ITEM_ID_SACK_FLOUR = 260
-	ITEM_ID_BOMB_FISH = 261
-	ITEM_ID_POISON = 262
-	ITEM_ID_SPELLBOOK_NETHER_EYE = 263
-	ITEM_ID_SPELLBOOK_CHAOS_EYE = 264
-	ITEM_ID_SPELLBOOK_NERVE_EYE = 265
-	ITEM_ID_WAKIZASHI = 266
-	ITEM_ID_SPELLBOOK_DARKNESS_BEAM = 267
-	ITEM_ID_SPELLBOOK_ILLUSION_BEAM = 268
-	ITEM_ID_SPELLBOOK_ICE_BALL = 269
-	ITEM_ID_SPELLBOOK_FIRE_BALL = 270
-	ITEM_ID_SPELLBOOK_SOUND_BALL = 271
-	ITEM_ID_SPELLBOOK_CHAOS_BALL = 272
-	ITEM_ID_FIRE_WOOD = 273
-	ITEM_ID_SCARECROW = 274
-	ITEM_ID_BROOM = 275
-	ITEM_ID_LONG_PILLAR = 276
-	ITEM_ID_BROKEN_PILLAR = 277
-	ITEM_ID_STREET_LAMP = 278
-	ITEM_ID_WATER_TUB = 279
-	ITEM_ID_COMFORTABLE_TABLE = 280
-	ITEM_ID_INNER_TUBE = 281
-	ITEM_ID_MYSTERIOUS_MAP = 282
-	ITEM_ID_SUITCASE = 283
-	ITEM_ID_WALLET = 284
-	ITEM_ID_POTION_RESTORE_BODY = 285
-	ITEM_ID_POTION_RESTORE_SPIRIT = 286
-	ITEM_ID_POTION_POTENTIAL = 287
-	ITEM_ID_SCROLL_CURSE = 288
-	ITEM_ID_SPELLBOOK_WISHING = 289
-	ITEM_ID_ROD_WISHING = 290
-	ITEM_ID_WELL_KEPT_ARMOR = 291
-	ITEM_ID_RACK_GOODS = 292
-	ITEM_ID_RACK_ACCESSORIES = 293
-	ITEM_ID_TOWEL = 294
-	ITEM_ID_RAGGED_TABLE = 295
-	ITEM_ID_CABINET = 296
-	ITEM_ID_LUXURY_BED = 297
-	ITEM_ID_VASE = 298
-	ITEM_ID_HIGH_GRADE_DRESSER = 299
-	ITEM_ID_NEAT_BAR_TABLE = 300
-	ITEM_ID_LARGE_BOUQUET = 301
-	ITEM_ID_CLOTHES_CHEST = 302
-	ITEM_ID_GIANT_BED = 303
-	ITEM_ID_PLAIN_BED = 304
-	ITEM_ID_COFFIN = 305
-	ITEM_ID_FOOD_PROCESSOR = 306
-	ITEM_ID_SOFT_BED = 307
-	ITEM_ID_CHEAP_RACK = 308
-	ITEM_ID_DRESSER = 309
-	ITEM_ID_CLEAN_BED = 310
-	ITEM_ID_BATHTUB = 311
-	ITEM_ID_PACHISURO_MACHINE = 312
-	ITEM_ID_CASINO_TABLE = 313
-	ITEM_ID_SLOT_MACHINE = 314
-	ITEM_ID_DARTS_BOARD = 315
-	ITEM_ID_BIG_FOLIAGE_PLANT = 316
-	ITEM_ID_OLD_SHELF = 317
-	ITEM_ID_OLD_BOOKSHELF = 318
-	ITEM_ID_CHEAP_BED2 = 319
-	ITEM_ID_CHEAP_TABLE = 320
-	ITEM_ID_NEAT_RACK = 321
-	ITEM_ID_SIMPLE_DRESSER = 322
-	ITEM_ID_BIG_CUPBOARD = 323
-	ITEM_ID_SACRED_ALTAR = 324
-	ITEM_ID_COMFORTABLE_BED = 325
-	ITEM_ID_SIMPLE_RACK = 326
-	ITEM_ID_WIDE_CHAIR = 327
-	ITEM_ID_UPRIGHT_PIANO = 328
-	ITEM_ID_STATUE_CROSS = 329
-	ITEM_ID_STUMP = 330
-	ITEM_ID_DRESS = 331
-	ITEM_ID_TABLE = 332
-	ITEM_ID_TRAVELERS_FOOD = 333
-	ITEM_ID_THRONE = 334
-	ITEM_ID_GOLDEN_PEDESTAL = 335
-	ITEM_ID_GOLDEN_STATUE = 336
-	ITEM_ID_SKIN = 337
-	ITEM_ID_BLOOD = 338
-	ITEM_ID_EYE = 339
-	ITEM_ID_HEART = 340
-	ITEM_ID_BONE = 341
-	ITEM_ID_FISHING_POLE = 342
-	ITEM_ID_RUNE = 343
-	ITEM_ID_DEED = 344
-	ITEM_ID_MOONFISH = 345
-	ITEM_ID_SARDINE = 346
-	ITEM_ID_FLATFISH = 347
-	ITEM_ID_MANBOO = 348
-	ITEM_ID_SEABREAM = 349
-	ITEM_ID_SALMON = 350
-	ITEM_ID_GLOBEFISH = 351
-	ITEM_ID_TUNA = 352
-	ITEM_ID_CUTLASSFISH = 353
-	ITEM_ID_SANDBORER = 354
-	ITEM_ID_GLOVES_OF_VESDA = 355
-	ITEM_ID_BLOOD_MOON = 356
-	ITEM_ID_RING_OF_STEEL_DRAGON = 357
-	ITEM_ID_STAFF_OF_INSANITY = 358
-	ITEM_ID_RANKIS = 359
-	ITEM_ID_PALMIA_PRIDE = 360
-	ITEM_ID_SHOPKEEPERS_TRUNK = 361
-	ITEM_ID_SCROLL_GREATER_IDENTIFY = 362
-	ITEM_ID_SCROLL_VANISH_CURSE = 363
-	ITEM_ID_POTION_DEFENDER = 364
-	ITEM_ID_SPELLBOOK_HOLY_SHIELD = 365
-	ITEM_ID_ROD_SILENCE = 366
-	ITEM_ID_SPELLBOOK_SILENCE = 367
-	ITEM_ID_POTION_SILENCE = 368
-	ITEM_ID_SPELLBOOK_REGENERATION = 369
-	ITEM_ID_POTION_TROLL_BLOOD = 370
-	ITEM_ID_SPELLBOOK_RESISTANCE = 371
-	ITEM_ID_POTION_RESISTANCE = 372
-	ITEM_ID_SPELLBOOK_SPEED = 373
-	ITEM_ID_SPELLBOOK_SLOW = 374
-	ITEM_ID_POTION_SPEED = 375
-	ITEM_ID_POTION_SLOW = 376
-	ITEM_ID_ROD_SPEED = 377
-	ITEM_ID_SPELLBOOK_HERO = 378
-	ITEM_ID_POTION_HERO = 379
-	ITEM_ID_SPELLBOOK_WEAKNESS = 380
-	ITEM_ID_SPELLBOOK_ELEMENTAL_SCAR = 381
-	ITEM_ID_POTION_WEAKNESS = 382
-	ITEM_ID_SPELLBOOK_HOLY_VEIL = 383
-	ITEM_ID_SCROLL_HOLY_VEIL = 384
-	ITEM_ID_ROD_HOLY_LIGHT = 385
-	ITEM_ID_SPELLBOOK_HOLY_LIGHT = 386
-	ITEM_ID_SPELLBOOK_HOLY_RAIN = 387
-	ITEM_ID_SCROLL_HOLY_LIGHT = 388
-	ITEM_ID_SCROLL_HOLY_RAIN = 389
-	ITEM_ID_SCROLL_MANA = 390
-	ITEM_ID_ROD_MANA = 391
-	ITEM_ID_BOTTLE_SULFURIC = 392
-	ITEM_ID_GEM_CUTTER = 393
-	ITEM_ID_MATERIAL_BOX = 394
-	ITEM_ID_SCROLL_GAIN_MATERIAL = 395
-	ITEM_ID_SPELLBOOK_NIGHTMARE = 396
-	ITEM_ID_SPELLBOOK_KNOWLEDGE = 397
-	ITEM_ID_SCROLL_KNOWLEDGE = 398
-	ITEM_ID_CARGO_RAG_DOLL = 399
-	ITEM_ID_CARGO_BARREL = 400
-	ITEM_ID_CARGO_PIANO = 401
-	ITEM_ID_CARGO_ROPE = 402
-	ITEM_ID_CARGO_COFFIN = 403
-	ITEM_ID_CARGO_MANBOO = 404
-	ITEM_ID_CARGO_GRAVE = 405
-	ITEM_ID_CARGO_TUNA_FISH = 406
-	ITEM_ID_CARGO_WHISKY = 407
-	ITEM_ID_CARGO_NOBLE_TOY = 408
-	ITEM_ID_CARGO_INNER_TUBE = 409
-	ITEM_ID_SPELLBOOK_DETECT_OBJECTS = 410
-	ITEM_ID_SCROLL_DETECT_OBJECTS = 411
-	ITEM_ID_ROD_UNCURSE = 412
-	ITEM_ID_RED_TREASURE_MACHINE = 413
-	ITEM_ID_BLUE_TREASURE_MACHINE = 414
-	ITEM_ID_TREASURE_BALL = 415
-	ITEM_ID_RARE_TREASURE_BALL = 416
-	ITEM_ID_VEGETABLE_SEED = 417
-	ITEM_ID_FRUIT_SEED = 418
-	ITEM_ID_HERB_SEED = 419
-	ITEM_ID_UNKNOWN_SEED = 420
-	ITEM_ID_ARTIFACT_SEED = 421
-	ITEM_ID_MORGIA = 422
-	ITEM_ID_MAREILON = 423
-	ITEM_ID_SPENSEWEED = 424
-	ITEM_ID_CURARIA = 425
-	ITEM_ID_ALRAUNIA = 426
-	ITEM_ID_STOMAFILLIA = 427
-	ITEM_ID_SLEEPING_BAG = 428
-	ITEM_ID_POTION_WEAKEN_RESISTANCE = 429
-	ITEM_ID_SCROLL_GROWTH = 430
-	ITEM_ID_SCROLL_FAITH = 431
-	ITEM_ID_POTION_MUTATION = 432
-	ITEM_ID_POTION_CURE_MUTATION = 433
-	ITEM_ID_SPELLBOOK_MUTATION = 434
-	ITEM_ID_BANDED_MAIL = 435
-	ITEM_ID_PLATE_MAIL = 436
-	ITEM_ID_RING_MAIL = 437
-	ITEM_ID_COMPOSITE_MAIL = 438
-	ITEM_ID_CHAIN_MAIL = 439
-	ITEM_ID_POPE_ROBE = 440
-	ITEM_ID_LIGHT_MAIL = 441
-	ITEM_ID_COAT = 442
-	ITEM_ID_BREAST_PLATE = 443
-	ITEM_ID_BULLETPROOF_JACKET = 444
-	ITEM_ID_GLOVES = 445
-	ITEM_ID_PLATE_GAUNTLETS = 446
-	ITEM_ID_LIGHT_GLOVES = 447
-	ITEM_ID_COMPOSITE_GAUNTLETS = 448
-	ITEM_ID_SMALL_SHIELD = 449
-	ITEM_ID_ROUND_SHIELD = 450
-	ITEM_ID_SHIELD = 451
-	ITEM_ID_LARGE_SHIELD = 452
-	ITEM_ID_KITE_SHIELD = 453
-	ITEM_ID_TOWER_SHIELD = 454
-	ITEM_ID_SHOES = 455
-	ITEM_ID_BOOTS = 456
-	ITEM_ID_TIGHT_BOOTS = 457
-	ITEM_ID_ARMORED_BOOTS = 458
-	ITEM_ID_COMPOSITE_GIRDLE = 459
-	ITEM_ID_PLATE_GIRDLE = 460
-	ITEM_ID_ARMORED_CLOAK = 461
-	ITEM_ID_CLOAK = 462
-	ITEM_ID_FEATHER_HAT = 463
-	ITEM_ID_HEAVY_HELM = 464
-	ITEM_ID_KNIGHT_HELM = 465
-	ITEM_ID_HELM = 466
-	ITEM_ID_COMPOSITE_HELM = 467
-	ITEM_ID_PERIDOT = 468
-	ITEM_ID_TALISMAN = 469
-	ITEM_ID_NECK_GUARD = 470
-	ITEM_ID_CHARM = 471
-	ITEM_ID_BEJEWELED_AMULET = 472
-	ITEM_ID_ENGAGEMENT_AMULET = 473
-	ITEM_ID_COMPOSITE_RING = 474
-	ITEM_ID_ARMORED_RING = 475
-	ITEM_ID_RING = 476
-	ITEM_ID_ENGAGEMENT_RING = 477
-	ITEM_ID_STETHOSCOPE = 478
-	ITEM_ID_SCROLL_ALLY = 479
-	ITEM_ID_ROD_DOMINATION = 480
-	ITEM_ID_SPELLBOOK_DOMINATION = 481
-	ITEM_ID_CROSSBOW = 482
-	ITEM_ID_BOLT = 483
-	ITEM_ID_SPELLBOOK_WEB = 484
-	ITEM_ID_ROD_WEB = 485
-	ITEM_ID_MACHINE = 486
-	ITEM_ID_COMPUTER = 487
-	ITEM_ID_TRAINING_MACHINE = 488
-	ITEM_ID_CAMERA = 489
-	ITEM_ID_MICROWAVE_OVEN = 490
-	ITEM_ID_SERVER = 491
-	ITEM_ID_STORAGE = 492
-	ITEM_ID_TRASH_CAN = 493
-	ITEM_ID_CHIP = 494
-	ITEM_ID_BLANK_DISC = 495
-	ITEM_ID_SHOT_GUN = 496
-	ITEM_ID_POP_CORN = 497
-	ITEM_ID_FRIED_POTATO = 498
-	ITEM_ID_CYBER_SNACK = 499
-	ITEM_ID_SCROLL_INFERIOR_MATERIAL = 500
-	ITEM_ID_SCROLL_CHANGE_MATERIAL = 501
-	ITEM_ID_SCROLL_SUPERIOR_MATERIAL = 502
-	ITEM_ID_FIGURINE = 503
-	ITEM_ID_CARD = 504
-	ITEM_ID_LITTLE_SISTERS_DIARY = 505
-	ITEM_ID_SCROLL_ENCHANT_WEAPON = 506
-	ITEM_ID_SCROLL_GREATER_ENCHANT_WEAPON = 507
-	ITEM_ID_SCROLL_ENCHANT_ARMOR = 508
-	ITEM_ID_SCROLL_GREATER_ENCHANT_ARMOR = 509
-	ITEM_ID_HEIR_TRUNK = 510
-	ITEM_ID_DEED_HEIRSHIP = 511
-	ITEM_ID_LASER_GUN = 512
-	ITEM_ID_ENERGY_CELL = 513
-	ITEM_ID_RAIL_GUN = 514
-	ITEM_ID_SCROLL_RECHARGE = 515
-	ITEM_ID_BOTTLE_WATER = 516
-	ITEM_ID_ROD_CHANGE_CREATURE = 517
-	ITEM_ID_ROD_ALCHEMY = 518
-	ITEM_ID_BOTTLE_DYE = 519
-	ITEM_ID_WING = 520
-	ITEM_ID_DEED_MUSEUM = 521
-	ITEM_ID_DEED_SHOP = 522
-	ITEM_ID_TREE_BEECH = 523
-	ITEM_ID_TREE_CEDAR = 524
-	ITEM_ID_TREE_FRUITLESS = 525
-	ITEM_ID_TREE_FRUIT = 526
-	ITEM_ID_TREE_DEAD_TREE = 527
-	ITEM_ID_TREE_ZELKOVA = 528
-	ITEM_ID_TREE_PALM = 529
-	ITEM_ID_TREE_ASH = 530
-	ITEM_ID_FURNANCE = 531
-	ITEM_ID_FIREPLACE = 532
-	ITEM_ID_STOVE = 533
-	ITEM_ID_GIANT_FOLIAGE_PLANT = 534
-	ITEM_ID_BIG_TABLE = 535
-	ITEM_ID_PAINTING_MADAM = 536
-	ITEM_ID_PAINTING_LANDSCAPE = 537
-	ITEM_ID_PAINTING_SUNFLOWER = 538
-	ITEM_ID_STATUE_CAT = 539
-	ITEM_ID_BLACK_CRYSTAL = 540
-	ITEM_ID_SNOW_MAN = 541
-	ITEM_ID_DEED_FARM = 542
-	ITEM_ID_DEED_STORAGE_HOUSE = 543
-	ITEM_ID_DISC = 544
-	ITEM_ID_ROD_WALL_CREATION = 545
-	ITEM_ID_SPELLBOOK_WALL_CREATION = 546
-	ITEM_ID_SALARY_CHEST = 547
-	ITEM_ID_SPELLBOOK_HEALING_RAIN = 548
-	ITEM_ID_SCROLL_HEALING_RAIN = 549
-	ITEM_ID_SPELLBOOK_HEALING_HANDS = 550
-	ITEM_ID_ROD_HEALING_HANDS = 551
-	ITEM_ID_FEATHER = 552
-	ITEM_ID_GEM_SEED = 553
-	ITEM_ID_MAGICAL_SEED = 554
-	ITEM_ID_SHELTER = 555
-	ITEM_ID_SEVEN_LEAGUE_BOOTS = 556
-	ITEM_ID_VINDALE_CLOAK = 557
-	ITEM_ID_AURORA_RING = 558
-	ITEM_ID_POTION_CURE_CORRUPTION = 559
-	ITEM_ID_MASTERS_DELIVERY_CHEST = 560
-	ITEM_ID_SHOP_STRONGBOX = 561
-	ITEM_ID_REGISTER = 562
-	ITEM_ID_SKILLBOOK = 563
-	ITEM_ID_SPELLBOOK_ACID_GROUND = 564
-	ITEM_ID_ROD_ACID_GROUND = 565
-	ITEM_ID_ACIDPROOF_LIQUID = 566
-	ITEM_ID_FIREPROOF_BLANKET = 567
-	ITEM_ID_COLDPROOF_BLANKET = 568
-	ITEM_ID_SPELLBOOK_FIRE_WALL = 569
-	ITEM_ID_ROD_FIRE_WALL = 570
-	ITEM_ID_JERKY = 571
-	ITEM_ID_DEED_RANCH = 572
-	ITEM_ID_EGG = 573
-	ITEM_ID_BOTTLE_MILK = 574
-	ITEM_ID_SHIT = 575
-	ITEM_ID_PLAYBACK_DISC = 576
-	ITEM_ID_MOLOTOV = 577
-	ITEM_ID_KITTY_BANK = 578
-	ITEM_ID_FREEZER = 579
-	ITEM_ID_MODERN_RACK = 580
-	ITEM_ID_ROD_MAKE_DOOR = 581
-	ITEM_ID_SPELLBOOK_MAKE_DOOR = 582
-	ITEM_ID_TORCH = 583
-	ITEM_ID_CANDLE = 584
-	ITEM_ID_FANCY_LAMP = 585
-	ITEM_ID_MODERN_LAMP = 586
-	ITEM_ID_HANDFUL_SNOW = 587
-	ITEM_ID_TREE_NAKED = 588
-	ITEM_ID_TREE_FIR = 589
-	ITEM_ID_SNOW_SCARECROW = 590
-	ITEM_ID_MINI_SNOW_MAN = 591
-	ITEM_ID_SNOW_BARREL = 592
-	ITEM_ID_MODERN_LAMP2 = 593
-	ITEM_ID_STATUE_HOLY_CROSS = 594
-	ITEM_ID_PILLAR = 595
-	ITEM_ID_STAINED_GLASS_WINDOW = 596
-	ITEM_ID_CARGO_CHRISTMAS_TREE = 597
-	ITEM_ID_CARGO_SNOW_MAN = 598
-	ITEM_ID_CHRISTMAS_TREE = 599
-	ITEM_ID_GIANTS_SHACKLE = 600
-	ITEM_ID_EMPTY_BOTTLE = 601
-	ITEM_ID_HOLY_WELL = 602
-	ITEM_ID_PRESIDENTS_CHAIR = 603
-	ITEM_ID_GREEN_PLANT = 604
-	ITEM_ID_MONEY_TREE = 605
-	ITEM_ID_BARBECUE_SET = 606
-	ITEM_ID_GIANT_CACTUS = 607
-	ITEM_ID_SQUARE_WINDOW = 608
-	ITEM_ID_WINDOW = 609
-	ITEM_ID_TRIANGLE_PLANT = 610
-	ITEM_ID_HOUSE_BOARD = 611
-	ITEM_ID_NICE_WINDOW = 612
-	ITEM_ID_KINGS_BED = 613
-	ITEM_ID_FLOWER_ARCH = 614
-	ITEM_ID_BILL = 615
-	ITEM_ID_TAX_MASTERS_TAX_BOX = 616
-	ITEM_ID_BAIT = 617
-	ITEM_ID_FISH = 618
-	ITEM_ID_FISH_JUNK = 619
-	ITEM_ID_LOVE_POTION = 620
-	ITEM_ID_TREASURE_MAP = 621
-	ITEM_ID_SMALL_MEDAL = 622
-	ITEM_ID_CAT_SISTERS_DIARY = 623
-	ITEM_ID_GIRLS_DIARY = 624
-	ITEM_ID_SHRINE_GATE = 625
-	ITEM_ID_BOTTLE_HERMES_BLOOD = 626
-	ITEM_ID_SAGES_HELM = 627
-	ITEM_ID_SPELLBOOK_INCOGNITO = 628
-	ITEM_ID_DISGUISE_SET = 629
-	ITEM_ID_MATERIAL_KIT = 630
-	ITEM_ID_MOON_GATE = 631
-	ITEM_ID_FLYING_SCROLL = 632
-	ITEM_ID_PANTY = 633
-	ITEM_ID_LEASH = 634
-	ITEM_ID_MINE = 635
-	ITEM_ID_LOCKPICK = 636
-	ITEM_ID_SKELETON_KEY = 637
-	ITEM_ID_SCROLL_ESCAPE = 638
-	ITEM_ID_HAPPY_APPLE = 639
-	ITEM_ID_UNICORN_HORN = 640
-	ITEM_ID_COOLER_BOX = 641
-	ITEM_ID_RICE_BARREL = 642
-	ITEM_ID_EASTERN_BED = 643
-	ITEM_ID_DECORATED_WINDOW = 644
-	ITEM_ID_KING_DRAWER = 645
-	ITEM_ID_MENU_BOARD = 646
-	ITEM_ID_BLACK_BOARD = 647
-	ITEM_ID_SOFA = 648
-	ITEM_ID_FLOWERBED = 649
-	ITEM_ID_TOILET = 650
-	ITEM_ID_CRAFT_CUPBOARD = 651
-	ITEM_ID_SINK2 = 652
-	ITEM_ID_JUNK = 653
-	ITEM_ID_DOUBLE_BED = 654
-	ITEM_ID_HERO_CHEESE = 655
-	ITEM_ID_EASTERN_LAMP = 656
-	ITEM_ID_EASTERN_WINDOW = 657
-	ITEM_ID_CHOCHIN = 658
-	ITEM_ID_PARTITION = 659
-	ITEM_ID_SPELLBOOK_DARKNESS_ARROW = 660
-	ITEM_ID_DAL_I_THALION = 661
-	ITEM_ID_MAGIC_FRUIT = 662
-	ITEM_ID_MONSTER_HEART = 663
-	ITEM_ID_SPEED_RING = 664
-	ITEM_ID_STATUE_OPATOS = 665
-	ITEM_ID_STATUE_LULWY = 666
-	ITEM_ID_SISTERS_LOVE_FUELED_LUNCH = 667
-	ITEM_ID_BOOK_RACHEL = 668
-	ITEM_ID_ART = 669
-	ITEM_ID_CANVAS = 670
-	ITEM_ID_NUCLEAR_BOMB = 671
-	ITEM_ID_SECRET_TREASURE = 672
-	ITEM_ID_WIND_BOW = 673
-	ITEM_ID_WINCHESTER_PREMIUM = 674
-	ITEM_ID_KUMIROMI_SCYTHE = 675
-	ITEM_ID_ELEMENTAL_STAFF = 676
-	ITEM_ID_HOLY_LANCE = 677
-	ITEM_ID_LUCKY_DAGGER = 678
-	ITEM_ID_GAIA_HAMMER = 679
-	ITEM_ID_GEMSTONE_LULWY = 680
-	ITEM_ID_GEMSTONE_JURE = 681
-	ITEM_ID_GEMSTONE_KUMIROMI = 682
-	ITEM_ID_ENERGY_CRYSTAL_MATRIX = 683
-	ITEM_ID_GENE_MACHINE = 684
-	ITEM_ID_MONSTER_BALL = 685
-	ITEM_ID_STATUE_JURE = 686
-	ITEM_ID_ANCIENT_BOOK = 687
-	ITEM_ID_IRON_MAIDEN = 688
-	ITEM_ID_GUILLOTINE = 689
-	ITEM_ID_PAN_FLUTE = 690
-	ITEM_ID_LUTE = 691
-	ITEM_ID_HARMONICA = 692
-	ITEM_ID_HARP = 693
-	ITEM_ID_EASTERN_PARTITION = 694
-	ITEM_ID_AXE_OF_DESTRUCTION = 695
-	ITEM_ID_SPELLBOOK_MAGIC_BALL = 696
-	ITEM_ID_SPELLBOOK_MAGIC_LASER = 697
-	ITEM_ID_POTION_SALT_SOLUTION = 698
-	ITEM_ID_LITTLE_BALL = 699
-	ITEM_ID_TOWN_BOOK = 700
-	ITEM_ID_DECK = 701
-	ITEM_ID_RABBITS_TAIL = 702
-	ITEM_ID_WHISTLE = 703
-	ITEM_ID_VOMIT = 704
-	ITEM_ID_BEGGARS_PENDANT = 705
-	ITEM_ID_POTION_DESCENT = 706
-	ITEM_ID_STRADIVARIUS = 707
-	ITEM_ID_BOOK_RESURRECTION = 708
-	ITEM_ID_SCROLL_CONTINGENCY = 709
-	ITEM_ID_SPELLBOOK_CONTINGENCY = 710
-	ITEM_ID_POTION_EVOLUTION = 711
-	ITEM_ID_DEED_DUNGEON = 712
-	ITEM_ID_SHURIKEN = 713
-	ITEM_ID_GRENADE = 714
-	ITEM_ID_SECRET_EXP_KUMIROMI = 715
-	ITEM_ID_VANILLA_ROCK = 716
-	ITEM_ID_SECRET_EXP_LOMIAS = 717
-	ITEM_ID_SHENAS_PANTY = 718
-	ITEM_ID_CLAYMORE2 = 719
-	ITEM_ID_HAPPY_BED = 720
-	ITEM_ID_STATUE_EHEKATL = 721
-	ITEM_ID_ARBALEST = 722
-	ITEM_ID_TWIN_EDGE = 723
-	ITEM_ID_MUSIC_TICKET = 724
-	ITEM_ID_KILL_KILL_PIANO = 725
-	ITEM_ID_ALUD = 726
-	ITEM_ID_SHIELD_OF_THORNS = 727
-	ITEM_ID_CRIMSON_PLATE = 728
-	ITEM_ID_GIFT = 729
-	ITEM_ID_TOKEN_FRIENDSHIP = 730
-	ITEM_ID_SPELLBOOK_4D_POCKET = 731
-	ITEM_ID_SPELLBOOK_HARVEST = 732
-	ITEM_ID_SAND_BAG = 733
-	ITEM_ID_SMALL_GAMBLE_CHEST = 734
-	ITEM_ID_SCYTHE = 735
-	ITEM_ID_FIREPROOF_LIQUID = 736
-	ITEM_ID_SCROLL_NAME = 737
-	ITEM_ID_FORTUNE_COOKIE = 738
-	ITEM_ID_FRISIAS_TAIL = 739
-	ITEM_ID_UNKNOWN_SHELL = 740
-	ITEM_ID_HIRYU_TO = 741
-	ITEM_ID_LICENCE_THE_VOID_EXPLORER = 742
-	ITEM_ID_CARNEADES_PLANK = 743
-	ITEM_ID_SCHRODINGERS_CAT = 744
-	ITEM_ID_OBJET_HEART = 745
-	ITEM_ID_TAMERS_WHIP = 746
-	ITEM_ID_BOOK_BOKONON = 747
-	ITEM_ID_SUMMONING_CRYSTAL = 748
-	ITEM_ID_STATUE_CREATOR = 749
-	ITEM_ID_UPSTAIRS = 750
-	ITEM_ID_DOWNSTAIRS = 751
-	ITEM_ID_NEW_YEARS_GIFT = 752
-	ITEM_ID_KOTATSU = 753
-	ITEM_ID_DARUMA = 754
-	ITEM_ID_KAGAMI_MOCHI = 755
-	ITEM_ID_MOCHI = 756
-	ITEM_ID_FIVE_HORNED_HELM = 757
-	ITEM_ID_MAUSER_C96_CUSTOM = 758
-	ITEM_ID_LIGHTSABRE = 759
-	ITEM_ID_GAROKS_HAMMER = 760
-	ITEM_ID_GOULDS_PIANO = 761
-	ITEM_ID_FESTIVAL_WREATH = 762
-	ITEM_ID_PEDESTAL = 763
-	ITEM_ID_COUNTER = 764
-	ITEM_ID_RED_STALL = 765
-	ITEM_ID_BLUE_STALL = 766
-	ITEM_ID_JURES_BODY_PILLOW = 767
-	ITEM_ID_NEW_YEARS_DECORATION = 768
-	ITEM_ID_MINIATURE_TREE = 769
-	ITEM_ID_BOTTLE_SODA = 770
-	ITEM_ID_BLUE_CAPSULE_DRAG = 771
-	ITEM_ID_TOMATO = 772
-	ITEM_ID_LARGE_BOOKSHELF = 773
-	ITEM_ID_LUXURY_CABINET = 774
-	ITEM_ID_SPECIAL_STEAMED_MEAT_BUN = 775
-	ITEM_ID_STATUE_KUMIROMI = 776
-	ITEM_ID_STATUE_MANI = 777
-	ITEM_ID_LUXURY_SOFA = 778
-	ITEM_ID_DEER_HEAD = 779
-	ITEM_ID_FUR_CARPET = 780
-	ITEM_ID_KITCHEN_KNIFE = 781
-	ITEM_ID_LARGE_DISH = 782
-	ITEM_ID_RECIPE = 783
-	ITEM_ID_CARD_PACK = 784
-	ITEM_ID_BOTTLE_SALT = 785
-	ITEM_ID_SACK_SUGAR = 786
-	ITEM_ID_PUFF_PUFF_BREAD = 787
-	ITEM_ID_SKULL_BOW = 788
-	ITEM_ID_POT_FOR_FUSION = 789
-	ITEM_ID_POT_OF_ALCHEMIST = 790
-	ITEM_ID_DRAGON_SLAYER = 791
-	ITEM_ID_PUTITORO = 792
-	ITEM_ID_PILE_DRIVER = 793
-	ITEM_ID_NEGATIVE_EDGE = 794
-	ITEM_ID_GAU_17_CUSTOM = 795
-	ITEM_ID_KANEITUUHOU = 796
-	ITEM_ID_GEMSTONE_YACATECT = 797
-	ITEM_ID_DYNAMIC_SABER = 798
-	ITEM_ID_VERNIS_ORIGINAL = 799
-	ITEM_ID_AWESOME_SWIMWEAR = 800
-	ITEM_ID_OTI_TUBAKI = 801
-	ITEM_ID_GEMINI = 802
-	ITEM_ID_HEROS_CLOAK = 803
-	ITEM_ID_BEAST_SICKLE = 804
-	ITEM_ID_GOD_BREAKER = 805
-	ITEM_ID_G3_EXA = 806
-	ITEM_ID_DREADNOUGHT = 807
-	ITEM_ID_KINDNESS_BLADE = 808
-	ITEM_ID_OLDER_SISTERS_DIARY = 809
-	ITEM_ID_STORM_BRINGER = 810
-	ITEM_ID_DOG_SISTERS_DIARY = 811
-	ITEM_ID_RICE_BALL = 812
-	ITEM_ID_SOLAR_CANE = 813
-	ITEM_ID_METAL_WING_OF_VESDA = 814
-	ITEM_ID_SAND_CASTLE = 815
-	ITEM_ID_VALKOINEN_KUOLEMA = 816
-	ITEM_ID_SNIPER_RIFLE = 817
-	ITEM_ID_GEMSTONE_MANI = 818
-	ITEM_ID_TEMPEST_CHOKER = 819
-	ITEM_ID_WHEEL_OF_FORTUNE = 820
-	ITEM_ID_FETTER_OF_EARTH = 821
-	ITEM_ID_GREEN_GOD_THORN = 822
-	ITEM_ID_MECHANICAL_BINDER = 823
-	ITEM_ID_SASUMATA = 824
-	ITEM_ID_CARAMEL_OF_TERMINATION = 825
-	ITEM_ID_BLACK_MONKSHOOD = 826
-	ITEM_ID_BLUE_SPIRIT = 827
-	ITEM_ID_AUREATE_CONSTRICTER = 828
-	ITEM_ID_MAGIC_CANCELER = 829
-	ITEM_ID_STONE_COIN = 830
-	ITEM_ID_BUSTER_BOOK = 831
-	ITEM_ID_WASTE_ART = 832
-	ITEM_ID_GLIA_CRYSTAL = 833
-	ITEM_ID_ACCUMULATOR = 834
-	ITEM_ID_HIBACHI = 835
-	ITEM_ID_MURDER_CD = 836
-	ITEM_ID_TROLL_CELL = 837
-	ITEM_ID_IKAROS_WING = 838
-	ITEM_ID_ETHER_MIRROR = 839
-	ITEM_ID_CHAOS_JEWEL = 840
-	ITEM_ID_LAMP_PLANT = 841
-	ITEM_ID_BLACK_DRIP = 842
-	ITEM_ID_MAGIC_ICE = 843
-	ITEM_ID_SHAVED_ICE = 844
-	ITEM_ID_WADAIKO = 845
-	ITEM_ID_NIGHTMARE = 846
-	ITEM_ID_BOTTLE_SPEED_UPPER = 847
-	ITEM_ID_AGING_LUNCH = 848
-	ITEM_ID_AGE_RETURN_LUNCH = 849
-	ITEM_ID_SMASH_TONFA = 850
-	ITEM_ID_GERBERA_CROSS = 851
-	ITEM_ID_FORBIDDEN_MEAT = 852
-	ITEM_ID_INSANE_BOOK = 853
-	ITEM_ID_NAIL_STRADIVARIUS = 854
-	ITEM_ID_CARGO_RATION = 855
-	ITEM_ID_CARGO_MARIMO = 856
-	ITEM_ID_EFFECT_SCANNER = 857
-	ITEM_ID_STATUE_YACATECT = 858
-	ITEM_ID_STATUE_ITZPALT = 859
-	ITEM_ID_VITAL_FLAYER = 860
-	ITEM_ID_SEALED_SHIELD = 861
-	ITEM_ID_ZWIEBEL = 862
-	ITEM_ID_FLAME_EDGE = 863
-	ITEM_ID_WOODEN_HORSE = 864
-	ITEM_ID_COMMAND_FLAG = 865
-	ITEM_ID_NOVA_GRENADE = 866
-	ITEM_ID_YITH_YAKI = 867
-	ITEM_ID_UNICORN_DRILL = 868
-	ITEM_ID_EVITEM = 869
-	ITEM_ID_SPELLBOOK_FEATHER = 870
-	ITEM_ID_SABER_TONFA = 871
-	ITEM_ID_KOMA_INU = 872
-	ITEM_ID_KOMA_INU2 = 873
-	ITEM_ID_FLASH_CROSSBOW = 874
-	ITEM_ID_RAINBOW = 875
-	ITEM_ID_DOG_WHISTLE = 876
-	ITEM_ID_PHILOSOPHERS_STONE_MASK = 877
-	ITEM_ID_BLANK_BUSINESS_CARD = 878
-	ITEM_ID_MAG_ABYSS = 879
-	ITEM_ID_SLASH_JOKER = 880
-	ITEM_ID_AA_12_ADVANCE = 881
-	ITEM_ID_POTION_AQUA_SANCTIO = 882
-	ITEM_ID_POTION_DISASTER = 883
-	ITEM_ID_POTION_NEKTAR = 884
-	ITEM_ID_POTION_SOMA = 885
-	ITEM_ID_CLEANING_DOLL = 886
-	ITEM_ID_ROD_ECLIPSE = 887
-	ITEM_ID_MOONLIGHT = 888
-	ITEM_ID_HANDMADE_CHOCOLATE = 889
-	ITEM_ID_SUPER_LURE = 890
-	ITEM_ID_GRIFFON = 891
-	ITEM_ID_SHIELD_TONFA = 892
-	ITEM_ID_SONIC_TONFA = 893
-	ITEM_ID_MANDRAKE_SALAD = 894
-	ITEM_ID_SACRIFICE_TONFA = 895
-	ITEM_ID_MYSTERIOUS_DIARY = 896
-	ITEM_ID_DEED_HOME_RELOCATION = 897
-	ITEM_ID_DRAKE_ROD = 898
-	ITEM_ID_GRAVITY_AXE = 899
-	ITEM_ID_ASTRAL_LIGHT_PEN = 900
-	ITEM_ID_ROD_LIGHTNING_BALL = 901
-	ITEM_ID_COCONUT_CRAB = 902
-	ITEM_ID_COFFIN_OF_NECROMANCY = 903
-	ITEM_ID_WAR_SUIT = 904
-	ITEM_ID_DANGER_SWIMWEAR = 905
-	ITEM_ID_CHESTNUT = 906
-	ITEM_ID_HANDMADE_CHOCOLATE_KIT = 907
-	ITEM_ID_VICE_STAFF = 908
-	ITEM_ID_DEED_DISCARDED_RANCH = 909
-	ITEM_ID_MINIATURE_BLIMP = 910
-	ITEM_ID_BOTTLE_ANTISEPTIC = 911
-	ITEM_ID_WATERMELON = 912
-	ITEM_ID_MUSKMELON = 913
-	ITEM_ID_BANANA = 914
-	ITEM_ID_APPLE_PEAR = 915
-	ITEM_ID_PINEAPPLE = 916
-	ITEM_ID_POTATO = 917
-	ITEM_ID_CORN = 918
-	ITEM_ID_EGGPLANT = 919
-	ITEM_ID_ORGANIC_FERTILIZER = 920
-	ITEM_ID_BIG_BRUSH = 921
-	ITEM_ID_ASTRAL_SICKLE = 922
-	ITEM_ID_GUR_BAGH_NAKH = 923
-	ITEM_ID_BRILLIANT_DIAMOND = 924
-	ITEM_ID_TABLET_EMERALD = 925
-	ITEM_ID_BRILLIANT_RUBYNUS = 926
-	ITEM_ID_SERPENT = 927
-	ITEM_ID_RECORDER = 928
-	ITEM_ID_OCARINA = 929
-	ITEM_ID_SOUL_SPINDLE = 930
-	ITEM_ID_WAKE_UP_OF_NEFIA = 931
-	ITEM_ID_CRIMBERRY = 932
-	ITEM_ID_DRUG_KISERU = 933
-	ITEM_ID_COFFEE = 934
-	ITEM_ID_TREE_SAKURA = 935
-	ITEM_ID_WOOD_MATERIAL = 936
-	ITEM_ID_REPEATING_BOW = 937
-	ITEM_ID_CLAW = 938
-	ITEM_ID_ROCK = 939
-	ITEM_ID_ASTEROID_BELT = 940
-	ITEM_ID_MAGATAMA = 941
-	ITEM_ID_ACORN = 942
-	ITEM_ID_GOLD_ACORN = 943
-	ITEM_ID_KAKI = 944
-	ITEM_ID_ROMIAS = 945
-	ITEM_ID_FOUR_LEAF_CLOVER = 946
-	ITEM_ID_JUKE_BOX = 947
-	ITEM_ID_OTOGIRI = 948
-	ITEM_ID_HOUSENKA = 949
-	ITEM_ID_TRISHULA = 950
-	ITEM_ID_N97_CANNON = 951
-	ITEM_ID_ABYSS_LUNCH = 952
-	ITEM_ID_BALLISTA = 953
-	ITEM_ID_CHAINSICKLE = 954
-	ITEM_ID_SOCKS = 955
-	ITEM_ID_WHIP = 956
-	ITEM_ID_SUNBARARIA_HELM = 957
-	ITEM_ID_GRANDEL = 958
-	ITEM_ID_MELODYUS = 959
-	ITEM_ID_STONE_MATERIAL = 960
-	ITEM_ID_PETHOUSE = 961
-	ITEM_ID_SMALL_WOODEN_GOLEM = 962
-	ITEM_ID_STATUE_BUTUZOU = 963
-	ITEM_ID_ZIZOU = 964
-	ITEM_ID_SMALL_STONE_GOLEM = 965
-	ITEM_ID_ANGEL_STATUE = 966
-	ITEM_ID_E_G_G = 967
-	ITEM_ID_MIND_DISC = 968
-	ITEM_ID_CORE_OF_NEFIA = 969
-	ITEM_ID_TEAR_OF_GOD = 970
-	ITEM_ID_NINE_GOD_SIGN = 971
-	ITEM_ID_MAGAQUA = 972
-	ITEM_ID_MAGNUM = 973
-	ITEM_ID_IVY_SPINE = 974
-	ITEM_ID_ARGENT_SNOW = 975
-	ITEM_ID_POTION_CONCENTRATION = 976
-	ITEM_ID_POTION_FEATHER = 977
-	ITEM_ID_SPELLBOOK_CONCENTRATION = 978
-	ITEM_ID_JACK_LANTERN = 979
-	ITEM_ID_INSIGHT_LENS = 980
-	ITEM_ID_USAMIMI = 981
-	ITEM_ID_SLEEP_SHEEP = 982
-	ITEM_ID_BLOODY_TEARS = 983
-	ITEM_ID_DUEL_GLOVE = 984
-	ITEM_ID_LUCKY_ALMONDS = 985
-	ITEM_ID_HL_KRSW = 986
-	ITEM_ID_SKULL_SWORD = 987
-	ITEM_ID_MAGISTUS = 988
-	ITEM_ID_TRISMAGISTUS = 989
-	ITEM_ID_WONDER_BODY_FORMER = 990
-	ITEM_ID_DD_CEMETERY_KEY = 991
-	ITEM_ID_LARGE_PICNIC_BASKET = 992
-	ITEM_ID_LARGE_EMPTY_BASKET = 993
-	ITEM_ID_4D_MIRROR = 994
-	ITEM_ID_SPADILLE = 995
-	ITEM_ID_ION_CAKRAM = 996
-	ITEM_ID_PANTS_OF_OGRE = 997
-	ITEM_ID_SONIC_BROOM = 998
-	ITEM_ID_OMEGA_SHIFT_CORE = 999
-	ITEM_ID_DELTA_SHIFT_CORE = 1000
-	ITEM_ID_GAMMA_SHIFT_CORE = 1001
-	ITEM_ID_BETA_SHIFT_CORE = 1002
-	ITEM_ID_ALPHA_SHIFT_CORE = 1003
-	ITEM_ID_JUICE_MIXER = 1004
-	ITEM_ID_JUICE = 1005
-	ITEM_ID_THE_WHITE_HAWK = 1006
-	ITEM_ID_MIGHTY_ARMS = 1007
-	ITEM_ID_VIOLENT_SKULL_SWORD = 1008
-	ITEM_ID_NUCLEAR_DEAD_LION = 1009
-	ITEM_ID_BLOOD_ROD = 1010
-	ITEM_ID_KNEADED_SWEETS_OF_WITCH = 1011
-	ITEM_ID_SCISSORS_OF_KUMIROMI = 1012
-	ITEM_ID_MUG_OF_EHEKATL = 1013
-	ITEM_ID_BOOKMARK_OF_ITZPALT = 1014
-	ITEM_ID_GLASSES_OF_YACATECT = 1015
-	ITEM_ID_VERY_PISTOL_OF_MANI = 1016
-	ITEM_ID_CANDLE_OF_LULWY = 1017
-	ITEM_ID_AMULET_OF_JURE = 1018
-	ITEM_ID_DUMBBELL_OF_OPATOS = 1019
-	ITEM_ID_CESTUS_OF_METEORS = 1020
-	ITEM_ID_TAKTSTOCK = 1021
-	ITEM_ID_SPECIAL_AMMO_BOX = 1022
-	ITEM_ID_FIRST_AID_KIT = 1023
-	ITEM_ID_RESEARCHERS_DIARY = 1024
-	ITEM_ID_AMULET_OF_YEKUB = 1025
-	ITEM_ID_ROD_POISON_BALL = 1026
-	ITEM_ID_ROD_MAGIC_LASER = 1027
-	ITEM_ID_PLEASANT_SLEEP_BLANKET = 1028
-	ITEM_ID_PANZERFAUST_X = 1029
-	ITEM_ID_M202_SPECIAL = 1030
-	ITEM_ID_ATOMIC_LAUNCHER = 1031
-	ITEM_ID_ROD_BUBBLE_BALL = 1032
-	ITEM_ID_SPELLBOOK_WATER_BEAM = 1033
-	ITEM_ID_SASANQUA_SICKLE = 1034
-	ITEM_ID_ESSENTIAL_OIL = 1035
-	ITEM_ID_GASOLINE = 1036
-	ITEM_ID_ELEMENTS_EYES = 1037
-	ITEM_ID_HELTIARRE = 1038
-	ITEM_ID_DOKURO_MIKADUKI = 1039
-	ITEM_ID_SOUP_OF_WONDERLAND = 1040
-	ITEM_ID_BRONZE_COIN = 1041
-	ITEM_ID_ZUGAIKURAI = 1042
-	ITEM_ID_TOBACCO = 1043
-	ITEM_ID_CIGARETTE = 1044
-	ITEM_ID_HAMAKI = 1045
-	ITEM_ID_TOBACCO_PIPE = 1046
-	ITEM_ID_KISERU = 1047
-	ITEM_ID_SUIGARA = 1048
-	ITEM_ID_NECROMANTIS = 1049
-	ITEM_ID_B_JERKY = 1050
-	ITEM_ID_HANABI = 1051
-	ITEM_ID_BOTTLE_PEPPER = 1052
-	ITEM_ID_BOTTLE_SOY_SAUCE = 1053
-	ITEM_ID_BANNOU_MUGI = 1054
-	ITEM_ID_RICE = 1055
-	ITEM_ID_COFFEE_BEANS = 1056
-	ITEM_ID_TEA_LEAF = 1057
-	ITEM_ID_GULIWELZEN = 1058
-	ITEM_ID_PRESENT = 1059
-	ITEM_ID_CRAFT_REPAIR_KIT = 1060
-	ITEM_ID_WILD_FLOWER = 1061
-	ITEM_ID_BIO_PRINTER = 1062
-	ITEM_ID_YOHUALLI_TEZCATL = 1063
-	ITEM_ID_OHUDA = 1064
-	ITEM_ID_LOVELY_BOUQUET = 1065
-	ITEM_ID_STARDUST = 1066
-	ITEM_ID_CROWN_POINT = 1067
-	ITEM_ID_HEART_OF_TWILIGHT = 1068
-	ITEM_ID_BLACK_TEA = 1069
-	ITEM_ID_GREEN_TEA = 1070
-	ITEM_ID_LIVESTOCK_FEED = 1071
-	ITEM_ID_YOGURT = 1072
-	ITEM_ID_BUTTER = 1073
-	ITEM_ID_CHEESE = 1074
-	ITEM_ID_ASSAULT_GOLD = 1075
-	ITEM_ID_SPELLBOOK_GEM = 1076
-	ITEM_ID_POTION_GEM = 1077
-	ITEM_ID_POTION_WISDOM = 1078
-	ITEM_ID_SOYBEAN = 1079
-	ITEM_ID_TOFU = 1080
-	ITEM_ID_NATTO = 1081
-	ITEM_ID_FRIED_TOFU = 1082
-	ITEM_ID_HARAKIRI = 1083
-	ITEM_ID_1_2_MILLION_TAX_CERTIFICATE = 1084
-	ITEM_ID_12_MILLION_TAX_CERTIFICATE = 1085
-	ITEM_ID_SOFT_MATERIUM = 1086
-	ITEM_ID_SOFT_HIGH_MATERIUM = 1087
-	ITEM_ID_HARD_MATERIUM = 1088
-	ITEM_ID_HARD_HIGH_MATERIUM = 1089
-	ITEM_ID_SHARP_MATERIUM = 1090
-	ITEM_ID_SHARP_HIGH_MATERIUM = 1091
-	ITEM_ID_GOD_BINDER = 1092
-	ITEM_ID_SKILL_TICKET = 1093
-	ITEM_ID_MANIS_ALARM_CLOCK = 1094
-	ITEM_ID_PAINTING_OF_EHEKATL_AND_SWORDFISH = 1095
-	ITEM_ID_ITZPALTS_SCULPTURE = 1096
-	ITEM_ID_YACATECTS_BANK = 1097
-	ITEM_ID_LULWYS_PHOTO_COLLECTION = 1098
-	ITEM_ID_KUMIROMI_GURUMI = 1099
-	ITEM_ID_DOWSING_OPATOS = 1100
-	ITEM_ID_BEETLE_CYBORG = 1101
-	ITEM_ID_DRIED_FRUIT = 1102
-	ITEM_ID_DRIED_VEGETABLE = 1103
-	ITEM_ID_DRIED_FISH = 1104
-	ITEM_ID_MYSTERIOUS_ENVELOPE = 1105
-	ITEM_ID_CHRISTMAS_CAKE_SET = 1106
-	ITEM_ID_OZOUNI = 1107
-	ITEM_ID_OSIRUKO = 1108
-	ITEM_ID_HAMBURGER = 1109
-	ITEM_ID_GRAVITAIL = 1110
-	ITEM_ID_RASEN = 1111
-	ITEM_ID_MAGIC_RESTRAINT = 1112
-	ITEM_ID_INJECT_BUNKER = 1113
-	ITEM_ID_BIO_BATTERY = 1114
-	ITEM_ID_URINE = 1115
-	ITEM_ID_GROUND_BAIT = 1116
-	ITEM_ID_RABBIT_FOOT = 1117
-	ITEM_ID_PAINTING_ERUPTION = 1118
-	ITEM_ID_OBSERVATION_REPORT = 1119
-	ITEM_ID_ENCOUNTER_CANCELLER = 1120
-	ITEM_ID_BUTLERS_DIARY = 1121
-	ITEM_ID_SULFUR = 1122
-	ITEM_ID_CLAY = 1123
-	ITEM_ID_MYSTERIOUS_FOSSIL = 1124
-	ITEM_ID_ANCIENT_POTTERY = 1125
-	ITEM_ID_DECORATIVE_POTTERY = 1126
-	ITEM_ID_BISQUE_DOLL = 1127
-	ITEM_ID_CHEWING_GUM = 1128
-	ITEM_ID_CHEWED_UP_GUM = 1129
-	ITEM_ID_DEVIL_FRAGMENT = 1130
-	ITEM_ID_BARLEY_TEA = 1131
-	ITEM_ID_COLA = 1132
-	ITEM_ID_BOMB_BARREL = 1133
-	ITEM_ID_DEED_PROPERTY_TRANSFER = 1134
-	ITEM_ID_FIXITY_ANCHOR = 1135
-	ITEM_ID_CURE_CRYSTAL = 1136
-	ITEM_ID_CHICORY = 1137
-	ITEM_ID_FANE = 1138
-	ITEM_ID_TWIG = 1139
-	ITEM_ID_GUN_PAIR = 1140
-	ITEM_ID_CROSSFIRE = 1141
-	ITEM_ID_BLADE_BOW = 1142
-	ITEM_ID_NUNCHAKU = 1143
-	ITEM_ID_SHAKUJO = 1144
-	ITEM_ID_STAR_HAMMER = 1145
-	ITEM_ID_WAR_HAMMER = 1146
-	ITEM_ID_BONE_SCYTHE = 1147
-	ITEM_ID_SCISSORS = 1148
-	ITEM_ID_CHAINSAW = 1149
-	ITEM_ID_TOMAHAWK = 1150
-	ITEM_ID_LANCE = 1151
-	ITEM_ID_DRILL = 1152
-	ITEM_ID_FLEURE = 1153
-	ITEM_ID_KUNAI = 1154
-	ITEM_ID_DISINFECTANT = 1155
-	ITEM_ID_LINGS_BOW = 1156
-	ITEM_ID_RINKHALS = 1157
-	ITEM_ID_YOMI_TO = 1158
-	ITEM_ID_SCORPIERCE = 1159
-	ITEM_ID_NAZUNAS_SOX = 1160
-	ITEM_ID_CROSS_RAIL = 1161
-	ITEM_ID_POWER_TRIANGLE = 1162
-	ITEM_ID_ENGOKU = 1163
-	ITEM_ID_NUMENIUS = 1164
-	ITEM_ID_DGT_101 = 1165
-	ITEM_ID_GOUTEN = 1166
-	ITEM_ID_EPECLAIR = 1167
-	ITEM_ID_GO_RENGE = 1168
+	#define global	ITEM_ID_DUMMY	0
+	#define global	ITEM_ID_LONG_SWORD	1
+	#define global	ITEM_ID_DAGGER	2
+	#define global	ITEM_ID_HAND_AXE	3
+	#define global	ITEM_ID_CLUB	4
+	#define global	ITEM_ID_MAGIC_HAT	5
+	#define global	ITEM_ID_FAIRY_HAT	6
+	#define global	ITEM_ID_BREASTPLATE	7
+	#define global	ITEM_ID_ROBE	8
+	#define global	ITEM_ID_DECORATED_GLOVES	9
+	#define global	ITEM_ID_THICK_GAUNTLETS	10
+	#define global	ITEM_ID_HEAVY_BOOTS	11
+	#define global	ITEM_ID_COMPOSITE_BOOTS	12
+	#define global	ITEM_ID_DECORATIVE_RING	13
+	#define global	ITEM_ID_SCROLL_IDENTIFY	14
+	#define global	ITEM_ID_SCROLL_ORACLE	15
+	#define global	ITEM_ID_SCROLL_TELEPORTATION	16
+	#define global	ITEM_ID_SCROLL_INCOGNITO	17
+	#define global	ITEM_ID_ROD_IDENTIFY	18
+	#define global	ITEM_ID_ROD_TELEPORTATION	19
+	#define global	ITEM_ID_SPELLBOOK_TELEPORTATION	20
+	#define global	ITEM_ID_SPELLBOOK_IDENTIFY	21
+	#define global	ITEM_ID_SPELLBOOK_UNCURSE	22
+	#define global	ITEM_ID_BOOK	23
+	#define global	ITEM_ID_RED_BOOK	24
+	#define global	ITEM_ID_BUGGED_BOOK	25
+	#define global	ITEM_ID_BOTTLE_DIRTY_WATER	26
+	#define global	ITEM_ID_POTION_BLINDNESS	27
+	#define global	ITEM_ID_POTION_CONFUSION	28
+	#define global	ITEM_ID_POTION_PARALYSIS	29
+	#define global	ITEM_ID_SLEEPING_DRUG	30
+	#define global	ITEM_ID_BOTTLE_CRIM_ALE	31
+	#define global	ITEM_ID_SPELLBOOK_ICE_BOLT	32
+	#define global	ITEM_ID_SPELLBOOK_FIRE_BOLT	33
+	#define global	ITEM_ID_SPELLBOOK_LIGHTNING_BOLT	34
+	#define global	ITEM_ID_EARTH_CRYSTAL	35
+	#define global	ITEM_ID_MANA_CRYSTAL	36
+	#define global	ITEM_ID_SUN_CRYSTAL	37
+	#define global	ITEM_ID_GOLD_BAR	38
+	#define global	ITEM_ID_RAW_RUBYNUS_ORE	39
+	#define global	ITEM_ID_MICA_ORE	40
+	#define global	ITEM_ID_RAW_EMERALD_ORE	41
+	#define global	ITEM_ID_RAW_DIAMOND_ORE	42
+	#define global	ITEM_ID_WOOD_CHIP	43
+	#define global	ITEM_ID_JUNK_STONE	44
+	#define global	ITEM_ID_GARBAGE	45
+	#define global	ITEM_ID_BROKEN_VASE	46
+	#define global	ITEM_ID_WASHINGS	47
+	#define global	ITEM_ID_BRAZIER_STAND	48
+	#define global	ITEM_ID_FLAG	49
+	#define global	ITEM_ID_BROKEN_SWORD	50
+	#define global	ITEM_ID_BONE_FRAGMENT	51
+	#define global	ITEM_ID_SKELETON	52
+	#define global	ITEM_ID_TOMBSTONE	53
+	#define global	ITEM_ID_GOLD_PIECE	54
+	#define global	ITEM_ID_PLATINUM_COIN	55
+	#define global	ITEM_ID_DIABLOS	56
+	#define global	ITEM_ID_ZANTETSUKEN	57
+	#define global	ITEM_ID_LONG_BOW	58
+	#define global	ITEM_ID_KNIGHT_SHIELD	59
+	#define global	ITEM_ID_PISTOL	60
+	#define global	ITEM_ID_ARROW	61
+	#define global	ITEM_ID_BULLET	62
+	#define global	ITEM_ID_SCYTHE_OF_THE_VOID	63
+	#define global	ITEM_ID_MOURNBLADE	64
+	#define global	ITEM_ID_LIGHT_CLOAK	65
+	#define global	ITEM_ID_GIRDLE	66
+	#define global	ITEM_ID_DECORATIVE_AMULET	67
+	#define global	ITEM_ID_POTION_CURE_MINOR_WOUND	68
+	#define global	ITEM_ID_POTION_CURE_MAJOR_WOUND	69
+	#define global	ITEM_ID_POTION_CURE_CRITICAL_WOUND	70
+	#define global	ITEM_ID_POTION_VITALITY	71
+	#define global	ITEM_ID_POTION_HEALER	72
+	#define global	ITEM_ID_RAGNAROK	73
+	#define global	ITEM_ID_POTION_HEALER_ODINA	74
+	#define global	ITEM_ID_POTION_WHITE_HEALER_ERIS	75
+	#define global	ITEM_ID_POTION_SACRED_HEALER_JURE	76
+	#define global	ITEM_ID_ROUND_CHAIR	77
+	#define global	ITEM_ID_BOOKSHELF	78
+	#define global	ITEM_ID_LUXURY_DRAWER	79
+	#define global	ITEM_ID_CHEAP_BED	80
+	#define global	ITEM_ID_PLUSH_DOLL	81
+	#define global	ITEM_ID_TOY	82
+	#define global	ITEM_ID_MODERN_TABLE	83
+	#define global	ITEM_ID_DINING_TABLE	84
+	#define global	ITEM_ID_ARMOR	85
+	#define global	ITEM_ID_GOODS	86
+	#define global	ITEM_ID_VARIOUS_ACCESSORIES	87
+	#define global	ITEM_ID_GRAND_PIANO	88
+	#define global	ITEM_ID_BAR_TABLE_ALPHA	89
+	#define global	ITEM_ID_BAR_TABLE_BETA	90
+	#define global	ITEM_ID_BARREL	91
+	#define global	ITEM_ID_STYLISH_CHAIR	92
+	#define global	ITEM_ID_PICKAXE	93
+	#define global	ITEM_ID_LANTERN	94
+	#define global	ITEM_ID_ORNAMENTAL_ARMOR	95
+	#define global	ITEM_ID_ANVIL	96
+	#define global	ITEM_ID_SEALED_VASE	97
+	#define global	ITEM_ID_OPEN_VASE	98
+	#define global	ITEM_ID_WRITING_DESK	99
+	#define global	ITEM_ID_POTION_RACK	100
+	#define global	ITEM_ID_SQUARE_CHAIR	101
+	#define global	ITEM_ID_CHEAP_CHAIR	102
+	#define global	ITEM_ID_CUPBOARD	103
+	#define global	ITEM_ID_SHED	104
+	#define global	ITEM_ID_TIDY_BOOKSHELF	105
+	#define global	ITEM_ID_STORAGE_RACK	106
+	#define global	ITEM_ID_VARIETY_TOOLS	107
+	#define global	ITEM_ID_VARIETY_GOODS	108
+	#define global	ITEM_ID_WELL	109
+	#define global	ITEM_ID_VARIETY_CLOTHES	110
+	#define global	ITEM_ID_SMELTER	111
+	#define global	ITEM_ID_OVEN	112
+	#define global	ITEM_ID_SIGN	113
+	#define global	ITEM_ID_SIGNPOST	114
+	#define global	ITEM_ID_NOTICE_BOARD	115
+	#define global	ITEM_ID_SPELLBOOK_MINOR_TELEPORTATION	116
+	#define global	ITEM_ID_EMPTY_BASKET	117
+	#define global	ITEM_ID_SPELLBOOK_SUMMON_MONSTERS	118
+	#define global	ITEM_ID_ROD_CURE_MINOR_WOUND	119
+	#define global	ITEM_ID_ROD_MAGIC_MISSILE	120
+	#define global	ITEM_ID_ROD_SUMMON_MONSTERS	121
+	#define global	ITEM_ID_ROD_ICE_BOLT	122
+	#define global	ITEM_ID_ROD_FIRE_BOLT	123
+	#define global	ITEM_ID_BREAD_DISPLAY	124
+	#define global	ITEM_ID_ROD_LIFE	125
+	#define global	ITEM_ID_BEAKER	126
+	#define global	ITEM_ID_ALCHEMY_TOOLS	127
+	#define global	ITEM_ID_MAGIC_CIRCLE	128
+	#define global	ITEM_ID_SMALL_DECORATIVE_PLANT	129
+	#define global	ITEM_ID_BANKS_ROSE	130
+	#define global	ITEM_ID_LARGE_DECORATIVE_PLANT	131
+	#define global	ITEM_ID_SAGE	132
+	#define global	ITEM_ID_GAZANIA	133
+	#define global	ITEM_ID_NERINE	134
+	#define global	ITEM_ID_ANEMONE	135
+	#define global	ITEM_ID_FOXTAIL_GRASS	136
+	#define global	ITEM_ID_CARNATION	137
+	#define global	ITEM_ID_PLANT_ADORNED_PILLAR	138
+	#define global	ITEM_ID_FLOWER_ADORNED_PILLAR	139
+	#define global	ITEM_ID_PAINTING_TOOLS	140
+	#define global	ITEM_ID_MAP	141
+	#define global	ITEM_ID_FOOD_MAKER	142
+	#define global	ITEM_ID_BOWS	143
+	#define global	ITEM_ID_WEAPONS	144
+	#define global	ITEM_ID_DECORATED_CLOTHING	145
+	#define global	ITEM_ID_DECORATED_ARMOR	146
+	#define global	ITEM_ID_ARMOR_STATUE	147
+	#define global	ITEM_ID_DISORDERLY_BOOKS	148
+	#define global	ITEM_ID_LOT_BOOKS	149
+	#define global	ITEM_ID_CRAFT_RACK	150
+	#define global	ITEM_ID_CRAFT_BOOK_SHELF	151
+	#define global	ITEM_ID_LOT_ALCOHOLS	152
+	#define global	ITEM_ID_KITCHEN	153
+	#define global	ITEM_ID_SINK	154
+	#define global	ITEM_ID_KITCHEN_OVEN	155
+	#define global	ITEM_ID_NARROW_DINING_TABLE	156
+	#define global	ITEM_ID_ELEGANT_TABLE	157
+	#define global	ITEM_ID_GORGEOUS_CANDLESTICK	158
+	#define global	ITEM_ID_SIMPLE_SHELF	159
+	#define global	ITEM_ID_SEWING_KIT	160
+	#define global	ITEM_ID_CARPENTERS_TOOL	161
+	#define global	ITEM_ID_MESSY_CLOTH	162
+	#define global	ITEM_ID_SILK_CLOTH	163
+	#define global	ITEM_ID_COLLAPSED_GRAVE	164
+	#define global	ITEM_ID_CRUMBLED_GRAVE	165
+	#define global	ITEM_ID_GRAVE_ORNAMENTED_WITH_FLOWERS	166
+	#define global	ITEM_ID_BRAND_NEW_GRAVE	167
+	#define global	ITEM_ID_SOLEMN_TOMB	168
+	#define global	ITEM_ID_ANCIENT_TOMB	169
+	#define global	ITEM_ID_OLD_GRAVE	170
+	#define global	ITEM_ID_ALTAR	171
+	#define global	ITEM_ID_CEREMONY_ALTAR	172
+	#define global	ITEM_ID_FOUNTAIN	173
+	#define global	ITEM_ID_BUNK_BED	174
+	#define global	ITEM_ID_ROD_LIGHTNING_BOLT	175
+	#define global	ITEM_ID_ROD_SLOW	176
+	#define global	ITEM_ID_QUWAPANA	177
+	#define global	ITEM_ID_ALOE	178
+	#define global	ITEM_ID_EDIBLE_WILD_PLANT	179
+	#define global	ITEM_ID_APPLE	180
+	#define global	ITEM_ID_GRAPE	181
+	#define global	ITEM_ID_KIWI	182
+	#define global	ITEM_ID_CHERRY	183
+	#define global	ITEM_ID_GUAVA	184
+	#define global	ITEM_ID_CARROT	185
+	#define global	ITEM_ID_RADISH	186
+	#define global	ITEM_ID_SWEET_POTATO	187
+	#define global	ITEM_ID_LETTUCE	188
+	#define global	ITEM_ID_DISH	189
+	#define global	ITEM_ID_IMO	190
+	#define global	ITEM_ID_API_NUT	191
+	#define global	ITEM_ID_STRAWBERRY	192
+	#define global	ITEM_ID_HEALTHY_LEAF	193
+	#define global	ITEM_ID_RAINBOW_FRUIT	194
+	#define global	ITEM_ID_QUCCHE	195
+	#define global	ITEM_ID_TANGERINE	196
+	#define global	ITEM_ID_LEMON	197
+	#define global	ITEM_ID_GREEN_PEA	198
+	#define global	ITEM_ID_SQUASH	199
+	#define global	ITEM_ID_MELON	200
+	#define global	ITEM_ID_LECCHO	201
+	#define global	ITEM_ID_ROD_MAGIC_MAPPING	202
+	#define global	ITEM_ID_ROD_CURE	203
+	#define global	ITEM_ID_CORPSE	204
+	#define global	ITEM_ID_BOTTLE_WHISKY	205
+	#define global	ITEM_ID_ETHER_DAGGER	206
+	#define global	ITEM_ID_BOW_OF_VINDALE	207
+	#define global	ITEM_ID_WORTHLESS_FAKE_GOLD_BAR	208
+	#define global	ITEM_ID_SCROLL_UNCURSE	209
+	#define global	ITEM_ID_STONE	210
+	#define global	ITEM_ID_SICKLE	211
+	#define global	ITEM_ID_STAFF	212
+	#define global	ITEM_ID_SPEAR	213
+	#define global	ITEM_ID_ORE_PIECE	214
+	#define global	ITEM_ID_LOT_EMPTY_BOTTLES	215
+	#define global	ITEM_ID_BASKET	216
+	#define global	ITEM_ID_EMPTY_BOWL	217
+	#define global	ITEM_ID_BOWL	218
+	#define global	ITEM_ID_TIGHT_ROPE	219
+	#define global	ITEM_ID_DEAD_FISH	220
+	#define global	ITEM_ID_STRAW	221
+	#define global	ITEM_ID_ANIMAL_BONE	222
+	#define global	ITEM_ID_POT	223
+	#define global	ITEM_ID_KATANA	224
+	#define global	ITEM_ID_SCIMITAR	225
+	#define global	ITEM_ID_BATTLE_AXE	226
+	#define global	ITEM_ID_HAMMER	227
+	#define global	ITEM_ID_TRIDENT	228
+	#define global	ITEM_ID_LONG_STAFF	229
+	#define global	ITEM_ID_SHORT_BOW	230
+	#define global	ITEM_ID_MACHINE_GUN	231
+	#define global	ITEM_ID_CLAYMORE	232
+	#define global	ITEM_ID_RATION	233
+	#define global	ITEM_ID_BARDISH	234
+	#define global	ITEM_ID_HALBERD	235
+	#define global	ITEM_ID_SCROLL_RETURN	236
+	#define global	ITEM_ID_FIGURINE_WARRIOR	237
+	#define global	ITEM_ID_FIGURINE_SWORD	238
+	#define global	ITEM_ID_BEJEWELED_CHEST	239
+	#define global	ITEM_ID_CHEST	240
+	#define global	ITEM_ID_SAFE	241
+	#define global	ITEM_ID_SCROLL_MAGICAL_MAP	242
+	#define global	ITEM_ID_SCROLL_GAIN_ATTRIBUTE	243
+	#define global	ITEM_ID_SCROLL_WONDER	244
+	#define global	ITEM_ID_SCROLL_MINOR_TELEPORTATION	245
+	#define global	ITEM_ID_SPELLBOOK_MAGIC_MAPPING	246
+	#define global	ITEM_ID_SPELLBOOK_ORACLE	247
+	#define global	ITEM_ID_SPELLBOOK_RETURN	248
+	#define global	ITEM_ID_SPELLBOOK_CURE_MINOR_WOUND	249
+	#define global	ITEM_ID_SPELLBOOK_CURE_CRITICAL_WOUND	250
+	#define global	ITEM_ID_SPELLBOOK_CURE_ERIS	251
+	#define global	ITEM_ID_SPELLBOOK_CURE_JURE	252
+	#define global	ITEM_ID_BOTTLE_BEER	253
+	#define global	ITEM_ID_HORN	254
+	#define global	ITEM_ID_CAMPFIRE	255
+	#define global	ITEM_ID_PORTABLE_COOKING_TOOL	256
+	#define global	ITEM_ID_SPELLBOOK_MAGIC_ARROW	257
+	#define global	ITEM_ID_STICK_BREAD	258
+	#define global	ITEM_ID_RAW_NOODLE	259
+	#define global	ITEM_ID_SACK_FLOUR	260
+	#define global	ITEM_ID_BOMB_FISH	261
+	#define global	ITEM_ID_POISON	262
+	#define global	ITEM_ID_SPELLBOOK_NETHER_EYE	263
+	#define global	ITEM_ID_SPELLBOOK_CHAOS_EYE	264
+	#define global	ITEM_ID_SPELLBOOK_NERVE_EYE	265
+	#define global	ITEM_ID_WAKIZASHI	266
+	#define global	ITEM_ID_SPELLBOOK_DARKNESS_BEAM	267
+	#define global	ITEM_ID_SPELLBOOK_ILLUSION_BEAM	268
+	#define global	ITEM_ID_SPELLBOOK_ICE_BALL	269
+	#define global	ITEM_ID_SPELLBOOK_FIRE_BALL	270
+	#define global	ITEM_ID_SPELLBOOK_SOUND_BALL	271
+	#define global	ITEM_ID_SPELLBOOK_CHAOS_BALL	272
+	#define global	ITEM_ID_FIRE_WOOD	273
+	#define global	ITEM_ID_SCARECROW	274
+	#define global	ITEM_ID_BROOM	275
+	#define global	ITEM_ID_LONG_PILLAR	276
+	#define global	ITEM_ID_BROKEN_PILLAR	277
+	#define global	ITEM_ID_STREET_LAMP	278
+	#define global	ITEM_ID_WATER_TUB	279
+	#define global	ITEM_ID_COMFORTABLE_TABLE	280
+	#define global	ITEM_ID_INNER_TUBE	281
+	#define global	ITEM_ID_MYSTERIOUS_MAP	282
+	#define global	ITEM_ID_SUITCASE	283
+	#define global	ITEM_ID_WALLET	284
+	#define global	ITEM_ID_POTION_RESTORE_BODY	285
+	#define global	ITEM_ID_POTION_RESTORE_SPIRIT	286
+	#define global	ITEM_ID_POTION_POTENTIAL	287
+	#define global	ITEM_ID_SCROLL_CURSE	288
+	#define global	ITEM_ID_SPELLBOOK_WISHING	289
+	#define global	ITEM_ID_ROD_WISHING	290
+	#define global	ITEM_ID_WELL_KEPT_ARMOR	291
+	#define global	ITEM_ID_RACK_GOODS	292
+	#define global	ITEM_ID_RACK_ACCESSORIES	293
+	#define global	ITEM_ID_TOWEL	294
+	#define global	ITEM_ID_RAGGED_TABLE	295
+	#define global	ITEM_ID_CABINET	296
+	#define global	ITEM_ID_LUXURY_BED	297
+	#define global	ITEM_ID_VASE	298
+	#define global	ITEM_ID_HIGH_GRADE_DRESSER	299
+	#define global	ITEM_ID_NEAT_BAR_TABLE	300
+	#define global	ITEM_ID_LARGE_BOUQUET	301
+	#define global	ITEM_ID_CLOTHES_CHEST	302
+	#define global	ITEM_ID_GIANT_BED	303
+	#define global	ITEM_ID_PLAIN_BED	304
+	#define global	ITEM_ID_COFFIN	305
+	#define global	ITEM_ID_FOOD_PROCESSOR	306
+	#define global	ITEM_ID_SOFT_BED	307
+	#define global	ITEM_ID_CHEAP_RACK	308
+	#define global	ITEM_ID_DRESSER	309
+	#define global	ITEM_ID_CLEAN_BED	310
+	#define global	ITEM_ID_BATHTUB	311
+	#define global	ITEM_ID_PACHISURO_MACHINE	312
+	#define global	ITEM_ID_CASINO_TABLE	313
+	#define global	ITEM_ID_SLOT_MACHINE	314
+	#define global	ITEM_ID_DARTS_BOARD	315
+	#define global	ITEM_ID_BIG_FOLIAGE_PLANT	316
+	#define global	ITEM_ID_OLD_SHELF	317
+	#define global	ITEM_ID_OLD_BOOKSHELF	318
+	#define global	ITEM_ID_CHEAP_BED2	319
+	#define global	ITEM_ID_CHEAP_TABLE	320
+	#define global	ITEM_ID_NEAT_RACK	321
+	#define global	ITEM_ID_SIMPLE_DRESSER	322
+	#define global	ITEM_ID_BIG_CUPBOARD	323
+	#define global	ITEM_ID_SACRED_ALTAR	324
+	#define global	ITEM_ID_COMFORTABLE_BED	325
+	#define global	ITEM_ID_SIMPLE_RACK	326
+	#define global	ITEM_ID_WIDE_CHAIR	327
+	#define global	ITEM_ID_UPRIGHT_PIANO	328
+	#define global	ITEM_ID_STATUE_CROSS	329
+	#define global	ITEM_ID_STUMP	330
+	#define global	ITEM_ID_DRESS	331
+	#define global	ITEM_ID_TABLE	332
+	#define global	ITEM_ID_TRAVELERS_FOOD	333
+	#define global	ITEM_ID_THRONE	334
+	#define global	ITEM_ID_GOLDEN_PEDESTAL	335
+	#define global	ITEM_ID_GOLDEN_STATUE	336
+	#define global	ITEM_ID_SKIN	337
+	#define global	ITEM_ID_BLOOD	338
+	#define global	ITEM_ID_EYE	339
+	#define global	ITEM_ID_HEART	340
+	#define global	ITEM_ID_BONE	341
+	#define global	ITEM_ID_FISHING_POLE	342
+	#define global	ITEM_ID_RUNE	343
+	#define global	ITEM_ID_DEED	344
+	#define global	ITEM_ID_MOONFISH	345
+	#define global	ITEM_ID_SARDINE	346
+	#define global	ITEM_ID_FLATFISH	347
+	#define global	ITEM_ID_MANBOO	348
+	#define global	ITEM_ID_SEABREAM	349
+	#define global	ITEM_ID_SALMON	350
+	#define global	ITEM_ID_GLOBEFISH	351
+	#define global	ITEM_ID_TUNA	352
+	#define global	ITEM_ID_CUTLASSFISH	353
+	#define global	ITEM_ID_SANDBORER	354
+	#define global	ITEM_ID_GLOVES_OF_VESDA	355
+	#define global	ITEM_ID_BLOOD_MOON	356
+	#define global	ITEM_ID_RING_OF_STEEL_DRAGON	357
+	#define global	ITEM_ID_STAFF_OF_INSANITY	358
+	#define global	ITEM_ID_RANKIS	359
+	#define global	ITEM_ID_PALMIA_PRIDE	360
+	#define global	ITEM_ID_SHOPKEEPERS_TRUNK	361
+	#define global	ITEM_ID_SCROLL_GREATER_IDENTIFY	362
+	#define global	ITEM_ID_SCROLL_VANISH_CURSE	363
+	#define global	ITEM_ID_POTION_DEFENDER	364
+	#define global	ITEM_ID_SPELLBOOK_HOLY_SHIELD	365
+	#define global	ITEM_ID_ROD_SILENCE	366
+	#define global	ITEM_ID_SPELLBOOK_SILENCE	367
+	#define global	ITEM_ID_POTION_SILENCE	368
+	#define global	ITEM_ID_SPELLBOOK_REGENERATION	369
+	#define global	ITEM_ID_POTION_TROLL_BLOOD	370
+	#define global	ITEM_ID_SPELLBOOK_RESISTANCE	371
+	#define global	ITEM_ID_POTION_RESISTANCE	372
+	#define global	ITEM_ID_SPELLBOOK_SPEED	373
+	#define global	ITEM_ID_SPELLBOOK_SLOW	374
+	#define global	ITEM_ID_POTION_SPEED	375
+	#define global	ITEM_ID_POTION_SLOW	376
+	#define global	ITEM_ID_ROD_SPEED	377
+	#define global	ITEM_ID_SPELLBOOK_HERO	378
+	#define global	ITEM_ID_POTION_HERO	379
+	#define global	ITEM_ID_SPELLBOOK_WEAKNESS	380
+	#define global	ITEM_ID_SPELLBOOK_ELEMENTAL_SCAR	381
+	#define global	ITEM_ID_POTION_WEAKNESS	382
+	#define global	ITEM_ID_SPELLBOOK_HOLY_VEIL	383
+	#define global	ITEM_ID_SCROLL_HOLY_VEIL	384
+	#define global	ITEM_ID_ROD_HOLY_LIGHT	385
+	#define global	ITEM_ID_SPELLBOOK_HOLY_LIGHT	386
+	#define global	ITEM_ID_SPELLBOOK_HOLY_RAIN	387
+	#define global	ITEM_ID_SCROLL_HOLY_LIGHT	388
+	#define global	ITEM_ID_SCROLL_HOLY_RAIN	389
+	#define global	ITEM_ID_SCROLL_MANA	390
+	#define global	ITEM_ID_ROD_MANA	391
+	#define global	ITEM_ID_BOTTLE_SULFURIC	392
+	#define global	ITEM_ID_GEM_CUTTER	393
+	#define global	ITEM_ID_MATERIAL_BOX	394
+	#define global	ITEM_ID_SCROLL_GAIN_MATERIAL	395
+	#define global	ITEM_ID_SPELLBOOK_NIGHTMARE	396
+	#define global	ITEM_ID_SPELLBOOK_KNOWLEDGE	397
+	#define global	ITEM_ID_SCROLL_KNOWLEDGE	398
+	#define global	ITEM_ID_CARGO_RAG_DOLL	399
+	#define global	ITEM_ID_CARGO_BARREL	400
+	#define global	ITEM_ID_CARGO_PIANO	401
+	#define global	ITEM_ID_CARGO_ROPE	402
+	#define global	ITEM_ID_CARGO_COFFIN	403
+	#define global	ITEM_ID_CARGO_MANBOO	404
+	#define global	ITEM_ID_CARGO_GRAVE	405
+	#define global	ITEM_ID_CARGO_TUNA_FISH	406
+	#define global	ITEM_ID_CARGO_WHISKY	407
+	#define global	ITEM_ID_CARGO_NOBLE_TOY	408
+	#define global	ITEM_ID_CARGO_INNER_TUBE	409
+	#define global	ITEM_ID_SPELLBOOK_DETECT_OBJECTS	410
+	#define global	ITEM_ID_SCROLL_DETECT_OBJECTS	411
+	#define global	ITEM_ID_ROD_UNCURSE	412
+	#define global	ITEM_ID_RED_TREASURE_MACHINE	413
+	#define global	ITEM_ID_BLUE_TREASURE_MACHINE	414
+	#define global	ITEM_ID_TREASURE_BALL	415
+	#define global	ITEM_ID_RARE_TREASURE_BALL	416
+	#define global	ITEM_ID_VEGETABLE_SEED	417
+	#define global	ITEM_ID_FRUIT_SEED	418
+	#define global	ITEM_ID_HERB_SEED	419
+	#define global	ITEM_ID_UNKNOWN_SEED	420
+	#define global	ITEM_ID_ARTIFACT_SEED	421
+	#define global	ITEM_ID_MORGIA	422
+	#define global	ITEM_ID_MAREILON	423
+	#define global	ITEM_ID_SPENSEWEED	424
+	#define global	ITEM_ID_CURARIA	425
+	#define global	ITEM_ID_ALRAUNIA	426
+	#define global	ITEM_ID_STOMAFILLIA	427
+	#define global	ITEM_ID_SLEEPING_BAG	428
+	#define global	ITEM_ID_POTION_WEAKEN_RESISTANCE	429
+	#define global	ITEM_ID_SCROLL_GROWTH	430
+	#define global	ITEM_ID_SCROLL_FAITH	431
+	#define global	ITEM_ID_POTION_MUTATION	432
+	#define global	ITEM_ID_POTION_CURE_MUTATION	433
+	#define global	ITEM_ID_SPELLBOOK_MUTATION	434
+	#define global	ITEM_ID_BANDED_MAIL	435
+	#define global	ITEM_ID_PLATE_MAIL	436
+	#define global	ITEM_ID_RING_MAIL	437
+	#define global	ITEM_ID_COMPOSITE_MAIL	438
+	#define global	ITEM_ID_CHAIN_MAIL	439
+	#define global	ITEM_ID_POPE_ROBE	440
+	#define global	ITEM_ID_LIGHT_MAIL	441
+	#define global	ITEM_ID_COAT	442
+	#define global	ITEM_ID_BREAST_PLATE	443
+	#define global	ITEM_ID_BULLETPROOF_JACKET	444
+	#define global	ITEM_ID_GLOVES	445
+	#define global	ITEM_ID_PLATE_GAUNTLETS	446
+	#define global	ITEM_ID_LIGHT_GLOVES	447
+	#define global	ITEM_ID_COMPOSITE_GAUNTLETS	448
+	#define global	ITEM_ID_SMALL_SHIELD	449
+	#define global	ITEM_ID_ROUND_SHIELD	450
+	#define global	ITEM_ID_SHIELD	451
+	#define global	ITEM_ID_LARGE_SHIELD	452
+	#define global	ITEM_ID_KITE_SHIELD	453
+	#define global	ITEM_ID_TOWER_SHIELD	454
+	#define global	ITEM_ID_SHOES	455
+	#define global	ITEM_ID_BOOTS	456
+	#define global	ITEM_ID_TIGHT_BOOTS	457
+	#define global	ITEM_ID_ARMORED_BOOTS	458
+	#define global	ITEM_ID_COMPOSITE_GIRDLE	459
+	#define global	ITEM_ID_PLATE_GIRDLE	460
+	#define global	ITEM_ID_ARMORED_CLOAK	461
+	#define global	ITEM_ID_CLOAK	462
+	#define global	ITEM_ID_FEATHER_HAT	463
+	#define global	ITEM_ID_HEAVY_HELM	464
+	#define global	ITEM_ID_KNIGHT_HELM	465
+	#define global	ITEM_ID_HELM	466
+	#define global	ITEM_ID_COMPOSITE_HELM	467
+	#define global	ITEM_ID_PERIDOT	468
+	#define global	ITEM_ID_TALISMAN	469
+	#define global	ITEM_ID_NECK_GUARD	470
+	#define global	ITEM_ID_CHARM	471
+	#define global	ITEM_ID_BEJEWELED_AMULET	472
+	#define global	ITEM_ID_ENGAGEMENT_AMULET	473
+	#define global	ITEM_ID_COMPOSITE_RING	474
+	#define global	ITEM_ID_ARMORED_RING	475
+	#define global	ITEM_ID_RING	476
+	#define global	ITEM_ID_ENGAGEMENT_RING	477
+	#define global	ITEM_ID_STETHOSCOPE	478
+	#define global	ITEM_ID_SCROLL_ALLY	479
+	#define global	ITEM_ID_ROD_DOMINATION	480
+	#define global	ITEM_ID_SPELLBOOK_DOMINATION	481
+	#define global	ITEM_ID_CROSSBOW	482
+	#define global	ITEM_ID_BOLT	483
+	#define global	ITEM_ID_SPELLBOOK_WEB	484
+	#define global	ITEM_ID_ROD_WEB	485
+	#define global	ITEM_ID_MACHINE	486
+	#define global	ITEM_ID_COMPUTER	487
+	#define global	ITEM_ID_TRAINING_MACHINE	488
+	#define global	ITEM_ID_CAMERA	489
+	#define global	ITEM_ID_MICROWAVE_OVEN	490
+	#define global	ITEM_ID_SERVER	491
+	#define global	ITEM_ID_STORAGE	492
+	#define global	ITEM_ID_TRASH_CAN	493
+	#define global	ITEM_ID_CHIP	494
+	#define global	ITEM_ID_BLANK_DISC	495
+	#define global	ITEM_ID_SHOT_GUN	496
+	#define global	ITEM_ID_POP_CORN	497
+	#define global	ITEM_ID_FRIED_POTATO	498
+	#define global	ITEM_ID_CYBER_SNACK	499
+	#define global	ITEM_ID_SCROLL_INFERIOR_MATERIAL	500
+	#define global	ITEM_ID_SCROLL_CHANGE_MATERIAL	501
+	#define global	ITEM_ID_SCROLL_SUPERIOR_MATERIAL	502
+	#define global	ITEM_ID_FIGURINE	503
+	#define global	ITEM_ID_CARD	504
+	#define global	ITEM_ID_LITTLE_SISTERS_DIARY	505
+	#define global	ITEM_ID_SCROLL_ENCHANT_WEAPON	506
+	#define global	ITEM_ID_SCROLL_GREATER_ENCHANT_WEAPON	507
+	#define global	ITEM_ID_SCROLL_ENCHANT_ARMOR	508
+	#define global	ITEM_ID_SCROLL_GREATER_ENCHANT_ARMOR	509
+	#define global	ITEM_ID_HEIR_TRUNK	510
+	#define global	ITEM_ID_DEED_HEIRSHIP	511
+	#define global	ITEM_ID_LASER_GUN	512
+	#define global	ITEM_ID_ENERGY_CELL	513
+	#define global	ITEM_ID_RAIL_GUN	514
+	#define global	ITEM_ID_SCROLL_RECHARGE	515
+	#define global	ITEM_ID_BOTTLE_WATER	516
+	#define global	ITEM_ID_ROD_CHANGE_CREATURE	517
+	#define global	ITEM_ID_ROD_ALCHEMY	518
+	#define global	ITEM_ID_BOTTLE_DYE	519
+	#define global	ITEM_ID_WING	520
+	#define global	ITEM_ID_DEED_MUSEUM	521
+	#define global	ITEM_ID_DEED_SHOP	522
+	#define global	ITEM_ID_TREE_BEECH	523
+	#define global	ITEM_ID_TREE_CEDAR	524
+	#define global	ITEM_ID_TREE_FRUITLESS	525
+	#define global	ITEM_ID_TREE_FRUIT	526
+	#define global	ITEM_ID_TREE_DEAD_TREE	527
+	#define global	ITEM_ID_TREE_ZELKOVA	528
+	#define global	ITEM_ID_TREE_PALM	529
+	#define global	ITEM_ID_TREE_ASH	530
+	#define global	ITEM_ID_FURNANCE	531
+	#define global	ITEM_ID_FIREPLACE	532
+	#define global	ITEM_ID_STOVE	533
+	#define global	ITEM_ID_GIANT_FOLIAGE_PLANT	534
+	#define global	ITEM_ID_BIG_TABLE	535
+	#define global	ITEM_ID_PAINTING_MADAM	536
+	#define global	ITEM_ID_PAINTING_LANDSCAPE	537
+	#define global	ITEM_ID_PAINTING_SUNFLOWER	538
+	#define global	ITEM_ID_STATUE_CAT	539
+	#define global	ITEM_ID_BLACK_CRYSTAL	540
+	#define global	ITEM_ID_SNOW_MAN	541
+	#define global	ITEM_ID_DEED_FARM	542
+	#define global	ITEM_ID_DEED_STORAGE_HOUSE	543
+	#define global	ITEM_ID_DISC	544
+	#define global	ITEM_ID_ROD_WALL_CREATION	545
+	#define global	ITEM_ID_SPELLBOOK_WALL_CREATION	546
+	#define global	ITEM_ID_SALARY_CHEST	547
+	#define global	ITEM_ID_SPELLBOOK_HEALING_RAIN	548
+	#define global	ITEM_ID_SCROLL_HEALING_RAIN	549
+	#define global	ITEM_ID_SPELLBOOK_HEALING_HANDS	550
+	#define global	ITEM_ID_ROD_HEALING_HANDS	551
+	#define global	ITEM_ID_FEATHER	552
+	#define global	ITEM_ID_GEM_SEED	553
+	#define global	ITEM_ID_MAGICAL_SEED	554
+	#define global	ITEM_ID_SHELTER	555
+	#define global	ITEM_ID_SEVEN_LEAGUE_BOOTS	556
+	#define global	ITEM_ID_VINDALE_CLOAK	557
+	#define global	ITEM_ID_AURORA_RING	558
+	#define global	ITEM_ID_POTION_CURE_CORRUPTION	559
+	#define global	ITEM_ID_MASTERS_DELIVERY_CHEST	560
+	#define global	ITEM_ID_SHOP_STRONGBOX	561
+	#define global	ITEM_ID_REGISTER	562
+	#define global	ITEM_ID_SKILLBOOK	563
+	#define global	ITEM_ID_SPELLBOOK_ACID_GROUND	564
+	#define global	ITEM_ID_ROD_ACID_GROUND	565
+	#define global	ITEM_ID_ACIDPROOF_LIQUID	566
+	#define global	ITEM_ID_FIREPROOF_BLANKET	567
+	#define global	ITEM_ID_COLDPROOF_BLANKET	568
+	#define global	ITEM_ID_SPELLBOOK_FIRE_WALL	569
+	#define global	ITEM_ID_ROD_FIRE_WALL	570
+	#define global	ITEM_ID_JERKY	571
+	#define global	ITEM_ID_DEED_RANCH	572
+	#define global	ITEM_ID_EGG	573
+	#define global	ITEM_ID_BOTTLE_MILK	574
+	#define global	ITEM_ID_SHIT	575
+	#define global	ITEM_ID_PLAYBACK_DISC	576
+	#define global	ITEM_ID_MOLOTOV	577
+	#define global	ITEM_ID_KITTY_BANK	578
+	#define global	ITEM_ID_FREEZER	579
+	#define global	ITEM_ID_MODERN_RACK	580
+	#define global	ITEM_ID_ROD_MAKE_DOOR	581
+	#define global	ITEM_ID_SPELLBOOK_MAKE_DOOR	582
+	#define global	ITEM_ID_TORCH	583
+	#define global	ITEM_ID_CANDLE	584
+	#define global	ITEM_ID_FANCY_LAMP	585
+	#define global	ITEM_ID_MODERN_LAMP	586
+	#define global	ITEM_ID_HANDFUL_SNOW	587
+	#define global	ITEM_ID_TREE_NAKED	588
+	#define global	ITEM_ID_TREE_FIR	589
+	#define global	ITEM_ID_SNOW_SCARECROW	590
+	#define global	ITEM_ID_MINI_SNOW_MAN	591
+	#define global	ITEM_ID_SNOW_BARREL	592
+	#define global	ITEM_ID_MODERN_LAMP2	593
+	#define global	ITEM_ID_STATUE_HOLY_CROSS	594
+	#define global	ITEM_ID_PILLAR	595
+	#define global	ITEM_ID_STAINED_GLASS_WINDOW	596
+	#define global	ITEM_ID_CARGO_CHRISTMAS_TREE	597
+	#define global	ITEM_ID_CARGO_SNOW_MAN	598
+	#define global	ITEM_ID_CHRISTMAS_TREE	599
+	#define global	ITEM_ID_GIANTS_SHACKLE	600
+	#define global	ITEM_ID_EMPTY_BOTTLE	601
+	#define global	ITEM_ID_HOLY_WELL	602
+	#define global	ITEM_ID_PRESIDENTS_CHAIR	603
+	#define global	ITEM_ID_GREEN_PLANT	604
+	#define global	ITEM_ID_MONEY_TREE	605
+	#define global	ITEM_ID_BARBECUE_SET	606
+	#define global	ITEM_ID_GIANT_CACTUS	607
+	#define global	ITEM_ID_SQUARE_WINDOW	608
+	#define global	ITEM_ID_WINDOW	609
+	#define global	ITEM_ID_TRIANGLE_PLANT	610
+	#define global	ITEM_ID_HOUSE_BOARD	611
+	#define global	ITEM_ID_NICE_WINDOW	612
+	#define global	ITEM_ID_KINGS_BED	613
+	#define global	ITEM_ID_FLOWER_ARCH	614
+	#define global	ITEM_ID_BILL	615
+	#define global	ITEM_ID_TAX_MASTERS_TAX_BOX	616
+	#define global	ITEM_ID_BAIT	617
+	#define global	ITEM_ID_FISH	618
+	#define global	ITEM_ID_FISH_JUNK	619
+	#define global	ITEM_ID_LOVE_POTION	620
+	#define global	ITEM_ID_TREASURE_MAP	621
+	#define global	ITEM_ID_SMALL_MEDAL	622
+	#define global	ITEM_ID_CAT_SISTERS_DIARY	623
+	#define global	ITEM_ID_GIRLS_DIARY	624
+	#define global	ITEM_ID_SHRINE_GATE	625
+	#define global	ITEM_ID_BOTTLE_HERMES_BLOOD	626
+	#define global	ITEM_ID_SAGES_HELM	627
+	#define global	ITEM_ID_SPELLBOOK_INCOGNITO	628
+	#define global	ITEM_ID_DISGUISE_SET	629
+	#define global	ITEM_ID_MATERIAL_KIT	630
+	#define global	ITEM_ID_MOON_GATE	631
+	#define global	ITEM_ID_FLYING_SCROLL	632
+	#define global	ITEM_ID_PANTY	633
+	#define global	ITEM_ID_LEASH	634
+	#define global	ITEM_ID_MINE	635
+	#define global	ITEM_ID_LOCKPICK	636
+	#define global	ITEM_ID_SKELETON_KEY	637
+	#define global	ITEM_ID_SCROLL_ESCAPE	638
+	#define global	ITEM_ID_HAPPY_APPLE	639
+	#define global	ITEM_ID_UNICORN_HORN	640
+	#define global	ITEM_ID_COOLER_BOX	641
+	#define global	ITEM_ID_RICE_BARREL	642
+	#define global	ITEM_ID_EASTERN_BED	643
+	#define global	ITEM_ID_DECORATED_WINDOW	644
+	#define global	ITEM_ID_KING_DRAWER	645
+	#define global	ITEM_ID_MENU_BOARD	646
+	#define global	ITEM_ID_BLACK_BOARD	647
+	#define global	ITEM_ID_SOFA	648
+	#define global	ITEM_ID_FLOWERBED	649
+	#define global	ITEM_ID_TOILET	650
+	#define global	ITEM_ID_CRAFT_CUPBOARD	651
+	#define global	ITEM_ID_SINK2	652
+	#define global	ITEM_ID_JUNK	653
+	#define global	ITEM_ID_DOUBLE_BED	654
+	#define global	ITEM_ID_HERO_CHEESE	655
+	#define global	ITEM_ID_EASTERN_LAMP	656
+	#define global	ITEM_ID_EASTERN_WINDOW	657
+	#define global	ITEM_ID_CHOCHIN	658
+	#define global	ITEM_ID_PARTITION	659
+	#define global	ITEM_ID_SPELLBOOK_DARKNESS_ARROW	660
+	#define global	ITEM_ID_DAL_I_THALION	661
+	#define global	ITEM_ID_MAGIC_FRUIT	662
+	#define global	ITEM_ID_MONSTER_HEART	663
+	#define global	ITEM_ID_SPEED_RING	664
+	#define global	ITEM_ID_STATUE_OPATOS	665
+	#define global	ITEM_ID_STATUE_LULWY	666
+	#define global	ITEM_ID_SISTERS_LOVE_FUELED_LUNCH	667
+	#define global	ITEM_ID_BOOK_RACHEL	668
+	#define global	ITEM_ID_ART	669
+	#define global	ITEM_ID_CANVAS	670
+	#define global	ITEM_ID_NUCLEAR_BOMB	671
+	#define global	ITEM_ID_SECRET_TREASURE	672
+	#define global	ITEM_ID_WIND_BOW	673
+	#define global	ITEM_ID_WINCHESTER_PREMIUM	674
+	#define global	ITEM_ID_KUMIROMI_SCYTHE	675
+	#define global	ITEM_ID_ELEMENTAL_STAFF	676
+	#define global	ITEM_ID_HOLY_LANCE	677
+	#define global	ITEM_ID_LUCKY_DAGGER	678
+	#define global	ITEM_ID_GAIA_HAMMER	679
+	#define global	ITEM_ID_GEMSTONE_LULWY	680
+	#define global	ITEM_ID_GEMSTONE_JURE	681
+	#define global	ITEM_ID_GEMSTONE_KUMIROMI	682
+	#define global	ITEM_ID_ENERGY_CRYSTAL_MATRIX	683
+	#define global	ITEM_ID_GENE_MACHINE	684
+	#define global	ITEM_ID_MONSTER_BALL	685
+	#define global	ITEM_ID_STATUE_JURE	686
+	#define global	ITEM_ID_ANCIENT_BOOK	687
+	#define global	ITEM_ID_IRON_MAIDEN	688
+	#define global	ITEM_ID_GUILLOTINE	689
+	#define global	ITEM_ID_PAN_FLUTE	690
+	#define global	ITEM_ID_LUTE	691
+	#define global	ITEM_ID_HARMONICA	692
+	#define global	ITEM_ID_HARP	693
+	#define global	ITEM_ID_EASTERN_PARTITION	694
+	#define global	ITEM_ID_AXE_OF_DESTRUCTION	695
+	#define global	ITEM_ID_SPELLBOOK_MAGIC_BALL	696
+	#define global	ITEM_ID_SPELLBOOK_MAGIC_LASER	697
+	#define global	ITEM_ID_POTION_SALT_SOLUTION	698
+	#define global	ITEM_ID_LITTLE_BALL	699
+	#define global	ITEM_ID_TOWN_BOOK	700
+	#define global	ITEM_ID_DECK	701
+	#define global	ITEM_ID_RABBITS_TAIL	702
+	#define global	ITEM_ID_WHISTLE	703
+	#define global	ITEM_ID_VOMIT	704
+	#define global	ITEM_ID_BEGGARS_PENDANT	705
+	#define global	ITEM_ID_POTION_DESCENT	706
+	#define global	ITEM_ID_STRADIVARIUS	707
+	#define global	ITEM_ID_BOOK_RESURRECTION	708
+	#define global	ITEM_ID_SCROLL_CONTINGENCY	709
+	#define global	ITEM_ID_SPELLBOOK_CONTINGENCY	710
+	#define global	ITEM_ID_POTION_EVOLUTION	711
+	#define global	ITEM_ID_DEED_DUNGEON	712
+	#define global	ITEM_ID_SHURIKEN	713
+	#define global	ITEM_ID_GRENADE	714
+	#define global	ITEM_ID_SECRET_EXP_KUMIROMI	715
+	#define global	ITEM_ID_VANILLA_ROCK	716
+	#define global	ITEM_ID_SECRET_EXP_LOMIAS	717
+	#define global	ITEM_ID_SHENAS_PANTY	718
+	#define global	ITEM_ID_CLAYMORE2	719
+	#define global	ITEM_ID_HAPPY_BED	720
+	#define global	ITEM_ID_STATUE_EHEKATL	721
+	#define global	ITEM_ID_ARBALEST	722
+	#define global	ITEM_ID_TWIN_EDGE	723
+	#define global	ITEM_ID_MUSIC_TICKET	724
+	#define global	ITEM_ID_KILL_KILL_PIANO	725
+	#define global	ITEM_ID_ALUD	726
+	#define global	ITEM_ID_SHIELD_OF_THORNS	727
+	#define global	ITEM_ID_CRIMSON_PLATE	728
+	#define global	ITEM_ID_GIFT	729
+	#define global	ITEM_ID_TOKEN_FRIENDSHIP	730
+	#define global	ITEM_ID_SPELLBOOK_4D_POCKET	731
+	#define global	ITEM_ID_SPELLBOOK_HARVEST	732
+	#define global	ITEM_ID_SAND_BAG	733
+	#define global	ITEM_ID_SMALL_GAMBLE_CHEST	734
+	#define global	ITEM_ID_SCYTHE	735
+	#define global	ITEM_ID_FIREPROOF_LIQUID	736
+	#define global	ITEM_ID_SCROLL_NAME	737
+	#define global	ITEM_ID_FORTUNE_COOKIE	738
+	#define global	ITEM_ID_FRISIAS_TAIL	739
+	#define global	ITEM_ID_UNKNOWN_SHELL	740
+	#define global	ITEM_ID_HIRYU_TO	741
+	#define global	ITEM_ID_LICENCE_THE_VOID_EXPLORER	742
+	#define global	ITEM_ID_CARNEADES_PLANK	743
+	#define global	ITEM_ID_SCHRODINGERS_CAT	744
+	#define global	ITEM_ID_OBJET_HEART	745
+	#define global	ITEM_ID_TAMERS_WHIP	746
+	#define global	ITEM_ID_BOOK_BOKONON	747
+	#define global	ITEM_ID_SUMMONING_CRYSTAL	748
+	#define global	ITEM_ID_STATUE_CREATOR	749
+	#define global	ITEM_ID_UPSTAIRS	750
+	#define global	ITEM_ID_DOWNSTAIRS	751
+	#define global	ITEM_ID_NEW_YEARS_GIFT	752
+	#define global	ITEM_ID_KOTATSU	753
+	#define global	ITEM_ID_DARUMA	754
+	#define global	ITEM_ID_KAGAMI_MOCHI	755
+	#define global	ITEM_ID_MOCHI	756
+	#define global	ITEM_ID_FIVE_HORNED_HELM	757
+	#define global	ITEM_ID_MAUSER_C96_CUSTOM	758
+	#define global	ITEM_ID_LIGHTSABRE	759
+	#define global	ITEM_ID_GAROKS_HAMMER	760
+	#define global	ITEM_ID_GOULDS_PIANO	761
+	#define global	ITEM_ID_FESTIVAL_WREATH	762
+	#define global	ITEM_ID_PEDESTAL	763
+	#define global	ITEM_ID_COUNTER	764
+	#define global	ITEM_ID_RED_STALL	765
+	#define global	ITEM_ID_BLUE_STALL	766
+	#define global	ITEM_ID_JURES_BODY_PILLOW	767
+	#define global	ITEM_ID_NEW_YEARS_DECORATION	768
+	#define global	ITEM_ID_MINIATURE_TREE	769
+	#define global	ITEM_ID_BOTTLE_SODA	770
+	#define global	ITEM_ID_BLUE_CAPSULE_DRAG	771
+	#define global	ITEM_ID_TOMATO	772
+	#define global	ITEM_ID_LARGE_BOOKSHELF	773
+	#define global	ITEM_ID_LUXURY_CABINET	774
+	#define global	ITEM_ID_SPECIAL_STEAMED_MEAT_BUN	775
+	#define global	ITEM_ID_STATUE_KUMIROMI	776
+	#define global	ITEM_ID_STATUE_MANI	777
+	#define global	ITEM_ID_LUXURY_SOFA	778
+	#define global	ITEM_ID_DEER_HEAD	779
+	#define global	ITEM_ID_FUR_CARPET	780
+	#define global	ITEM_ID_KITCHEN_KNIFE	781
+	#define global	ITEM_ID_LARGE_DISH	782
+	#define global	ITEM_ID_RECIPE	783
+	#define global	ITEM_ID_CARD_PACK	784
+	#define global	ITEM_ID_BOTTLE_SALT	785
+	#define global	ITEM_ID_SACK_SUGAR	786
+	#define global	ITEM_ID_PUFF_PUFF_BREAD	787
+	#define global	ITEM_ID_SKULL_BOW	788
+	#define global	ITEM_ID_POT_FOR_FUSION	789
+	#define global	ITEM_ID_POT_OF_ALCHEMIST	790
+	#define global	ITEM_ID_DRAGON_SLAYER	791
+	#define global	ITEM_ID_PUTITORO	792
+	#define global	ITEM_ID_PILE_DRIVER	793
+	#define global	ITEM_ID_NEGATIVE_EDGE	794
+	#define global	ITEM_ID_GAU_17_CUSTOM	795
+	#define global	ITEM_ID_KANEITUUHOU	796
+	#define global	ITEM_ID_GEMSTONE_YACATECT	797
+	#define global	ITEM_ID_DYNAMIC_SABER	798
+	#define global	ITEM_ID_VERNIS_ORIGINAL	799
+	#define global	ITEM_ID_AWESOME_SWIMWEAR	800
+	#define global	ITEM_ID_OTI_TUBAKI	801
+	#define global	ITEM_ID_GEMINI	802
+	#define global	ITEM_ID_HEROS_CLOAK	803
+	#define global	ITEM_ID_BEAST_SICKLE	804
+	#define global	ITEM_ID_GOD_BREAKER	805
+	#define global	ITEM_ID_G3_EXA	806
+	#define global	ITEM_ID_DREADNOUGHT	807
+	#define global	ITEM_ID_KINDNESS_BLADE	808
+	#define global	ITEM_ID_OLDER_SISTERS_DIARY	809
+	#define global	ITEM_ID_STORM_BRINGER	810
+	#define global	ITEM_ID_DOG_SISTERS_DIARY	811
+	#define global	ITEM_ID_RICE_BALL	812
+	#define global	ITEM_ID_SOLAR_CANE	813
+	#define global	ITEM_ID_METAL_WING_OF_VESDA	814
+	#define global	ITEM_ID_SAND_CASTLE	815
+	#define global	ITEM_ID_VALKOINEN_KUOLEMA	816
+	#define global	ITEM_ID_SNIPER_RIFLE	817
+	#define global	ITEM_ID_GEMSTONE_MANI	818
+	#define global	ITEM_ID_TEMPEST_CHOKER	819
+	#define global	ITEM_ID_WHEEL_OF_FORTUNE	820
+	#define global	ITEM_ID_FETTER_OF_EARTH	821
+	#define global	ITEM_ID_GREEN_GOD_THORN	822
+	#define global	ITEM_ID_MECHANICAL_BINDER	823
+	#define global	ITEM_ID_SASUMATA	824
+	#define global	ITEM_ID_CARAMEL_OF_TERMINATION	825
+	#define global	ITEM_ID_BLACK_MONKSHOOD	826
+	#define global	ITEM_ID_BLUE_SPIRIT	827
+	#define global	ITEM_ID_AUREATE_CONSTRICTER	828
+	#define global	ITEM_ID_MAGIC_CANCELER	829
+	#define global	ITEM_ID_STONE_COIN	830
+	#define global	ITEM_ID_BUSTER_BOOK	831
+	#define global	ITEM_ID_WASTE_ART	832
+	#define global	ITEM_ID_GLIA_CRYSTAL	833
+	#define global	ITEM_ID_ACCUMULATOR	834
+	#define global	ITEM_ID_HIBACHI	835
+	#define global	ITEM_ID_MURDER_CD	836
+	#define global	ITEM_ID_TROLL_CELL	837
+	#define global	ITEM_ID_IKAROS_WING	838
+	#define global	ITEM_ID_ETHER_MIRROR	839
+	#define global	ITEM_ID_CHAOS_JEWEL	840
+	#define global	ITEM_ID_LAMP_PLANT	841
+	#define global	ITEM_ID_BLACK_DRIP	842
+	#define global	ITEM_ID_MAGIC_ICE	843
+	#define global	ITEM_ID_SHAVED_ICE	844
+	#define global	ITEM_ID_WADAIKO	845
+	#define global	ITEM_ID_NIGHTMARE	846
+	#define global	ITEM_ID_BOTTLE_SPEED_UPPER	847
+	#define global	ITEM_ID_AGING_LUNCH	848
+	#define global	ITEM_ID_AGE_RETURN_LUNCH	849
+	#define global	ITEM_ID_SMASH_TONFA	850
+	#define global	ITEM_ID_GERBERA_CROSS	851
+	#define global	ITEM_ID_FORBIDDEN_MEAT	852
+	#define global	ITEM_ID_INSANE_BOOK	853
+	#define global	ITEM_ID_NAIL_STRADIVARIUS	854
+	#define global	ITEM_ID_CARGO_RATION	855
+	#define global	ITEM_ID_CARGO_MARIMO	856
+	#define global	ITEM_ID_EFFECT_SCANNER	857
+	#define global	ITEM_ID_STATUE_YACATECT	858
+	#define global	ITEM_ID_STATUE_ITZPALT	859
+	#define global	ITEM_ID_VITAL_FLAYER	860
+	#define global	ITEM_ID_SEALED_SHIELD	861
+	#define global	ITEM_ID_ZWIEBEL	862
+	#define global	ITEM_ID_FLAME_EDGE	863
+	#define global	ITEM_ID_WOODEN_HORSE	864
+	#define global	ITEM_ID_COMMAND_FLAG	865
+	#define global	ITEM_ID_NOVA_GRENADE	866
+	#define global	ITEM_ID_YITH_YAKI	867
+	#define global	ITEM_ID_UNICORN_DRILL	868
+	#define global	ITEM_ID_EVITEM	869
+	#define global	ITEM_ID_SPELLBOOK_FEATHER	870
+	#define global	ITEM_ID_SABER_TONFA	871
+	#define global	ITEM_ID_KOMA_INU	872
+	#define global	ITEM_ID_KOMA_INU2	873
+	#define global	ITEM_ID_FLASH_CROSSBOW	874
+	#define global	ITEM_ID_RAINBOW	875
+	#define global	ITEM_ID_DOG_WHISTLE	876
+	#define global	ITEM_ID_PHILOSOPHERS_STONE_MASK	877
+	#define global	ITEM_ID_BLANK_BUSINESS_CARD	878
+	#define global	ITEM_ID_MAG_ABYSS	879
+	#define global	ITEM_ID_SLASH_JOKER	880
+	#define global	ITEM_ID_AA_12_ADVANCE	881
+	#define global	ITEM_ID_POTION_AQUA_SANCTIO	882
+	#define global	ITEM_ID_POTION_DISASTER	883
+	#define global	ITEM_ID_POTION_NEKTAR	884
+	#define global	ITEM_ID_POTION_SOMA	885
+	#define global	ITEM_ID_CLEANING_DOLL	886
+	#define global	ITEM_ID_ROD_ECLIPSE	887
+	#define global	ITEM_ID_MOONLIGHT	888
+	#define global	ITEM_ID_HANDMADE_CHOCOLATE	889
+	#define global	ITEM_ID_SUPER_LURE	890
+	#define global	ITEM_ID_GRIFFON	891
+	#define global	ITEM_ID_SHIELD_TONFA	892
+	#define global	ITEM_ID_SONIC_TONFA	893
+	#define global	ITEM_ID_MANDRAKE_SALAD	894
+	#define global	ITEM_ID_SACRIFICE_TONFA	895
+	#define global	ITEM_ID_MYSTERIOUS_DIARY	896
+	#define global	ITEM_ID_DEED_HOME_RELOCATION	897
+	#define global	ITEM_ID_DRAKE_ROD	898
+	#define global	ITEM_ID_GRAVITY_AXE	899
+	#define global	ITEM_ID_ASTRAL_LIGHT_PEN	900
+	#define global	ITEM_ID_ROD_LIGHTNING_BALL	901
+	#define global	ITEM_ID_COCONUT_CRAB	902
+	#define global	ITEM_ID_COFFIN_OF_NECROMANCY	903
+	#define global	ITEM_ID_WAR_SUIT	904
+	#define global	ITEM_ID_DANGER_SWIMWEAR	905
+	#define global	ITEM_ID_CHESTNUT	906
+	#define global	ITEM_ID_HANDMADE_CHOCOLATE_KIT	907
+	#define global	ITEM_ID_VICE_STAFF	908
+	#define global	ITEM_ID_DEED_DISCARDED_RANCH	909
+	#define global	ITEM_ID_MINIATURE_BLIMP	910
+	#define global	ITEM_ID_BOTTLE_ANTISEPTIC	911
+	#define global	ITEM_ID_WATERMELON	912
+	#define global	ITEM_ID_MUSKMELON	913
+	#define global	ITEM_ID_BANANA	914
+	#define global	ITEM_ID_APPLE_PEAR	915
+	#define global	ITEM_ID_PINEAPPLE	916
+	#define global	ITEM_ID_POTATO	917
+	#define global	ITEM_ID_CORN	918
+	#define global	ITEM_ID_EGGPLANT	919
+	#define global	ITEM_ID_ORGANIC_FERTILIZER	920
+	#define global	ITEM_ID_BIG_BRUSH	921
+	#define global	ITEM_ID_ASTRAL_SICKLE	922
+	#define global	ITEM_ID_GUR_BAGH_NAKH	923
+	#define global	ITEM_ID_BRILLIANT_DIAMOND	924
+	#define global	ITEM_ID_TABLET_EMERALD	925
+	#define global	ITEM_ID_BRILLIANT_RUBYNUS	926
+	#define global	ITEM_ID_SERPENT	927
+	#define global	ITEM_ID_RECORDER	928
+	#define global	ITEM_ID_OCARINA	929
+	#define global	ITEM_ID_SOUL_SPINDLE	930
+	#define global	ITEM_ID_WAKE_UP_OF_NEFIA	931
+	#define global	ITEM_ID_CRIMBERRY	932
+	#define global	ITEM_ID_DRUG_KISERU	933
+	#define global	ITEM_ID_COFFEE	934
+	#define global	ITEM_ID_TREE_SAKURA	935
+	#define global	ITEM_ID_WOOD_MATERIAL	936
+	#define global	ITEM_ID_REPEATING_BOW	937
+	#define global	ITEM_ID_CLAW	938
+	#define global	ITEM_ID_ROCK	939
+	#define global	ITEM_ID_ASTEROID_BELT	940
+	#define global	ITEM_ID_MAGATAMA	941
+	#define global	ITEM_ID_ACORN	942
+	#define global	ITEM_ID_GOLD_ACORN	943
+	#define global	ITEM_ID_KAKI	944
+	#define global	ITEM_ID_ROMIAS	945
+	#define global	ITEM_ID_FOUR_LEAF_CLOVER	946
+	#define global	ITEM_ID_JUKE_BOX	947
+	#define global	ITEM_ID_OTOGIRI	948
+	#define global	ITEM_ID_HOUSENKA	949
+	#define global	ITEM_ID_TRISHULA	950
+	#define global	ITEM_ID_N97_CANNON	951
+	#define global	ITEM_ID_ABYSS_LUNCH	952
+	#define global	ITEM_ID_BALLISTA	953
+	#define global	ITEM_ID_CHAINSICKLE	954
+	#define global	ITEM_ID_SOCKS	955
+	#define global	ITEM_ID_WHIP	956
+	#define global	ITEM_ID_SUNBARARIA_HELM	957
+	#define global	ITEM_ID_GRANDEL	958
+	#define global	ITEM_ID_MELODYUS	959
+	#define global	ITEM_ID_STONE_MATERIAL	960
+	#define global	ITEM_ID_PETHOUSE	961
+	#define global	ITEM_ID_SMALL_WOODEN_GOLEM	962
+	#define global	ITEM_ID_STATUE_BUTUZOU	963
+	#define global	ITEM_ID_ZIZOU	964
+	#define global	ITEM_ID_SMALL_STONE_GOLEM	965
+	#define global	ITEM_ID_ANGEL_STATUE	966
+	#define global	ITEM_ID_E_G_G	967
+	#define global	ITEM_ID_MIND_DISC	968
+	#define global	ITEM_ID_CORE_OF_NEFIA	969
+	#define global	ITEM_ID_TEAR_OF_GOD	970
+	#define global	ITEM_ID_NINE_GOD_SIGN	971
+	#define global	ITEM_ID_MAGAQUA	972
+	#define global	ITEM_ID_MAGNUM	973
+	#define global	ITEM_ID_IVY_SPINE	974
+	#define global	ITEM_ID_ARGENT_SNOW	975
+	#define global	ITEM_ID_POTION_CONCENTRATION	976
+	#define global	ITEM_ID_POTION_FEATHER	977
+	#define global	ITEM_ID_SPELLBOOK_CONCENTRATION	978
+	#define global	ITEM_ID_JACK_LANTERN	979
+	#define global	ITEM_ID_INSIGHT_LENS	980
+	#define global	ITEM_ID_USAMIMI	981
+	#define global	ITEM_ID_SLEEP_SHEEP	982
+	#define global	ITEM_ID_BLOODY_TEARS	983
+	#define global	ITEM_ID_DUEL_GLOVE	984
+	#define global	ITEM_ID_LUCKY_ALMONDS	985
+	#define global	ITEM_ID_HL_KRSW	986
+	#define global	ITEM_ID_SKULL_SWORD	987
+	#define global	ITEM_ID_MAGISTUS	988
+	#define global	ITEM_ID_TRISMAGISTUS	989
+	#define global	ITEM_ID_WONDER_BODY_FORMER	990
+	#define global	ITEM_ID_DD_CEMETERY_KEY	991
+	#define global	ITEM_ID_LARGE_PICNIC_BASKET	992
+	#define global	ITEM_ID_LARGE_EMPTY_BASKET	993
+	#define global	ITEM_ID_4D_MIRROR	994
+	#define global	ITEM_ID_SPADILLE	995
+	#define global	ITEM_ID_ION_CAKRAM	996
+	#define global	ITEM_ID_PANTS_OF_OGRE	997
+	#define global	ITEM_ID_SONIC_BROOM	998
+	#define global	ITEM_ID_OMEGA_SHIFT_CORE	999
+	#define global	ITEM_ID_DELTA_SHIFT_CORE	1000
+	#define global	ITEM_ID_GAMMA_SHIFT_CORE	1001
+	#define global	ITEM_ID_BETA_SHIFT_CORE	1002
+	#define global	ITEM_ID_ALPHA_SHIFT_CORE	1003
+	#define global	ITEM_ID_JUICE_MIXER	1004
+	#define global	ITEM_ID_JUICE	1005
+	#define global	ITEM_ID_THE_WHITE_HAWK	1006
+	#define global	ITEM_ID_MIGHTY_ARMS	1007
+	#define global	ITEM_ID_VIOLENT_SKULL_SWORD	1008
+	#define global	ITEM_ID_NUCLEAR_DEAD_LION	1009
+	#define global	ITEM_ID_BLOOD_ROD	1010
+	#define global	ITEM_ID_KNEADED_SWEETS_OF_WITCH	1011
+	#define global	ITEM_ID_SCISSORS_OF_KUMIROMI	1012
+	#define global	ITEM_ID_MUG_OF_EHEKATL	1013
+	#define global	ITEM_ID_BOOKMARK_OF_ITZPALT	1014
+	#define global	ITEM_ID_GLASSES_OF_YACATECT	1015
+	#define global	ITEM_ID_VERY_PISTOL_OF_MANI	1016
+	#define global	ITEM_ID_CANDLE_OF_LULWY	1017
+	#define global	ITEM_ID_AMULET_OF_JURE	1018
+	#define global	ITEM_ID_DUMBBELL_OF_OPATOS	1019
+	#define global	ITEM_ID_CESTUS_OF_METEORS	1020
+	#define global	ITEM_ID_TAKTSTOCK	1021
+	#define global	ITEM_ID_SPECIAL_AMMO_BOX	1022
+	#define global	ITEM_ID_FIRST_AID_KIT	1023
+	#define global	ITEM_ID_RESEARCHERS_DIARY	1024
+	#define global	ITEM_ID_AMULET_OF_YEKUB	1025
+	#define global	ITEM_ID_ROD_POISON_BALL	1026
+	#define global	ITEM_ID_ROD_MAGIC_LASER	1027
+	#define global	ITEM_ID_PLEASANT_SLEEP_BLANKET	1028
+	#define global	ITEM_ID_PANZERFAUST_X	1029
+	#define global	ITEM_ID_M202_SPECIAL	1030
+	#define global	ITEM_ID_ATOMIC_LAUNCHER	1031
+	#define global	ITEM_ID_ROD_BUBBLE_BALL	1032
+	#define global	ITEM_ID_SPELLBOOK_WATER_BEAM	1033
+	#define global	ITEM_ID_SASANQUA_SICKLE	1034
+	#define global	ITEM_ID_ESSENTIAL_OIL	1035
+	#define global	ITEM_ID_GASOLINE	1036
+	#define global	ITEM_ID_ELEMENTS_EYES	1037
+	#define global	ITEM_ID_HELTIARRE	1038
+	#define global	ITEM_ID_DOKURO_MIKADUKI	1039
+	#define global	ITEM_ID_SOUP_OF_WONDERLAND	1040
+	#define global	ITEM_ID_BRONZE_COIN	1041
+	#define global	ITEM_ID_ZUGAIKURAI	1042
+	#define global	ITEM_ID_TOBACCO	1043
+	#define global	ITEM_ID_CIGARETTE	1044
+	#define global	ITEM_ID_HAMAKI	1045
+	#define global	ITEM_ID_TOBACCO_PIPE	1046
+	#define global	ITEM_ID_KISERU	1047
+	#define global	ITEM_ID_SUIGARA	1048
+	#define global	ITEM_ID_NECROMANTIS	1049
+	#define global	ITEM_ID_B_JERKY	1050
+	#define global	ITEM_ID_HANABI	1051
+	#define global	ITEM_ID_BOTTLE_PEPPER	1052
+	#define global	ITEM_ID_BOTTLE_SOY_SAUCE	1053
+	#define global	ITEM_ID_BANNOU_MUGI	1054
+	#define global	ITEM_ID_RICE	1055
+	#define global	ITEM_ID_COFFEE_BEANS	1056
+	#define global	ITEM_ID_TEA_LEAF	1057
+	#define global	ITEM_ID_GULIWELZEN	1058
+	#define global	ITEM_ID_PRESENT	1059
+	#define global	ITEM_ID_CRAFT_REPAIR_KIT	1060
+	#define global	ITEM_ID_WILD_FLOWER	1061
+	#define global	ITEM_ID_BIO_PRINTER	1062
+	#define global	ITEM_ID_YOHUALLI_TEZCATL	1063
+	#define global	ITEM_ID_OHUDA	1064
+	#define global	ITEM_ID_LOVELY_BOUQUET	1065
+	#define global	ITEM_ID_STARDUST	1066
+	#define global	ITEM_ID_CROWN_POINT	1067
+	#define global	ITEM_ID_HEART_OF_TWILIGHT	1068
+	#define global	ITEM_ID_BLACK_TEA	1069
+	#define global	ITEM_ID_GREEN_TEA	1070
+	#define global	ITEM_ID_LIVESTOCK_FEED	1071
+	#define global	ITEM_ID_YOGURT	1072
+	#define global	ITEM_ID_BUTTER	1073
+	#define global	ITEM_ID_CHEESE	1074
+	#define global	ITEM_ID_ASSAULT_GOLD	1075
+	#define global	ITEM_ID_SPELLBOOK_GEM	1076
+	#define global	ITEM_ID_POTION_GEM	1077
+	#define global	ITEM_ID_POTION_WISDOM	1078
+	#define global	ITEM_ID_SOYBEAN	1079
+	#define global	ITEM_ID_TOFU	1080
+	#define global	ITEM_ID_NATTO	1081
+	#define global	ITEM_ID_FRIED_TOFU	1082
+	#define global	ITEM_ID_HARAKIRI	1083
+	#define global	ITEM_ID_1_2_MILLION_TAX_CERTIFICATE	1084
+	#define global	ITEM_ID_12_MILLION_TAX_CERTIFICATE	1085
+	#define global	ITEM_ID_SOFT_MATERIUM	1086
+	#define global	ITEM_ID_SOFT_HIGH_MATERIUM	1087
+	#define global	ITEM_ID_HARD_MATERIUM	1088
+	#define global	ITEM_ID_HARD_HIGH_MATERIUM	1089
+	#define global	ITEM_ID_SHARP_MATERIUM	1090
+	#define global	ITEM_ID_SHARP_HIGH_MATERIUM	1091
+	#define global	ITEM_ID_GOD_BINDER	1092
+	#define global	ITEM_ID_SKILL_TICKET	1093
+	#define global	ITEM_ID_MANIS_ALARM_CLOCK	1094
+	#define global	ITEM_ID_PAINTING_OF_EHEKATL_AND_SWORDFISH	1095
+	#define global	ITEM_ID_ITZPALTS_SCULPTURE	1096
+	#define global	ITEM_ID_YACATECTS_BANK	1097
+	#define global	ITEM_ID_LULWYS_PHOTO_COLLECTION	1098
+	#define global	ITEM_ID_KUMIROMI_GURUMI	1099
+	#define global	ITEM_ID_DOWSING_OPATOS	1100
+	#define global	ITEM_ID_BEETLE_CYBORG	1101
+	#define global	ITEM_ID_DRIED_FRUIT	1102
+	#define global	ITEM_ID_DRIED_VEGETABLE	1103
+	#define global	ITEM_ID_DRIED_FISH	1104
+	#define global	ITEM_ID_MYSTERIOUS_ENVELOPE	1105
+	#define global	ITEM_ID_CHRISTMAS_CAKE_SET	1106
+	#define global	ITEM_ID_OZOUNI	1107
+	#define global	ITEM_ID_OSIRUKO	1108
+	#define global	ITEM_ID_HAMBURGER	1109
+	#define global	ITEM_ID_GRAVITAIL	1110
+	#define global	ITEM_ID_RASEN	1111
+	#define global	ITEM_ID_MAGIC_RESTRAINT	1112
+	#define global	ITEM_ID_INJECT_BUNKER	1113
+	#define global	ITEM_ID_BIO_BATTERY	1114
+	#define global	ITEM_ID_URINE	1115
+	#define global	ITEM_ID_GROUND_BAIT	1116
+	#define global	ITEM_ID_RABBIT_FOOT	1117
+	#define global	ITEM_ID_PAINTING_ERUPTION	1118
+	#define global	ITEM_ID_OBSERVATION_REPORT	1119
+	#define global	ITEM_ID_ENCOUNTER_CANCELLER	1120
+	#define global	ITEM_ID_BUTLERS_DIARY	1121
+	#define global	ITEM_ID_SULFUR	1122
+	#define global	ITEM_ID_CLAY	1123
+	#define global	ITEM_ID_MYSTERIOUS_FOSSIL	1124
+	#define global	ITEM_ID_ANCIENT_POTTERY	1125
+	#define global	ITEM_ID_DECORATIVE_POTTERY	1126
+	#define global	ITEM_ID_BISQUE_DOLL	1127
+	#define global	ITEM_ID_CHEWING_GUM	1128
+	#define global	ITEM_ID_CHEWED_UP_GUM	1129
+	#define global	ITEM_ID_DEVIL_FRAGMENT	1130
+	#define global	ITEM_ID_BARLEY_TEA	1131
+	#define global	ITEM_ID_COLA	1132
+	#define global	ITEM_ID_BOMB_BARREL	1133
+	#define global	ITEM_ID_DEED_PROPERTY_TRANSFER	1134
+	#define global	ITEM_ID_FIXITY_ANCHOR	1135
+	#define global	ITEM_ID_CURE_CRYSTAL	1136
+	#define global	ITEM_ID_CHICORY	1137
+	#define global	ITEM_ID_FANE	1138
+	#define global	ITEM_ID_TWIG	1139
+	#define global	ITEM_ID_GUN_PAIR	1140
+	#define global	ITEM_ID_CROSSFIRE	1141
+	#define global	ITEM_ID_BLADE_BOW	1142
+	#define global	ITEM_ID_NUNCHAKU	1143
+	#define global	ITEM_ID_SHAKUJO	1144
+	#define global	ITEM_ID_STAR_HAMMER	1145
+	#define global	ITEM_ID_WAR_HAMMER	1146
+	#define global	ITEM_ID_BONE_SCYTHE	1147
+	#define global	ITEM_ID_SCISSORS	1148
+	#define global	ITEM_ID_CHAINSAW	1149
+	#define global	ITEM_ID_TOMAHAWK	1150
+	#define global	ITEM_ID_LANCE	1151
+	#define global	ITEM_ID_DRILL	1152
+	#define global	ITEM_ID_FLEURE	1153
+	#define global	ITEM_ID_KUNAI	1154
+	#define global	ITEM_ID_DISINFECTANT	1155
+	#define global	ITEM_ID_LINGS_BOW	1156
+	#define global	ITEM_ID_RINKHALS	1157
+	#define global	ITEM_ID_YOMI_TO	1158
+	#define global	ITEM_ID_SCORPIERCE	1159
+	#define global	ITEM_ID_NAZUNAS_SOX	1160
+	#define global	ITEM_ID_CROSS_RAIL	1161
+	#define global	ITEM_ID_POWER_TRIANGLE	1162
+	#define global	ITEM_ID_ENGOKU	1163
+	#define global	ITEM_ID_NUMENIUS	1164
+	#define global	ITEM_ID_DGT_101	1165
+	#define global	ITEM_ID_GOUTEN	1166
+	#define global	ITEM_ID_EPECLAIR	1167
+	#define global	ITEM_ID_GO_RENGE	1168
 
-	MAX_ITEM_ID = ITEM_ID_GO_RENGE + 3
+	#define global	MAX_ITEM_ID	(ITEM_ID_GO_RENGE + 3)
 
 	// Creatures
-	CREATURE_ID_BUG = 0 // Also doubles as RANDOM
-	CREATURE_ID_SHOPKEEPER = 1
-	CREATURE_ID_ZEOME_THE_FALSE_PROPHET = 2
-	CREATURE_ID_PUTIT = 3
-	CREATURE_ID_RED_PUTIT = 4
-	CREATURE_ID_WILD_RABBIT = 5
-	CREATURE_ID_SNAIL = 6
-	CREATURE_ID_FALLEN_SOLDIER = 7
-	CREATURE_ID_MERCENARY = 8
-	CREATURE_ID_BEGGAR = 9
-	CREATURE_ID_WILD_SHEEP = 10
-	CREATURE_ID_FLYING_FROG = 11
-	CREATURE_ID_GANGSTER = 12
-	CREATURE_ID_KOBOLD = 13
-	CREATURE_ID_CENTIPEDE = 14
-	CREATURE_ID_MUSHROOM = 15
-	CREATURE_ID_CITIZEN = 16
-	CREATURE_ID_ORC = 17
-	CREATURE_ID_WARRIOR_OF_ELEA = 18
-	CREATURE_ID_MANDRAKE = 19
-	CREATURE_ID_ORC_WARRIOR = 20
-	CREATURE_ID_ZOMBIE = 21
-	CREATURE_ID_BEETLE = 22
-	CREATURE_ID_ORPHE_THE_CHAOS_CHILD = 23
-	CREATURE_ID_WIZARD_OF_ELEA = 24
-	CREATURE_ID_GODA_THE_CAPTAIN_OF_ORC = 25
-	CREATURE_ID_MAD_SCIENTIST = 26
-	CREATURE_ID_ISCA_THE_FALLEN_ANGEL = 27
-	CREATURE_ID_WHOM_DWELL_IN_THE_VANITY = 28
-	CREATURE_ID_LOYTER_THE_CRIMSON_OF_ZANAN = 29
-	CREATURE_ID_MICHES_THE_APPRENTICE = 30
-	CREATURE_ID_SHENA_THE_DRAW = 31
-	CREATURE_ID_DUNGEON_CLEANER = 32
-	CREATURE_ID_LARNNEIRE_THE_LISTENER_OF_WIND = 33
-	CREATURE_ID_LOMIAS_THE_MESSENGER_FROM_VINDALE = 34
-	CREATURE_ID_TOWN_CHILD = 35
-	CREATURE_ID_OLD_PERSON = 36
-	CREATURE_ID_AT_SIGN = 37
-	CREATURE_ID_ELDER = 38
-	CREATURE_ID_CITIZEN2 = 39
-	CREATURE_ID_TRAINER = 40
-	CREATURE_ID_WIZARD = 41
-	CREATURE_ID_BAT = 42
-	CREATURE_ID_VAMPIRE_BAT = 43
-	CREATURE_ID_DRAGON_BAT = 44
-	CREATURE_ID_FIRE_ENT = 45
-	CREATURE_ID_ICE_ENT = 46
-	CREATURE_ID_LICH = 47
-	CREATURE_ID_MASTER_LICH = 48
-	CREATURE_ID_DEMI_LICH = 49
-	CREATURE_ID_HOUND = 50
-	CREATURE_ID_FIRE_HOUND = 51
-	CREATURE_ID_ICE_HOUND = 52
-	CREATURE_ID_LIGHTNING_HOUND = 53
-	CREATURE_ID_DARK_HOUND = 54
-	CREATURE_ID_ILLUSION_HOUND = 55
-	CREATURE_ID_NERVE_HOUND = 56
-	CREATURE_ID_POISON_HOUND = 57
-	CREATURE_ID_SOUND_HOUND = 58
-	CREATURE_ID_NETHER_HOUND = 59
-	CREATURE_ID_CHAOS_HOUND = 60
-	CREATURE_ID_GIANT_SQUIRREL = 61
-	CREATURE_ID_KILLER_SQUIRREL = 62
-	CREATURE_ID_GRUDGE = 63
-	CREATURE_ID_HUNGRY_DEMON = 64
-	CREATURE_ID_ELECTRIC_CLOUD = 65
-	CREATURE_ID_CHAOS_CLOUD = 66
-	CREATURE_ID_FLOATING_EYE = 67
-	CREATURE_ID_WYVERN = 68
-	CREATURE_ID_INFORMER = 69
-	CREATURE_ID_BARTENDER = 70
-	CREATURE_ID_SAILOR = 71
-	CREATURE_ID_CAPTAIN = 72
-	CREATURE_ID_ARENA_MASTER = 73
-	CREATURE_ID_HEALER = 74
-	CREATURE_ID_WARRIOR = 75
-	CREATURE_ID_GUARD = 76
-	CREATURE_ID_GUARD2 = 77
-	CREATURE_ID_PUPPET = 78
-	CREATURE_ID_STERSHA_THE_QUEEN_OF_PALMIA = 79
-	CREATURE_ID_XABI_THE_KING_OF_PALMIA = 80
-	CREATURE_ID_WASP = 81
-	CREATURE_ID_RED_WASP = 82
-	CREATURE_ID_CYCLOPS = 83
-	CREATURE_ID_TITAN = 84
-	CREATURE_ID_IMP = 85
-	CREATURE_ID_NETHER_IMP = 86
-	CREATURE_ID_CHAOS_IMP = 87
-	CREATURE_ID_HAND_OF_THE_DEAD = 88
-	CREATURE_ID_HAND_OF_THE_CHAOS = 89
-	CREATURE_ID_HAND_OF_THE_MURDERER = 90
-	CREATURE_ID_GHOST = 91
-	CREATURE_ID_NYMPH = 92
-	CREATURE_ID_MAN_EATER_FLOWER = 93
-	CREATURE_ID_CHAOS_FLOWER = 94
-	CREATURE_ID_COBRA = 95
-	CREATURE_ID_KING_COBRA = 96
-	CREATURE_ID_FIRE_DRAKE = 97
-	CREATURE_ID_ICE_DRAKE = 98
-	CREATURE_ID_LESSER_MUMMY = 99
-	CREATURE_ID_MUMMY = 100
-	CREATURE_ID_GREATER_MUMMY = 101
-	CREATURE_ID_GOBLIN = 102
-	CREATURE_ID_GOBLIN_WARRIOR = 103
-	CREATURE_ID_GOBLIN_SHAMAN = 104
-	CREATURE_ID_GOBLIN_WIZARD = 105
-	CREATURE_ID_RED_BAPTIST = 106
-	CREATURE_ID_BLUE_BAPTIST = 107
-	CREATURE_ID_BROWN_BEAR = 108
-	CREATURE_ID_GRIZZLY = 109
-	CREATURE_ID_LIVING_ARMOR = 110
-	CREATURE_ID_STEEL_MASS = 111
-	CREATURE_ID_GOLDEN_ARMOR = 112
-	CREATURE_ID_DEATH_ARMOR = 113
-	CREATURE_ID_MEDUSA = 114
-	CREATURE_ID_EURYALE = 115
-	CREATURE_ID_STHENO = 116
-	CREATURE_ID_CUPID_OF_LOVE = 117
-	CREATURE_ID_LESSER_PHANTOM = 118
-	CREATURE_ID_HARPY = 119
-	CREATURE_ID_GREEN_DRAGON = 120
-	CREATURE_ID_RED_DRAGON = 121
-	CREATURE_ID_WHITE_DRAGON = 122
-	CREATURE_ID_ELEC_DRAGON = 123
-	CREATURE_ID_NETHER_DRAGON = 124
-	CREATURE_ID_CHAOS_DRAGON = 125
-	CREATURE_ID_CERBERUS = 126
-	CREATURE_ID_SPIDER = 127
-	CREATURE_ID_BLACK_WIDOW = 128
-	CREATURE_ID_PARALYZER = 129
-	CREATURE_ID_TARANTULA = 130
-	CREATURE_ID_BLOOD_SPIDER = 131
-	CREATURE_ID_WOODEN_GOLEM = 132
-	CREATURE_ID_STONE_GOLEM = 133
-	CREATURE_ID_STEEL_GOLEM = 134
-	CREATURE_ID_GOLDEN_GOLEM = 135
-	CREATURE_ID_MITHRIL_GOLEM = 136
-	CREATURE_ID_SKY_GOLEM = 137
-	CREATURE_ID_ADAMANTIUM_GOLEM = 138
-	CREATURE_ID_SLAN_THE_SHADOW_OF_PALMIA = 139
-	CREATURE_ID_VESDA_THE_FIRE_DRAGON = 140
-	CREATURE_ID_ISSIZZLE_THE_DARK_ABOMINATION = 141
-	CREATURE_ID_ERYSTIA_THE_SCHOLAR_OF_HISTORY = 142
-	CREATURE_ID_WYNAN_THE_LORD_OF_THE_ANCIENT_CASTLE = 143
-	CREATURE_ID_QURUIZA_THE_RED_EYED_DECEIVER = 144
-	CREATURE_ID_CORGON_THE_STEEL_DRAGON = 145
-	CREATURE_ID_KARAM_THE_LONELY_WOLF_OF_KARUNE = 146
-	CREATURE_ID_FIRE_CRAB = 147
-	CREATURE_ID_FIRE_CENTIPEDE = 148
-	CREATURE_ID_CULTIST_OF_FIRE = 149
-	CREATURE_ID_SKELETON_WARRIOR = 150
-	CREATURE_ID_SKELETON_BERSERKER = 151
-	CREATURE_ID_MISSIONARY_OF_DARKNESS = 152
-	CREATURE_ID_PAWN = 153
-	CREATURE_ID_ROOK = 154
-	CREATURE_ID_BISHOP = 155
-	CREATURE_ID_KNIGHT = 156
-	CREATURE_ID_QUEEN = 157
-	CREATURE_ID_KING = 158
-	CREATURE_ID_MERCENARY_WARRIOR = 159
-	CREATURE_ID_MERCENARY_ARCHER = 160
-	CREATURE_ID_MERCENARY_WIZARD = 161
-	CREATURE_ID_YERLES_MACHINE_INFANTRY = 162
-	CREATURE_ID_ROCK_THROWER = 163
-	CREATURE_ID_CAT = 164
-	CREATURE_ID_DOG = 165
-	CREATURE_ID_LITTLE_GIRL = 166
-	CREATURE_ID_RAT = 167
-	CREATURE_ID_HERMIT_CRAB = 168
-	CREATURE_ID_SLIME = 169
-	CREATURE_ID_PUBLIC_PERFORMER = 170
-	CREATURE_ID_CITIZEN_OF_CYBER_DOME = 171
-	CREATURE_ID_CITIZEN_OF_CYBER_DOME2 = 172
-	CREATURE_ID_SALES_PERSON = 173
-	CREATURE_ID_PUNK = 174
-	CREATURE_ID_FRISIA_THE_CAT_QUEEN = 175
-	CREATURE_ID_YOUNGER_SISTER = 176
-	CREATURE_ID_UTIMA_THE_DESTROYER_OF_XEREN = 177
-	CREATURE_ID_AZZRSSIL_THE_IMPURE = 178
-	CREATURE_ID_MASTER_OF_PET_ARENA = 179
-	CREATURE_ID_TWINTAIL = 180
-	CREATURE_ID_SILVER_WOLF = 181
-	CREATURE_ID_NURSE = 182
-	CREATURE_ID_RICH_PERSON = 183
-	CREATURE_ID_NOBLE_CHILD = 184
-	CREATURE_ID_TOURIST = 185
-	CREATURE_ID_BLADE = 186
-	CREATURE_ID_BLADE_ALPHA = 187
-	CREATURE_ID_BLADE_OMEGA = 188
-	CREATURE_ID_DEFORMED_EYE = 189
-	CREATURE_ID_IMPURE_EYE = 190
-	CREATURE_ID_WISP = 191
-	CREATURE_ID_HEDGEHOG = 192
-	CREATURE_ID_SHINING_HEDGEHOG = 193
-	CREATURE_ID_ACID_SLIME = 194
-	CREATURE_ID_CHICKEN = 195
-	CREATURE_ID_PUMPKIN = 196
-	CREATURE_ID_GREATER_PUMPKIN = 197
-	CREATURE_ID_HALLOWEEN_NIGHTMARE = 198
-	CREATURE_ID_STALKER = 199
-	CREATURE_ID_SHADOW_STALKER = 200
-	CREATURE_ID_PUPPY = 201
-	CREATURE_ID_EBON_THE_FIRE_GIANT = 202
-	CREATURE_ID_MOYER_THE_CROOKED = 203
-	CREATURE_ID_PALMIAN_ELITE_SOLDIER = 204
-	CREATURE_ID_MAID = 205
-	CREATURE_ID_SISTER = 206
-	CREATURE_ID_SSIL_THE_UNDEAD_WITCH = 207
-	CREATURE_ID_GAROK_THE_LEGENDARY_SMITH = 208
-	CREATURE_ID_MIRAL_THE_LEGENDARY_SMITH = 209
-	CREATURE_ID_YOUNGER_CAT_SISTER = 210
-	CREATURE_ID_YOUNG_LADY = 211
-	CREATURE_ID_PUTIT_TANK = 212
-	CREATURE_ID_GWEN_THE_INNOCENT = 213
-	CREATURE_ID_THIEF = 214
-	CREATURE_ID_ROBBER = 215
-	CREATURE_ID_GREAT_RACE_OF_YITH = 216
-	CREATURE_ID_MASTER_THIEF = 217
-	CREATURE_ID_SHUB_NIGGURATH = 218
-	CREATURE_ID_GAGU = 219
-	CREATURE_ID_SPIRAL_KING = 220
-	CREATURE_ID_LONELY_PAEL = 221
-	CREATURE_ID_PAELS_MOM_LILY = 222
-	CREATURE_ID_RAPHAEL_THE_WOMANIZER = 223
-	CREATURE_ID_AINC_THE_NOVICE_KNIGHT = 224
-	CREATURE_ID_POPPY_THE_LITTLE_DOG = 225
-	CREATURE_ID_RILIAN_THE_DOG_LOVER = 226
-	CREATURE_ID_TAM_THE_CAT_HATER = 227
-	CREATURE_ID_CARBUNCLE = 228
-	CREATURE_ID_LION = 229
-	CREATURE_ID_CACY_THE_CAT_TAMER = 230
-	CREATURE_ID_GILBERT_THE_COLONEL = 231
-	CREATURE_ID_YERLES_SELF_PROPELLED_GUN = 232
-	CREATURE_ID_JUERE_INFANTRY = 233
-	CREATURE_ID_YERLES_ELITE_MACHINE_INFANTRY = 234
-	CREATURE_ID_JUERE_SWORDMAN = 235
-	CREATURE_ID_YEEK = 236
-	CREATURE_ID_KAMIKAZE_YEEK = 237
-	CREATURE_ID_YEEK_WARRIOR = 238
-	CREATURE_ID_HOT_SPRING_MANIAC = 239
-	CREATURE_ID_MASTER_YEEK = 240
-	CREATURE_ID_YEEK_ARCHER = 241
-	CREATURE_ID_RODLOB_THE_YEEK_CHIEF = 242
-	CREATURE_ID_ARNORD_THE_INJURED_SOLDIER = 243
-	CREATURE_ID_KAMIKAZE_SAMURAI = 244
-	CREATURE_ID_BOMB_ROCK = 245
-	CREATURE_ID_SILVER_CAT = 246
-	CREATURE_ID_MIA_THE_CAT_FREAK = 247
-	CREATURE_ID_TYRANNOSAURUS = 248
-	CREATURE_ID_YOUNGER_SISTER2 = 249
-	CREATURE_ID_FAIRY = 250
-	CREATURE_ID_TROLL = 251
-	CREATURE_ID_RENTON_THE_SUFFERING_WIZARD = 252
-	CREATURE_ID_MARKS_THE_GREAT_THIEF = 253
-	CREATURE_ID_ANCIENT_COFFIN = 254
-	CREATURE_ID_SCORPION = 255
-	CREATURE_ID_KING_SCORPION = 256
-	CREATURE_ID_TUWEN_THE_MASTER_OF_THE_PYRAMID = 257
-	CREATURE_ID_IRON_MAIDEN = 258
-	CREATURE_ID_NOEL_THE_BOMBER = 259
-	CREATURE_ID_BLACK_CAT = 260
-	CREATURE_ID_CUTE_FAIRY = 261
-	CREATURE_ID_ANDROID = 262
-	CREATURE_ID_BLACK_ANGEL = 263
-	CREATURE_ID_EXILE = 264
-	CREATURE_ID_GOLDEN_KNIGHT = 265
-	CREATURE_ID_DEFENDER = 266
-	CREATURE_ID_LAME_HORSE = 267
-	CREATURE_ID_YOWYN_HORSE = 268
-	CREATURE_ID_FARMER = 269
-	CREATURE_ID_NUN = 270
-	CREATURE_ID_ROGUE = 271
-	CREATURE_ID_ARTIST = 272
-	CREATURE_ID_MINER = 273
-	CREATURE_ID_NOBLE = 274
-	CREATURE_ID_NOYEL_HORSE = 275
-	CREATURE_ID_WILD_HORSE = 276
-	CREATURE_ID_THOROUGHBRED = 277
-	CREATURE_ID_MUTANT = 278
-	CREATURE_ID_ICOLLE_THE_BIOLOGIST = 279
-	CREATURE_ID_BALZAK_THE_JANITOR = 280
-	CREATURE_ID_LIZARD_MAN = 281
-	CREATURE_ID_MINOTAUR = 282
-	CREATURE_ID_SPORE_MUSHROOM = 283
-	CREATURE_ID_CHAOS_MUSHROOM = 284
-	CREATURE_ID_BLUE_BUBBLE = 285
-	CREATURE_ID_BUBBLE = 286
-	CREATURE_ID_MASS_MONSTER = 287
-	CREATURE_ID_REVLUS_THE_MAGE_GUILDMASTER = 288
-	CREATURE_ID_MAGE_GUILD_MEMBER = 289
-	CREATURE_ID_LEXUS_THE_MAGE_WATCHMAN = 290
-	CREATURE_ID_FRAY_THE_FIGHTER_GUILDMASTER = 291
-	CREATURE_ID_SIN_THE_THIEF_GUILDMASTER = 292
-	CREATURE_ID_THIEF_GUILD_MEMBER = 293
-	CREATURE_ID_ABYSS_THE_THIEF_WATCHMAN = 294
-	CREATURE_ID_FIGHTER_GUILD_MEMBER = 295
-	CREATURE_ID_MINOTAUR_MAGICIAN = 296
-	CREATURE_ID_DORIA_THE_FIGHTER_WATCHMAN = 297
-	CREATURE_ID_MINOTAUR_BOXER = 298
-	CREATURE_ID_MINOTAUR_KING = 299
-	CREATURE_ID_UNGAGA_THE_MINOTAUR_KING = 300
-	CREATURE_ID_CONERY_PALMIAN_MAJOR_GENERAL = 301
-	CREATURE_ID_ROGUE_BOSS = 302
-	CREATURE_ID_ROGUE_WARRIOR = 303
-	CREATURE_ID_ROGUE_ARCHER = 304
-	CREATURE_ID_ROGUE_WIZARD = 305
-	CREATURE_ID_LULWY = 306
-	CREATURE_ID_EXECUTIONER = 307
-	CREATURE_ID_MESSENGER_OF_DEATH = 308
-	CREATURE_ID_ASURA = 309
-	CREATURE_ID_MITRA = 310
-	CREATURE_ID_VARUNA = 311
-	CREATURE_ID_HUNGRY_SEA_LION = 312
-	CREATURE_ID_SUPER_HUNGRY_SEA_LION = 313
-	CREATURE_ID_DEATH_GAZE = 314
-	CREATURE_ID_CHAOS_EYE = 315
-	CREATURE_ID_MAD_GAZE = 316
-	CREATURE_ID_SILVER_EYED_WITCH = 317
-	CREATURE_ID_BIG_DADDY = 318
-	CREATURE_ID_LITTLE_SISTER = 319
-	CREATURE_ID_CLEANER = 320
-	CREATURE_ID_HARD_GAY = 321
-	CREATURE_ID_STRANGE_SCIENTIST = 322
-	CREATURE_ID_SHADE = 323
-	CREATURE_ID_QUICKLING = 324
-	CREATURE_ID_QUICKLING_ARCHER = 325
-	CREATURE_ID_BARD = 326
-	CREATURE_ID_CUBE = 327
-	CREATURE_ID_PLATINA_BELL = 328
-	CREATURE_ID_GOLD_BELL = 329
-	CREATURE_ID_ALIEN = 330
-	CREATURE_ID_EHEKATL = 331
-	CREATURE_ID_STRAY_CAT = 332
-	CREATURE_ID_GUILD_TRAINER = 333
-	CREATURE_ID_MYSTERIOUS_PRODUCER = 334
-	CREATURE_ID_PROSTITUTE = 335
-	CREATURE_ID_GOD_INSIDE_EHEKATL = 336
-	CREATURE_ID_PRISONER = 337
-	CREATURE_ID_OPATOS = 338
-	CREATURE_ID_KUMIROMI = 339
-	CREATURE_ID_ZILLA = 340
-	CREATURE_ID_MINE_DOG = 341
-	CREATURE_ID_MANI = 342
-	CREATURE_ID_USER = 343
-	CREATURE_ID_MAMMOTH = 344
-	CREATURE_ID_KANEDA_BIKE = 345
-	CREATURE_ID_CUB = 346
-	CREATURE_ID_JURE_FANATIC = 347
-	CREATURE_ID_PART_TIME_WORKER = 348
-	CREATURE_ID_HOLY_BEAST = 349
-	CREATURE_ID_FESTIVAL_TOURIST = 350
-	CREATURE_ID_THE_LEOPARD_WARRIOR = 351
-	CREATURE_ID_SILVIA_THE_PRINCESS = 352
-	CREATURE_ID_CARAVAN_MASTER = 353
-	CREATURE_ID_GOOSE = 354
-	CREATURE_ID_INSANE_KUMIROMI = 355
-	CREATURE_ID_DEVASTATE_LULWY = 356
-	CREATURE_ID_BUILDUP_OPATOS = 357
-	CREATURE_ID_DEUS_EX_MANINA = 358
-	CREATURE_ID_JURE = 359
-	CREATURE_ID_BLESSED_JURE = 360
-	CREATURE_ID_OLDER_SISTER = 361
-	CREATURE_ID_RUDRAS = 362
-	CREATURE_ID_OLDER_DOG_SISTER = 363
-	CREATURE_ID_OLDER_SISTER2 = 364
-	CREATURE_ID_H_SISTER = 365
-	CREATURE_ID_HEINRICH_THE_ARMORED_GENERAL = 366
-	CREATURE_ID_ZERNARD_THE_CAPABLE_MERCENARY = 367
-	CREATURE_ID_EBARTH_THE_PIRATE_BOSS = 368
-	CREATURE_ID_DOG_COP = 369
-	CREATURE_ID_MILIS_CAPTAIN_OF_THE_SPECIAL_FORCES = 370
-	CREATURE_ID_SECURITY_OFFICER_ORVILLE = 371
-	CREATURE_ID_MILITARY_PUTIT = 372
-	CREATURE_ID_NAIVE_KYLE = 373
-	CREATURE_ID_MEFAN_THE_BARD = 374
-	CREATURE_ID_JUERE_BERSERKER = 375
-	CREATURE_ID_EULDERNA_SUMMONKNIGHT = 376
-	CREATURE_ID_ULZASSIL_THE_DEAD_EMPEROR = 377
-	CREATURE_ID_YERLESWOOD_THE_SAVAGE_MACHINE = 378
-	CREATURE_ID_SIVA_THE_DESTRUCTION = 379
-	CREATURE_ID_ORPHE_THE_CHAOS_FOLLOWER = 380
-	CREATURE_ID_CAIM_THE_MAD_RICH = 381
-	CREATURE_ID_SNAIL_THE_ANDROID_RIDER = 382
-	CREATURE_ID_RECONCILED_CLEANER = 383
-	CREATURE_ID_LITYOU = 384
-	CREATURE_ID_MURDER_KNIGHT = 385
-	CREATURE_ID_GIRAFFE = 386
-	CREATURE_ID_KIRIN = 387
-	CREATURE_ID_BAMBOO_SPROUT = 388
-	CREATURE_ID_THE_KING_IN_YELLOW = 389
-	CREATURE_ID_NYARLATHOTEP = 390
-	CREATURE_ID_TSATHOGGUA = 391
-	CREATURE_ID_BOUNTY_HUNTER = 392
-	CREATURE_ID_GRAND_DRAGON = 393
-	CREATURE_ID_ATLACH_NACHA = 394
-	CREATURE_ID_TYRANNOBREAKER = 395
-	CREATURE_ID_VORPAL_BUNNY = 396
-	CREATURE_ID_VOL_PHANTOM = 397
-	CREATURE_ID_CUPID_OF_DEATH = 398
-	CREATURE_ID_BLACK_BAPTIST = 399
-	CREATURE_ID_CAMOUFLAGED_IMP = 400
-	CREATURE_ID_VIASHIVAN = 401
-	CREATURE_ID_OUROBOROS = 402
-	CREATURE_ID_GRAND_ENT = 403
-	CREATURE_ID_KABUTO = 404
-	CREATURE_ID_MOLOCH = 405
-	CREATURE_ID_ATLAS = 406
-	CREATURE_ID_MAIDSANN = 407
-	CREATURE_ID_LUNE_THE_MAID_CHIEF = 408
-	CREATURE_ID_ELECTRIC_SHEEP = 409
-	CREATURE_ID_METAMORPHOSE = 410
-	CREATURE_ID_SECURITY_SYSTEM = 411
-	CREATURE_ID_CARNAGE_RAT = 412
-	CREATURE_ID_BANKRUPT_GUO = 413
-	CREATURE_ID_LEND_THE_TAKER = 414
-	CREATURE_ID_QUANTUM_CREATURE = 415
-	CREATURE_ID_DRAGON_ZOMBIE = 416
-	CREATURE_ID_ANUBIS_THE_MASTER_OF_DEATH = 417
-	CREATURE_ID_METAL_VESDA_THE_FIRE_MACHINE = 418
-	CREATURE_ID_EXOSSIL_THE_CHAOS_WING = 419
-	CREATURE_ID_YERLES_COMBAT_PLANE = 420
-	CREATURE_ID_WING_SNAIL = 421
-	CREATURE_ID_HEQET = 422
-	CREATURE_ID_DARK_KOBOLD = 423
-	CREATURE_ID_TITANIA = 424
-	CREATURE_ID_DRAGONEWT = 425
-	CREATURE_ID_MAN_EATER_CRAB = 426
-	CREATURE_ID_OLOG = 427
-	CREATURE_ID_GIGA_BOMB_ROCK = 428
-	CREATURE_ID_DRAGONS_PET_HARPY = 429
-	CREATURE_ID_GOLD_SHEEP = 430
-	CREATURE_ID_COCKATRICE = 431
-	CREATURE_ID_SUZAKU = 432
-	CREATURE_ID_LEUCOCHLORIDIUM = 433
-	CREATURE_ID_FIVE_HEAD_GOD = 434
-	CREATURE_ID_MESHERA_PLANT = 435
-	CREATURE_ID_H_SISTER2 = 436
-	CREATURE_ID_MILOS_OF_THE_FORGOTTEN_WORLD = 437
-	CREATURE_ID_CARLA_OF_THE_FORGOTTEN_WORLD = 438
-	CREATURE_ID_GOKIBURI = 439
-	CREATURE_ID_CITIZEN4 = 440
-	CREATURE_ID_CITIZEN3 = 441
-	CREATURE_ID_PIRATE = 442
-	CREATURE_ID_FISHERMAN = 443
-	CREATURE_ID_MIMIC = 444
-	CREATURE_ID_RICH_PERSON_STOKE = 445
-	CREATURE_ID_BIG_SISTER = 446
-	CREATURE_ID_CAT_ZOMBIE = 447
-	CREATURE_ID_CURSED_COFFIN = 448
-	CREATURE_ID_ARMA_THE_TOUR_GUIDE = 449
-	CREATURE_ID_FIRE_DRAGON_CHILD = 450
-	CREATURE_ID_RED_MUSHROOM = 451
-	CREATURE_ID_MESHERA_BETA = 452
-	CREATURE_ID_MESHERA_GAMMA = 453
-	CREATURE_ID_MESHERA_DELTA = 454
-	CREATURE_ID_VAMPIRE = 455
-	CREATURE_ID_CARMILLA = 456
-	CREATURE_ID_CHUPACABURA = 457
-	CREATURE_ID_MESHERA_ALPHA_THE_DEFORMED_ANGEL = 458
-	CREATURE_ID_LEAD_DEVELOPER_DR_GAVELA = 459
-	CREATURE_ID_BELL_OF_TERMINATION = 460
-	CREATURE_ID_WAR_SPIRIT = 461
-	CREATURE_ID_MAGIC_SPIRIT = 462
-	CREATURE_ID_PUDDING_SPIRIT = 463
-	CREATURE_ID_CANDLE_WISP = 464
-	CREATURE_ID_INFECTED_YERLES_SOLDIER = 465
-	CREATURE_ID_GAMBLER = 466
-	CREATURE_ID_YERLES_LATEST_OUTFIT_SOLDIER = 467
-	CREATURE_ID_SWIMMER = 468
-	CREATURE_ID_BLADE_KING = 469
-	CREATURE_ID_NINJA = 470
-	CREATURE_ID_STAFF = 471
-	CREATURE_ID_REFUGEE = 472
-	CREATURE_ID_TRAVELER = 473
-	CREATURE_ID_SIRAHA_THE_WHITE_CLOTH = 474
-	CREATURE_ID_KURON_THE_BLACK_CLOTH = 475
-	CREATURE_ID_ALCHEMIST_NAPLUS = 476
-	CREATURE_ID_GETUEI_THE_NINJA_MASTER = 477
-	CREATURE_ID_EILA_THE_FUGITIVE_KUNOICHI = 478
-	CREATURE_ID_RED_NINJA = 479
-	CREATURE_ID_SHOEBILL = 480
-	CREATURE_ID_HYPER_YACATECT = 481
-	CREATURE_ID_YACATECT = 482
-	CREATURE_ID_THE_ELEMENT = 483
-	CREATURE_ID_ITZPALT = 484
-	CREATURE_ID_WHITE_YOUNG_LADY = 485
-	CREATURE_ID_ABYSS_DWELLER = 486
-	CREATURE_ID_GUN_SPIRIT = 487
-	CREATURE_ID_SKELETON_HERO = 488
-	CREATURE_ID_ABYSS_ANIMAL = 489
-	CREATURE_ID_MIZUKI_THE_ABYSS_PRINCESS = 490
-	CREATURE_ID_LEIKI = 491
-	CREATURE_ID_PASCAL = 492
-	CREATURE_ID_LAZY_OLDER_SISTER = 493
-	CREATURE_ID_M_GIRL = 494
-	CREATURE_ID_NEW_CITIZEN = 495
-	CREATURE_ID_FLYING_LEECH = 496
-	CREATURE_ID_SILENT_LEECH = 497
-	CREATURE_ID_GRIEF_SHIELD = 498
-	CREATURE_ID_GWEN_THE_PITILESS = 499
-	CREATURE_ID_WRANG_WRANG = 500
-	CREATURE_ID_XEREN_ELECTRIC_TANK = 501
-	CREATURE_ID_XEREN_SATELLITE_UNIT = 502
-	CREATURE_ID_CHAOS_SPIRIT = 503
-	CREATURE_ID_CHAOS_UNICORN_KING_OF_CHAOS = 504
-	CREATURE_ID_VALIANT_WYVERN = 505
-	CREATURE_ID_ORION_KILLER = 506
-	CREATURE_ID_BLACK_HORNET = 507
-	CREATURE_ID_MOBILE_COMMUNICATION_EQUIPMENT = 508
-	CREATURE_ID_DEMON = 509
-	CREATURE_ID_DEMONS_LORD = 510
-	CREATURE_ID_DEMONS_RULER = 511
-	CREATURE_ID_ELEMENT_DRAGON = 512
-	CREATURE_ID_OLD_HUMANKIND = 513
-	CREATURE_ID_OLD_HUMANKIND2 = 514
-	CREATURE_ID_OLD_HUMANKIND3 = 515
-	CREATURE_ID_ETHER_GENERATOR = 516
-	CREATURE_ID_ESTORK_THE_DOGGOD = 517
-	CREATURE_ID_PART_TIME_WORKER2 = 518
-	CREATURE_ID_NAZUNA_THE_INSTRUCTOR = 519
-	CREATURE_ID_GIANT_EATER_FLOWER = 520
-	CREATURE_ID_SEI_RYU = 521
-	CREATURE_ID_CHILD_WEL = 522
-	CREATURE_ID_MURDER_COCKROACH = 523
-	CREATURE_ID_KING_COCKROACH = 524
-	CREATURE_ID_PRO_JET = 525
-	CREATURE_ID_BLACK_GAUNTLET_LEOLD = 526
-	CREATURE_ID_STRIKE_EAGLE = 527
-	CREATURE_ID_POWER_EAGLE = 528
-	CREATURE_ID_SHADOW = 529
-	CREATURE_ID_GRANDMASTER = 530
-	CREATURE_ID_DRAGON_CENTIPEDE = 531
-	CREATURE_ID_STAG_GOD = 532
-	CREATURE_ID_YERLES_CYBORG_SOLDIER = 533
-	CREATURE_ID_AILE_THE_ATTENDANT = 534
-	CREATURE_ID_GRYFFON_CHILD = 535
-	CREATURE_ID_BLACK_GRYFFON = 536
-	CREATURE_ID_MIRAGE_GRYPHON = 537
-	CREATURE_ID_FOX_BROTHER = 538
-	CREATURE_ID_CLUSTER_BOMB_ROCK = 539
-	CREATURE_ID_VISHNU = 540
-	CREATURE_ID_OMEGA_HERAKLES = 541
-	CREATURE_ID_ARKTOUROS = 542
-	CREATURE_ID_JAGUAR_WARRIOR = 543
-	CREATURE_ID_BEHEMOTH = 544
-	CREATURE_ID_HOLDGAZER = 545
-	CREATURE_ID_BLOOD_GOLEM = 546
-	CREATURE_ID_BIRD_ARCHER = 547
-	CREATURE_ID_GARUDA = 548
-	CREATURE_ID_ANCIENT_LICH = 549
-	CREATURE_ID_DIABOLIC_CLOWN = 550
-	CREATURE_ID_ULFHEOINN = 551
-	CREATURE_ID_ULTIMATE_GOLEM = 552
-	CREATURE_ID_GRAVITY_CANNON = 553
-	CREATURE_ID_HIGH_MAGICIAN = 554
-	CREATURE_ID_NEMAIN = 555
-	CREATURE_ID_HEL = 556
-	CREATURE_ID_OSIRIS = 557
-	CREATURE_ID_CAMAZOTZ = 558
-	CREATURE_ID_QUICK_REDCAP = 559
-	CREATURE_ID_SUGAAR = 560
-	CREATURE_ID_EYE_OF_BALOR = 561
-	CREATURE_ID_KALI = 562
-	CREATURE_ID_UNGOLIANT = 563
-	CREATURE_ID_SUPER_GRANDMASTER = 564
-	CREATURE_ID_MUCENCAB = 565
-	CREATURE_ID_SUPER_DRAGONEWT = 566
-	CREATURE_ID_SHOGGOTH = 567
-	CREATURE_ID_CHAOS_MIMIC = 568
-	CREATURE_ID_GALACTICA_PHANTOM = 569
-	CREATURE_ID_SHEEPDOG = 570
-	CREATURE_ID_PADANGU = 571
-	CREATURE_ID_ARKHAI = 572
-	CREATURE_ID_DOMINION = 573
-	CREATURE_ID_SERAPH = 574
-	CREATURE_ID_RATIN_THE_FIGHTER_REPORTER = 575
-	CREATURE_ID_NAGA_THE_THIEF_REPORTER = 576
-	CREATURE_ID_LENAS_THE_MAGE_REPORTER = 577
-	CREATURE_ID_NECRO_DOLL = 578
-	CREATURE_ID_DEAD_EYES_BLOOD_DRAGON = 579
-	CREATURE_ID_CURSE_DRAKE = 580
-	CREATURE_ID_MOAI = 581
-	CREATURE_ID_BLUE_MOAI = 582
-	CREATURE_ID_HYPOMYCES = 583
-	CREATURE_ID_DEMONS_SOUL = 584
-	CREATURE_ID_AMBYSTOMA = 585
-	CREATURE_ID_EK_CHUAH = 586
-	CREATURE_ID_MISHAGUZI = 587
-	CREATURE_ID_SAGE_OF_ELEA = 588
-	CREATURE_ID_KNIGHT_OF_ELEA = 589
-	CREATURE_ID_MEGA_MOLE = 590
-	CREATURE_ID_TALPIDAE = 591
-	CREATURE_ID_RAGNAROCK = 592
-	CREATURE_ID_BELL_OF_EMERGENCY = 593
-	CREATURE_ID_BADGER = 594
-	CREATURE_ID_CAPYBARA = 595
-	CREATURE_ID_INDIGO_LOBSTER = 596
-	CREATURE_ID_THOUSAND_HEDGEHOG = 597
-	CREATURE_ID_HELL_NEEDLE_HEDGEHOG = 598
-	CREATURE_ID_BERSERK_DRAGON = 599
-	CREATURE_ID_MIST_DRAGON = 600
-	CREATURE_ID_YERLESWOOD_TYPE_M = 601
-	CREATURE_ID_BOMB_THROWER = 602
-	CREATURE_ID_YERLES_MORTAR = 603
-	CREATURE_ID_MRA = 604
-	CREATURE_ID_NORNE_THE_GUIDE = 605
-	CREATURE_ID_MELUGAST_TYPE0_THE_DIMENSION_DRIVER = 606
-	CREATURE_ID_FLASH_WYVERN = 607
-	CREATURE_ID_SPAGHETTI_MONSTER = 608
-	CREATURE_ID_TREE_SPARROW = 609
-	CREATURE_ID_DELPHYNE = 610
-	CREATURE_ID_TELCHINES = 611
-	CREATURE_ID_SPIPHA_THE_DRAGON_HUNTER = 612
-	CREATURE_ID_HELL_CRAB = 613
-	CREATURE_ID_JUERE_DEMON_SOLDIER = 614
-	CREATURE_ID_GI_ANT = 615
-	CREATURE_ID_SAMURAI_ANT = 616
-	CREATURE_ID_QUEEN_GI_ANT = 617
-	CREATURE_ID_KESALANPATHARAN = 618
-	CREATURE_ID_BLACK_ANGEL_HAIR = 619
-	CREATURE_ID_SHOPKEEPER_CROW = 620
-	CREATURE_ID_ALICE_THE_BIG_ANT = 621
-	CREATURE_ID_MARY_THE_INSECT_MASTER = 622
-	CREATURE_ID_SCHOLAR = 623
-	CREATURE_ID_SOPHIA_THE_WISE = 624
-	CREATURE_ID_TRUFFE_CHOCOLATE_WISP = 625
-	CREATURE_ID_TEACHER = 626
-	CREATURE_ID_CHESTNUT_GIANT = 627
-	CREATURE_ID_RAIZEL_THE_OLD_WIZARD = 628
-	CREATURE_ID_NEIN_THE_FLYING_WITCH = 629
-	CREATURE_ID_DARK_KOALA = 630
-	CREATURE_ID_CHILD_BOAR = 631
-	CREATURE_ID_BIG_BOAR = 632
-	CREATURE_ID_DESTROY_BOAR = 633
-	CREATURE_ID_SAND_WORM = 634
-	CREATURE_ID_ROCK_WORM = 635
-	CREATURE_ID_HELL_FIRE_FLOWER = 636
-	CREATURE_ID_AMURDAD = 637
-	CREATURE_ID_LAVA_GOLEM = 638
-	CREATURE_ID_ARASIEL = 639
-	CREATURE_ID_SINAHA = 640
-	CREATURE_ID_JIN_THE_MACHINE_REBEL = 641
-	CREATURE_ID_HAMSTER = 642
-	CREATURE_ID_SHOOTING_HAMSTER = 643
-	CREATURE_ID_DEATH_HAMSTER = 644
-	CREATURE_ID_KIWI = 645
-	CREATURE_ID_GOLD_KIWI = 646
-	CREATURE_ID_HILL_CITIZEN = 647
-	CREATURE_ID_HILL_CHILD = 648
-	CREATURE_ID_SHOPKEEPER2 = 649
-	CREATURE_ID_DAIN_THE_ELDER_OF_HILL = 650
-	CREATURE_ID_THALIA_THE_STAR_VIEWER = 651
-	CREATURE_ID_IRMA_THE_INDOMITABLE_SMITH = 652
-	CREATURE_ID_WISE_HILL_CITIZEN = 653
-	CREATURE_ID_MARKA_THE_SILVER_BEAR = 654
-	CREATURE_ID_CHAOS_HUNTER = 655
-	CREATURE_ID_CHAOS_PALADIN = 656
-	CREATURE_ID_CHAOS_SHAMAN = 657
-	CREATURE_ID_YELLOW_FIRE_DRAGON = 658
-	CREATURE_ID_VANSESDA_THE_ANCIENT_FIRE = 659
-	CREATURE_ID_ESCAPEGOAT = 660
-	CREATURE_ID_HAND_OF_THE_GOD = 661
-	CREATURE_ID_PHANTOM_OF_END = 662
-	CREATURE_ID_AIKAGE_THE_SHINOBI_MASK = 663
-	CREATURE_ID_YERLESWOOD_NEO = 664
-	CREATURE_ID_ROVID = 665
-	CREATURE_ID_WEREWOLF = 666
-	CREATURE_ID_COMMAND_WOLF = 667
-	CREATURE_ID_GARZIEM = 668
-	CREATURE_ID_WORKER_02 = 669
-	CREATURE_ID_WORKER_01 = 670
-	CREATURE_ID_R_CLEANER = 671
-	CREATURE_ID_NINE_HEAD_DRAGON_THE_ABYSS = 672
-	CREATURE_ID_FOX_SPIRIT = 673
-	CREATURE_ID_SUNBARARIAN = 674
-	CREATURE_ID_KARAVIKA = 675
-	CREATURE_ID_URCAGUARY = 676
-	CREATURE_ID_G_CUBE = 677
-	CREATURE_ID_BLACK_BOX = 678
-	CREATURE_ID_BASATAN = 679
-	CREATURE_ID_CTHUGHA = 680
-	CREATURE_ID_YOMAGNTHO = 681
-	CREATURE_ID_SMALL_STONE_GOLEM = 682
-	CREATURE_ID_SMALL_WOODEN_GOLEM = 683
-	CREATURE_ID_KUROYA_THE_LOOKING_UNIVERSE = 684
-	CREATURE_ID_FRON_THE_TOUR_PLANNER = 685
-	CREATURE_ID_REGULUS_THE_ALTERED = 686
-	CREATURE_ID_NERES_THE_AMNESIAC = 687
-	CREATURE_ID_RYUTYE_THE_AMNESIAC = 688
-	CREATURE_ID_ZANAN_HEAVILY_ARMED = 689
-	CREATURE_ID_BOYCIANA = 690
-	CREATURE_ID_NECRO_LANCER = 691
-	CREATURE_ID_NECRO_DANCER = 692
-	CREATURE_ID_CRYING_WITCH = 693
-	CREATURE_ID_SHINING_SILVER_WOLF = 694
-	CREATURE_ID_BLAZE_LION = 695
-	CREATURE_ID_DETECTIVE = 696
-	CREATURE_ID_WEREWOLF_DETECTIVE = 697
-	CREATURE_ID_BUTTERSPY = 698
-	CREATURE_ID_MOONLIT_PAPILLON = 699
-	CREATURE_ID_EFFECT_BUTTERFLY = 700
-	CREATURE_ID_SLEEPING_GIANT = 701
-	CREATURE_ID_TESTER = 702
-	CREATURE_ID_WANGNIN = 703
-	CREATURE_ID_NIGHTMARE_SHARK = 704
-	CREATURE_ID_RAGING_SHARK = 705
-	CREATURE_ID_CAPTAIN_SHARK = 706
-	CREATURE_ID_JELLYFISH_KRAKEN = 707
-	CREATURE_ID_STEEL_MINOTAUR = 708
-	CREATURE_ID_SPACE_HORNED_OWL = 709
-	CREATURE_ID_LAZASYE_THE_DESTROY = 710
-	CREATURE_ID_MELGET_THE_INFORMER = 711
-	CREATURE_ID_YO_SUZUME = 712
-	CREATURE_ID_SPACE_ZILLA = 713
-	CREATURE_ID_STEEL_ARMOR_SPIDER = 714
-	CREATURE_ID_GOLD_ARMOR_ANT = 715
-	CREATURE_ID_BATTLE_ALIEN = 716
-	CREATURE_ID_SMASH_OGRE = 717
-	CREATURE_ID_SLASH_OGRE = 718
-	CREATURE_ID_SHINE_OGRE = 719
-	CREATURE_ID_DHOLE = 720
-	CREATURE_ID_CLOUD_BEAST = 721
-	CREATURE_ID_METAL_ZILLA = 722
-	CREATURE_ID_HALLOWEEN_CHILDREN = 723
-	CREATURE_ID_HALLOWEEN_CHILDREN2 = 724
-	CREATURE_ID_MUSCLE_GOLEM = 725
-	CREATURE_ID_MAD_MUD_GOLEM = 726
-	CREATURE_ID_KIKKAS_PYTHONIDAE = 727
-	CREATURE_ID_MEIDA = 728
-	CREATURE_ID_OYAUKAMUI = 729
-	CREATURE_ID_NOT_STRAY_SHEEP = 730
-	CREATURE_ID_ASTRAY_SHEEP = 731
-	CREATURE_ID_NIGHTMARE_SHEEP = 732
-	CREATURE_ID_RUBY_CARBUNCLE = 733
-	CREATURE_ID_MANTICORE = 734
-	CREATURE_ID_GLARE_TIGER = 735
-	CREATURE_ID_WENKAMUI = 736
-	CREATURE_ID_CONDUCTOR_KOALA = 737
-	CREATURE_ID_DOBIEL = 738
-	CREATURE_ID_MAGIC_ARCHER = 739
-	CREATURE_ID_PALACE_MAGICIAN = 740
-	CREATURE_ID_WANDERING_PENGUIN = 741
-	CREATURE_ID_LAST_RAVEN = 742
-	CREATURE_ID_INQTUAL_THE_REVENGE = 743
-	CREATURE_ID_LEGENDARY_WOLF = 744
-	CREATURE_ID_ZOMBIE_QUEEN = 745
-	CREATURE_ID_REQUIEM = 746
-	CREATURE_ID_GOTHIC = 747
-	CREATURE_ID_ZOMBIE_GIRL = 748
-	CREATURE_ID_BIG_SEA_HARE = 749
-	CREATURE_ID_MAGICARGOT = 750
-	CREATURE_ID_ACID_SEA_HARE = 751
-	CREATURE_ID_KAMIKAZE_MAIMAI = 752
-	CREATURE_ID_FORTRESSNAIL = 753
-	CREATURE_ID_DARKNESSLUG = 754
-	CREATURE_ID_ROATONIS_THE_INFECTIONS = 755
-	CREATURE_ID_SHURAIDA_THE_EXPERT_MERC = 756
-	CREATURE_ID_MIKSCXIFONA = 757
-	CREATURE_ID_PROFANITY_PRIEST = 758
-	CREATURE_ID_GRIM_REAPER = 759
-	CREATURE_ID_CLAYMOAI = 760
-	CREATURE_ID_MANA_MONOLITH = 761
-	CREATURE_ID_MOAI_CORE = 762
-	CREATURE_ID_CLOUDRAGON = 763
-	CREATURE_ID_ARAONIBI = 764
-	CREATURE_ID_SPIRIT_OF_BREAD = 765
-	CREATURE_ID_KENTAURS = 766
-	CREATURE_ID_GUNNTAURS = 767
-	CREATURE_ID_BALLISTALLION = 768
-	CREATURE_ID_KENTAURS_KNIGHT = 769
-	CREATURE_ID_DARK_HORSE = 770
-	CREATURE_ID_MASTALLION = 771
-	CREATURE_ID_CATTLE = 772
-	CREATURE_ID_BLUE_BULL = 773
-	CREATURE_ID_CHIHYU = 774
-	CREATURE_ID_ASTERIOS = 775
-	CREATURE_ID_HAM_TAIROU = 776
-	CREATURE_ID_DISASTER = 777
-	CREATURE_ID_KYUSO = 778
-	CREATURE_ID_MOMOTUKA = 779
-	CREATURE_ID_COM_BAT = 780
-	CREATURE_ID_KAPAPU_KAMUI = 781
-	CREATURE_ID_DARK_RAIDER = 782
-	CREATURE_ID_TURTLE_RABBIT = 783
-	CREATURE_ID_TERRORISM_SQUIRREL = 784
-	CREATURE_ID_BUNNY_GHOUL = 785
-	CREATURE_ID_HAKUTOSHIN = 786
-	CREATURE_ID_IRIS = 787
-	CREATURE_ID_DREAD_RABBIT = 788
-	CREATURE_ID_EGELVEIL_THE_BIND = 789
-	CREATURE_ID_BETHEL_THE_WHITE_HAWK = 790
-	CREATURE_ID_MELUGAST_TYPEM = 791
-	CREATURE_ID_SYLPH = 792
-	CREATURE_ID_13TH_STEP_GHOST = 793
-	CREATURE_ID_LEGION_MAGE = 794
-	CREATURE_ID_ARCH_WRAITH = 795
-	CREATURE_ID_ARIBEL_THE_WHITE_ARMS = 796
-	CREATURE_ID_POISON_ARROW_FROG = 797
-	CREATURE_ID_MUSICAL_NOTADPOLE = 798
-	CREATURE_ID_NUOU = 799
-	CREATURE_ID_SALAMANDER = 800
-	CREATURE_ID_SEIASHIN = 801
-	CREATURE_ID_APPRENTICE_ANGEL = 802
-	CREATURE_ID_CUPID_INSPECTOR = 803
-	CREATURE_ID_FALLEN_ANGEL = 804
-	CREATURE_ID_RENAI_THE_OVER_MESHERA = 805
-	CREATURE_ID_PIXIE = 806
-	CREATURE_ID_GIGANTIC_FAIRY = 807
-	CREATURE_ID_PERI = 808
-	CREATURE_ID_YOUSEI_GORATH = 809
-	CREATURE_ID_FAIRY_THE_SHINING = 810
-	CREATURE_ID_LIZARD_MAGE = 811
-	CREATURE_ID_BLACK_LIZARDMAN = 812
-	CREATURE_ID_ASSASSIN_LIZARD = 813
-	CREATURE_ID_CLAYMORE_DRAGONEWT = 814
-	CREATURE_ID_BLIZZARD_LIZARD = 815
-	CREATURE_ID_DRACO_EQUES = 816
-	CREATURE_ID_BELPHAT_THE_COSMIC_SWORD = 817
-	CREATURE_ID_MAYU_SIBAYU = 818
-	CREATURE_ID_BLACK_WING = 819
-	CREATURE_ID_ALKONOST = 820
-	CREATURE_ID_DHWTY = 821
-	CREATURE_ID_MAILE_THE_MARIONETTE_SHAMAN = 822
-	CREATURE_ID_MAD_SCRATCHER = 823
-	CREATURE_ID_DEVOTEE_OF_OBLIVION = 824
-	CREATURE_ID_MEMORY_EMPTY_MAN = 825
-	CREATURE_ID_ZAP_MANDRAKE = 826
-	CREATURE_ID_CUCUMBER_HORSE = 827
-	CREATURE_ID_CUCUMBER_WARRIOR = 828
-	CREATURE_ID_NIN_NINZIN = 829
-	CREATURE_ID_VAMPKIN = 830
-	CREATURE_ID_DEMONS_COMMANDER = 831
-	CREATURE_ID_PERFORMAID_BLOODRESS = 832
-	CREATURE_ID_PERFORMAID_DESWEEPER = 833
-	CREATURE_ID_PERFORMAID_COCRUEL = 834
-	CREATURE_ID_PERFORMAID_PINCHIEF = 835
-	CREATURE_ID_PERFORMAID_BITCHIACK = 836
-	CREATURE_ID_TENTACLE_WORM = 837
-	CREATURE_ID_GRAND_LEECH = 838
-	CREATURE_ID_BIND_DEVIL_WORM = 839
-	CREATURE_ID_SEPA = 840
-	CREATURE_ID_SAIMEF_THE_DOGGOD = 841
-	CREATURE_ID_FASHIONABLE_KUNOICHI = 842
-	CREATURE_ID_GUNFISH = 843
-	CREATURE_ID_FLIGHT_FISH = 844
-	CREATURE_ID_ABYSSTAR = 845
-	CREATURE_ID_FLOWER_CORAL = 846
-	CREATURE_ID_MANTA_RAYARN = 847
-	CREATURE_ID_ORCINUS_ORCA = 848
-	CREATURE_ID_NINE_DART_GARFISH = 849
-	CREATURE_ID_SEA_FALLEN_ANGEL = 850
-	CREATURE_ID_SNIPE_HERMIT = 851
-	CREATURE_ID_AROMA_LOCARIS = 852
-	CREATURE_ID_KING_WOODLOUSE = 853
-	CREATURE_ID_DEATH_MANEKI = 854
-	CREATURE_ID_SHELL_KING_OF_VINDALE = 855
-	CREATURE_ID_DARK_DOME = 856
-	CREATURE_ID_MANYTIA_THE_ADVENTURE_MERCHANT = 857
-	CREATURE_ID_DARK_ELEA = 858
-	CREATURE_ID_LOTHRIAN_AGENT = 859
-	CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE = 860
-	CREATURE_ID_KILLER_NURSE = 861
-	CREATURE_ID_ZANAN_OLD_SOLDIER = 862
-	CREATURE_ID_ZANAN_ENHANCED_SOLDIER = 863
-	CREATURE_ID_GRASS_DANCER = 864
-	CREATURE_ID_GRASS_KILLER = 865
-	CREATURE_ID_STORMBLING = 866
-	CREATURE_ID_HELLSTLING = 867
-	CREATURE_ID_RIANNA_THE_DAYDREAMER = 868
-	CREATURE_ID_YEEK_HARD_WORKER = 869
-	CREATURE_ID_ARCHAYEEK = 870
-	CREATURE_ID_ARCHAYEEK_GUNNER = 871
-	CREATURE_ID_MASTER_ARCHAYEEK = 872
-	CREATURE_ID_LUNATYEEK = 873
-	CREATURE_ID_HEROYEEK = 874
-	CREATURE_ID_UNITDEAD_JOKER = 875
-	CREATURE_ID_UNITDEAD_JACK = 876
-	CREATURE_ID_UNITDEAD_QUEEN = 877
-	CREATURE_ID_UNITDEAD_KING = 878
-	CREATURE_ID_HALION_THE_EXTREMIST = 879
-	CREATURE_ID_LARGE_BIKE = 880
-	CREATURE_ID_XEREN_AUTO_TANK = 881
-	CREATURE_ID_RIDE_CLERIC = 882
-	CREATURE_ID_BUILDION = 883
-	CREATURE_ID_ZOIBO = 884
-	CREATURE_ID_KONIGS_KATZE = 885
-	CREATURE_ID_ALFRED_THE_CANGNAN_WIND = 886
-	CREATURE_ID_SKOGSRA = 887
-	CREATURE_ID_BANYAN_MONSTER = 888
-	CREATURE_ID_ERLKONIG = 889
-	CREATURE_ID_TREE_INCARNATION = 890
-	CREATURE_ID_DRAGON_TREE = 891
-	CREATURE_ID_CURSE_WOOD_KING = 892
-	CREATURE_ID_ZISILION_THE_MINE_KING = 893
-	CREATURE_ID_CHAOS_SEED = 894
-	CREATURE_ID_CHAOS_SERPENT = 895
-	CREATURE_ID_AJETALIO_THE_SEMINAR_LECTURER = 896
-	CREATURE_ID_CRESCE_THE_SEMINAR_LECTURER = 897
-	CREATURE_ID_IDURU_THE_SEMINAR_LECTURER = 898
-	CREATURE_ID_MITO_THE_SEMINAR_LECTURER = 899
-	CREATURE_ID_PART_TIME_WORKER_THE_RED_SWORD = 900
-	CREATURE_ID_NOVICE = 901
-	CREATURE_ID_KARATA_THE_SEMINAR_MASCOT = 902
-	CREATURE_ID_CATERPILLAR_SNIPER = 903
-	CREATURE_ID_NURSING_MOTH = 904
-	CREATURE_ID_MAGIC_HAWK_MOTH = 905
-	CREATURE_ID_BATTLE_HOPPER = 906
-	CREATURE_ID_ASSAULT_RED_DRAGONFLY = 907
-	CREATURE_ID_BLACK_HOPPER_X = 908
-	CREATURE_ID_TALON_SOLDIER = 909
-	CREATURE_ID_FIN_CROCODILE = 910
-	CREATURE_ID_TEZCATLIPOCA = 911
-	CREATURE_ID_KILLING_ANTEATER = 912
-	CREATURE_ID_ELECTRIC_HIPPOPOTAMUS = 913
-	CREATURE_ID_KNIGHTCEROS = 914
-	CREATURE_ID_GANESA = 915
-	CREATURE_ID_SIN_GORILLA = 916
-	CREATURE_ID_ROPER = 917
-	CREATURE_ID_LIVING_BLOOD = 918
-	CREATURE_ID_FORMLESS_SPAWN = 919
-	CREATURE_ID_DRAGON_BUBBLE = 920
-	CREATURE_ID_SILVER_FOX_BROTHER = 921
-	CREATURE_ID_SICKFULL_OLDER_BROTHER = 922
-	CREATURE_ID_ENTHUMESIS = 923
-	CREATURE_ID_ZANAN_ASSASSIN = 924
-	CREATURE_ID_ALSAPIA_THE_MURDERER_MASK = 925
-	CREATURE_ID_GILPHEM_THE_MAGIC_STEEL = 926
-	CREATURE_ID_OCHIMUSHA_ARMOR = 927
-	CREATURE_ID_MUSHA_SOUL = 928
-	CREATURE_ID_CRIMSON_ARMOR = 929
-	CREATURE_ID_SKELETON_MAGICIAN = 930
-	CREATURE_ID_MONEY_DECEASED = 931
-	CREATURE_ID_SKULL_BEAST = 932
-	CREATURE_ID_GASYADOKURO = 933
-	CREATURE_ID_THE_CHAOS_CHILD = 934
-	CREATURE_ID_NAGAREW_THE_OBLIVION_BEAST = 935
-	CREATURE_ID_MELUGAST_AO_I_THE_DIMENSION_DRIVER = 936
-	CREATURE_ID_ANGRY_BURGER = 937
-	CREATURE_ID_SUNRISE_THE_ARCHIPELAGO_DRAGON = 938
-	CREATURE_ID_DOROTHIA_STANDING_IN_THE_WETLAND = 939
-	CREATURE_ID_GRAVEED_THE_GRAVITY_VALLEY = 940
-	CREATURE_ID_BEILGENA_THE_ARTIFICIAL_DRAGON = 941
-	CREATURE_ID_TRICERATOPS = 942
-	CREATURE_ID_BRONTOSAURUS = 943
-	CREATURE_ID_DRICERADOPS = 944
-	CREATURE_ID_LAST_DANCER = 945
-	CREATURE_ID_LOYTER_THE_CRIMSON_OF_DOLE = 946
-	CREATURE_ID_BURT_THE_BURNING_ADVENTURER_SOUL = 947
-	CREATURE_ID_ALLEN_THE_RESEARCHER = 948
-	CREATURE_ID_BARTENDER2 = 949
-	CREATURE_ID_CLERK = 950
-	CREATURE_ID_GUILD_BROKER = 951
-	CREATURE_ID_FORMER_BANK_CLERK = 952
-	CREATURE_ID_BYSYMLHA_THE_AMBER_EYES = 953
-	CREATURE_ID_LION2 = 954
-	CREATURE_ID_WOLF = 955
-	CREATURE_ID_BOAR = 956
-	CREATURE_ID_RAT2 = 957
-	CREATURE_ID_FOX = 958
-	CREATURE_ID_RABBIT = 959
-	CREATURE_ID_VESTIGE = 960
-	CREATURE_ID_OBLIVION_BEAST = 961
-	CREATURE_ID_LITTLE_BOY = 962
-	CREATURE_ID_S_BOY = 963
-	CREATURE_ID_BUTLER = 964
-	CREATURE_ID_OLD_BUTLER = 965
-	CREATURE_ID_INCONEET = 966
-	CREATURE_ID_ARROW_DUCK = 967
-	CREATURE_ID_YOKOSHIMA_ENAGA = 968
-	CREATURE_ID_FOREST_ASSASSIN = 969
-	CREATURE_ID_FALLEN_BIRD = 970
-	CREATURE_ID_PEACE_MAKER = 971
-	CREATURE_ID_BISQUE_DOLL = 972
-	CREATURE_ID_UNIVERSE_INVADER = 973
-	CREATURE_ID_KOBOLINA = 974
-	CREATURE_ID_KOBOLD_BLUE = 975
-	CREATURE_ID_KOBOLD_SABER = 976
-	CREATURE_ID_LIGHTNING_KOBOLD = 977
-	CREATURE_ID_DUKE_KOBOLD = 978
-	CREATURE_ID_KOBOLD_BLASTER = 979
-	CREATURE_ID_CARTER_THE_SKILLED_FOOT = 980
-	CREATURE_ID_NANCY_THE_WANDERLUST = 981
-	CREATURE_ID_TONI_THE_ANGLER = 982
-	CREATURE_ID_PORC = 983
-	CREATURE_ID_BRAND_PORC = 984
-	CREATURE_ID_BLACK_ORC = 985
-	CREATURE_ID_URUK = 986
-	CREATURE_ID_BLACK_PORC = 987
-	CREATURE_ID_URUK_HAI = 988
-	CREATURE_ID_URUK_HIGHNESS = 989
+	#define global	CREATURE_ID_BUG	0 // Also doubles as RANDOM
+	#define global	CREATURE_ID_SHOPKEEPER	1
+	#define global	CREATURE_ID_ZEOME_THE_FALSE_PROPHET	2
+	#define global	CREATURE_ID_PUTIT	3
+	#define global	CREATURE_ID_RED_PUTIT	4
+	#define global	CREATURE_ID_WILD_RABBIT	5
+	#define global	CREATURE_ID_SNAIL	6
+	#define global	CREATURE_ID_FALLEN_SOLDIER	7
+	#define global	CREATURE_ID_MERCENARY	8
+	#define global	CREATURE_ID_BEGGAR	9
+	#define global	CREATURE_ID_WILD_SHEEP	10
+	#define global	CREATURE_ID_FLYING_FROG	11
+	#define global	CREATURE_ID_GANGSTER	12
+	#define global	CREATURE_ID_KOBOLD	13
+	#define global	CREATURE_ID_CENTIPEDE	14
+	#define global	CREATURE_ID_MUSHROOM	15
+	#define global	CREATURE_ID_CITIZEN	16
+	#define global	CREATURE_ID_ORC	17
+	#define global	CREATURE_ID_WARRIOR_OF_ELEA	18
+	#define global	CREATURE_ID_MANDRAKE	19
+	#define global	CREATURE_ID_ORC_WARRIOR	20
+	#define global	CREATURE_ID_ZOMBIE	21
+	#define global	CREATURE_ID_BEETLE	22
+	#define global	CREATURE_ID_ORPHE_THE_CHAOS_CHILD	23
+	#define global	CREATURE_ID_WIZARD_OF_ELEA	24
+	#define global	CREATURE_ID_GODA_THE_CAPTAIN_OF_ORC	25
+	#define global	CREATURE_ID_MAD_SCIENTIST	26
+	#define global	CREATURE_ID_ISCA_THE_FALLEN_ANGEL	27
+	#define global	CREATURE_ID_WHOM_DWELL_IN_THE_VANITY	28
+	#define global	CREATURE_ID_LOYTER_THE_CRIMSON_OF_ZANAN	29
+	#define global	CREATURE_ID_MICHES_THE_APPRENTICE	30
+	#define global	CREATURE_ID_SHENA_THE_DRAW	31
+	#define global	CREATURE_ID_DUNGEON_CLEANER	32
+	#define global	CREATURE_ID_LARNNEIRE_THE_LISTENER_OF_WIND	33
+	#define global	CREATURE_ID_LOMIAS_THE_MESSENGER_FROM_VINDALE	34
+	#define global	CREATURE_ID_TOWN_CHILD	35
+	#define global	CREATURE_ID_OLD_PERSON	36
+	#define global	CREATURE_ID_AT_SIGN	37
+	#define global	CREATURE_ID_ELDER	38
+	#define global	CREATURE_ID_CITIZEN2	39
+	#define global	CREATURE_ID_TRAINER	40
+	#define global	CREATURE_ID_WIZARD	41
+	#define global	CREATURE_ID_BAT	42
+	#define global	CREATURE_ID_VAMPIRE_BAT	43
+	#define global	CREATURE_ID_DRAGON_BAT	44
+	#define global	CREATURE_ID_FIRE_ENT	45
+	#define global	CREATURE_ID_ICE_ENT	46
+	#define global	CREATURE_ID_LICH	47
+	#define global	CREATURE_ID_MASTER_LICH	48
+	#define global	CREATURE_ID_DEMI_LICH	49
+	#define global	CREATURE_ID_HOUND	50
+	#define global	CREATURE_ID_FIRE_HOUND	51
+	#define global	CREATURE_ID_ICE_HOUND	52
+	#define global	CREATURE_ID_LIGHTNING_HOUND	53
+	#define global	CREATURE_ID_DARK_HOUND	54
+	#define global	CREATURE_ID_ILLUSION_HOUND	55
+	#define global	CREATURE_ID_NERVE_HOUND	56
+	#define global	CREATURE_ID_POISON_HOUND	57
+	#define global	CREATURE_ID_SOUND_HOUND	58
+	#define global	CREATURE_ID_NETHER_HOUND	59
+	#define global	CREATURE_ID_CHAOS_HOUND	60
+	#define global	CREATURE_ID_GIANT_SQUIRREL	61
+	#define global	CREATURE_ID_KILLER_SQUIRREL	62
+	#define global	CREATURE_ID_GRUDGE	63
+	#define global	CREATURE_ID_HUNGRY_DEMON	64
+	#define global	CREATURE_ID_ELECTRIC_CLOUD	65
+	#define global	CREATURE_ID_CHAOS_CLOUD	66
+	#define global	CREATURE_ID_FLOATING_EYE	67
+	#define global	CREATURE_ID_WYVERN	68
+	#define global	CREATURE_ID_INFORMER	69
+	#define global	CREATURE_ID_BARTENDER	70
+	#define global	CREATURE_ID_SAILOR	71
+	#define global	CREATURE_ID_CAPTAIN	72
+	#define global	CREATURE_ID_ARENA_MASTER	73
+	#define global	CREATURE_ID_HEALER	74
+	#define global	CREATURE_ID_WARRIOR	75
+	#define global	CREATURE_ID_GUARD	76
+	#define global	CREATURE_ID_GUARD2	77
+	#define global	CREATURE_ID_PUPPET	78
+	#define global	CREATURE_ID_STERSHA_THE_QUEEN_OF_PALMIA	79
+	#define global	CREATURE_ID_XABI_THE_KING_OF_PALMIA	80
+	#define global	CREATURE_ID_WASP	81
+	#define global	CREATURE_ID_RED_WASP	82
+	#define global	CREATURE_ID_CYCLOPS	83
+	#define global	CREATURE_ID_TITAN	84
+	#define global	CREATURE_ID_IMP	85
+	#define global	CREATURE_ID_NETHER_IMP	86
+	#define global	CREATURE_ID_CHAOS_IMP	87
+	#define global	CREATURE_ID_HAND_OF_THE_DEAD	88
+	#define global	CREATURE_ID_HAND_OF_THE_CHAOS	89
+	#define global	CREATURE_ID_HAND_OF_THE_MURDERER	90
+	#define global	CREATURE_ID_GHOST	91
+	#define global	CREATURE_ID_NYMPH	92
+	#define global	CREATURE_ID_MAN_EATER_FLOWER	93
+	#define global	CREATURE_ID_CHAOS_FLOWER	94
+	#define global	CREATURE_ID_COBRA	95
+	#define global	CREATURE_ID_KING_COBRA	96
+	#define global	CREATURE_ID_FIRE_DRAKE	97
+	#define global	CREATURE_ID_ICE_DRAKE	98
+	#define global	CREATURE_ID_LESSER_MUMMY	99
+	#define global	CREATURE_ID_MUMMY	100
+	#define global	CREATURE_ID_GREATER_MUMMY	101
+	#define global	CREATURE_ID_GOBLIN	102
+	#define global	CREATURE_ID_GOBLIN_WARRIOR	103
+	#define global	CREATURE_ID_GOBLIN_SHAMAN	104
+	#define global	CREATURE_ID_GOBLIN_WIZARD	105
+	#define global	CREATURE_ID_RED_BAPTIST	106
+	#define global	CREATURE_ID_BLUE_BAPTIST	107
+	#define global	CREATURE_ID_BROWN_BEAR	108
+	#define global	CREATURE_ID_GRIZZLY	109
+	#define global	CREATURE_ID_LIVING_ARMOR	110
+	#define global	CREATURE_ID_STEEL_MASS	111
+	#define global	CREATURE_ID_GOLDEN_ARMOR	112
+	#define global	CREATURE_ID_DEATH_ARMOR	113
+	#define global	CREATURE_ID_MEDUSA	114
+	#define global	CREATURE_ID_EURYALE	115
+	#define global	CREATURE_ID_STHENO	116
+	#define global	CREATURE_ID_CUPID_OF_LOVE	117
+	#define global	CREATURE_ID_LESSER_PHANTOM	118
+	#define global	CREATURE_ID_HARPY	119
+	#define global	CREATURE_ID_GREEN_DRAGON	120
+	#define global	CREATURE_ID_RED_DRAGON	121
+	#define global	CREATURE_ID_WHITE_DRAGON	122
+	#define global	CREATURE_ID_ELEC_DRAGON	123
+	#define global	CREATURE_ID_NETHER_DRAGON	124
+	#define global	CREATURE_ID_CHAOS_DRAGON	125
+	#define global	CREATURE_ID_CERBERUS	126
+	#define global	CREATURE_ID_SPIDER	127
+	#define global	CREATURE_ID_BLACK_WIDOW	128
+	#define global	CREATURE_ID_PARALYZER	129
+	#define global	CREATURE_ID_TARANTULA	130
+	#define global	CREATURE_ID_BLOOD_SPIDER	131
+	#define global	CREATURE_ID_WOODEN_GOLEM	132
+	#define global	CREATURE_ID_STONE_GOLEM	133
+	#define global	CREATURE_ID_STEEL_GOLEM	134
+	#define global	CREATURE_ID_GOLDEN_GOLEM	135
+	#define global	CREATURE_ID_MITHRIL_GOLEM	136
+	#define global	CREATURE_ID_SKY_GOLEM	137
+	#define global	CREATURE_ID_ADAMANTIUM_GOLEM	138
+	#define global	CREATURE_ID_SLAN_THE_SHADOW_OF_PALMIA	139
+	#define global	CREATURE_ID_VESDA_THE_FIRE_DRAGON	140
+	#define global	CREATURE_ID_ISSIZZLE_THE_DARK_ABOMINATION	141
+	#define global	CREATURE_ID_ERYSTIA_THE_SCHOLAR_OF_HISTORY	142
+	#define global	CREATURE_ID_WYNAN_THE_LORD_OF_THE_ANCIENT_CASTLE	143
+	#define global	CREATURE_ID_QURUIZA_THE_RED_EYED_DECEIVER	144
+	#define global	CREATURE_ID_CORGON_THE_STEEL_DRAGON	145
+	#define global	CREATURE_ID_KARAM_THE_LONELY_WOLF_OF_KARUNE	146
+	#define global	CREATURE_ID_FIRE_CRAB	147
+	#define global	CREATURE_ID_FIRE_CENTIPEDE	148
+	#define global	CREATURE_ID_CULTIST_OF_FIRE	149
+	#define global	CREATURE_ID_SKELETON_WARRIOR	150
+	#define global	CREATURE_ID_SKELETON_BERSERKER	151
+	#define global	CREATURE_ID_MISSIONARY_OF_DARKNESS	152
+	#define global	CREATURE_ID_PAWN	153
+	#define global	CREATURE_ID_ROOK	154
+	#define global	CREATURE_ID_BISHOP	155
+	#define global	CREATURE_ID_KNIGHT	156
+	#define global	CREATURE_ID_QUEEN	157
+	#define global	CREATURE_ID_KING	158
+	#define global	CREATURE_ID_MERCENARY_WARRIOR	159
+	#define global	CREATURE_ID_MERCENARY_ARCHER	160
+	#define global	CREATURE_ID_MERCENARY_WIZARD	161
+	#define global	CREATURE_ID_YERLES_MACHINE_INFANTRY	162
+	#define global	CREATURE_ID_ROCK_THROWER	163
+	#define global	CREATURE_ID_CAT	164
+	#define global	CREATURE_ID_DOG	165
+	#define global	CREATURE_ID_LITTLE_GIRL	166
+	#define global	CREATURE_ID_RAT	167
+	#define global	CREATURE_ID_HERMIT_CRAB	168
+	#define global	CREATURE_ID_SLIME	169
+	#define global	CREATURE_ID_PUBLIC_PERFORMER	170
+	#define global	CREATURE_ID_CITIZEN_OF_CYBER_DOME	171
+	#define global	CREATURE_ID_CITIZEN_OF_CYBER_DOME2	172
+	#define global	CREATURE_ID_SALES_PERSON	173
+	#define global	CREATURE_ID_PUNK	174
+	#define global	CREATURE_ID_FRISIA_THE_CAT_QUEEN	175
+	#define global	CREATURE_ID_YOUNGER_SISTER	176
+	#define global	CREATURE_ID_UTIMA_THE_DESTROYER_OF_XEREN	177
+	#define global	CREATURE_ID_AZZRSSIL_THE_IMPURE	178
+	#define global	CREATURE_ID_MASTER_OF_PET_ARENA	179
+	#define global	CREATURE_ID_TWINTAIL	180
+	#define global	CREATURE_ID_SILVER_WOLF	181
+	#define global	CREATURE_ID_NURSE	182
+	#define global	CREATURE_ID_RICH_PERSON	183
+	#define global	CREATURE_ID_NOBLE_CHILD	184
+	#define global	CREATURE_ID_TOURIST	185
+	#define global	CREATURE_ID_BLADE	186
+	#define global	CREATURE_ID_BLADE_ALPHA	187
+	#define global	CREATURE_ID_BLADE_OMEGA	188
+	#define global	CREATURE_ID_DEFORMED_EYE	189
+	#define global	CREATURE_ID_IMPURE_EYE	190
+	#define global	CREATURE_ID_WISP	191
+	#define global	CREATURE_ID_HEDGEHOG	192
+	#define global	CREATURE_ID_SHINING_HEDGEHOG	193
+	#define global	CREATURE_ID_ACID_SLIME	194
+	#define global	CREATURE_ID_CHICKEN	195
+	#define global	CREATURE_ID_PUMPKIN	196
+	#define global	CREATURE_ID_GREATER_PUMPKIN	197
+	#define global	CREATURE_ID_HALLOWEEN_NIGHTMARE	198
+	#define global	CREATURE_ID_STALKER	199
+	#define global	CREATURE_ID_SHADOW_STALKER	200
+	#define global	CREATURE_ID_PUPPY	201
+	#define global	CREATURE_ID_EBON_THE_FIRE_GIANT	202
+	#define global	CREATURE_ID_MOYER_THE_CROOKED	203
+	#define global	CREATURE_ID_PALMIAN_ELITE_SOLDIER	204
+	#define global	CREATURE_ID_MAID	205
+	#define global	CREATURE_ID_SISTER	206
+	#define global	CREATURE_ID_SSIL_THE_UNDEAD_WITCH	207
+	#define global	CREATURE_ID_GAROK_THE_LEGENDARY_SMITH	208
+	#define global	CREATURE_ID_MIRAL_THE_LEGENDARY_SMITH	209
+	#define global	CREATURE_ID_YOUNGER_CAT_SISTER	210
+	#define global	CREATURE_ID_YOUNG_LADY	211
+	#define global	CREATURE_ID_PUTIT_TANK	212
+	#define global	CREATURE_ID_GWEN_THE_INNOCENT	213
+	#define global	CREATURE_ID_THIEF	214
+	#define global	CREATURE_ID_ROBBER	215
+	#define global	CREATURE_ID_GREAT_RACE_OF_YITH	216
+	#define global	CREATURE_ID_MASTER_THIEF	217
+	#define global	CREATURE_ID_SHUB_NIGGURATH	218
+	#define global	CREATURE_ID_GAGU	219
+	#define global	CREATURE_ID_SPIRAL_KING	220
+	#define global	CREATURE_ID_LONELY_PAEL	221
+	#define global	CREATURE_ID_PAELS_MOM_LILY	222
+	#define global	CREATURE_ID_RAPHAEL_THE_WOMANIZER	223
+	#define global	CREATURE_ID_AINC_THE_NOVICE_KNIGHT	224
+	#define global	CREATURE_ID_POPPY_THE_LITTLE_DOG	225
+	#define global	CREATURE_ID_RILIAN_THE_DOG_LOVER	226
+	#define global	CREATURE_ID_TAM_THE_CAT_HATER	227
+	#define global	CREATURE_ID_CARBUNCLE	228
+	#define global	CREATURE_ID_LION	229
+	#define global	CREATURE_ID_CACY_THE_CAT_TAMER	230
+	#define global	CREATURE_ID_GILBERT_THE_COLONEL	231
+	#define global	CREATURE_ID_YERLES_SELF_PROPELLED_GUN	232
+	#define global	CREATURE_ID_JUERE_INFANTRY	233
+	#define global	CREATURE_ID_YERLES_ELITE_MACHINE_INFANTRY	234
+	#define global	CREATURE_ID_JUERE_SWORDMAN	235
+	#define global	CREATURE_ID_YEEK	236
+	#define global	CREATURE_ID_KAMIKAZE_YEEK	237
+	#define global	CREATURE_ID_YEEK_WARRIOR	238
+	#define global	CREATURE_ID_HOT_SPRING_MANIAC	239
+	#define global	CREATURE_ID_MASTER_YEEK	240
+	#define global	CREATURE_ID_YEEK_ARCHER	241
+	#define global	CREATURE_ID_RODLOB_THE_YEEK_CHIEF	242
+	#define global	CREATURE_ID_ARNORD_THE_INJURED_SOLDIER	243
+	#define global	CREATURE_ID_KAMIKAZE_SAMURAI	244
+	#define global	CREATURE_ID_BOMB_ROCK	245
+	#define global	CREATURE_ID_SILVER_CAT	246
+	#define global	CREATURE_ID_MIA_THE_CAT_FREAK	247
+	#define global	CREATURE_ID_TYRANNOSAURUS	248
+	#define global	CREATURE_ID_YOUNGER_SISTER2	249
+	#define global	CREATURE_ID_FAIRY	250
+	#define global	CREATURE_ID_TROLL	251
+	#define global	CREATURE_ID_RENTON_THE_SUFFERING_WIZARD	252
+	#define global	CREATURE_ID_MARKS_THE_GREAT_THIEF	253
+	#define global	CREATURE_ID_ANCIENT_COFFIN	254
+	#define global	CREATURE_ID_SCORPION	255
+	#define global	CREATURE_ID_KING_SCORPION	256
+	#define global	CREATURE_ID_TUWEN_THE_MASTER_OF_THE_PYRAMID	257
+	#define global	CREATURE_ID_IRON_MAIDEN	258
+	#define global	CREATURE_ID_NOEL_THE_BOMBER	259
+	#define global	CREATURE_ID_BLACK_CAT	260
+	#define global	CREATURE_ID_CUTE_FAIRY	261
+	#define global	CREATURE_ID_ANDROID	262
+	#define global	CREATURE_ID_BLACK_ANGEL	263
+	#define global	CREATURE_ID_EXILE	264
+	#define global	CREATURE_ID_GOLDEN_KNIGHT	265
+	#define global	CREATURE_ID_DEFENDER	266
+	#define global	CREATURE_ID_LAME_HORSE	267
+	#define global	CREATURE_ID_YOWYN_HORSE	268
+	#define global	CREATURE_ID_FARMER	269
+	#define global	CREATURE_ID_NUN	270
+	#define global	CREATURE_ID_ROGUE	271
+	#define global	CREATURE_ID_ARTIST	272
+	#define global	CREATURE_ID_MINER	273
+	#define global	CREATURE_ID_NOBLE	274
+	#define global	CREATURE_ID_NOYEL_HORSE	275
+	#define global	CREATURE_ID_WILD_HORSE	276
+	#define global	CREATURE_ID_THOROUGHBRED	277
+	#define global	CREATURE_ID_MUTANT	278
+	#define global	CREATURE_ID_ICOLLE_THE_BIOLOGIST	279
+	#define global	CREATURE_ID_BALZAK_THE_JANITOR	280
+	#define global	CREATURE_ID_LIZARD_MAN	281
+	#define global	CREATURE_ID_MINOTAUR	282
+	#define global	CREATURE_ID_SPORE_MUSHROOM	283
+	#define global	CREATURE_ID_CHAOS_MUSHROOM	284
+	#define global	CREATURE_ID_BLUE_BUBBLE	285
+	#define global	CREATURE_ID_BUBBLE	286
+	#define global	CREATURE_ID_MASS_MONSTER	287
+	#define global	CREATURE_ID_REVLUS_THE_MAGE_GUILDMASTER	288
+	#define global	CREATURE_ID_MAGE_GUILD_MEMBER	289
+	#define global	CREATURE_ID_LEXUS_THE_MAGE_WATCHMAN	290
+	#define global	CREATURE_ID_FRAY_THE_FIGHTER_GUILDMASTER	291
+	#define global	CREATURE_ID_SIN_THE_THIEF_GUILDMASTER	292
+	#define global	CREATURE_ID_THIEF_GUILD_MEMBER	293
+	#define global	CREATURE_ID_ABYSS_THE_THIEF_WATCHMAN	294
+	#define global	CREATURE_ID_FIGHTER_GUILD_MEMBER	295
+	#define global	CREATURE_ID_MINOTAUR_MAGICIAN	296
+	#define global	CREATURE_ID_DORIA_THE_FIGHTER_WATCHMAN	297
+	#define global	CREATURE_ID_MINOTAUR_BOXER	298
+	#define global	CREATURE_ID_MINOTAUR_KING	299
+	#define global	CREATURE_ID_UNGAGA_THE_MINOTAUR_KING	300
+	#define global	CREATURE_ID_CONERY_PALMIAN_MAJOR_GENERAL	301
+	#define global	CREATURE_ID_ROGUE_BOSS	302
+	#define global	CREATURE_ID_ROGUE_WARRIOR	303
+	#define global	CREATURE_ID_ROGUE_ARCHER	304
+	#define global	CREATURE_ID_ROGUE_WIZARD	305
+	#define global	CREATURE_ID_LULWY	306
+	#define global	CREATURE_ID_EXECUTIONER	307
+	#define global	CREATURE_ID_MESSENGER_OF_DEATH	308
+	#define global	CREATURE_ID_ASURA	309
+	#define global	CREATURE_ID_MITRA	310
+	#define global	CREATURE_ID_VARUNA	311
+	#define global	CREATURE_ID_HUNGRY_SEA_LION	312
+	#define global	CREATURE_ID_SUPER_HUNGRY_SEA_LION	313
+	#define global	CREATURE_ID_DEATH_GAZE	314
+	#define global	CREATURE_ID_CHAOS_EYE	315
+	#define global	CREATURE_ID_MAD_GAZE	316
+	#define global	CREATURE_ID_SILVER_EYED_WITCH	317
+	#define global	CREATURE_ID_BIG_DADDY	318
+	#define global	CREATURE_ID_LITTLE_SISTER	319
+	#define global	CREATURE_ID_CLEANER	320
+	#define global	CREATURE_ID_HARD_GAY	321
+	#define global	CREATURE_ID_STRANGE_SCIENTIST	322
+	#define global	CREATURE_ID_SHADE	323
+	#define global	CREATURE_ID_QUICKLING	324
+	#define global	CREATURE_ID_QUICKLING_ARCHER	325
+	#define global	CREATURE_ID_BARD	326
+	#define global	CREATURE_ID_CUBE	327
+	#define global	CREATURE_ID_PLATINA_BELL	328
+	#define global	CREATURE_ID_GOLD_BELL	329
+	#define global	CREATURE_ID_ALIEN	330
+	#define global	CREATURE_ID_EHEKATL	331
+	#define global	CREATURE_ID_STRAY_CAT	332
+	#define global	CREATURE_ID_GUILD_TRAINER	333
+	#define global	CREATURE_ID_MYSTERIOUS_PRODUCER	334
+	#define global	CREATURE_ID_PROSTITUTE	335
+	#define global	CREATURE_ID_GOD_INSIDE_EHEKATL	336
+	#define global	CREATURE_ID_PRISONER	337
+	#define global	CREATURE_ID_OPATOS	338
+	#define global	CREATURE_ID_KUMIROMI	339
+	#define global	CREATURE_ID_ZILLA	340
+	#define global	CREATURE_ID_MINE_DOG	341
+	#define global	CREATURE_ID_MANI	342
+	#define global	CREATURE_ID_USER	343
+	#define global	CREATURE_ID_MAMMOTH	344
+	#define global	CREATURE_ID_KANEDA_BIKE	345
+	#define global	CREATURE_ID_CUB	346
+	#define global	CREATURE_ID_JURE_FANATIC	347
+	#define global	CREATURE_ID_PART_TIME_WORKER	348
+	#define global	CREATURE_ID_HOLY_BEAST	349
+	#define global	CREATURE_ID_FESTIVAL_TOURIST	350
+	#define global	CREATURE_ID_THE_LEOPARD_WARRIOR	351
+	#define global	CREATURE_ID_SILVIA_THE_PRINCESS	352
+	#define global	CREATURE_ID_CARAVAN_MASTER	353
+	#define global	CREATURE_ID_GOOSE	354
+	#define global	CREATURE_ID_INSANE_KUMIROMI	355
+	#define global	CREATURE_ID_DEVASTATE_LULWY	356
+	#define global	CREATURE_ID_BUILDUP_OPATOS	357
+	#define global	CREATURE_ID_DEUS_EX_MANINA	358
+	#define global	CREATURE_ID_JURE	359
+	#define global	CREATURE_ID_BLESSED_JURE	360
+	#define global	CREATURE_ID_OLDER_SISTER	361
+	#define global	CREATURE_ID_RUDRAS	362
+	#define global	CREATURE_ID_OLDER_DOG_SISTER	363
+	#define global	CREATURE_ID_OLDER_SISTER2	364
+	#define global	CREATURE_ID_H_SISTER	365
+	#define global	CREATURE_ID_HEINRICH_THE_ARMORED_GENERAL	366
+	#define global	CREATURE_ID_ZERNARD_THE_CAPABLE_MERCENARY	367
+	#define global	CREATURE_ID_EBARTH_THE_PIRATE_BOSS	368
+	#define global	CREATURE_ID_DOG_COP	369
+	#define global	CREATURE_ID_MILIS_CAPTAIN_OF_THE_SPECIAL_FORCES	370
+	#define global	CREATURE_ID_SECURITY_OFFICER_ORVILLE	371
+	#define global	CREATURE_ID_MILITARY_PUTIT	372
+	#define global	CREATURE_ID_NAIVE_KYLE	373
+	#define global	CREATURE_ID_MEFAN_THE_BARD	374
+	#define global	CREATURE_ID_JUERE_BERSERKER	375
+	#define global	CREATURE_ID_EULDERNA_SUMMONKNIGHT	376
+	#define global	CREATURE_ID_ULZASSIL_THE_DEAD_EMPEROR	377
+	#define global	CREATURE_ID_YERLESWOOD_THE_SAVAGE_MACHINE	378
+	#define global	CREATURE_ID_SIVA_THE_DESTRUCTION	379
+	#define global	CREATURE_ID_ORPHE_THE_CHAOS_FOLLOWER	380
+	#define global	CREATURE_ID_CAIM_THE_MAD_RICH	381
+	#define global	CREATURE_ID_SNAIL_THE_ANDROID_RIDER	382
+	#define global	CREATURE_ID_RECONCILED_CLEANER	383
+	#define global	CREATURE_ID_LITYOU	384
+	#define global	CREATURE_ID_MURDER_KNIGHT	385
+	#define global	CREATURE_ID_GIRAFFE	386
+	#define global	CREATURE_ID_KIRIN	387
+	#define global	CREATURE_ID_BAMBOO_SPROUT	388
+	#define global	CREATURE_ID_THE_KING_IN_YELLOW	389
+	#define global	CREATURE_ID_NYARLATHOTEP	390
+	#define global	CREATURE_ID_TSATHOGGUA	391
+	#define global	CREATURE_ID_BOUNTY_HUNTER	392
+	#define global	CREATURE_ID_GRAND_DRAGON	393
+	#define global	CREATURE_ID_ATLACH_NACHA	394
+	#define global	CREATURE_ID_TYRANNOBREAKER	395
+	#define global	CREATURE_ID_VORPAL_BUNNY	396
+	#define global	CREATURE_ID_VOL_PHANTOM	397
+	#define global	CREATURE_ID_CUPID_OF_DEATH	398
+	#define global	CREATURE_ID_BLACK_BAPTIST	399
+	#define global	CREATURE_ID_CAMOUFLAGED_IMP	400
+	#define global	CREATURE_ID_VIASHIVAN	401
+	#define global	CREATURE_ID_OUROBOROS	402
+	#define global	CREATURE_ID_GRAND_ENT	403
+	#define global	CREATURE_ID_KABUTO	404
+	#define global	CREATURE_ID_MOLOCH	405
+	#define global	CREATURE_ID_ATLAS	406
+	#define global	CREATURE_ID_MAIDSANN	407
+	#define global	CREATURE_ID_LUNE_THE_MAID_CHIEF	408
+	#define global	CREATURE_ID_ELECTRIC_SHEEP	409
+	#define global	CREATURE_ID_METAMORPHOSE	410
+	#define global	CREATURE_ID_SECURITY_SYSTEM	411
+	#define global	CREATURE_ID_CARNAGE_RAT	412
+	#define global	CREATURE_ID_BANKRUPT_GUO	413
+	#define global	CREATURE_ID_LEND_THE_TAKER	414
+	#define global	CREATURE_ID_QUANTUM_CREATURE	415
+	#define global	CREATURE_ID_DRAGON_ZOMBIE	416
+	#define global	CREATURE_ID_ANUBIS_THE_MASTER_OF_DEATH	417
+	#define global	CREATURE_ID_METAL_VESDA_THE_FIRE_MACHINE	418
+	#define global	CREATURE_ID_EXOSSIL_THE_CHAOS_WING	419
+	#define global	CREATURE_ID_YERLES_COMBAT_PLANE	420
+	#define global	CREATURE_ID_WING_SNAIL	421
+	#define global	CREATURE_ID_HEQET	422
+	#define global	CREATURE_ID_DARK_KOBOLD	423
+	#define global	CREATURE_ID_TITANIA	424
+	#define global	CREATURE_ID_DRAGONEWT	425
+	#define global	CREATURE_ID_MAN_EATER_CRAB	426
+	#define global	CREATURE_ID_OLOG	427
+	#define global	CREATURE_ID_GIGA_BOMB_ROCK	428
+	#define global	CREATURE_ID_DRAGONS_PET_HARPY	429
+	#define global	CREATURE_ID_GOLD_SHEEP	430
+	#define global	CREATURE_ID_COCKATRICE	431
+	#define global	CREATURE_ID_SUZAKU	432
+	#define global	CREATURE_ID_LEUCOCHLORIDIUM	433
+	#define global	CREATURE_ID_FIVE_HEAD_GOD	434
+	#define global	CREATURE_ID_MESHERA_PLANT	435
+	#define global	CREATURE_ID_H_SISTER2	436
+	#define global	CREATURE_ID_MILOS_OF_THE_FORGOTTEN_WORLD	437
+	#define global	CREATURE_ID_CARLA_OF_THE_FORGOTTEN_WORLD	438
+	#define global	CREATURE_ID_GOKIBURI	439
+	#define global	CREATURE_ID_CITIZEN4	440
+	#define global	CREATURE_ID_CITIZEN3	441
+	#define global	CREATURE_ID_PIRATE	442
+	#define global	CREATURE_ID_FISHERMAN	443
+	#define global	CREATURE_ID_MIMIC	444
+	#define global	CREATURE_ID_RICH_PERSON_STOKE	445
+	#define global	CREATURE_ID_BIG_SISTER	446
+	#define global	CREATURE_ID_CAT_ZOMBIE	447
+	#define global	CREATURE_ID_CURSED_COFFIN	448
+	#define global	CREATURE_ID_ARMA_THE_TOUR_GUIDE	449
+	#define global	CREATURE_ID_FIRE_DRAGON_CHILD	450
+	#define global	CREATURE_ID_RED_MUSHROOM	451
+	#define global	CREATURE_ID_MESHERA_BETA	452
+	#define global	CREATURE_ID_MESHERA_GAMMA	453
+	#define global	CREATURE_ID_MESHERA_DELTA	454
+	#define global	CREATURE_ID_VAMPIRE	455
+	#define global	CREATURE_ID_CARMILLA	456
+	#define global	CREATURE_ID_CHUPACABURA	457
+	#define global	CREATURE_ID_MESHERA_ALPHA_THE_DEFORMED_ANGEL	458
+	#define global	CREATURE_ID_LEAD_DEVELOPER_DR_GAVELA	459
+	#define global	CREATURE_ID_BELL_OF_TERMINATION	460
+	#define global	CREATURE_ID_WAR_SPIRIT	461
+	#define global	CREATURE_ID_MAGIC_SPIRIT	462
+	#define global	CREATURE_ID_PUDDING_SPIRIT	463
+	#define global	CREATURE_ID_CANDLE_WISP	464
+	#define global	CREATURE_ID_INFECTED_YERLES_SOLDIER	465
+	#define global	CREATURE_ID_GAMBLER	466
+	#define global	CREATURE_ID_YERLES_LATEST_OUTFIT_SOLDIER	467
+	#define global	CREATURE_ID_SWIMMER	468
+	#define global	CREATURE_ID_BLADE_KING	469
+	#define global	CREATURE_ID_NINJA	470
+	#define global	CREATURE_ID_STAFF	471
+	#define global	CREATURE_ID_REFUGEE	472
+	#define global	CREATURE_ID_TRAVELER	473
+	#define global	CREATURE_ID_SIRAHA_THE_WHITE_CLOTH	474
+	#define global	CREATURE_ID_KURON_THE_BLACK_CLOTH	475
+	#define global	CREATURE_ID_ALCHEMIST_NAPLUS	476
+	#define global	CREATURE_ID_GETUEI_THE_NINJA_MASTER	477
+	#define global	CREATURE_ID_EILA_THE_FUGITIVE_KUNOICHI	478
+	#define global	CREATURE_ID_RED_NINJA	479
+	#define global	CREATURE_ID_SHOEBILL	480
+	#define global	CREATURE_ID_HYPER_YACATECT	481
+	#define global	CREATURE_ID_YACATECT	482
+	#define global	CREATURE_ID_THE_ELEMENT	483
+	#define global	CREATURE_ID_ITZPALT	484
+	#define global	CREATURE_ID_WHITE_YOUNG_LADY	485
+	#define global	CREATURE_ID_ABYSS_DWELLER	486
+	#define global	CREATURE_ID_GUN_SPIRIT	487
+	#define global	CREATURE_ID_SKELETON_HERO	488
+	#define global	CREATURE_ID_ABYSS_ANIMAL	489
+	#define global	CREATURE_ID_MIZUKI_THE_ABYSS_PRINCESS	490
+	#define global	CREATURE_ID_LEIKI	491
+	#define global	CREATURE_ID_PASCAL	492
+	#define global	CREATURE_ID_LAZY_OLDER_SISTER	493
+	#define global	CREATURE_ID_M_GIRL	494
+	#define global	CREATURE_ID_NEW_CITIZEN	495
+	#define global	CREATURE_ID_FLYING_LEECH	496
+	#define global	CREATURE_ID_SILENT_LEECH	497
+	#define global	CREATURE_ID_GRIEF_SHIELD	498
+	#define global	CREATURE_ID_GWEN_THE_PITILESS	499
+	#define global	CREATURE_ID_WRANG_WRANG	500
+	#define global	CREATURE_ID_XEREN_ELECTRIC_TANK	501
+	#define global	CREATURE_ID_XEREN_SATELLITE_UNIT	502
+	#define global	CREATURE_ID_CHAOS_SPIRIT	503
+	#define global	CREATURE_ID_CHAOS_UNICORN_KING_OF_CHAOS	504
+	#define global	CREATURE_ID_VALIANT_WYVERN	505
+	#define global	CREATURE_ID_ORION_KILLER	506
+	#define global	CREATURE_ID_BLACK_HORNET	507
+	#define global	CREATURE_ID_MOBILE_COMMUNICATION_EQUIPMENT	508
+	#define global	CREATURE_ID_DEMON	509
+	#define global	CREATURE_ID_DEMONS_LORD	510
+	#define global	CREATURE_ID_DEMONS_RULER	511
+	#define global	CREATURE_ID_ELEMENT_DRAGON	512
+	#define global	CREATURE_ID_OLD_HUMANKIND	513
+	#define global	CREATURE_ID_OLD_HUMANKIND2	514
+	#define global	CREATURE_ID_OLD_HUMANKIND3	515
+	#define global	CREATURE_ID_ETHER_GENERATOR	516
+	#define global	CREATURE_ID_ESTORK_THE_DOGGOD	517
+	#define global	CREATURE_ID_PART_TIME_WORKER2	518
+	#define global	CREATURE_ID_NAZUNA_THE_INSTRUCTOR	519
+	#define global	CREATURE_ID_GIANT_EATER_FLOWER	520
+	#define global	CREATURE_ID_SEI_RYU	521
+	#define global	CREATURE_ID_CHILD_WEL	522
+	#define global	CREATURE_ID_MURDER_COCKROACH	523
+	#define global	CREATURE_ID_KING_COCKROACH	524
+	#define global	CREATURE_ID_PRO_JET	525
+	#define global	CREATURE_ID_BLACK_GAUNTLET_LEOLD	526
+	#define global	CREATURE_ID_STRIKE_EAGLE	527
+	#define global	CREATURE_ID_POWER_EAGLE	528
+	#define global	CREATURE_ID_SHADOW	529
+	#define global	CREATURE_ID_GRANDMASTER	530
+	#define global	CREATURE_ID_DRAGON_CENTIPEDE	531
+	#define global	CREATURE_ID_STAG_GOD	532
+	#define global	CREATURE_ID_YERLES_CYBORG_SOLDIER	533
+	#define global	CREATURE_ID_AILE_THE_ATTENDANT	534
+	#define global	CREATURE_ID_GRYFFON_CHILD	535
+	#define global	CREATURE_ID_BLACK_GRYFFON	536
+	#define global	CREATURE_ID_MIRAGE_GRYPHON	537
+	#define global	CREATURE_ID_FOX_BROTHER	538
+	#define global	CREATURE_ID_CLUSTER_BOMB_ROCK	539
+	#define global	CREATURE_ID_VISHNU	540
+	#define global	CREATURE_ID_OMEGA_HERAKLES	541
+	#define global	CREATURE_ID_ARKTOUROS	542
+	#define global	CREATURE_ID_JAGUAR_WARRIOR	543
+	#define global	CREATURE_ID_BEHEMOTH	544
+	#define global	CREATURE_ID_HOLDGAZER	545
+	#define global	CREATURE_ID_BLOOD_GOLEM	546
+	#define global	CREATURE_ID_BIRD_ARCHER	547
+	#define global	CREATURE_ID_GARUDA	548
+	#define global	CREATURE_ID_ANCIENT_LICH	549
+	#define global	CREATURE_ID_DIABOLIC_CLOWN	550
+	#define global	CREATURE_ID_ULFHEOINN	551
+	#define global	CREATURE_ID_ULTIMATE_GOLEM	552
+	#define global	CREATURE_ID_GRAVITY_CANNON	553
+	#define global	CREATURE_ID_HIGH_MAGICIAN	554
+	#define global	CREATURE_ID_NEMAIN	555
+	#define global	CREATURE_ID_HEL	556
+	#define global	CREATURE_ID_OSIRIS	557
+	#define global	CREATURE_ID_CAMAZOTZ	558
+	#define global	CREATURE_ID_QUICK_REDCAP	559
+	#define global	CREATURE_ID_SUGAAR	560
+	#define global	CREATURE_ID_EYE_OF_BALOR	561
+	#define global	CREATURE_ID_KALI	562
+	#define global	CREATURE_ID_UNGOLIANT	563
+	#define global	CREATURE_ID_SUPER_GRANDMASTER	564
+	#define global	CREATURE_ID_MUCENCAB	565
+	#define global	CREATURE_ID_SUPER_DRAGONEWT	566
+	#define global	CREATURE_ID_SHOGGOTH	567
+	#define global	CREATURE_ID_CHAOS_MIMIC	568
+	#define global	CREATURE_ID_GALACTICA_PHANTOM	569
+	#define global	CREATURE_ID_SHEEPDOG	570
+	#define global	CREATURE_ID_PADANGU	571
+	#define global	CREATURE_ID_ARKHAI	572
+	#define global	CREATURE_ID_DOMINION	573
+	#define global	CREATURE_ID_SERAPH	574
+	#define global	CREATURE_ID_RATIN_THE_FIGHTER_REPORTER	575
+	#define global	CREATURE_ID_NAGA_THE_THIEF_REPORTER	576
+	#define global	CREATURE_ID_LENAS_THE_MAGE_REPORTER	577
+	#define global	CREATURE_ID_NECRO_DOLL	578
+	#define global	CREATURE_ID_DEAD_EYES_BLOOD_DRAGON	579
+	#define global	CREATURE_ID_CURSE_DRAKE	580
+	#define global	CREATURE_ID_MOAI	581
+	#define global	CREATURE_ID_BLUE_MOAI	582
+	#define global	CREATURE_ID_HYPOMYCES	583
+	#define global	CREATURE_ID_DEMONS_SOUL	584
+	#define global	CREATURE_ID_AMBYSTOMA	585
+	#define global	CREATURE_ID_EK_CHUAH	586
+	#define global	CREATURE_ID_MISHAGUZI	587
+	#define global	CREATURE_ID_SAGE_OF_ELEA	588
+	#define global	CREATURE_ID_KNIGHT_OF_ELEA	589
+	#define global	CREATURE_ID_MEGA_MOLE	590
+	#define global	CREATURE_ID_TALPIDAE	591
+	#define global	CREATURE_ID_RAGNAROCK	592
+	#define global	CREATURE_ID_BELL_OF_EMERGENCY	593
+	#define global	CREATURE_ID_BADGER	594
+	#define global	CREATURE_ID_CAPYBARA	595
+	#define global	CREATURE_ID_INDIGO_LOBSTER	596
+	#define global	CREATURE_ID_THOUSAND_HEDGEHOG	597
+	#define global	CREATURE_ID_HELL_NEEDLE_HEDGEHOG	598
+	#define global	CREATURE_ID_BERSERK_DRAGON	599
+	#define global	CREATURE_ID_MIST_DRAGON	600
+	#define global	CREATURE_ID_YERLESWOOD_TYPE_M	601
+	#define global	CREATURE_ID_BOMB_THROWER	602
+	#define global	CREATURE_ID_YERLES_MORTAR	603
+	#define global	CREATURE_ID_MRA	604
+	#define global	CREATURE_ID_NORNE_THE_GUIDE	605
+	#define global	CREATURE_ID_MELUGAST_TYPE0_THE_DIMENSION_DRIVER	606
+	#define global	CREATURE_ID_FLASH_WYVERN	607
+	#define global	CREATURE_ID_SPAGHETTI_MONSTER	608
+	#define global	CREATURE_ID_TREE_SPARROW	609
+	#define global	CREATURE_ID_DELPHYNE	610
+	#define global	CREATURE_ID_TELCHINES	611
+	#define global	CREATURE_ID_SPIPHA_THE_DRAGON_HUNTER	612
+	#define global	CREATURE_ID_HELL_CRAB	613
+	#define global	CREATURE_ID_JUERE_DEMON_SOLDIER	614
+	#define global	CREATURE_ID_GI_ANT	615
+	#define global	CREATURE_ID_SAMURAI_ANT	616
+	#define global	CREATURE_ID_QUEEN_GI_ANT	617
+	#define global	CREATURE_ID_KESALANPATHARAN	618
+	#define global	CREATURE_ID_BLACK_ANGEL_HAIR	619
+	#define global	CREATURE_ID_SHOPKEEPER_CROW	620
+	#define global	CREATURE_ID_ALICE_THE_BIG_ANT	621
+	#define global	CREATURE_ID_MARY_THE_INSECT_MASTER	622
+	#define global	CREATURE_ID_SCHOLAR	623
+	#define global	CREATURE_ID_SOPHIA_THE_WISE	624
+	#define global	CREATURE_ID_TRUFFE_CHOCOLATE_WISP	625
+	#define global	CREATURE_ID_TEACHER	626
+	#define global	CREATURE_ID_CHESTNUT_GIANT	627
+	#define global	CREATURE_ID_RAIZEL_THE_OLD_WIZARD	628
+	#define global	CREATURE_ID_NEIN_THE_FLYING_WITCH	629
+	#define global	CREATURE_ID_DARK_KOALA	630
+	#define global	CREATURE_ID_CHILD_BOAR	631
+	#define global	CREATURE_ID_BIG_BOAR	632
+	#define global	CREATURE_ID_DESTROY_BOAR	633
+	#define global	CREATURE_ID_SAND_WORM	634
+	#define global	CREATURE_ID_ROCK_WORM	635
+	#define global	CREATURE_ID_HELL_FIRE_FLOWER	636
+	#define global	CREATURE_ID_AMURDAD	637
+	#define global	CREATURE_ID_LAVA_GOLEM	638
+	#define global	CREATURE_ID_ARASIEL	639
+	#define global	CREATURE_ID_SINAHA	640
+	#define global	CREATURE_ID_JIN_THE_MACHINE_REBEL	641
+	#define global	CREATURE_ID_HAMSTER	642
+	#define global	CREATURE_ID_SHOOTING_HAMSTER	643
+	#define global	CREATURE_ID_DEATH_HAMSTER	644
+	#define global	CREATURE_ID_KIWI	645
+	#define global	CREATURE_ID_GOLD_KIWI	646
+	#define global	CREATURE_ID_HILL_CITIZEN	647
+	#define global	CREATURE_ID_HILL_CHILD	648
+	#define global	CREATURE_ID_SHOPKEEPER2	649
+	#define global	CREATURE_ID_DAIN_THE_ELDER_OF_HILL	650
+	#define global	CREATURE_ID_THALIA_THE_STAR_VIEWER	651
+	#define global	CREATURE_ID_IRMA_THE_INDOMITABLE_SMITH	652
+	#define global	CREATURE_ID_WISE_HILL_CITIZEN	653
+	#define global	CREATURE_ID_MARKA_THE_SILVER_BEAR	654
+	#define global	CREATURE_ID_CHAOS_HUNTER	655
+	#define global	CREATURE_ID_CHAOS_PALADIN	656
+	#define global	CREATURE_ID_CHAOS_SHAMAN	657
+	#define global	CREATURE_ID_YELLOW_FIRE_DRAGON	658
+	#define global	CREATURE_ID_VANSESDA_THE_ANCIENT_FIRE	659
+	#define global	CREATURE_ID_ESCAPEGOAT	660
+	#define global	CREATURE_ID_HAND_OF_THE_GOD	661
+	#define global	CREATURE_ID_PHANTOM_OF_END	662
+	#define global	CREATURE_ID_AIKAGE_THE_SHINOBI_MASK	663
+	#define global	CREATURE_ID_YERLESWOOD_NEO	664
+	#define global	CREATURE_ID_ROVID	665
+	#define global	CREATURE_ID_WEREWOLF	666
+	#define global	CREATURE_ID_COMMAND_WOLF	667
+	#define global	CREATURE_ID_GARZIEM	668
+	#define global	CREATURE_ID_WORKER_02	669
+	#define global	CREATURE_ID_WORKER_01	670
+	#define global	CREATURE_ID_R_CLEANER	671
+	#define global	CREATURE_ID_NINE_HEAD_DRAGON_THE_ABYSS	672
+	#define global	CREATURE_ID_FOX_SPIRIT	673
+	#define global	CREATURE_ID_SUNBARARIAN	674
+	#define global	CREATURE_ID_KARAVIKA	675
+	#define global	CREATURE_ID_URCAGUARY	676
+	#define global	CREATURE_ID_G_CUBE	677
+	#define global	CREATURE_ID_BLACK_BOX	678
+	#define global	CREATURE_ID_BASATAN	679
+	#define global	CREATURE_ID_CTHUGHA	680
+	#define global	CREATURE_ID_YOMAGNTHO	681
+	#define global	CREATURE_ID_SMALL_STONE_GOLEM	682
+	#define global	CREATURE_ID_SMALL_WOODEN_GOLEM	683
+	#define global	CREATURE_ID_KUROYA_THE_LOOKING_UNIVERSE	684
+	#define global	CREATURE_ID_FRON_THE_TOUR_PLANNER	685
+	#define global	CREATURE_ID_REGULUS_THE_ALTERED	686
+	#define global	CREATURE_ID_NERES_THE_AMNESIAC	687
+	#define global	CREATURE_ID_RYUTYE_THE_AMNESIAC	688
+	#define global	CREATURE_ID_ZANAN_HEAVILY_ARMED	689
+	#define global	CREATURE_ID_BOYCIANA	690
+	#define global	CREATURE_ID_NECRO_LANCER	691
+	#define global	CREATURE_ID_NECRO_DANCER	692
+	#define global	CREATURE_ID_CRYING_WITCH	693
+	#define global	CREATURE_ID_SHINING_SILVER_WOLF	694
+	#define global	CREATURE_ID_BLAZE_LION	695
+	#define global	CREATURE_ID_DETECTIVE	696
+	#define global	CREATURE_ID_WEREWOLF_DETECTIVE	697
+	#define global	CREATURE_ID_BUTTERSPY	698
+	#define global	CREATURE_ID_MOONLIT_PAPILLON	699
+	#define global	CREATURE_ID_EFFECT_BUTTERFLY	700
+	#define global	CREATURE_ID_SLEEPING_GIANT	701
+	#define global	CREATURE_ID_TESTER	702
+	#define global	CREATURE_ID_WANGNIN	703
+	#define global	CREATURE_ID_NIGHTMARE_SHARK	704
+	#define global	CREATURE_ID_RAGING_SHARK	705
+	#define global	CREATURE_ID_CAPTAIN_SHARK	706
+	#define global	CREATURE_ID_JELLYFISH_KRAKEN	707
+	#define global	CREATURE_ID_STEEL_MINOTAUR	708
+	#define global	CREATURE_ID_SPACE_HORNED_OWL	709
+	#define global	CREATURE_ID_LAZASYE_THE_DESTROY	710
+	#define global	CREATURE_ID_MELGET_THE_INFORMER	711
+	#define global	CREATURE_ID_YO_SUZUME	712
+	#define global	CREATURE_ID_SPACE_ZILLA	713
+	#define global	CREATURE_ID_STEEL_ARMOR_SPIDER	714
+	#define global	CREATURE_ID_GOLD_ARMOR_ANT	715
+	#define global	CREATURE_ID_BATTLE_ALIEN	716
+	#define global	CREATURE_ID_SMASH_OGRE	717
+	#define global	CREATURE_ID_SLASH_OGRE	718
+	#define global	CREATURE_ID_SHINE_OGRE	719
+	#define global	CREATURE_ID_DHOLE	720
+	#define global	CREATURE_ID_CLOUD_BEAST	721
+	#define global	CREATURE_ID_METAL_ZILLA	722
+	#define global	CREATURE_ID_HALLOWEEN_CHILDREN	723
+	#define global	CREATURE_ID_HALLOWEEN_CHILDREN2	724
+	#define global	CREATURE_ID_MUSCLE_GOLEM	725
+	#define global	CREATURE_ID_MAD_MUD_GOLEM	726
+	#define global	CREATURE_ID_KIKKAS_PYTHONIDAE	727
+	#define global	CREATURE_ID_MEIDA	728
+	#define global	CREATURE_ID_OYAUKAMUI	729
+	#define global	CREATURE_ID_NOT_STRAY_SHEEP	730
+	#define global	CREATURE_ID_ASTRAY_SHEEP	731
+	#define global	CREATURE_ID_NIGHTMARE_SHEEP	732
+	#define global	CREATURE_ID_RUBY_CARBUNCLE	733
+	#define global	CREATURE_ID_MANTICORE	734
+	#define global	CREATURE_ID_GLARE_TIGER	735
+	#define global	CREATURE_ID_WENKAMUI	736
+	#define global	CREATURE_ID_CONDUCTOR_KOALA	737
+	#define global	CREATURE_ID_DOBIEL	738
+	#define global	CREATURE_ID_MAGIC_ARCHER	739
+	#define global	CREATURE_ID_PALACE_MAGICIAN	740
+	#define global	CREATURE_ID_WANDERING_PENGUIN	741
+	#define global	CREATURE_ID_LAST_RAVEN	742
+	#define global	CREATURE_ID_INQTUAL_THE_REVENGE	743
+	#define global	CREATURE_ID_LEGENDARY_WOLF	744
+	#define global	CREATURE_ID_ZOMBIE_QUEEN	745
+	#define global	CREATURE_ID_REQUIEM	746
+	#define global	CREATURE_ID_GOTHIC	747
+	#define global	CREATURE_ID_ZOMBIE_GIRL	748
+	#define global	CREATURE_ID_BIG_SEA_HARE	749
+	#define global	CREATURE_ID_MAGICARGOT	750
+	#define global	CREATURE_ID_ACID_SEA_HARE	751
+	#define global	CREATURE_ID_KAMIKAZE_MAIMAI	752
+	#define global	CREATURE_ID_FORTRESSNAIL	753
+	#define global	CREATURE_ID_DARKNESSLUG	754
+	#define global	CREATURE_ID_ROATONIS_THE_INFECTIONS	755
+	#define global	CREATURE_ID_SHURAIDA_THE_EXPERT_MERC	756
+	#define global	CREATURE_ID_MIKSCXIFONA	757
+	#define global	CREATURE_ID_PROFANITY_PRIEST	758
+	#define global	CREATURE_ID_GRIM_REAPER	759
+	#define global	CREATURE_ID_CLAYMOAI	760
+	#define global	CREATURE_ID_MANA_MONOLITH	761
+	#define global	CREATURE_ID_MOAI_CORE	762
+	#define global	CREATURE_ID_CLOUDRAGON	763
+	#define global	CREATURE_ID_ARAONIBI	764
+	#define global	CREATURE_ID_SPIRIT_OF_BREAD	765
+	#define global	CREATURE_ID_KENTAURS	766
+	#define global	CREATURE_ID_GUNNTAURS	767
+	#define global	CREATURE_ID_BALLISTALLION	768
+	#define global	CREATURE_ID_KENTAURS_KNIGHT	769
+	#define global	CREATURE_ID_DARK_HORSE	770
+	#define global	CREATURE_ID_MASTALLION	771
+	#define global	CREATURE_ID_CATTLE	772
+	#define global	CREATURE_ID_BLUE_BULL	773
+	#define global	CREATURE_ID_CHIHYU	774
+	#define global	CREATURE_ID_ASTERIOS	775
+	#define global	CREATURE_ID_HAM_TAIROU	776
+	#define global	CREATURE_ID_DISASTER	777
+	#define global	CREATURE_ID_KYUSO	778
+	#define global	CREATURE_ID_MOMOTUKA	779
+	#define global	CREATURE_ID_COM_BAT	780
+	#define global	CREATURE_ID_KAPAPU_KAMUI	781
+	#define global	CREATURE_ID_DARK_RAIDER	782
+	#define global	CREATURE_ID_TURTLE_RABBIT	783
+	#define global	CREATURE_ID_TERRORISM_SQUIRREL	784
+	#define global	CREATURE_ID_BUNNY_GHOUL	785
+	#define global	CREATURE_ID_HAKUTOSHIN	786
+	#define global	CREATURE_ID_IRIS	787
+	#define global	CREATURE_ID_DREAD_RABBIT	788
+	#define global	CREATURE_ID_EGELVEIL_THE_BIND	789
+	#define global	CREATURE_ID_BETHEL_THE_WHITE_HAWK	790
+	#define global	CREATURE_ID_MELUGAST_TYPEM	791
+	#define global	CREATURE_ID_SYLPH	792
+	#define global	CREATURE_ID_13TH_STEP_GHOST	793
+	#define global	CREATURE_ID_LEGION_MAGE	794
+	#define global	CREATURE_ID_ARCH_WRAITH	795
+	#define global	CREATURE_ID_ARIBEL_THE_WHITE_ARMS	796
+	#define global	CREATURE_ID_POISON_ARROW_FROG	797
+	#define global	CREATURE_ID_MUSICAL_NOTADPOLE	798
+	#define global	CREATURE_ID_NUOU	799
+	#define global	CREATURE_ID_SALAMANDER	800
+	#define global	CREATURE_ID_SEIASHIN	801
+	#define global	CREATURE_ID_APPRENTICE_ANGEL	802
+	#define global	CREATURE_ID_CUPID_INSPECTOR	803
+	#define global	CREATURE_ID_FALLEN_ANGEL	804
+	#define global	CREATURE_ID_RENAI_THE_OVER_MESHERA	805
+	#define global	CREATURE_ID_PIXIE	806
+	#define global	CREATURE_ID_GIGANTIC_FAIRY	807
+	#define global	CREATURE_ID_PERI	808
+	#define global	CREATURE_ID_YOUSEI_GORATH	809
+	#define global	CREATURE_ID_FAIRY_THE_SHINING	810
+	#define global	CREATURE_ID_LIZARD_MAGE	811
+	#define global	CREATURE_ID_BLACK_LIZARDMAN	812
+	#define global	CREATURE_ID_ASSASSIN_LIZARD	813
+	#define global	CREATURE_ID_CLAYMORE_DRAGONEWT	814
+	#define global	CREATURE_ID_BLIZZARD_LIZARD	815
+	#define global	CREATURE_ID_DRACO_EQUES	816
+	#define global	CREATURE_ID_BELPHAT_THE_COSMIC_SWORD	817
+	#define global	CREATURE_ID_MAYU_SIBAYU	818
+	#define global	CREATURE_ID_BLACK_WING	819
+	#define global	CREATURE_ID_ALKONOST	820
+	#define global	CREATURE_ID_DHWTY	821
+	#define global	CREATURE_ID_MAILE_THE_MARIONETTE_SHAMAN	822
+	#define global	CREATURE_ID_MAD_SCRATCHER	823
+	#define global	CREATURE_ID_DEVOTEE_OF_OBLIVION	824
+	#define global	CREATURE_ID_MEMORY_EMPTY_MAN	825
+	#define global	CREATURE_ID_ZAP_MANDRAKE	826
+	#define global	CREATURE_ID_CUCUMBER_HORSE	827
+	#define global	CREATURE_ID_CUCUMBER_WARRIOR	828
+	#define global	CREATURE_ID_NIN_NINZIN	829
+	#define global	CREATURE_ID_VAMPKIN	830
+	#define global	CREATURE_ID_DEMONS_COMMANDER	831
+	#define global	CREATURE_ID_PERFORMAID_BLOODRESS	832
+	#define global	CREATURE_ID_PERFORMAID_DESWEEPER	833
+	#define global	CREATURE_ID_PERFORMAID_COCRUEL	834
+	#define global	CREATURE_ID_PERFORMAID_PINCHIEF	835
+	#define global	CREATURE_ID_PERFORMAID_BITCHIACK	836
+	#define global	CREATURE_ID_TENTACLE_WORM	837
+	#define global	CREATURE_ID_GRAND_LEECH	838
+	#define global	CREATURE_ID_BIND_DEVIL_WORM	839
+	#define global	CREATURE_ID_SEPA	840
+	#define global	CREATURE_ID_SAIMEF_THE_DOGGOD	841
+	#define global	CREATURE_ID_FASHIONABLE_KUNOICHI	842
+	#define global	CREATURE_ID_GUNFISH	843
+	#define global	CREATURE_ID_FLIGHT_FISH	844
+	#define global	CREATURE_ID_ABYSSTAR	845
+	#define global	CREATURE_ID_FLOWER_CORAL	846
+	#define global	CREATURE_ID_MANTA_RAYARN	847
+	#define global	CREATURE_ID_ORCINUS_ORCA	848
+	#define global	CREATURE_ID_NINE_DART_GARFISH	849
+	#define global	CREATURE_ID_SEA_FALLEN_ANGEL	850
+	#define global	CREATURE_ID_SNIPE_HERMIT	851
+	#define global	CREATURE_ID_AROMA_LOCARIS	852
+	#define global	CREATURE_ID_KING_WOODLOUSE	853
+	#define global	CREATURE_ID_DEATH_MANEKI	854
+	#define global	CREATURE_ID_SHELL_KING_OF_VINDALE	855
+	#define global	CREATURE_ID_DARK_DOME	856
+	#define global	CREATURE_ID_MANYTIA_THE_ADVENTURE_MERCHANT	857
+	#define global	CREATURE_ID_DARK_ELEA	858
+	#define global	CREATURE_ID_LOTHRIAN_AGENT	859
+	#define global	CREATURE_ID_LANKATA_THE_LIGHTNING_OF_BLUE	860
+	#define global	CREATURE_ID_KILLER_NURSE	861
+	#define global	CREATURE_ID_ZANAN_OLD_SOLDIER	862
+	#define global	CREATURE_ID_ZANAN_ENHANCED_SOLDIER	863
+	#define global	CREATURE_ID_GRASS_DANCER	864
+	#define global	CREATURE_ID_GRASS_KILLER	865
+	#define global	CREATURE_ID_STORMBLING	866
+	#define global	CREATURE_ID_HELLSTLING	867
+	#define global	CREATURE_ID_RIANNA_THE_DAYDREAMER	868
+	#define global	CREATURE_ID_YEEK_HARD_WORKER	869
+	#define global	CREATURE_ID_ARCHAYEEK	870
+	#define global	CREATURE_ID_ARCHAYEEK_GUNNER	871
+	#define global	CREATURE_ID_MASTER_ARCHAYEEK	872
+	#define global	CREATURE_ID_LUNATYEEK	873
+	#define global	CREATURE_ID_HEROYEEK	874
+	#define global	CREATURE_ID_UNITDEAD_JOKER	875
+	#define global	CREATURE_ID_UNITDEAD_JACK	876
+	#define global	CREATURE_ID_UNITDEAD_QUEEN	877
+	#define global	CREATURE_ID_UNITDEAD_KING	878
+	#define global	CREATURE_ID_HALION_THE_EXTREMIST	879
+	#define global	CREATURE_ID_LARGE_BIKE	880
+	#define global	CREATURE_ID_XEREN_AUTO_TANK	881
+	#define global	CREATURE_ID_RIDE_CLERIC	882
+	#define global	CREATURE_ID_BUILDION	883
+	#define global	CREATURE_ID_ZOIBO	884
+	#define global	CREATURE_ID_KONIGS_KATZE	885
+	#define global	CREATURE_ID_ALFRED_THE_CANGNAN_WIND	886
+	#define global	CREATURE_ID_SKOGSRA	887
+	#define global	CREATURE_ID_BANYAN_MONSTER	888
+	#define global	CREATURE_ID_ERLKONIG	889
+	#define global	CREATURE_ID_TREE_INCARNATION	890
+	#define global	CREATURE_ID_DRAGON_TREE	891
+	#define global	CREATURE_ID_CURSE_WOOD_KING	892
+	#define global	CREATURE_ID_ZISILION_THE_MINE_KING	893
+	#define global	CREATURE_ID_CHAOS_SEED	894
+	#define global	CREATURE_ID_CHAOS_SERPENT	895
+	#define global	CREATURE_ID_AJETALIO_THE_SEMINAR_LECTURER	896
+	#define global	CREATURE_ID_CRESCE_THE_SEMINAR_LECTURER	897
+	#define global	CREATURE_ID_IDURU_THE_SEMINAR_LECTURER	898
+	#define global	CREATURE_ID_MITO_THE_SEMINAR_LECTURER	899
+	#define global	CREATURE_ID_PART_TIME_WORKER_THE_RED_SWORD	900
+	#define global	CREATURE_ID_NOVICE	901
+	#define global	CREATURE_ID_KARATA_THE_SEMINAR_MASCOT	902
+	#define global	CREATURE_ID_CATERPILLAR_SNIPER	903
+	#define global	CREATURE_ID_NURSING_MOTH	904
+	#define global	CREATURE_ID_MAGIC_HAWK_MOTH	905
+	#define global	CREATURE_ID_BATTLE_HOPPER	906
+	#define global	CREATURE_ID_ASSAULT_RED_DRAGONFLY	907
+	#define global	CREATURE_ID_BLACK_HOPPER_X	908
+	#define global	CREATURE_ID_TALON_SOLDIER	909
+	#define global	CREATURE_ID_FIN_CROCODILE	910
+	#define global	CREATURE_ID_TEZCATLIPOCA	911
+	#define global	CREATURE_ID_KILLING_ANTEATER	912
+	#define global	CREATURE_ID_ELECTRIC_HIPPOPOTAMUS	913
+	#define global	CREATURE_ID_KNIGHTCEROS	914
+	#define global	CREATURE_ID_GANESA	915
+	#define global	CREATURE_ID_SIN_GORILLA	916
+	#define global	CREATURE_ID_ROPER	917
+	#define global	CREATURE_ID_LIVING_BLOOD	918
+	#define global	CREATURE_ID_FORMLESS_SPAWN	919
+	#define global	CREATURE_ID_DRAGON_BUBBLE	920
+	#define global	CREATURE_ID_SILVER_FOX_BROTHER	921
+	#define global	CREATURE_ID_SICKFULL_OLDER_BROTHER	922
+	#define global	CREATURE_ID_ENTHUMESIS	923
+	#define global	CREATURE_ID_ZANAN_ASSASSIN	924
+	#define global	CREATURE_ID_ALSAPIA_THE_MURDERER_MASK	925
+	#define global	CREATURE_ID_GILPHEM_THE_MAGIC_STEEL	926
+	#define global	CREATURE_ID_OCHIMUSHA_ARMOR	927
+	#define global	CREATURE_ID_MUSHA_SOUL	928
+	#define global	CREATURE_ID_CRIMSON_ARMOR	929
+	#define global	CREATURE_ID_SKELETON_MAGICIAN	930
+	#define global	CREATURE_ID_MONEY_DECEASED	931
+	#define global	CREATURE_ID_SKULL_BEAST	932
+	#define global	CREATURE_ID_GASYADOKURO	933
+	#define global	CREATURE_ID_THE_CHAOS_CHILD	934
+	#define global	CREATURE_ID_NAGAREW_THE_OBLIVION_BEAST	935
+	#define global	CREATURE_ID_MELUGAST_AO_I_THE_DIMENSION_DRIVER	936
+	#define global	CREATURE_ID_ANGRY_BURGER	937
+	#define global	CREATURE_ID_SUNRISE_THE_ARCHIPELAGO_DRAGON	938
+	#define global	CREATURE_ID_DOROTHIA_STANDING_IN_THE_WETLAND	939
+	#define global	CREATURE_ID_GRAVEED_THE_GRAVITY_VALLEY	940
+	#define global	CREATURE_ID_BEILGENA_THE_ARTIFICIAL_DRAGON	941
+	#define global	CREATURE_ID_TRICERATOPS	942
+	#define global	CREATURE_ID_BRONTOSAURUS	943
+	#define global	CREATURE_ID_DRICERADOPS	944
+	#define global	CREATURE_ID_LAST_DANCER	945
+	#define global	CREATURE_ID_LOYTER_THE_CRIMSON_OF_DOLE	946
+	#define global	CREATURE_ID_BURT_THE_BURNING_ADVENTURER_SOUL	947
+	#define global	CREATURE_ID_ALLEN_THE_RESEARCHER	948
+	#define global	CREATURE_ID_BARTENDER2	949
+	#define global	CREATURE_ID_CLERK	950
+	#define global	CREATURE_ID_GUILD_BROKER	951
+	#define global	CREATURE_ID_FORMER_BANK_CLERK	952
+	#define global	CREATURE_ID_BYSYMLHA_THE_AMBER_EYES	953
+	#define global	CREATURE_ID_LION2	954
+	#define global	CREATURE_ID_WOLF	955
+	#define global	CREATURE_ID_BOAR	956
+	#define global	CREATURE_ID_RAT2	957
+	#define global	CREATURE_ID_FOX	958
+	#define global	CREATURE_ID_RABBIT	959
+	#define global	CREATURE_ID_VESTIGE	960
+	#define global	CREATURE_ID_OBLIVION_BEAST	961
+	#define global	CREATURE_ID_LITTLE_BOY	962
+	#define global	CREATURE_ID_S_BOY	963
+	#define global	CREATURE_ID_BUTLER	964
+	#define global	CREATURE_ID_OLD_BUTLER	965
+	#define global	CREATURE_ID_INCONEET	966
+	#define global	CREATURE_ID_ARROW_DUCK	967
+	#define global	CREATURE_ID_YOKOSHIMA_ENAGA	968
+	#define global	CREATURE_ID_FOREST_ASSASSIN	969
+	#define global	CREATURE_ID_FALLEN_BIRD	970
+	#define global	CREATURE_ID_PEACE_MAKER	971
+	#define global	CREATURE_ID_BISQUE_DOLL	972
+	#define global	CREATURE_ID_UNIVERSE_INVADER	973
+	#define global	CREATURE_ID_KOBOLINA	974
+	#define global	CREATURE_ID_KOBOLD_BLUE	975
+	#define global	CREATURE_ID_KOBOLD_SABER	976
+	#define global	CREATURE_ID_LIGHTNING_KOBOLD	977
+	#define global	CREATURE_ID_DUKE_KOBOLD	978
+	#define global	CREATURE_ID_KOBOLD_BLASTER	979
+	#define global	CREATURE_ID_CARTER_THE_SKILLED_FOOT	980
+	#define global	CREATURE_ID_NANCY_THE_WANDERLUST	981
+	#define global	CREATURE_ID_TONI_THE_ANGLER	982
+	#define global	CREATURE_ID_PORC	983
+	#define global	CREATURE_ID_BRAND_PORC	984
+	#define global	CREATURE_ID_BLACK_ORC	985
+	#define global	CREATURE_ID_URUK	986
+	#define global	CREATURE_ID_BLACK_PORC	987
+	#define global	CREATURE_ID_URUK_HAI	988
+	#define global	CREATURE_ID_URUK_HIGHNESS	989
 
-	MAX_CREATURE_ID = CREATURE_ID_URUK_HIGHNESS + 3
+	#define global	MAX_CREATURE_ID	(CREATURE_ID_URUK_HIGHNESS + 3)
 
 	// Tweak defs
-	TWEAK_CATEGORY_UI = 0
-	TWEAK_CATEGORY_CONVENIENCE = 1
-	TWEAK_CATEGORY_GAMEPLAY = 2
-	TWEAK_CATEGORY_AI = 3
-	TWEAK_CATEGORY_MISC = 4
-	TWEAK_CATEGORY_MAX = TWEAK_CATEGORY_MISC + 1
-
-	TWEAK_UI_SHOW_ENCHANT_STRENGTH = 0
-	TWEAK_UI_SPELL_TRACKING = 1
-	TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER = 2
-	TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL = 3
-	TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER = 4
-	TWEAK_UI_MAX = TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER + 1
-
-	TWEAK_CONVENIENCE_FEED_OPTION_PETS = 0
-	TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME = 1
-	TWEAK_CONVENIENCE_HIGHLIGHT_FILTER = 2
-	TWEAK_CONVENIENCE_REPARSE_ITEMLIST = 3
-	TWEAK_CONVENIENCE_MAX = TWEAK_CONVENIENCE_REPARSE_ITEMLIST + 1
-
-	TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME = 0
-	TWEAK_GAMEPLAY_PETS_HEAL_PETS = 1
-	TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD = 2
-	TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE = 3
-	TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING = 4
-	TWEAK_GAMEPLAY_BASH_ALL_FRUIT = 5
-	TWEAK_GAMEPLAY_ORGANIZE_RANCH = 6
-	TWEAK_GAMEPLAY_IGNORE_UNFAIR = 7
-	TWEAK_GAMEPLAY_MAX = TWEAK_GAMEPLAY_IGNORE_UNFAIR + 1
-
-	TWEAK_AI_ZEOME = 0
-	TWEAK_AI_MAX = TWEAK_AI_ZEOME + 1
-
-	TWEAK_MISC_RANDOM_START_MP3 = 0
-	TWEAK_MISC_WEATHER_EVERYWHERE = 1
-	TWEAK_MISC_CONFIRM_RELOAD_F2 = 2
-	TWEAK_MISC_PREVENT_STAYER_MOVEMENT = 3
-	TWEAK_MISC_PREVENT_BUMP_ATTACK = 4
-	TWEAK_MISC_MAX = TWEAK_MISC_PREVENT_BUMP_ATTACK + 1
+	#define global	TWEAK_CATEGORY_UI	0
+	#define global	TWEAK_CATEGORY_CONVENIENCE	1
+	#define global	TWEAK_CATEGORY_GAMEPLAY	2
+	#define global	TWEAK_CATEGORY_AI	3
+	#define global	TWEAK_CATEGORY_MISC	4
+	#define global	TWEAK_CATEGORY_MAX	(TWEAK_CATEGORY_MISC + 1)
+
+	#define global	TWEAK_UI_SHOW_ENCHANT_STRENGTH	0
+	#define global	TWEAK_UI_SPELL_TRACKING	1
+	#define global	TWEAK_UI_POTENTIALS_IN_SKILL_TRACKER	2
+	#define global	TWEAK_UI_FILTER_SKILL_TRACKER_BY_POTENTIAL	3
+	#define global	TWEAK_UI_SHOW_SPELLSTOCK_IN_SKILL_TRACKER	4
+
+	#define global	TWEAK_CONVENIENCE_FEED_OPTION_PETS	0
+	#define global	TWEAK_CONVENIENCE_CHANGE_ITEM_SPRITE_HOME	1
+	#define global	TWEAK_CONVENIENCE_HIGHLIGHT_FILTER	2
+	#define global	TWEAK_CONVENIENCE_REPARSE_ITEMLIST	3
+
+	#define global	TWEAK_GAMEPLAY_GATHER_ITEM_PARTYTIME	0
+	#define global	TWEAK_GAMEPLAY_PETS_HEAL_PETS	1
+	#define global	TWEAK_GAMEPLAY_SHARED_PERFORMANCE_GOLD	2
+	#define global	TWEAK_GAMEPLAY_PETS_DIE_LOSSMODE	3
+	#define global	TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING	4
+	#define global	TWEAK_GAMEPLAY_BASH_ALL_FRUIT	5
+	#define global	TWEAK_GAMEPLAY_ORGANIZE_RANCH	6
+
+	#define global	TWEAK_AI_ZEOME	0
+
+	#define global	TWEAK_MISC_RANDOM_START_MP3	0
+	#define global	TWEAK_MISC_WEATHER_EVERYWHERE	1
+	#define global	TWEAK_MISC_CONFIRM_RELOAD_F2	2
+	#define global	TWEAK_MISC_PREVENT_STAYER_MOVEMENT	3
+	#define global	TWEAK_MISC_PREVENT_BUMP_ATTACK	4
+
Only in 1.90.4.2-custom-g/: elona.dll
diff -U5 --recursive 1.90.4-custom/etc.hsp 1.90.4.2-custom-g/etc.hsp
--- 1.90.4-custom/etc.hsp	2021-09-02 12:55:06.544708400 -0700
+++ 1.90.4.2-custom-g/etc.hsp	2021-09-02 12:55:06.967113000 -0700
@@ -330,22 +330,22 @@
 	return
 
 *random_titleInit
 	sdim randn1, 30, 20
 	notesel titlebuff
-	noteload lang("data\\ndata.csv", "data\\ndata-e.csv")
+	noteload exedir + lang("data\\ndata.csv", "data\\ndata-e.csv")
 	sdim rnlist, 20, 15, noteinfo(0)
 	repeat noteinfo(0)
 		noteget msgtemp, cnt
 		csvsort randn1, msgtemp, 44
 		cnt2 = cnt
 		repeat 15
 			rnlist(cnt, cnt2) = randn1(cnt)
 		loop
 	loop
 	notesel titlebuff
-	noteload "data\\name.csv"
+	noteload exedir + "data\\name.csv"
 	sdim rn1, 15, noteinfo(0)
 	sdim rn2, 15, noteinfo(0)
 	repeat noteinfo(0)
 		noteget msgtemp, cnt
 		csvsort randn1, msgtemp, 44
@@ -540,11 +540,11 @@
 	}
 	if ( hour_played == 5 ) {
 		s += lang("ラーネイレ「いけない。このままでは…手遅れになってしまうわ…」", "Larnneire cries, " + cnvtalk("No... before it's too late..."))
 	}
 	if ( hour_played == 6 ) {
-		s += lang("ロミアス「まだまだ、これからだろう（ニヤリ）」", "Lomias grins, " + cnvtalk("It's not over yet. We're just starting, right?"))
+		s += lang("ロミアス「まだまだ、これからだろう（ニヤリ）」", "Lomias grins, " + cnvtalk("It hasn't even started yet... hasn't it?"))
 	}
 	if ( hour_played == 7 ) {
 		s += lang("ルルウィ「休憩しなさい。壊れちゃったら、私の役にたてないじゃない」", "Lulwy warns you, " + cnvtalk("Have a rest, kitty. If you are broken, you're no use to me."))
 	}
 	if ( hour_played == 8 ) {
diff -U5 --recursive 1.90.4-custom/event.hsp 1.90.4.2-custom-g/event.hsp
--- 1.90.4-custom/event.hsp	2021-09-02 12:55:06.548371400 -0700
+++ 1.90.4.2-custom-g/event.hsp	2021-09-02 12:55:06.969689900 -0700
@@ -435,11 +435,10 @@
 				umai = 6
 				txt lang("最高に美味しい！", "Wow! Terrific food!"), lang("朝から幸せな気分だ！", "Yummy! Absolutely yummy!"), lang("身体に活力が湧いてくる！", "It tasted like seventh heaven!")
 			}
 			repeat MAX_CHARA_FOLLOWER
 				cdata(CDATA_HUNGER, cnt) = 12000
-				cdata(CDATA_THIRST, cnt) = 12000
 				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 					continue
 				}
 				modgrowth cnt, SKILL_ATTR_STR, umai
 				modgrowth cnt, SKILL_ATTR_CON, umai
@@ -1389,11 +1388,11 @@
 		p = rnd(cdata(CDATA_GOLD, CHARA_PLAYER) / 8 + 1)
 		if ( cbit(CHARA_BIT_RES_STEAL, CHARA_PLAYER) ) {
 			p = 0
 		}
 		if ( p > 0 ) {
-			txt lang("金貨" + p + "枚を失った。", "You lose " + p + "gp.")
+			txt lang("金貨" + p + "枚を失った。", "You lose " + p + " gold pieces.")
 			cdata(CDATA_GOLD, CHARA_PLAYER) -= p
 		}
 		else {
 			txt lang("損害はなかった。", "The thief fails to steal money from you.")
 		}
@@ -1507,11 +1506,11 @@
 		buff = lang("発狂した金持ちが、何か叫びながら金貨をばらまいている…", "A rich mad man is scattering his money all over the ground.")
 		chatList 1, lang("ラッキー！", "Lucky!")
 		gosub *re_select
 		p = limit(rnd((cdata(CDATA_GOLD, CHARA_PLAYER) + 1) / 10 + 1), 100, 99999) + 20 * sdata(SKILL_ATTR_LUC, CHARA_PLAYER)
 		cdata(CDATA_GOLD, CHARA_PLAYER) += p
-		txt lang("金貨" + p + "枚を手に入れた。", "You pick up " + p + "gp.")
+		txt lang("金貨" + p + "枚を手に入れた。", "You pick up " + p + " gold pieces.")
 		goto *random_eventProc_SWEND1
 	}
 	if ( _switch_val == RANDOM_EVENT_PRIEST | _switch_sw ) {
 		_switch_sw = 0
 		efid = SKILL_SPELL_HOLY_VEIL
@@ -1864,11 +1863,11 @@
 		}
 		income += p
 		flt
 		itemcreate -1, ITEM_ID_GOLD_PIECE, -1, -1, p
 	}
-	s = "" + income + lang("gold", "gp")
+	s = "" + income + lang("gold", " gold pieces")
 	if ( income(1) != 0 ) {
 		s += lang("と" + income(1) + "個のアイテム", " and " + income(1) + " items")
 	}
 	if ( income != 0 | income(1) != 0 ) {
 		snd SOUNDLIST_DING2
Only in 1.90.4.2-custom-g/: exrand.dll
diff -U5 --recursive 1.90.4-custom/god.hsp 1.90.4.2-custom-g/god.hsp
--- 1.90.4-custom/god.hsp	2021-09-02 12:55:06.550902800 -0700
+++ 1.90.4.2-custom-g/god.hsp	2021-09-02 12:55:06.973962200 -0700
@@ -303,11 +303,11 @@
 	return
 
 *god_select
 	if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE & gdata(GDATA_LEVEL) == 179 ) {
 		txtef COLOR_PURPLE
-		txt lang("ここからでは神に届かないようだ…。", "It seems that it will not reach God from here...")
+		txt lang("ここからでは神に届かないようだ…。", "It seems that it will not reach the god from here...")
 		goto *turn_end
 	}
 	cs = 0
 	page = 0
 	pagemax = 0
@@ -479,15 +479,15 @@
 	gosub *charaRefresh
 	return
 
 *god_pray
 	if ( cdata(CDATA_GOD, CHARA_PLAYER) == GOD_EYTH ) {
-		txt lang(name(CHARA_PLAYER) + "は神を信仰していないが、試しに祈ってみた。", "You don't believe in God.")
+		txt lang(name(CHARA_PLAYER) + "は神を信仰していないが、試しに祈ってみた。", "You don't believe in the gods.")
 		goto *turn_end
 	}
 	txtnew
-	txt lang("あなたの神に祈りを乞う？", "Really pray to your God?")
+	txt lang("あなたの神に祈りを乞う？", "Really pray to your god?")
 	promptYesNo
 	if ( rtval != 0 ) {
 		gosub *screen_draw
 		goto *pc_turn
 	}
@@ -708,11 +708,11 @@
 		if ( gdata(GDATA_MONTH) == 11 ) {
 			if ( gdata(GDATA_AREA) == AREA_TRUCE_GROUND ) {
 				if ( cdata(CDATA_GOD, CHARA_PLAYER) != GOD_EYTH ) {
 					if ( gdata(GDATA_FLAG_TRUCE_GROUND_SUMMONING) == 0 ) {
 						txtef COLOR_GREEN
-						txt lang("あなたの祈りが神を呼び寄せた！", "Your prayers have summoned God.")
+						txt lang("あなたの祈りが神を呼び寄せた！", "Your prayers have summoned your god.")
 						if ( cdata(CDATA_GOD, CHARA_PLAYER) == GOD_MANI ) {
 							dbid = CREATURE_ID_MANI
 							gdata(GDATA_FLAG_TRUCE_GROUND_SUMMONING) = CREATURE_ID_MANI
 						}
 						if ( cdata(CDATA_GOD, CHARA_PLAYER) == GOD_LULWY ) {
@@ -755,15 +755,15 @@
 	goto *turn_end
 
 *god_offer
 	if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE & gdata(GDATA_LEVEL) == 179 ) {
 		txtef COLOR_PURPLE
-		txt lang("ここからでは神に届かないようだ…。", "It seems that it will not reach God from here...")
+		txt lang("ここからでは神に届かないようだ…。", "It seems that it will not reach your god from here...")
 		goto *turn_end
 	}
 	if ( cdata(CDATA_GOD, CHARA_PLAYER) == GOD_EYTH ) {
-		txt lang("あなたは神を信仰していないが、試しに捧げてみた。", "You don't believe in God.")
+		txt lang("あなたは神を信仰していないが、試しに捧げてみた。", "You don't believe in the gods.")
 		goto *turn_end
 	}
 	rowact_item ci
 	item_separate ci
 	txt lang("あなたは" + itemname(ci) + "を" + godname(cdata(CDATA_GOD, CHARA_PLAYER)) + "に捧げ、その名を唱えた。", "You put " + itemname(ci) + " on the altar and mutter the name of " + godname(cdata(CDATA_GOD, CHARA_PLAYER)) + ".")
diff -U5 --recursive 1.90.4-custom/help.hsp 1.90.4.2-custom-g/help.hsp
--- 1.90.4-custom/help.hsp	2021-09-02 12:55:06.554386500 -0700
+++ 1.90.4.2-custom-g/help.hsp	2021-09-02 12:55:06.977664200 -0700
@@ -1953,14 +1953,16 @@
 				valn = "Pcc_show.", str(cfg_pcc_show)
 				gosub *cfg_write
 				goto *com_config_loop
 			}
 			if ( cs == 3 ) {
-				x = 800, 800, 1024, 1152, 1280, 1280
-				y = 600, 696, 768, 864, 768, 1024
+                dim x, 20
+                dim y, 20
+                x = 800, 1024, 1152, 1280, 1280, 1280, 1280, 1280, 1360, 1366, 1440, 1600, 1600, 1600, 1680, 1920, 1920
+                y = 600, 768,  864,  720,  768,  800,  960,  1024, 768,  768,  900,  900,  1024, 1200, 1050, 1080, 1200
 				i = 0
-				repeat 5
+				repeat 17
 					if ( windoww2 == x(cnt) ) {
 						if ( windowh2 == y(cnt) ) {
 							i = cnt
 							break
 						}
@@ -1969,12 +1971,12 @@
 				i += p
 				if ( i < 0 ) {
 					i = 0
 				}
 				else {
-					if ( i > 4 ) {
-						i = 4
+					if ( i > 16 ) {
+						i = 16
 					}
 				}
 				windoww2 = x(i)
 				windowh2 = y(i)
 				valn = "windowW.", "" + windoww2
Only in 1.90.4.2-custom-g/: hmm.dll
Only in 1.90.4.2-custom-g/: hspda.dll
Only in 1.90.4.2-custom-g/: hspext_ext.dll
Only in 1.90.4.2-custom-g/: hspinet.dll
Only in 1.90.4.2-custom-g/: hspsock.dll
diff -U5 --recursive 1.90.4-custom/init.hsp 1.90.4.2-custom-g/init.hsp
--- 1.90.4-custom/init.hsp	2021-09-02 12:55:06.560584000 -0700
+++ 1.90.4.2-custom-g/init.hsp	2021-09-02 12:55:07.011242200 -0700
@@ -1,5 +1,7 @@
+#include "defines\\mod.hsp"
+
 // Macros
 #define global nullstr 
 
 #define cfgRead(%1,%2,%3=nullstr) \
 if instr(s,0,%1)!-1{	%c\
@@ -35,11 +37,10 @@
 	:txtc=rnd(txtc):txt_select %1,%2,%3,%4,%5,%6,%7,%8,%9:tcol@txtfunc=255,255,255
 
 #define chatList(%1,%2) list(0,listmax)=%1 : listn(0,listmax)=%2 : listmax++
 #define chatMore(%1,%2=strmore,%3=0) listmax=0:buff=%1:tc=tc*(%3=0)+(%3!0)*%3:chatList 0,%2:chatesc=1:gosub *chat_select :if scenemode:if scene_cut=1 : goto *chat_end
 
-
 #deffunc netload str netload_filename
 	netrequest netload_filename
 	repeat
 		netexec locvar_netload_res
 		if ( locvar_netload_res ) {
@@ -52,11 +53,10 @@
 	}
 	neterror locvar_netload_estr
 	dialog lang("エラー:", "Error:") + locvar_netload_estr
 	return
 
-
 /********** ANNA CUSTOM - BEGINNING **********/
 
 #defcfunc xy2pic int xy2pic_x, int xy2pic_y
 	return (xy2pic_x \ 33) + (xy2pic_y * 33)
 
@@ -429,11 +429,11 @@
 	buffname(BUFF_DIVINE_WISDOM) = lang("知者の加護", "Divine Wisdom")
 	bufftxt(0, BUFF_DIVINE_WISDOM) = lang("の思考は冴え渡った。", " start"), " to think clearly."
 
 	bdataref(0, BUFF_PUNISHMENT) = BUFF_TYPE_HEX, 1, 0
 	buffname(BUFF_PUNISHMENT) = lang("天罰", "Punishment")
-	bufftxt(0, BUFF_PUNISHMENT) = lang("は雷に打たれた！", " incur"), " the wrath of God."
+	bufftxt(0, BUFF_PUNISHMENT) = lang("は雷に打たれた！", " incur"), " the wrath of the gods."
 
 	bdataref(0, BUFF_LULWYS_TRICK) = BUFF_TYPE_BUFF, 1, 0
 	buffname(BUFF_LULWYS_TRICK) = lang("ルルウィの憑依", "Lulwy's Trick")
 	bufftxt(0, BUFF_LULWYS_TRICK) = lang("にルルウィが乗り移った。", " repeat"), " the name of Lulwy."
 
@@ -552,23 +552,23 @@
 	bdataref(0, BUFF_CONCENTRATION) = BUFF_TYPE_BUFF, 1, 0
 	buffname(BUFF_CONCENTRATION) = lang("集中", "Concentration")
 	bufftxt(0, BUFF_CONCENTRATION) = lang("の集中力が向上した。", " feel"), " concentrated."
 
 	bdataref(0, BUFF_FORM_SHIFT_ALPHA) = BUFF_TYPE_BUFF, 1, 0
-	buffname(BUFF_FORM_SHIFT_ALPHA) = lang("フォルムシフト", "Form Shift")
+	buffname(BUFF_FORM_SHIFT_ALPHA) = lang("フォルムシフト", "Form Shift (A)")
 	bufftxt(0, BUFF_FORM_SHIFT_ALPHA) = lang("に変化した。", " change"), " form."
 
 	bdataref(0, BUFF_FORM_SHIFT_BETA) = BUFF_TYPE_BUFF, 1, 0
-	buffname(BUFF_FORM_SHIFT_BETA) = lang("フォルムシフト", "Form Shift")
+	buffname(BUFF_FORM_SHIFT_BETA) = lang("フォルムシフト", "Form Shift (B)")
 	bufftxt(0, BUFF_FORM_SHIFT_BETA) = lang("に変化した。", " change"), " form."
 
 	bdataref(0, BUFF_FORM_SHIFT_GAMMA) = BUFF_TYPE_BUFF, 1, 0
-	buffname(BUFF_FORM_SHIFT_GAMMA) = lang("フォルムシフト", "Form Shift")
+	buffname(BUFF_FORM_SHIFT_GAMMA) = lang("フォルムシフト", "Form Shift (G)")
 	bufftxt(0, BUFF_FORM_SHIFT_GAMMA) = lang("に変化した。", " change"), " form."
 
 	bdataref(0, BUFF_FORM_SHIFT_DELTA) = BUFF_TYPE_BUFF, 1, 0
-	buffname(BUFF_FORM_SHIFT_DELTA) = lang("フォルムシフト", "Form Shift")
+	buffname(BUFF_FORM_SHIFT_DELTA) = lang("フォルムシフト", "Form Shift (D)")
 	bufftxt(0, BUFF_FORM_SHIFT_DELTA) = lang("に変化した。", " change"), " form."
 
 	bdataref(0, BUFF_FORM_SHIFT_OMEGA) = BUFF_TYPE_BUFF, 1, 0
 	buffname(BUFF_FORM_SHIFT_OMEGA) = lang("ファイナルシフト", "Final Shift")
 	bufftxt(0, BUFF_FORM_SHIFT_OMEGA) = lang("に変化した。", " change"), " form."
@@ -1052,11 +1052,11 @@
 		if ( calcbuff_charid < CHARA_PLAYER ) {
 			if ( calcbuff_charid == (-1) ) {
 				return
 			}
 			else {
-				buffdesc = lang("ターンごとの飢えと渇きが激しくなる", "Increase hunger and thirst")
+				buffdesc = lang("ターンごとの飢えと渇きが激しくなる", "Increase hunger")
 				return
 			}
 		}
 		return
 	}
@@ -1896,16 +1896,16 @@
 	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_PERFORMER) = SKILL_ATTR_CHA, SKILL_TYPE_SP, 25, TARGET_TYPE_SELF_ONLY, 0
 	skillname(SKILL_NORMAL_PERFORMER) = lang("演奏", "Performer")
 	skilldesc(SKILL_NORMAL_PERFORMER) = lang("質の高い演奏を可能にする", "Shows how good of a performer you are.")
 	skillencdesc(SKILL_NORMAL_PERFORMER) = lang("演奏の質をあげる", "makes your performance better.")
 
-	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_COOKING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 0
+	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_COOKING) = SKILL_ATTR_LER, SKILL_TYPE_SP, 3, TARGET_TYPE_SELF_ONLY, 0
 	skillname(SKILL_NORMAL_COOKING) = lang("料理", "Cooking")
 	skilldesc(SKILL_NORMAL_COOKING) = lang("料理の腕を上げる", "Improves your cooking skill.")
 	skillencdesc(SKILL_NORMAL_COOKING) = lang("料理の腕を上げる", "enhances your cooking skill.")
 
-	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 5, TARGET_TYPE_SELF_ONLY, 0
+	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_FISHING) = SKILL_ATTR_PER, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
 	skillname(SKILL_NORMAL_FISHING) = lang("釣り", "Fishing")
 	skilldesc(SKILL_NORMAL_FISHING) = lang("釣りを可能にする", "Displays your fishing skill.")
 	skillencdesc(SKILL_NORMAL_FISHING) = lang("釣りの腕をあげる", "makes you a better fisherman.")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_NORMAL_EYE_OF_MIND) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 0, TARGET_TYPE_NONE, 0
@@ -2396,11 +2396,11 @@
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_TOUCH_OF_SLEEP) = SKILL_ATTR_WIL, SKILL_TYPE_HAND, 5, TARGET_TYPE_DIRECTION, 0
 	skillname(SKILL_SPACT_TOUCH_OF_SLEEP) = lang("眠りの手", "Touch of Sleep")
 	skilldesc(SKILL_SPACT_TOUCH_OF_SLEEP) = lang("精神攻撃", "Sleep target")
 
-	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHADOW_STEP) = SKILL_ATTR_WIL, SKILL_TYPE_TELEPORT, 27, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 0
+	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_SHADOW_STEP) = SKILL_ATTR_WIL, SKILL_TYPE_TELEPORT, 5, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 0
 	skillname(SKILL_SPACT_SHADOW_STEP) = lang("シャドウステップ", "Shadow Step")
 	skilldesc(SKILL_SPACT_SHADOW_STEP) = lang("対象へ突撃", "Teleport to target")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DRAW_SHADOW) = SKILL_ATTR_WIL, SKILL_TYPE_TELEPORT, 10, TARGET_TYPE_OTHER + SKILL_TYPE_FOV_BOLT, 0
 	skillname(SKILL_SPACT_DRAW_SHADOW) = lang("異次元の手", "Draw Shadow")
@@ -2552,11 +2552,11 @@
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MEWMEWMEW) = SKILL_ATTR_LUC, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF, 500
 	skillname(SKILL_SPACT_MEWMEWMEW) = lang("うみみゃぁ！", "Mewmewmew!")
 	skilldesc(SKILL_SPACT_MEWMEWMEW) = lang("全体高ダメージ", "Map-wide high damage")
 
-	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DECAPITATION) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY + 1, 0
+	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DECAPITATION) = SKILL_ATTR_DEX, SKILL_TYPE_SP, 10, TARGET_TYPE_ENEMY + 1, 0
 	skillname(SKILL_SPACT_DECAPITATION) = lang("首狩り", "Decapitation")
 	skilldesc(SKILL_SPACT_DECAPITATION) = lang("器用依存攻撃/対象が瀕死なら即死", "Attack and kill low-health target")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DROP_MINE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 15, TARGET_TYPE_SELF_ONLY, 0
 	skillname(SKILL_SPACT_DROP_MINE) = lang("地雷投下", "Drop Mine")
@@ -2754,11 +2754,11 @@
 	skillname(SKILL_SPACT_DANCE_OF_BLOW) = lang("怒涛の連撃", "Dance of Blow")
 	skilldesc(SKILL_SPACT_DANCE_OF_BLOW) = lang("回避一時的に下げる/ゲージ100％消費", "Continuous attacks")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_EXPLOSION) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 30, TARGET_TYPE_ENEMY, 0
 	skillname(SKILL_SPACT_EXPLOSION) = lang("魂の一撃", "Explosion")
-	skilldesc(SKILL_SPACT_EXPLOSION) = lang("消費後15％回復/ゲージ100％消費", "Braze Fighting spirit")
+	skilldesc(SKILL_SPACT_EXPLOSION) = lang("消費後15％回復/ゲージ100％消費", "Blaze Fighting spirit")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_QUICK_USE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 40, TARGET_TYPE_SELF_ONLY, 0
 	skillname(SKILL_SPACT_QUICK_USE) = lang("モーメント", "Quick Use")
 	skilldesc(SKILL_SPACT_QUICK_USE) = lang("1ターンに1度、魔道具を瞬間使用", "Quick use magic device")
 
@@ -2936,11 +2936,11 @@
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_PSYCHIC_WAVE) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 20, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
 	skillname(SKILL_SPACT_PSYCHIC_WAVE) = lang("サイキックウェーブ", "Psychic Wave")
 	skilldesc(SKILL_SPACT_PSYCHIC_WAVE) = lang("束縛＋LV依存の変動固定ダメージ", "Bind and level dependent fixed damage")
 
-	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_READING_PARTY) = SKILL_ATTR_LER, SKILL_TYPE_SP, 25, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
+	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_READING_PARTY) = SKILL_ATTR_LER, SKILL_TYPE_SP, 5, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
 	skillname(SKILL_SPACT_READING_PARTY) = lang("読書会", "Reading Party")
 	skilldesc(SKILL_SPACT_READING_PARTY) = lang("仲間と一緒に書物の解読を行う", "Reading Party")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_OVER_LONG_THROW) = SKILL_ATTR_STR, SKILL_TYPE_SP, 3, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
 	skillname(SKILL_SPACT_OVER_LONG_THROW) = lang("超遠投", "Over Long Throw")
@@ -2948,11 +2948,11 @@
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_DUPLICANE) = SKILL_ATTR_MAG, SKILL_TYPE_SP, 1, TARGET_TYPE_SELF_ONLY, 0
 	skillname(SKILL_SPACT_DUPLICANE) = lang("デュプリケイン", "Dupli-Cane")
 	skilldesc(SKILL_SPACT_DUPLICANE) = lang("攻撃杖の回数減無効/威力減/Sp3消費", "Use rods without consuming charges/Reduced Power/Consumes 3 SP")
 
-	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LOCK_BREAK) = SKILL_ATTR_STR, SKILL_TYPE_SP, 30, TARGET_TYPE_SELF_ONLY, 500
+	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_LOCK_BREAK) = SKILL_ATTR_STR, SKILL_TYPE_SP, 6, TARGET_TYPE_SELF_ONLY, 500
 	skillname(SKILL_SPACT_LOCK_BREAK) = lang("破錠攻撃", "Lock Break")
 	skilldesc(SKILL_SPACT_LOCK_BREAK) = lang("力を結集し鍵破壊/中身微破損", "Join forces to break the lock")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MEMORY_POISON) = SKILL_ATTR_CON, SKILL_TYPE_HAND, 150, TARGET_TYPE_ENEMY, 0
 	skillname(SKILL_SPACT_MEMORY_POISON) = lang("侵食の毒牙", "Memory Poison")
@@ -3064,11 +3064,11 @@
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_HYPER_DASH) = SKILL_ATTR_WIL, SKILL_TYPE_SP, 21, TARGET_TYPE_SELF_ONLY, 500
 	skillname(SKILL_SPACT_HYPER_DASH) = lang("烈走破", "Hyper Dash")
 	skilldesc(SKILL_SPACT_HYPER_DASH) = lang("押しのけ移動しつつ攻撃", "Run through and attack")
 
-	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VIOLENT_GARDEN) = SKILL_ATTR_LER, SKILL_TYPE_SP, 18, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
+	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_VIOLENT_GARDEN) = SKILL_ATTR_LER, SKILL_TYPE_SP, 22, TARGET_TYPE_SELF + SKILL_TYPE_FOV_BOLT, 500
 	skillname(SKILL_SPACT_VIOLENT_GARDEN) = lang("暴虐の庭園", "Violent Garden")
 	skilldesc(SKILL_SPACT_VIOLENT_GARDEN) = lang("視界内束縛毒ダメージ", "Bind and poison")
 
 	sdataref(SKILL_DATAREF_USE, SKILL_SPACT_MISTELTEIN) = SKILL_ATTR_LER, SKILL_TYPE_SP, 8, TARGET_TYPE_ENEMY + SKILL_TYPE_FOV_BOLT, 500
 	skillname(SKILL_SPACT_MISTELTEIN) = lang("ミストルティン", "Misteltein")
@@ -5093,11 +5093,11 @@
 
 *system_init
 
 	/********** ANNA / BLOODYSHADE CUSTOM - BEGINNING **********/
 
-#include "defines/mod.hsp"
+    gosub *ErrorMsgInit
 
 	dim dblist_dup_card, MAX_DB, 2
 	dim dblist_dup_fig, MAX_DB, 2
 
 	// Custom AI Declarations
@@ -5480,10 +5480,58 @@
 			keybd_event 144, 0, 2
 		}
 	}
 	goto *game_init
 
+*ErrorMsgInit
+    sdim ErrorMsg, 2, 42
+
+    ErrorMsg(0, 0) = "",                                            ""
+    ErrorMsg(0, 1) = "システムエラーが発生しました",                "Unknown system error"
+    ErrorMsg(0, 2) = "文法が間違っています",                        "Syntax error"
+    ErrorMsg(0, 3) = "パラメータの値が異常です",                    "Illegal function call"
+    ErrorMsg(0, 4) = "計算式でエラーが発生しました",                "Wrong expression"
+    ErrorMsg(0, 5) = "パラメータの省略はできません",                "Default parameter not allowed"
+    ErrorMsg(0, 6) = "パラメータの型が違います",                    "Type mismatch"
+    ErrorMsg(0, 7) = "配列の要素が無効です",                        "Array overflow"
+    ErrorMsg(0, 8) = "有効なラベルが指定されていません",            "Not a label object"
+    ErrorMsg(0, 9) = "サブルーチンやループのネストが深すぎます",    "Too many nesting"
+    ErrorMsg(0, 10) = "サブルーチン外のreturnは無効です",           "Return without gosub"
+    ErrorMsg(0, 11) = "repeat外でのloopは無効です",                 "Loop without repeat"
+    ErrorMsg(0, 12) = "ファイルが見つからないか無効な名前です",     "File I/O error"
+    ErrorMsg(0, 13) = "画像ファイルがありません",                   "Picture file missing"
+    ErrorMsg(0, 14) = "外部ファイル呼び出し中のエラーです",         "External execute error"
+    ErrorMsg(0, 15) = "計算式でカッコの記述が違います",             "Priority error"
+    ErrorMsg(0, 16) = "パラメータの数が多すぎます",                 "Too many parameters"
+    ErrorMsg(0, 17) = "文字列式で扱える文字数を越えました",         "Temporary buffer overflow"
+    ErrorMsg(0, 18) = "代入できない変数名を指定しています",         "Wrong valiable name"
+    ErrorMsg(0, 19) = "0で除算しました",                            "Divided by zero"
+    ErrorMsg(0, 20) = "バッファオーバーフローが発生しました",       "Buffer Overflow"
+    ErrorMsg(0, 21) = "サポートされない機能を選択しました",         "Unsupported function"
+    ErrorMsg(0, 22) = "計算式のカッコが深すぎます",                 "Expression too complex"
+    ErrorMsg(0, 23) = "変数名が指定されていません",                 "Variable required"
+    ErrorMsg(0, 24) = "整数以外が指定されています",                 "Integer value required"
+    ErrorMsg(0, 25) = "配列の要素書式が間違っています",             "Bad array expression"
+    ErrorMsg(0, 26) = "メモリの確保ができませんでした",             "Out of memory"
+    ErrorMsg(0, 27) = "タイプの初期化に失敗しました",               "Type initalization failed"
+    ErrorMsg(0, 28) = "関数に引数が設定されていません",             "No Function parameters"
+    ErrorMsg(0, 29) = "スタック領域のオーバーフローです",           "Stack overflow"
+    ErrorMsg(0, 30) = "無効な名前がパラメーターに指定されています", "Invalid parameter name"
+    ErrorMsg(0, 31) = "異なる型を持つ配列変数に代入しました",       "Invalid type of array"
+    ErrorMsg(0, 32) = "関数のパラメーター記述が不正です",           "Invalid function parameter"
+    ErrorMsg(0, 33) = "オブジェクト数が多すぎます",                 "Too many window objects"
+    ErrorMsg(0, 34) = "配列・関数として使用できない型です",         "Invalid Array/Function"
+    ErrorMsg(0, 35) = "モジュール変数が指定されていません",         "Structure required"
+    ErrorMsg(0, 36) = "モジュール変数の指定が無効です",             "Illegal structure call"
+    ErrorMsg(0, 37) = "変数型の変換に失敗しました",                 "Invalid type of variable"
+    ErrorMsg(0, 38) = "外部DLLの呼び出しに失敗しました",            "DLL call failed"
+    ErrorMsg(0, 39) = "外部オブジェクトの呼び出しに失敗しました",   "External COM call failed"
+    ErrorMsg(0, 40) = "関数の戻り値が設定されていません。",         "No function result"
+    ErrorMsg(0, 41) = "関数を命令として記述しています。",           "Invalid syntax for function"
+
+    return
+
 *exit_game
 	if ( cfg_music == 1 ) {
 		DMEND
 	}
 	if ( cfg_sound == 1 ) {
@@ -5507,11 +5555,13 @@
 		goto *exit_game
 	}
 	else {
 		errorhack++
 	}
-	buf = "HspError " + wparam + " WinError " + GetLastError() + " Ver " + int(double("3.21") * 1000) + " Mode " + mode + "\n"
+	buf = "HspError " + wparam + " WinError " + GetLastError() + " Line " + lparam + " Ver " + int(double("3.21") * 1000) + " Mode " + mode + "\n"
+	buf += "Message (JP): " + ErrorMsg(0, wparam) + "\n"
+	buf += "Message (EN): " + ErrorMsg(1, wparam) + "\n"
 	buf += "efId " + efid + " efP " + efp + " Area " + gdata(GDATA_AREA) + "/" + gdata(GDATA_LEVEL) + "\n"
 	buf += "ci "
 	if ( ci < SIZE_INV1 ) {
 		buf += "0"
 		if ( ci >= 0 ) {
diff -U5 --recursive 1.90.4-custom/item.hsp 1.90.4.2-custom-g/item.hsp
--- 1.90.4-custom/item.hsp	2021-09-02 12:55:06.567246500 -0700
+++ 1.90.4.2-custom-g/item.hsp	2021-09-02 12:55:07.015100900 -0700
@@ -978,17 +978,22 @@
 					}
 				}
 				flt
 				itemcreate -1, ITEM_ID_CORPSE, cdata(CDATA_X, rc), cdata(CDATA_Y, rc), 0
 				if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH & cbit(CHARA_BIT_LIVESTOCK, rc) == 1 ) {
-					inv(INV_ITEM_LEVEL, ci) += limit(rnd((sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) + 1) / 40 + 2) + situ, 0, 5) + 5 + cdata(CDATA_SPRITE_SIZE_MILK, rc) + cdata(CDATA_BRUSH_LEVEL, rc)
+					if (TweakData(54, 2) == 1) {
+						inv(INV_ITEM_LEVEL, ci) += limit(rnd((sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) + 1) / 40 + 2) + situ, 0, 5) + 5 + cdata(CDATA_SPRITE_SIZE_MILK, rc) + cdata(CDATA_BRUSH_LEVEL, rc)
+					}
+					else {
+						inv(INV_ITEM_LEVEL, ci) += limit(rnd((sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) + 1) / 20 + 2) + situ, 1, 10) + cdata(CDATA_BRUSH_LEVEL, rc)
+					}
 				}
 				else {
 					inv(INV_ITEM_LEVEL, ci) += cdata(CDATA_BRUSH_LEVEL, rc)
-				}
-				if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_AMUR_CAGE ) {
-					inv(INV_ITEM_AMUR_CAGE, ci) = 1
+					if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_AMUR_CAGE ) {
+						inv(INV_ITEM_AMUR_CAGE, ci) = 1
+					}
 				}
 				remain_make ci, rc
 				if ( stat != 0 ) {
 					remain_make ci, rc
 					if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH & cbit(CHARA_BIT_LIVESTOCK, rc) == 1 ) {
@@ -998,11 +1003,16 @@
 					}
 				}
 				if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH & cbit(CHARA_BIT_LIVESTOCK, rc) == 1 ) {
 					flt
 					itemcreate -1, ITEM_ID_SKIN, cdata(CDATA_X, rc), cdata(CDATA_Y, rc), 0
-					inv(INV_ITEM_LEVEL, ci) += limit(rnd((sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) + 1) / 40 + 2) + situ2, 0, 5) + 5 + cdata(CDATA_SPRITE_SIZE_MILK, rc) + cdata(CDATA_BRUSH_LEVEL, rc)
+					if (TweakData(54, 2) == 1) {
+						inv(INV_ITEM_LEVEL, ci) += limit(rnd((sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) + 1) / 40 + 2) + situ2, 0, 5) + 5 + cdata(CDATA_SPRITE_SIZE_MILK, rc) + cdata(CDATA_BRUSH_LEVEL, rc)
+					}
+					else {
+						inv(INV_ITEM_LEVEL, ci) += limit(rnd((sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) + 1) / 20 + 2) + situ2, 1, 10) + cdata(CDATA_BRUSH_LEVEL, rc)
+					}
 					inv(INV_ITEM_NUM, ci) = 1 + rnd(1 + (sdata(SKILL_NORMAL_ANATOMY, CHARA_PLAYER) > cdata(CDATA_LEVEL, rc))) + ryou2
 				}
 				if ( stat != 0 ) {
 					remain_make ci, rc
 				}
@@ -1584,10 +1594,18 @@
 		if ( cdata(CDATA_SEX, rc) == 1 ) {
 			flt
 			itemcreate -1, ITEM_ID_ESSENTIAL_OIL, cdata(CDATA_X, rc), cdata(CDATA_Y, rc), 0
 		}
 	}
+	if ( cdata(CDATA_ID, rc) == CREATURE_ID_ZOMBIE ) {
+		if ( rnd(100) == 0 ) {
+			if ( gdata(GDATA_FLAG_RARE_DROP) == 100 ) {
+				flt
+				itemcreate -1, ITEM_ID_POTION_DESCENT, cdata(CDATA_X, rc), cdata(CDATA_Y, rc), 0
+			}
+		}
+	}
 	cell_refresh cdata(CDATA_X, rc), cdata(CDATA_Y, rc)
 	if ( cdata(CDATA_ROLE, rc) == ROLE_ADVENTURER ) {
 		gosub *supplyEquip
 	}
 	return
@@ -2550,12 +2568,18 @@
 	flt
 	if ( rnd(2) ) {
 		itemcreate -1, ITEM_ID_EGG, cdata(CDATA_X, lovemiracle_arg1), cdata(CDATA_Y, lovemiracle_arg1), 0
 		if ( stat ) {
 			inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, lovemiracle_arg1)
-			inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, lovemiracle_arg1) / 10 * 40, 20, 10000)
-			inv(INV_ITEM_VALUE, ci) = limit((cdata(CDATA_WEIGHT, lovemiracle_arg1) + 2400) / 4, 600, 3000)
+			if (TweakData(54, 2) == 1) {
+				inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, lovemiracle_arg1) / 10 * 40, 20, 10000)
+				inv(INV_ITEM_VALUE, ci) = limit((cdata(CDATA_WEIGHT, lovemiracle_arg1) + 2400) / 4, 600, 3000)
+			}
+			else {
+				inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, lovemiracle_arg1) * 10 + 250, 100, 100000)
+				inv(INV_ITEM_VALUE, ci) = limit((limit(cdata(CDATA_WEIGHT, lovemiracle_arg1) * 10 + 250, 100, 100000) + 13000) / 14, 1000, 8000)
+			}
 		}
 	}
 	else {
 		itemcreate -1, ITEM_ID_BOTTLE_MILK, cdata(CDATA_X, lovemiracle_arg1), cdata(CDATA_Y, lovemiracle_arg1), 0
 		if ( stat ) {
@@ -2727,30 +2751,30 @@
 	if ( refitem(inv(INV_ITEM_ID, ci), DBSPEC_CARGO) == 1 ) {
 		nutrition += 2500
 	}
 	if ( ibit(ITEM_BIT_HERBED_IN, ci) == 1 ) {
 		if ( cc == CHARA_PLAYER ) {
-			skillexp SKILL_ATTR_STR, cc, 2000
-			skillexp SKILL_ATTR_CON, cc, 2000
-			skillexp SKILL_ATTR_DEX, cc, 2000
-			skillexp SKILL_ATTR_PER, cc, 2000
-			skillexp SKILL_ATTR_LER, cc, 2000
-			skillexp SKILL_ATTR_WIL, cc, 2000
-			skillexp SKILL_ATTR_MAG, cc, 2000
-			skillexp SKILL_ATTR_CHA, cc, 2000
-			skillexp SKILL_ATTR_SPD, cc, 2000
+			skillexp SKILL_ATTR_STR, cc, 2400
+			skillexp SKILL_ATTR_CON, cc, 2400
+			skillexp SKILL_ATTR_DEX, cc, 2400
+			skillexp SKILL_ATTR_PER, cc, 2400
+			skillexp SKILL_ATTR_LER, cc, 2400
+			skillexp SKILL_ATTR_WIL, cc, 2400
+			skillexp SKILL_ATTR_MAG, cc, 2400
+			skillexp SKILL_ATTR_CHA, cc, 2400
+			skillexp SKILL_ATTR_SPD, cc, 2400
 		}
 		else {
-			skillexp SKILL_ATTR_STR, cc, 10000
-			skillexp SKILL_ATTR_CON, cc, 10000
-			skillexp SKILL_ATTR_DEX, cc, 10000
-			skillexp SKILL_ATTR_PER, cc, 10000
-			skillexp SKILL_ATTR_LER, cc, 10000
-			skillexp SKILL_ATTR_WIL, cc, 10000
-			skillexp SKILL_ATTR_MAG, cc, 10000
-			skillexp SKILL_ATTR_CHA, cc, 10000
-			skillexp SKILL_ATTR_SPD, cc, 10000
+			skillexp SKILL_ATTR_STR, cc, 8000
+			skillexp SKILL_ATTR_CON, cc, 8000
+			skillexp SKILL_ATTR_DEX, cc, 8000
+			skillexp SKILL_ATTR_PER, cc, 8000
+			skillexp SKILL_ATTR_LER, cc, 8000
+			skillexp SKILL_ATTR_WIL, cc, 8000
+			skillexp SKILL_ATTR_MAG, cc, 8000
+			skillexp SKILL_ATTR_CHA, cc, 8000
+			skillexp SKILL_ATTR_SPD, cc, 8000
 		}
 	}
 	fdmax = 0
 	i = inv(INV_ITEM_PARAM1, ci) / 1000
 	if ( i == 1 | inv(INV_ITEM_ID, ci) == ITEM_ID_JERKY ) {
@@ -3342,31 +3366,20 @@
 					nutrition = nutrition * 2 / 3
 				}
 			}
 		}
 	}
-	if ( inv(INV_ITEM_ID, ci) == ITEM_ID_CORPSE & inv(INV_ITEM_AMUR_CAGE, ci) != 1 ) {
+	if ( inv(INV_ITEM_ID, ci) == ITEM_ID_CORPSE ) {
 		dbmode = DBMODE_ON_EAT
 		dbid = inv(INV_ITEM_SUB_NAME, ci)
 		gosub *db_creature
 	}
 	repeat fdmax
-		i = 100
-		if ( cc == CHARA_PLAYER ) {
-			i = 1500
-			if ( inv(INV_ITEM_MATERIAL, ci) == ITEM_MATERIAL_RAW ) {
-				if ( inv(INV_ITEM_ROT, ci) < 0 ) {
-					i = 500
-				}
-			}
-		}
-		if ( cc != CHARA_PLAYER ) {
-			i = 1500
-			if ( inv(INV_ITEM_MATERIAL, ci) == ITEM_MATERIAL_RAW ) {
-				if ( inv(INV_ITEM_ROT, ci) < 0 ) {
-					i = 500
-				}
+		i = 1500
+		if ( inv(INV_ITEM_MATERIAL, ci) == ITEM_MATERIAL_RAW ) {
+			if ( inv(INV_ITEM_ROT, ci) < 0 ) {
+				i = 500
 			}
 		}
 		if ( ibit(ITEM_BIT_ANTISEPTIC, ci) == 1 ) {
 			i = i / 2 + 1
 		}
@@ -3915,11 +3928,11 @@
 	return
 
 *eatHorse
 	if ( synccheck(cc, -1) ) {
 		txtef COLOR_GREEN
-		txt lang("馬肉だ！これは精がつきそうだ。", "A horsemeat! It's nourishing")
+		txt lang("馬肉だ！これは精がつきそうだ。", "A horsemeat! It's nourishing.")
 	}
 	skillexp SKILL_ATTR_CON, cc, 100
 	return
 
 *eatHoly
diff -U5 --recursive 1.90.4-custom/item_data.hsp 1.90.4.2-custom-g/item_data.hsp
--- 1.90.4-custom/item_data.hsp	2021-09-02 12:55:06.572317700 -0700
+++ 1.90.4.2-custom-g/item_data.hsp	2021-09-02 12:55:07.018406800 -0700
@@ -1854,11 +1854,11 @@
 			}
 		}
 	}
 	if ( val == ENCHANT_GOD_SIGNALS ) {
 		rtval = 4
-		s = lang("神が発する電波をキャッチする", "catches signals from God.")
+		s = lang("神が発する電波をキャッチする", "catches signals from the gods.")
 		if ( (-1) == (-1) ) {
 			return
 		}
 		else {
 			if ( val(2) == 0 ) {
diff -U5 --recursive 1.90.4-custom/item_func.hsp 1.90.4.2-custom-g/item_func.hsp
--- 1.90.4-custom/item_func.hsp	2021-09-02 12:55:06.576729300 -0700
+++ 1.90.4.2-custom-g/item_func.hsp	2021-09-02 12:55:07.021772100 -0700
@@ -1498,16 +1498,20 @@
 			if ( inv(INV_ITEM_KNOWN, itemname_itemid) >= ITEM_KNOWN_FULL & (inv(INV_ITEM_QUALITY, itemname_itemid) >= FIX_QUALITY_MIRACLE & locvar_itemowner_a < FILTER_ITEM_MIN) ) {
 				locvar_itemowner_s = "the " + locvar_itemowner_s
 			}
 			else {
 				if ( locvar_itemowner_num2 == 1 ) {
-					locvar_itemname_s4 = strmid(locvar_itemowner_s, 0, 1)
-					if ( locvar_itemname_s4 == "a" | locvar_itemname_s4 == "o" | locvar_itemname_s4 == "i" | locvar_itemname_s4 == "u" | locvar_itemname_s4 == "e" ) {
-						locvar_itemowner_s = "an " + locvar_itemowner_s
-					}
-					else {
+					if (locvar_itemowner_s == "unicorn horn") {
 						locvar_itemowner_s = "a " + locvar_itemowner_s
+					} else {
+						locvar_itemname_s4 = strmid(locvar_itemowner_s, 0, 1)
+						if ( locvar_itemname_s4 == "a" | locvar_itemname_s4 == "o" | locvar_itemname_s4 == "i" | locvar_itemname_s4 == "u" | locvar_itemname_s4 == "e" ) {
+							locvar_itemowner_s = "an " + locvar_itemowner_s
+						}
+						else {
+							locvar_itemowner_s = "a " + locvar_itemowner_s
+						}
 					}
 				}
 			}
 		}
 
@@ -1802,26 +1806,24 @@
 	}
 	if ( ibit(ITEM_BIT_PERIOD, itemname_itemid) == 1 ) {
 		if ( gdata(GDATA_AREA) == AREA_VALM ) {
 			if ( gdata(GDATA_LEVEL) == 3 ) {
 				inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_INTERVAL, itemname_itemid)
-				if ( inv(INV_ITEM_INTERVAL, itemname_itemid) >= 24 ) {
-					inv(INV_ITEM_NEED_SLEEP, itemname_itemid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12
-				}
+				inv(INV_ITEM_NEED_SLEEP, itemname_itemid) = 1
+				gdata(STARTING_GDATA_FLAG + 376) = 1
 			}
 		}
 		if ( gdata(GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE) == 100 ) {
 			inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 + inv(INV_ITEM_INTERVAL, itemname_itemid)
-			if ( inv(INV_ITEM_INTERVAL, itemname_itemid) >= 24 ) {
-				inv(INV_ITEM_NEED_SLEEP, itemname_itemid) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12
-			}
+			inv(INV_ITEM_NEED_SLEEP, itemname_itemid) = 1
+			gdata(STARTING_GDATA_FLAG + 376) = 1
 		}
 		if ( gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 < inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) ) {
 			locvar_itemowner_s += lang("(" + (inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) - (gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12)) + "時間)", "(Next: " + (inv(INV_ITEM_NEXT_PERIOD, itemname_itemid) - (gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12)) + "h.)")
 		}
-		if ( inv(INV_ITEM_NEED_SLEEP, itemname_itemid) > 1 ) {
-			if ( inv(INV_ITEM_NEED_SLEEP, itemname_itemid) >= gdata(STARTING_GDATA_FLAG + 376) ) {
+		if ( gdata(STARTING_GDATA_FLAG + 376) == 1 ) {
+			if ( inv(INV_ITEM_NEED_SLEEP, itemname_itemid) != 0 ) {
 				locvar_itemowner_s += lang("(要睡眠)", " (Need Sleep)")
 			}
 		}
 	}
 	if ( inv(INV_ITEM_ID, itemname_itemid) == ITEM_ID_SHELTER ) {
@@ -1849,15 +1851,26 @@
 #deffunc remain_make int remain_make_itemid, int remain_make_arg2
 	inv(INV_ITEM_SUB_NAME, remain_make_itemid) = cdata(CDATA_ID, remain_make_arg2)
 	inv(INV_ITEM_COL, remain_make_itemid) = (cdata(CDATA_PIC, remain_make_arg2) - cdata(CDATA_CHARA_PIC, remain_make_arg2) * COLOR_TINT_MULT) / COLOR_TINT_MULT
 	inv(INV_ITEM_WEIGHT, remain_make_itemid) = cdata(CDATA_WEIGHT, remain_make_arg2) + 1
 	if ( inv(INV_ITEM_ID, remain_make_itemid) == ITEM_ID_CORPSE ) {
-		inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(inv(INV_ITEM_WEIGHT, remain_make_itemid) / 10 * 200, 100, 50000)
-		inv(INV_ITEM_VALUE, remain_make_itemid) = limit((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 12000) / 4, 3000, 15000)
+		if (TweakData(54, 2) == 1) {
+			inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(inv(INV_ITEM_WEIGHT, remain_make_itemid) / 10 * 200, 100, 50000)
+			inv(INV_ITEM_VALUE, remain_make_itemid) = limit((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 12000) / 4, 3000, 15000)
+		}
+		else {
+			inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(250 * ((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 100) / 100) + 500, 500, 100000)
+			inv(INV_ITEM_VALUE, remain_make_itemid) = limit((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 10000) / 10 + 1000, 1000, 12000)
+		}
 	}
 	else {
-		inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(inv(INV_ITEM_WEIGHT, remain_make_itemid) / 10 * 50, 0, 5000)
+		if (TweakData(54, 2) == 1) {
+			inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(inv(INV_ITEM_WEIGHT, remain_make_itemid) / 10 * 50, 0, 5000)
+		}
+		else {
+			inv(INV_ITEM_WEIGHT, remain_make_itemid) = limit(20 * ((inv(INV_ITEM_WEIGHT, remain_make_itemid) + 500) / 500), 0, 10000)
+		}
 		inv(INV_ITEM_VALUE, remain_make_itemid) = limit(cdata(CDATA_LEVEL, remain_make_arg2) * 40 + 600, 1, 12000)
 		if ( refchara(cdata(CDATA_ID, remain_make_arg2), DBSPEC_CHARA_RARE) < 20 ) {
 			if ( cdata(CDATA_RELATION_ORG, remain_make_arg2) < (-1) ) {
 				inv(INV_ITEM_VALUE, remain_make_itemid) = inv(INV_ITEM_VALUE, remain_make_itemid) * limit(4 - refchara(cdata(CDATA_ID, remain_make_arg2), DBSPEC_CHARA_RARE) / 5, 1, 5)
 			}
diff -U5 --recursive 1.90.4-custom/main.hsp 1.90.4.2-custom-g/main.hsp
--- 1.90.4-custom/main.hsp	2021-09-02 12:55:06.587324900 -0700
+++ 1.90.4.2-custom-g/main.hsp	2021-09-02 12:55:07.026870700 -0700
@@ -1,18 +1,18 @@
-//#pack "scene1.hsp"
-//#pack "scene2.hsp"
+#pack "scene1.hsp"
+#pack "scene2.hsp"
 #packopt type 0
-#packopt name "ElonaC"
+#packopt name "ElonaCG"
 
 #uselib "exrand.dll"
 #func exrand_randomize "_exrand_randomize@16" int, int, int, int
 #func exrand_rnd "_exrand_rnd@16" var, int, int, int
 
-#uselib "hspda.dll"
-#func sortnote "_sortnote@16" pexinfo, nullptr, nullptr, nullptr
-#func xnotesel "_xnotesel@16" pval, int, int, int
-#func xnoteadd "_xnoteadd@16" bmscr, str, int, int
+; #uselib "hspda.dll"
+; #func sortnote "_sortnote@16" pexinfo, nullptr, nullptr, nullptr
+; #func xnotesel "_xnotesel@16" pval, int, int, int
+; #func xnoteadd "_xnoteadd@16" bmscr, str, int, int
 
 #uselib "hspext_ext.dll"
 #func gfini "_gfini@16" bmscr, int, int, int
 #func gfdec "_gfdec@16" int, int, int, int
 #func gfdec2 "_gfdec2@16" int, int, int, int
@@ -106,53 +106,69 @@
 #cfunc ImmGetContext "ImmGetContext" sptr
 #func ImmReleaseContext "ImmReleaseContext" sptr, sptr
 #func ImmSetOpenStatus "ImmSetOpenStatus" sptr, sptr
 #cfunc ImmGetOpenStatus "ImmGetOpenStatus" sptr
 
+#define global develop 0
+
+	if ( develop ) {
+		dbg_hpAlwaysFull = 1
+		dbg_skipCm = 1
+	}
+
 	sdim proclist, 50, 4
-	
+
 	; #include "exrand.as"
-	
-	exedir = dirinfo(1) + "\\"
+
+    ; If we're running under hsed3, dir_exe will be the HSP installation folder
+    ; (C:\bin\hsp30), *not* the folder with Elona's assets.
+    ;
+    ; If the editor is being used, then _DEBUG will be defined as true, so check 
+    ; that when setting the executable directory.
+#ifdef _DEBUG
+	exedir = dir_cur + "\\..\\assets\\1.90.4.2-custom-g\\"
+#else
+	exedir = dir_exe + "\\"
+#endif
 	devfile = ""
-	
+
 	onerror goto *exit_game_error
 	randomize
 	randseed = rnd(2000)
 	randomize randseed
 	exrand_randomize randseed
-	
-	title "ElonaPlus Custom 1.90.4"
-	
+
+	title "Elona+ Custom-G 1.90.4.2"
+
 	goto *system_init
-	
-	; #include "hspda.as"
+
+	#include "hspda.as"
 	; #include "hspext_ext.as"
 	; #include "elonadll.as"
 	; #include "z.as"	
 	; #include "comdlg32.as"
 	; #include "hspmath.as"
 	; #include "hmm.as"
 	; #include "hspsock.as"
 	; #include "hspinet.as"
-	
+
 	#include "init.hsp"
 	#include "chips.hsp"
 	
 	; #if fastcmp=0	
 	; #include "db_defitem.hsp"
 	; #else
 	; #include "db_defitem_fake.hsp"	
 	; #endif
-	
+
 	#include "etc.hsp"
-	
+
 	#include "item_data.hsp"
 	#include "item_func.hsp"
 	#include "module.hsp"
 	#include "material_data.hsp"
-	
+
 	; #if fastcmp=0	
 	#include "db_item.hsp"
 	; #else
 	; #include "db_item_fake.hsp"	
 	; #endif
@@ -166,20 +182,19 @@
 	#include "map_func.hsp"
 	#include "map_rand.hsp"
 	#include "map_user.hsp"
 	#include "map.hsp"
 	#include "tcg.hsp"
-	
+
 	#include "material.hsp"	
 	#include "txtadv.hsp"
 	#include "god.hsp"
-	
+
 	#include "event.hsp"
 	#include "blend.hsp"
 	#include "command.hsp"
 	#include "system.hsp"
-	#include "skill.hsp"
 	#include "proc.hsp"
 	#include "action.hsp"
 	#include "chat.hsp"
 	#include "economy.hsp"
 	
@@ -196,11 +211,11 @@
 	#include "randname.hsp"
 	#include "adv.hsp"
 	#include "quest.hsp"
 	#include "scene.hsp"
 	#include "ai.hsp"
-	
+
 	#include "help.hsp"
 
 *game_init
 	gdata(GDATA_YEAR) = 517, 8, 12, 16, 10
 	quickpage = 1
@@ -974,16 +989,11 @@
 			spd = 10
 		}
 		cdata(CDATA_SPEED_SUM, cnt) += spd * turncost
 	loop
 *spdSkip
-	if ( gdata(GDATA_AREA) == AREA_VALM & gdata(GDATA_LEVEL) == 3 ) {
-		gdata(GDATA_SEC) += limit(turncost / 5 + 1, 500, 10000)
-	}
-	else {
-		gdata(GDATA_SEC) += limit(turncost / 5 + 1, 5, 2000)
-	}
+	gdata(GDATA_SEC) += turncost / 5 + 1
 	if ( gdata(GDATA_SEC) >= 60 ) {
 		gdata(GDATA_TURN)++
 		cc = CHARA_PLAYER
 		if ( gdata(GDATA_TURN) \ 10 == 0 ) {
 			gosub *chara_spawn
@@ -1237,22 +1247,16 @@
 	gosub *item_rot
 	if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
 		if ( rnd(3) == 0 ) {
 			gdata(GDATA_SLEEP)++
 		}
-		if ( rnd(15) == 0 ) {
+		if ( TweakData(53, 2) == 0 & rnd(15) == 0 ) {
 			if ( mode == MODELIST_MAIN ) {
-				if ( gdata(GDATA_FLAG_SLEEP_PREVENTION) <= 0 ) {
-					txt lang("仮眠をとった。", "You take a nap.")
-					gdata(GDATA_SLEEP) -= 3
-					if ( gdata(GDATA_SLEEP) < 0 ) {
-						gdata(GDATA_SLEEP) = 0
-					}
-				}
-				else {
-					txt lang("眠気を我慢した。", "You endure your sleepiness.")
-					gdata(GDATA_FLAG_SLEEP_PREVENTION)--
+				txt lang("仮眠をとった。", "You take a nap.")
+				gdata(GDATA_SLEEP) -= 3
+				if ( gdata(GDATA_SLEEP) < 0 ) {
+					gdata(GDATA_SLEEP) = 0
 				}
 			}
 		}
 	}
 	else {
@@ -1520,13 +1524,10 @@
 				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 					continue
 				}
 				r1 = cnt
 				gosub *expRegen
-				if ( cdata(CDATA_THIRST, cnt) >= 10000 ) {
-					healsp cnt, 2
-				}
 			loop
 		}
 		if ( p == 2 ) {
 			repeat MAX_CHARA_TOTAL
 				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
@@ -1838,16 +1839,10 @@
 		if ( rnd(60 + cdata(CDATA_ALCOHOL_CONSUMED, cc) * 5) == 0 ) {
 			chara_vomit cc
 			goto *turn_end
 		}
 	}
-	if ( cdata(CDATA_THIRST, cc) > 35000 ) {
-		if ( rnd(60) == 0 ) {
-			chara_morasi cc
-			goto *turn_end
-		}
-	}
 	if ( cdata(CDATA_ROW_ACT_WARNING, cc) == 1 ) {
 		if ( cc == CHARA_PLAYER ) {
 			if ( cdata(CDATA_ROW_ACT, cc) != ACTION_PERFORM_DANCE & cdata(CDATA_ROW_ACT, cc) != ACTION_EAT & cdata(CDATA_ROW_ACT, cc) != ACTION_READ & cdata(CDATA_ROW_ACT, cc) != ACTION_TRAVEL ) {
 				rtval = 0
 			}
@@ -2088,16 +2083,15 @@
 				gosub *generalAct
 			}
 		}
 		if ( cdata(CDATA_BURDEN, CHARA_PLAYER) >= 3 ) {
 			if ( rnd(20) == 0 ) {
-				txt lang(name(CHARA_PLAYER) + "は荷物に圧迫されもがいた。", "You are being squashed by your backpack!")
+				txt lang(name(CHARA_PLAYER) + "は荷物に圧迫されもがいた。", "Your backpack is squashing you!")
 				dmghp cc, cdata(CDATA_MAX_HP, cc) * (cdata(CDATA_INV_WEIGHT, CHARA_PLAYER) * 10 / cdata(CDATA_CARRY_LIMIT, CHARA_PLAYER) + 10) / 200 + 1, DAMAGE_FROM_BURDEN
 			}
 		}
 		gosub *calcHunger
-		gosub *calcThirst
 		refreshspeed cc
 		procid = (procid + 1) \ 4
 		proclist(procid) = "turn_end:pc" + " ct:" + ct
 	}
 	else {
@@ -2106,14 +2100,10 @@
 			if ( cdata(CDATA_HUNGER, cc) < 3000 ) {
 				if ( cbit(CHARA_BIT_ANOREXIA, cc) == 0 ) {
 					cdata(CDATA_HUNGER, cc) = 3000
 				}
 			}
-			cdata(CDATA_THIRST, cc) -= 8
-			if ( cdata(CDATA_THIRST, cc) < 3000 ) {
-				cdata(CDATA_THIRST, cc) = 3000
-			}
 		}
 	}
 	if ( gdata(GDATA_TIME_STOP_TIME) > 0 ) {
 		gdata(GDATA_TIME_STOP_TIME)--
 		if ( cdata(CDATA_EXIST, cc) != CHAR_STATE_ALIVE | gdata(GDATA_TIME_STOP_TIME) == 0 ) {
@@ -2130,24 +2120,10 @@
 			txtef COLOR_SKY_BLUE
 			txt " *tick* "
 			goto *game_main_redo
 		}
 	}
-	if ( gdata(STARTING_GDATA_FLAG + 373) > 9999 ) {
-		if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
-			evadd EVENT_RAGNAROK, 0
-			repeat 4
-				flt , 5
-				initlv = 1800
-				characreate -1, CREATURE_ID_LAST_DANCER, -3, 0
-				cbitmod CHARA_BIT_SUMMONED, rc, 1
-				cdata(CDATA_TARGET, rc) = 0
-				cdata(CDATA_AI_AGGRO, rc) = 300
-			loop
-			gdata(STARTING_GDATA_FLAG + 373) = -9999
-		}
-	}
 	goto *game_main
 
 *pc_turn_init
 
 	/********** ANNA CUSTOM - BEGINNING **********/ // Initialize tweak variable
@@ -2518,13 +2494,10 @@
 			txt lang("装備を変更した。", "You change your equipment.")
 		}
 		goto *turn_end
 	}
 	t++
-	if ( cdata(CDATA_CHAIN_ATTACK_COUNT, CHARA_PLAYER) != 0 ) {
-		cdata(CDATA_CHAIN_ATTACK_COUNT, CHARA_PLAYER) = 0
-	}
 	if ( t \ cfg_scrsync == 1 ) {
 		scrturn++
 		gosub *screen_sync
 	}
 	if ( cfg_net ) {
@@ -3508,11 +3481,11 @@
 	gcopy 4, 0, 0, windoww, windowh
 	gsel 4
 	pos 0, 0
 	picload exedir + "\\graphic\\g1.bmp", 1
 	gsel 0
-	s = lang("" + cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "に祝福あれ！あなたは遂に混沌の神を討伐した！", "Blessing to " + cdatan(CDATAN_NAME, CHARA_PLAYER) + ", " + cdatan(CDATAN_AKA, CHARA_PLAYER) + "! You've finally beat the God of Chaos!")
+	s = lang("" + cdatan(CDATAN_AKA, CHARA_PLAYER) + cdatan(CDATAN_NAME, CHARA_PLAYER) + "に祝福あれ！あなたは遂に混沌の神を討伐した！", "Blessing to " + cdatan(CDATAN_NAME, CHARA_PLAYER) + ", " + cdatan(CDATAN_AKA, CHARA_PLAYER) + "! You've finally beat the god of chaos!")
 	gosub *screen_drawMsg2
 	s = lang("*勝利*", "*Win*"), "" + strhint3
 	windowshadow = 1
 	display_window 60, 70, 680, 488
 	cmbg = 0
@@ -5061,11 +5034,11 @@
 		flt
 		itemcreate -1, ITEM_ID_SCROLL_ESCAPE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 		flt
 		itemcreate -1, ITEM_ID_SCROLL_RETURN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 		flt
-		itemcreate -1, ITEM_ID_GOLD_PIECE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(nkane * 50 + nkane * sqrt(nkane + 1) * 5 + 200, 300, 50000)
+		itemcreate -1, ITEM_ID_GOLD_PIECE, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(nkane * 1000 + nkane * nkane * 5, 1000, 999999)
 		flt
 		itemcreate -1, ITEM_ID_PLATINUM_COIN, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), limit(1 + gdata(GDATA_LEVEL) / 20, 1, 5)
 		flt
 		itemcreate -1, ITEM_ID_BEJEWELED_CHEST, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 		inv(INV_ITEM_PARAM2, ci) = 0
@@ -6362,18 +6335,12 @@
 		}
 		gdata(GDATA_FLAG_RAGNAROK_STARTED)++
 		gdata(GDATA_WEATHER) = WEATHER_ETHER
 		envonly = 1
 		gosub *music_play
-		if ( gdata(STARTING_GDATA_FLAG + 373) < 9999 & gdata(STARTING_GDATA_FLAG + 373) >= 0 ) {
-			txt lang("終末の日が訪れた。", "Let's Ragnarok!")
-			msg_halt
-		}
-		if ( gdata(STARTING_GDATA_FLAG + 373) >= 9999 | gdata(STARTING_GDATA_FLAG + 373) < 0 ) {
-			txt lang("*カーテンコール*", "*Curtain Call*")
-			await 2000
-		}
+		txt lang("終末の日が訪れた。", "Let's Ragnarok!")
+		msg_halt
 		animeid = ANIMATION_RAGNA
 		gosub *anime
 		repeat 200
 			repeat 2
 				x = rnd(mdata(MDATA_WIDTH))
diff -U5 --recursive 1.90.4-custom/map.hsp 1.90.4.2-custom-g/map.hsp
--- 1.90.4-custom/map.hsp	2021-09-02 12:55:06.603898400 -0700
+++ 1.90.4.2-custom-g/map.hsp	2021-09-02 12:55:07.039830400 -0700
@@ -511,13 +511,10 @@
 		gdata(STARTING_GDATA_FLAG + 379) = 0
 		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 			continue
 		}
 		cdata(CDATA_CONDITION_GRAVITY, cnt) = 0
-		if ( cnt >= MAX_CHARA_FOLLOWER ) {
-			cdata(CDATA_THIRST, cnt) = 6000 + 1000
-		}
 		if ( cdata(CDATA_ID, cnt) == CREATURE_ID_LAST_DANCER ) {
 			if ( cbit(CHARA_BIT_SANDBAG, cnt) == 0 ) {
 				if ( cdata(CDATA_ALLIED, cnt) == 0 ) {
 					cdata(CDATA_EXIST, cnt) = CHAR_STATE_DEAD
 					map(cdata(CDATA_X, cnt), cdata(CDATA_Y, cnt), 1) = 0
@@ -856,11 +853,11 @@
 							gdata(GDATA_AREA) = AREA_WILDERNESS
 						}
 					}
 					if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_CHAOS_CRADLE ) {
 						if ( gdata(GDATA_FLAG_MAIN) < 370 ) {
-							txt lang("ただならぬ気配を感じる。もう少しこのネフィアについて調べてから探索したほうがよいだろう。", "You feel the unusual sign. You should search it from gaining a little more information would be good.")
+							txt lang("ただならぬ気配を感じる。もう少しこのネフィアについて調べてから探索したほうがよいだろう。", "You sense an extraordinary presence. It would be better to learn more information about this Nefia before exploring it.")
 							msg_halt
 							gdata(GDATA_AREA) = AREA_WILDERNESS
 						}
 					}
 					if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_GUARDIAN_SHRINE ) {
@@ -1009,11 +1006,11 @@
 			if ( adata(ADATA_TYPE, gdata(GDATA_AREA_PREV)) == MAP_TYPE_WORLD ) {
 				msgtemp += lang(mapname(gdata(GDATA_AREA)) + "に入った。", "You entered " + mapname(gdata(GDATA_AREA)) + ".")
 			}
 			else {
 				if ( mdata(MDATA_TYPE) == MAP_TYPE_QUEST ) {
-					msgtemp += lang(mapname(gdata(GDATA_AREA)) + "に戻った。", "You returned to " + mapname(gdata(GDATA_AREA)) + ".")
+					msgtemp += lang(mapname(gdata(GDATA_AREA)) + "に戻った。", " You returned to " + mapname(gdata(GDATA_AREA)) + ".")
 				}
 				else {
 					msgtemp += lang(mapname(gdata(GDATA_AREA_PREV)) + "を後にした。", "You left " + mapname(gdata(GDATA_AREA_PREV)) + ".")
 				}
 			}
@@ -2041,14 +2038,12 @@
 				cdata(CDATA_X, cnt) = 0
 				cdata(CDATA_Y, cnt) = 0
 			}
 			else {
 				cdata(CDATA_EXIST, cnt) = CHAR_STATE_ALIVE
-				if ( cdata(CDATA_DIRECTIVE_MODE, cnt) != DIRECTIVE_MODE_TALKING ) {
-					cdata(CDATA_DIRECTIVE_MODE_ORG, cnt) = cdata(CDATA_DIRECTIVE_MODE, cnt)
-					cdata(CDATA_DIRECTIVE_MODE, cnt) = DIRECTIVE_MODE_TEMPORARY
-				}
+				cdata(CDATA_DIRECTIVE_MODE_ORG, cnt) = cdata(CDATA_DIRECTIVE_MODE, cnt)
+				cdata(CDATA_DIRECTIVE_MODE, cnt) = DIRECTIVE_MODE_TEMPORARY
 			}
 		loop
 		map_placeplayer
 		petarenawin = 0
 		if ( arenaimport == 1 ) {
@@ -3603,13 +3598,15 @@
 
 			if ( ( dbg_noautosave == 0 & gdata(GDATA_WIZARD) == 0 & gdata(GDATA_FLAG_GAME_MODE) != GAMEMODE_PURGE ) | TweakData(TWEAK_GAMEPLAY_ENABLE_SAVE_SCUMMING, TWEAK_CATEGORY_GAMEPLAY) == 0 ) {
 
 			/********** BLOODYSHADE CUSTOM - ENDING **********/
 
-				yoyaku = 100
+				gosub *game_save
+				txtmore
+				txtef COLOR_BLUE
+				txt_saving
 			}
-			txt lang("暗殺者につかまった。あなたはクライアントを守らなければならない。", "You are caught by assassins. You have to protect your client.")
 		}
 		if ( encounter == 2 ) {
 			flt
 			characreate -1, CREATURE_ID_SHOPKEEPER, 10, 11
 			cdata(CDATA_ROLE, rc) = ROLE_SHOP_WANDER, encounterlv
@@ -8409,15 +8406,10 @@
 			if ( gdata(GDATA_AREA) != AREA_PET_ARENA & gdata(GDATA_AREA) != AREA_SHOW_HOUSE ) {
 				gosub *game_save
 			}
 		}
 	}
-	if ( yoyaku == 100 ) {
-		yoyaku = 0
-		gosub *game_save
-		await 300
-	}
 	procid = (procid + 1) \ 4
 	proclist(procid) = "Map:Proc scene" + " ct:" + ct
 	if ( gdata(GDATA_FLAG_MAIN) == 9 ) {
 		sceneid = 2
 		gosub *scene
@@ -8814,11 +8806,11 @@
 		snd SOUNDLIST_BEAST02
 		snd SOUNDLIST_BEAST02
 		snd SOUNDLIST_BEAST02
 		snd SOUNDLIST_BEAST02
 		txtef COLOR_BLUE
-		msgtemp += lang("ビッグダディの唸り声が聞こえる…。", "You heard a growl of Big Daddy...")
+		msgtemp += lang("ビッグダディの唸り声が聞こえる…。", " You heard a growl of Big Daddy...")
 	}
 	if ( gdata(GDATA_AREA) == AREA_CHAOS_CRADLE ) {
 		tc = findchara(CREATURE_ID_GETUEI_THE_NINJA_MASTER)
 		if ( tc != CHARA_PLAYER ) {
 			cbitmod CHARA_BIT_INVISIBLE, tc, 0
@@ -9508,11 +9500,13 @@
 			if ( tc != CHARA_PLAYER ) {
 				if ( cdata(CDATA_PORTRAIT, tc) != 35 ) {
 					cdata(CDATA_PORTRAIT, tc) = 35
 				}
 			}
-			gdata(GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE) = 100
+			if ( TweakData(51, 2) == 0 ) {
+				gdata(GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE) = 100
+			}
 		}
 	}
 	if ( gdata(GDATA_AREA) == AREA_LARNA ) {
 		if ( gdata(GDATA_FLAG_VISITED_LARNA) == 0 ) {
 			evadd EVENT_SPAWN_EVENT_NPCS
@@ -9985,11 +9979,11 @@
 			if ( cbit(CHARA_BIT_LIVESTOCK, cnt) == 1 ) {
 				cdata(CDATA_AI_AGGRO, cnt) = 0
 				cdata(CDATA_RELATION, cnt) = -1
 				cdata(CDATA_RELATION_ORG, cnt) = -1
 			}
-			if ( adata(ADATA_MAX_LEVEL, gdata(GDATA_AREA)) == 1 ) {
+			if ( TweakData(54, 2) == 1 & adata(ADATA_MAX_LEVEL, gdata(GDATA_AREA)) == 1 ) {
 				if ( cbit(CHARA_BIT_LIVESTOCK, cnt) == 1 ) {
 					cdata(CDATA_SPRITE_SIZE_MILK, cnt) = -5
 				}
 			}
 		loop
@@ -10116,16 +10110,45 @@
 							break
 						}
 					loop
 				loop
 			}
-			if ( p == 1 ) {
-				s = lang("あなた", "You've")
-			}
-			else {
-				s = lang("あなたとその仲間", "You and your friends have")
-			}
+			s = "You've"
+			repeat MAX_CHARA_TOTAL
+				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
+					continue
+				}
+				if ( cc == cnt ) {
+					continue
+				}
+				if ( cc < MAX_CHARA_FOLLOWER | cc == CHARA_PLAYER ) {
+					if ( cnt >= MAX_CHARA_FOLLOWER ) {
+						continue
+					}
+				}
+				if ( cc >= MAX_CHARA_FOLLOWER ) {
+					if ( cdata(CDATA_RELATION, cc) != cdata(CDATA_RELATION, cnt) ) {
+						continue
+					}
+				}
+				tc = cnt
+				dx = cdata(CDATA_X, tc)
+				dy = cdata(CDATA_Y, tc)
+				if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) > sdataref(SKILL_DATAREF_TG_RANGE, SKILL_SPACT_CHEER) \ EXT_SDATAREF + 1 ) {
+					continue
+				}
+				if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
+					continue
+				}
+				if ( s == "You've" ) {
+					s = "You and " + name(tc) + " have"
+				}
+				else {
+					s = "You and your friends have"
+				}
+				ens2 += limit((sdata(SKILL_NORMAL_LITERACY, tc) + sdata(SKILL_NORMAL_MEMORIZATION, tc) + 1) / 2, 3, 3 + sdata(SKILL_NORMAL_LITERACY, cc) / 5)
+			loop
 			txtmore
 			txt lang(s + "は" + gdata(GDATA_TRAVEL_DISTANCE) + "マイルの距離を歩き、経験を積んだ。", s + " walked about " + gdata(GDATA_TRAVEL_DISTANCE) + " miles and have gained experience.")
 			gdata(GDATA_TRAVEL_DISTANCE) = 0
 		}
 	}
@@ -10357,11 +10380,16 @@
 				renewmulti = ((gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 - mdata(MDATA_RENEW_MINOR)) / 24 + 1) * 2
 			}
 		}
 		if ( mdata(MDATA_RENEW_MINOR) != 0 ) {
 			if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH ) {
-				renewmulti = limit((gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 - mdata(MDATA_RENEW_MINOR)) / 24 + 1, 1, 30) * 5
+				if ( TweakData(54, 2) == 1 ) {
+					renewmulti = limit((gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 - mdata(MDATA_RENEW_MINOR)) / 24 + 1, 1, 30) * 5
+				}
+				else {
+					renewmulti = ((gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12 - mdata(MDATA_RENEW_MINOR)) / 24 + 1) * 4
+				}
 			}
 		}
 		if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH ) {
 			gosub *ranch_update
 		}
@@ -10625,11 +10653,11 @@
 	loop
 	if ( p <= 25 | gdata(GDATA_FLAG_RENEW_DUNGEON) != 0 | gdata(GDATA_WORLD_RENEW) ) {
 		procid = (procid + 1) \ 4
 		proclist(procid) = "world_update_rand_dungeon" + " ct:" + ct
 		gdata(GDATA_FLAG_RENEW_DUNGEON) = 0
-		msgtemp += lang("この大陸に大きな地殻変動が起こった。", "A sudden diastrophism hits the continent.")
+		msgtemp += lang("この大陸に大きな地殻変動が起こった。", " A sudden diastrophism hits the continent.")
 		repeat MAX_AREA_COUNT - STARTING_RANDOM_AREA, STARTING_RANDOM_AREA
 			if ( adata(ADATA_ID, cnt) == AREA_RANDOM_DUNGEON ) {
 				if ( gdata(GDATA_FLAG_STATUE_OPATOS) == 1 | rnd(5) == 0 | adata(ADATA_BOSS, cnt) == (-1) ) {
 					adata(ADATA_ID, cnt) = AREA_NONE
 					map(adata(ADATA_X, cnt), adata(ADATA_Y, cnt), 0) = 0
@@ -12928,15 +12956,10 @@
 					txt lang("シェルターの貯蔵食品を食べた。", "You eat stored food.")
 					cdata(CDATA_HUNGER, CHARA_PLAYER) += 5000
 					gosub *eat_finish
 				}
 			}
-			if ( cdata(CDATA_THIRST, CHARA_PLAYER) < 5000 ) {
-				snd SOUNDLIST_DRINK1
-				txt lang("シェルターの貯蔵飲料を飲んだ。", "You drink some beverages stored in the shelter.")
-				cdata(CDATA_THIRST, CHARA_PLAYER) += 5000
-			}
 			if ( gdata(GDATA_SLEEP) >= 15 ) {
 				gdata(GDATA_SLEEP) = 15 - 2
 			}
 			mdata(MDATA_TIMESCALE) = 1000000
 		}
diff -U5 --recursive 1.90.4-custom/map_rand.hsp 1.90.4.2-custom-g/map_rand.hsp
--- 1.90.4-custom/map_rand.hsp	2021-09-02 12:55:06.612969100 -0700
+++ 1.90.4.2-custom-g/map_rand.hsp	2021-09-02 12:55:07.045665900 -0700
@@ -447,19 +447,14 @@
 			characreate -1, CREATURE_ID_BIG_DADDY, -3, 0
 		}
 	}
 	if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANDOM_DUNGEON ) {
 		if ( gdata(GDATA_LEVEL) != adata(ADATA_MIN_LEVEL, gdata(GDATA_AREA)) ) {
-			nkane = limit(gdata(GDATA_LEVEL), 1, 400)
-			flt
-			itemcreate -1, ITEM_ID_GOLD_PIECE, -1, -1, 0
-			inv(INV_ITEM_NUM, ci) = limit(nkane * 50 + nkane * sqrt(nkane + 1) * 5 + 200, 300, 50000)
 			if ( gdata(STARTING_GDATA_FLAG + 353) == 100 ) {
-				mtx = inv(INV_ITEM_X, ci)
-				mty = inv(INV_ITEM_Y, ci)
+				nkane = limit(gdata(GDATA_LEVEL), 1, 400)
 				flt
-				itemcreate -1, ITEM_ID_MUSIC_TICKET, mtx, mty, 0
+				itemcreate -1, ITEM_ID_MUSIC_TICKET, -1, -1, 0
 				inv(INV_ITEM_NUM, ci) = limit(nkane / 3, 1, 70)
 			}
 		}
 	}
 	if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_LESIMAS ) {
diff -U5 --recursive 1.90.4-custom/map_user.hsp 1.90.4.2-custom-g/map_user.hsp
--- 1.90.4-custom/map_user.hsp	2021-09-02 12:55:06.616957600 -0700
+++ 1.90.4.2-custom-g/map_user.hsp	2021-09-02 12:55:07.048667300 -0700
@@ -81,16 +81,10 @@
 	promptYesNo
 	if ( rtval != 0 ) {
 		gosub *screen_draw
 		goto *pc_turn
 	}
-	if ( spact(SKILL_SPACT_MARKING - STARTING_SKILL_SPACT) == 0 ) {
-		spact(SKILL_SPACT_MARKING - STARTING_SKILL_SPACT) = 1
-		txtmore
-		txtef COLOR_YELLOW
-		txt lang("あなたは「" + skillname(SKILL_SPACT_MARKING) + "」の能力を得た。", "You have learned a new ability, " + skillname(SKILL_SPACT_MARKING) + ".")
-	}
 	if ( inv(INV_ITEM_ID, ci) == ITEM_ID_DEED ) {
 		gdata(GDATA_HOME_LEVEL) = inv(INV_ITEM_PARAM1, ci)
 		inv(INV_ITEM_NUM, ci)--
 		cell_refresh inv(INV_ITEM_X, ci), inv(INV_ITEM_Y, ci)
 		gosub *setHome
@@ -264,11 +258,12 @@
 		adata(ADATA_ICON, p) = xy2pic(4, 4)
 	}
 	if ( doukutu == 100 | gdata(GDATA_HOME_LEVEL) != 0 ) {
 		adata(ADATA_X, p) = cdata(CDATA_X, CHARA_PLAYER)
 		adata(ADATA_Y, p) = cdata(CDATA_Y, CHARA_PLAYER)
-		doukutu = 0 }
+		doukutu = 0
+	}
 	adata(ADATA_PARENT, p) = gdata(GDATA_WORLD)
 	return
 
 *com_home
 	txtnew
@@ -397,20 +392,20 @@
 				kunren = 1000000
 			}
 		}
 		promptAdd lang("仲間に店主を頼む", "Assign a shopkeeper"), "null", 4
 		if ( mdata(MDATA_MAX_INV) < 400 ) {
-			promptAdd lang("店を拡張", "Extend") + " (" + calcshopreform() + "gp)", "null", 5
+			promptAdd lang("店を拡張", "Extend") + " (" + calcshopreform() + " GP)", "null", 5
 		}
 		promptAdd lang("店の種類変更", "Change shop type"), "null", 11
 		if ( getworker(gdata(GDATA_AREA)) != (-1) ) {
 			if ( kunren != 1000000 ) {
 				promptAdd lang("店主訓練 (ブロンズ硬貨" + kunren + "枚)", "Train shopkeeper for " + kunren + " bronze coins"), "null", 12
 			}
 		}
 		if ( getworker(gdata(GDATA_AREA)) != (-1) ) {
-			promptAdd lang("営業フィート獲得", "Get business feat"), "null", 13
+			promptAdd lang("営業フィート獲得", "Get shopkeeper feat"), "null", 13
 		}
 		promptAdd lang("1日の販売数を制限", "Limit sales per day"), "null", 14
 		promptAdd lang("バイトを雇う（未実装）", "Hire part time worker (Unimplemented)"), "null", 15
 	}
 	if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH ) {
@@ -419,17 +414,17 @@
 		promptAdd lang("餌を撒く（家畜の餌消費）", "Consume livestock feed"), "null", 17
 		promptAdd lang("場内消毒（浄化消毒薬消費）", "Consume disinfectant"), "null", 18
 		if ( adata(ADATA_RANCH_BREED_RESTRICTION, gdata(GDATA_AREA)) == 0 ) {
 			promptAdd lang("繁殖防止コード発動", "Activate breeding-prevent code"), "null", 19
 		}
+		else {
+			promptAdd lang("繁殖防止コード解除", "Cancel breeding-prevent code"), "null", 21
+		}
 		if ( adata(ADATA_RANCH_PRODUCE_RESTRICTION, gdata(GDATA_AREA)) == 0 ) {
 			promptAdd lang("生産防止コード発動", "Activate production-prevent code"), "null", 20
 		}
-		if ( adata(ADATA_RANCH_BREED_RESTRICTION, gdata(GDATA_AREA)) != 0 ) {
-			promptAdd lang("繁殖防止コード解除", "Cancel breeding-prevent code"), "null", 21
-		}
-		if ( adata(ADATA_RANCH_PRODUCE_RESTRICTION, gdata(GDATA_AREA)) != 0 ) {
+		else {
 			promptAdd lang("生産防止コード解除", "Cancel production-prevent code"), "null", 22
 		}
 	}
 	if ( adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_DISCARDED_RANCH ) {
 		promptAdd lang("ペットを放す", "Release ally"), "null", 8
@@ -998,38 +993,38 @@
 	if ( _switch_val == 19 | _switch_sw ) {
 		_switch_sw = 0
 		txtnew
 		snd SOUNDLIST_AMMO
 		txtef COLOR_RED
-		txt lang("この牧場では繁殖が行われない。", "This area will prevent breeding.")
+		txt lang("この牧場では繁殖が行われない。", "Breeding will be prevented in this area.")
 		adata(ADATA_RANCH_BREED_RESTRICTION, gdata(GDATA_AREA)) = 10
 		goto *com_home_SWEND1
 	}
 	if ( _switch_val == 20 | _switch_sw ) {
 		_switch_sw = 0
 		txtnew
 		snd SOUNDLIST_AMMO
 		txtef COLOR_RED
-		txt lang("この牧場では生産が行われない。", "This area will prevent production.")
+		txt lang("この牧場では生産が行われない。", "Production will be prevented in this area.")
 		adata(ADATA_RANCH_PRODUCE_RESTRICTION, gdata(GDATA_AREA)) = 10
 		goto *com_home_SWEND1
 	}
 	if ( _switch_val == 21 | _switch_sw ) {
 		_switch_sw = 0
 		txtnew
 		snd SOUNDLIST_ENC
 		txtef COLOR_GREEN
-		txt lang("繁殖が通常通り行われるようになった。", "This area no longer prevents breeding.")
+		txt lang("繁殖が通常通り行われるようになった。", "Breeding is no longer prevented in this area.")
 		adata(ADATA_RANCH_BREED_RESTRICTION, gdata(GDATA_AREA)) = 0
 		goto *com_home_SWEND1
 	}
 	if ( _switch_val == 22 | _switch_sw ) {
 		_switch_sw = 0
 		txtnew
 		snd SOUNDLIST_ENC
 		txtef COLOR_GREEN
-		txt lang("生産が通常通り行われるようになった。", "This area no longer prevents production.")
+		txt lang("生産が通常通り行われるようになった。", "Production is no longer prevented in this area.")
 		adata(ADATA_RANCH_PRODUCE_RESTRICTION, gdata(GDATA_AREA)) = 0
 		goto *com_home_SWEND1
 	}
 	if ( _switch_val == 5 | _switch_sw ) {
 		_switch_sw = 0
@@ -1635,20 +1630,20 @@
 			continue
 		}
 		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_REGISTER ) {
 			continue
 		}
-		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_RED_BOOK ) {
+		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_RED_BOOK & TweakData(50, 2) == 0 ) {
 			continue
 		}
 		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_GOLD_PIECE ) {
 			continue
 		}
 		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_SHELTER ) {
 			continue
 		}
-		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_DEED ) {
+		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_DEED & TweakData(50, 2) == 0 ) {
 			continue
 		}
 		if ( inv(INV_ITEM_WEIGHT, cnt) < 0 ) {
 			continue
 		}
@@ -1665,11 +1660,11 @@
 			if ( chipm(CHIPM_ROLE, map(inv(INV_ITEM_X, cnt), inv(INV_ITEM_Y, cnt), 0)) == MAP_CHIP_ROLE_DISPLAY_SPACE ) {
 				continue
 			}
 		}
 		a = refitem(inv(INV_ITEM_ID, cnt), DBSPEC_TYPE)
-		if ( a == FILTER_FURNITURE & inv(INV_ITEM_ID, cnt) != ITEM_ID_WILD_FLOWER ) {
+		if ( a == FILTER_FURNITURE & inv(INV_ITEM_ID, cnt) != ITEM_ID_WILD_FLOWER & TweakData(50, 2) == 0 ) {
 			continue
 		}
 		dblist(0, dblistmax) = cnt, a
 		dblistmax++
 	loop
@@ -1874,11 +1869,11 @@
 			txt lang("[店]" + customer + "人が来客したが、" + cdatan(CDATAN_NAME, worker) + "はアイテムを一つも売れなかった。", "[Shop]" + customer + " customers visited your shop but " + cdatan(CDATAN_NAME, worker) + " couldn't sell any item.")
 		}
 	}
 	else {
 		if ( cfg_hideshopresult <= 1 ) {
-			s = "" + income + lang("gold", "gp")
+			s = "" + income + lang("gold", " gold pieces")
 			if ( income(1) != 0 ) {
 				s += lang("と" + income(1) + "個のアイテム", " and " + income(1) + " items")
 			}
 			snd SOUNDLIST_DING2
 			txtmore
@@ -2057,16 +2052,18 @@
 	rankcur = 0
 	dim dblist, 2, MAX_DB
 
 	/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Report duplicated cards/figurines in your museum
 
-	repeat MAX_DB
-		dblist_dup_card(cnt, 0) = -1
-		dblist_dup_card(cnt, 1) = -1
-		dblist_dup_fig(cnt, 0) = -1
-		dblist_dup_fig(cnt, 1) = -1
-	loop
+	if (TweakData(51, 0) == 1) {
+		repeat MAX_DB
+			dblist_dup_card(cnt, 0) = -1
+			dblist_dup_card(cnt, 1) = -1
+			dblist_dup_fig(cnt, 0) = -1
+			dblist_dup_fig(cnt, 1) = -1
+		loop
+	}
 
 	/********** BLOODYSHADE CUSTOM - ENDING **********/
 
 	repeat invrange, invhead
 		if ( inv(INV_ITEM_NUM, cnt) == 0 ) {
@@ -2088,10 +2085,11 @@
 			val = 1
 		}
 
 		/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Report duplicated cards/figurines in your museum
 
+	if (TweakData(51, 0) == 1) {
 		mob_name_dup = inv(INV_ITEM_SUB_NAME, cnt)
 		dup_found_x = -1
 		dup_found_y = -1
 		if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_FIGURINE ) {
 			if ( dblist_dup_fig(mob_name_dup, 0) == -1 & dblist_dup_fig(mob_name_dup, 1) == -1 ) {
@@ -2114,10 +2112,11 @@
 		if ( ( dup_found_x != -1 & dup_found_y != -1 ) & ( dup_found_x != inv(INV_ITEM_X, cnt) & dup_found_y != inv(INV_ITEM_Y, cnt) ) ) {
 			txtef COLOR_YELLOW
 			txt "Duplicate found for: " + itemname(cnt) + " at " + "X: " + dup_found_x + " Y: " + dup_found_y + " and X: " + inv(INV_ITEM_X, cnt) + " Y: " + inv(INV_ITEM_Y, cnt) + "."
 			msg_newline
 		}
+	}
 
 		/********** BLOODYSHADE CUSTOM - ENDING **********/
 
 		dbid = inv(INV_ITEM_SUB_NAME, cnt)
 		gosub *museum_value
@@ -2335,27 +2334,29 @@
 *ranch_update
 	worker = getworker(gdata(GDATA_AREA))
 	livestock = 0
 	ooitama = 0
 	ooititi = 0
-	sickp = 0
-	inv_getheader -1
-	repeat invrange, invhead
-		if ( inv(INV_ITEM_NUM, cnt) != 0 ) {
-			if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_SHIT ) {
-				sicp += 100
+	if (TweakData(54, 2) == 1) {
+		sickp = 0
+		inv_getheader -1
+		repeat invrange, invhead
+			if ( inv(INV_ITEM_NUM, cnt) != 0 ) {
+				if ( inv(INV_ITEM_ID, cnt) == ITEM_ID_SHIT ) {
+					sicp += 100
+				}
 			}
-		}
-	loop
+		loop
+	}
 	repeat MAX_CHARA_TOTAL
 		if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 			continue
 		}
 		if ( cbit(CHARA_BIT_LIVESTOCK, cnt) == 0 ) {
 			continue
 		}
-		if ( cdata(CDATA_CONDITION_SICK, cnt) > 0 ) {
+		if ( TweakData(54, 2) == 1 & cdata(CDATA_CONDITION_SICK, cnt) > 0) {
 			sicp += 500
 		}
 		if ( cdata(CDATA_LIVESTOCK_PRODUCE_QUALITY, cnt) >= 7 & cdata(CDATA_LIVESTOCK_PRODUCE_QUALITY, cnt) <= 9 ) {
 			ooitama += cdata(CDATA_LIVESTOCK_PRODUCE_QUALITY, cnt)
 		}
@@ -2579,11 +2580,13 @@
 		}
 		characreate -1, dbid, 4 + rnd(11), 4 + rnd(8)
 		if ( stat != 0 ) {
 			cbitmod CHARA_BIT_LIVESTOCK, rc, 1
 			cdata(CDATA_AGE, rc) = gdata(GDATA_YEAR)
-			cdata(CDATA_SPRITE_SIZE_MILK, rc) = -5
+			if (TweakData(54, 2) == 1){
+				cdata(CDATA_SPRITE_SIZE_MILK, rc) = -5
+			}
 			cdata(CDATA_LIVESTOCK_QUALITY, rc) = keisitu
 			cdata(CDATA_LIVESTOCK_PRODUCE_QUALITY, rc) = keisitu2
 			livestock++
 		}
 *skipBreeder
@@ -2596,11 +2599,11 @@
 				continue
 			}
 			if ( cbit(CHARA_BIT_LIVESTOCK, cnt) == 0 & cnt != wtc ) {
 				continue
 			}
-			if ( cnt != wtc ) {
+			if ( TweakData(54, 2) == 1 & cnt != wtc ) {
 				if ( findbuff(cnt, BUFF_DISINFECTION) == (-1) ) {
 					if ( rnd(10000) <= sickp ) {
 						if ( cdata(CDATA_CONDITION_SICK, cnt) < 100 ) {
 							cdata(CDATA_CONDITION_SICK, cnt) += 30
 						}
@@ -2670,22 +2673,28 @@
 			if ( livestock > 40 ) {
 				if ( rnd(4) == 0 ) {
 					continue
 				}
 			}
-			if ( cdata(CDATA_CONDITION_SICK, cnt) > 0 ) {
+			if ( TweakData(54, 2) == 1 & cdata(CDATA_CONDITION_SICK, cnt) > 0 ) {
 				p = 2
 			}
 			if ( p == 0 ) {
 				if ( ooitama > 1 ) {
 					if ( rnd(ooitama) > rnd(80) ) {
 						flt
 						itemcreate -1, ITEM_ID_EGG, x, y, 0
 						if ( stat ) {
 							inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, cnt)
-							inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) / 10 * 40, 20, 10000)
-							inv(INV_ITEM_VALUE, ci) = limit((inv(INV_ITEM_WEIGHT, cnt) + 2400) / 4, 600, 3000)
+							if (TweakData(54, 2) == 1) {
+								inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) / 10 * 40, 20, 10000)
+								inv(INV_ITEM_VALUE, ci) = limit((inv(INV_ITEM_WEIGHT, cnt) + 2400) / 4, 600, 3000)
+							}
+							else {
+								inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) * 10 + 250, 100, 100000)
+								inv(INV_ITEM_VALUE, ci) = limit((cdata(CDATA_WEIGHT, cnt) * cdata(CDATA_WEIGHT, cnt) + 1) / 10000, 200, 40000)
+							}
 						}
 
 						/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Organize ranch produce.
 
 						if ( TweakData(TWEAK_GAMEPLAY_ORGANIZE_RANCH, TWEAK_CATEGORY_GAMEPLAY) == 1 ) {
@@ -2714,12 +2723,18 @@
 					egg++
 					flt
 					itemcreate -1, ITEM_ID_EGG, x, y, 0
 					if ( stat ) {
 						inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, cnt)
-						inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) / 10 * 40, 20, 10000)
-						inv(INV_ITEM_VALUE, ci) = limit((inv(INV_ITEM_WEIGHT, cnt) + 2400) / 4, 600, 3000)
+						if (TweakData(54, 2) == 1) {
+							inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) / 10 * 40, 20, 10000)
+							inv(INV_ITEM_VALUE, ci) = limit((inv(INV_ITEM_WEIGHT, cnt) + 2400) / 4, 600, 3000)
+						}
+						else {
+							inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) * 10 + 250, 100, 100000)
+							inv(INV_ITEM_VALUE, ci) = limit((limit(cdata(CDATA_WEIGHT, cnt) * 10 + 250, 100, 100000) + 13000) / 14, 1000, 8000)
+						}
 					}
 
 					/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Organize ranch produce.
 
 					if ( TweakData(TWEAK_GAMEPLAY_ORGANIZE_RANCH, TWEAK_CATEGORY_GAMEPLAY) == 1 ) {
@@ -2799,12 +2814,18 @@
 				if ( f ) {
 					flt
 					itemcreate -1, ITEM_ID_SHIT, x, y, 0
 					if ( stat ) {
 						inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, cnt)
-						inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) / 10 * 150, 30, 15000)
-						inv(INV_ITEM_VALUE, ci) = limit((cdata(CDATA_WEIGHT, cnt) + 3600) / 4, 900, 4500)
+						if (TweakData(54, 2) == 1) {
+							inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) / 10 * 150, 30, 15000)
+							inv(INV_ITEM_VALUE, ci) = limit((cdata(CDATA_WEIGHT, cnt) + 3600) / 4, 900, 4500)
+						}
+						else {
+							inv(INV_ITEM_WEIGHT, ci) = limit(cdata(CDATA_WEIGHT, cnt) * 40 + 300, 100, 100000)
+							inv(INV_ITEM_VALUE, ci) = limit((limit(cdata(CDATA_WEIGHT, cnt) * 40 + 300, 100, 100000) + 3500) / 15, 300, 6000)
+						}
 					}
 
 					/********** BLOODYSHADE CUSTOM - BEGINNING **********/ // Organize ranch produce.
 
 					if ( TweakData(TWEAK_GAMEPLAY_ORGANIZE_RANCH, TWEAK_CATEGORY_GAMEPLAY) == 1 ) {
diff -U5 --recursive 1.90.4-custom/module.hsp 1.90.4.2-custom-g/module.hsp
--- 1.90.4-custom/module.hsp	2021-09-02 12:55:06.630992100 -0700
+++ 1.90.4.2-custom-g/module.hsp	2021-09-02 12:55:07.057525900 -0700
@@ -415,18 +415,18 @@
 	}
 
 	/********** ANNA CUSTOM - BEGINNING **********/
 
 	if ( PreservedTarget != (-1) ) {
-		if ( cbit(CHARA_BIT_SANDBAG, TrueTarget) ) {
+		if ( cbit(CHARA_BIT_SANDBAG, TrueTarget) & TweakData(52, 2) == 0 ) {
 			locvar_skillmod_exp = 0
 		}
 	}
 
 	/********** ANNA CUSTOM - ENDING **********/
 
-	if ( cbit(CHARA_BIT_SANDBAG, skillexp_charid) ) {
+	if ( cbit(CHARA_BIT_SANDBAG, skillexp_charid) & TweakData(52, 2) == 0 ) {
 		locvar_skillmod_exp = 0
 	}
 	if ( skillexp_skillid >= STARTING_SKILL_WEAPON ) {
 		if ( gdata(GDATA_TEMPORARY_FLAGS) != 11111111 ) {
 			if ( rnd(sdata(SKILL_ATTR_LER, skillexp_charid) + 50) > rnd(1000) ) {
@@ -2229,16 +2229,10 @@
 								locvar_cell_draw_h = cdata(CDATA_HP, locvar_cell_draw_c) * 15 / cdata(CDATA_MAX_HP, locvar_cell_draw_c)
 								if ( locvar_cell_draw_h > 15 ) {
 									locvar_cell_draw_h = 15
 								}
 							}
-							if ( cdata(CDATA_CHAIN_ATTACK_COUNT, locvar_cell_draw_c) >= 10 ) {
-								font lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0
-								pos locvar_cell_draw_dx - 5, locvar_cell_draw_dy + 20
-								color 0, 0, 0
-								bmes " " + cdata(CDATA_CHAIN_ATTACK_COUNT, locvar_cell_draw_c) + "Chain！", 235, 185, 35
-							}
 							if ( locvar_cell_draw_c < MAX_CHARA_FOLLOWER ) {
 								if ( mdata(MDATA_TYPE) != MAP_TYPE_WORLD ) {
 									if ( cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) == 1 ) {
 										pos locvar_cell_draw_dx + 9 + cdata(CDATA_IN_TAGTEAM, locvar_cell_draw_c) * 15, locvar_cell_draw_dy + 31
 									}
diff -U5 --recursive 1.90.4-custom/proc.hsp 1.90.4.2-custom-g/proc.hsp
--- 1.90.4-custom/proc.hsp	2021-09-02 12:55:06.662779000 -0700
+++ 1.90.4.2-custom-g/proc.hsp	2021-09-02 12:55:07.073167900 -0700
@@ -100,11 +100,10 @@
 	if ( feat(1) == CELL_FEATURE_SAMPLING_SPOT_GARDENING ) {
 		atxspot = ATX_BUSH1
 	}
 	repeat 12
 		if ( atxspot == ATX_MINE1 ) {
-			snd SOUNDLIST_DIG1
 			if ( sdata(SKILL_NORMAL_MINING, CHARA_PLAYER) * 2 + 5 > rnd(atxlv + 1) | rnd(10) == 0 ) {
 				matgetmain random_material(atxlv, 0), 1, 1
 				matgetmain random_material(atxlv, 0), 1, 1
 				matgetmain random_material(atxlv, 0), 1, 1
 			}
@@ -113,12 +112,10 @@
 			}
 			skillexp SKILL_NORMAL_MINING, CHARA_PLAYER, 50
 			gdata(GDATA_GATHERING_ATTEMPS)++
 		}
 		if ( atxspot == ATX_WATER1 ) {
-			snd SOUNDLIST_WATER
-			snd SOUNDLIST_FISH_CAST
 			if ( sdata(SKILL_NORMAL_FISHING, CHARA_PLAYER) * 2 + 5 > rnd(atxlv + 1) | rnd(10) == 0 ) {
 				matgetmain random_material(atxlv, 0), 1, 2
 				matgetmain random_material(atxlv, 0), 1, 2
 				matgetmain random_material(atxlv, 0), 1, 2
 			}
@@ -127,11 +124,10 @@
 			}
 			skillexp SKILL_NORMAL_FISHING, CHARA_PLAYER, 50
 			gdata(GDATA_GATHERING_ATTEMPS)++
 		}
 		if ( atxspot == ATX_BUSH1 ) {
-			snd SOUNDLIST_BUSH1
 			if ( sdata(SKILL_NORMAL_GARDENING, CHARA_PLAYER) * 2 + 5 > rnd(atxlv + 1) | rnd(10) == 0 ) {
 				matgetmain random_material(atxlv, 0), 1, 3
 				matgetmain random_material(atxlv, 0), 1, 3
 				matgetmain random_material(atxlv, 0), 1, 3
 			}
@@ -140,11 +136,10 @@
 			}
 			skillexp SKILL_NORMAL_GARDENING, CHARA_PLAYER, 50
 			gdata(GDATA_GATHERING_ATTEMPS)++
 		}
 		if ( atxspot == ATX_REMAIN1 ) {
-			snd SOUNDLIST_DIG2
 			if ( sdata(SKILL_NORMAL_GENE_ENGINEER, CHARA_PLAYER) * 2 + 5 > rnd(atxlv + 1) | rnd(10) == 0 ) {
 				matgetmain random_material(atxlv, 0), 1, 4
 				matgetmain random_material(atxlv, 0), 1, 4
 				matgetmain random_material(atxlv, 0), 1, 4
 			}
@@ -153,11 +148,10 @@
 			}
 			skillexp SKILL_NORMAL_GENE_ENGINEER, CHARA_PLAYER, 50
 			gdata(GDATA_GATHERING_ATTEMPS)++
 		}
 		if ( atxspot == ATX_RANDOM | atxspot == ATX_BUILDING1 | atxspot == ATX_FOREST1 | atxspot == ATX_DUNGEON1 ) {
-			snd SOUNDLIST_DIG2
 			if ( sdata(SKILL_NORMAL_DETECTION, CHARA_PLAYER) * 2 + 5 > rnd(atxlv + 1) | rnd(10) == 0 ) {
 				matgetmain random_material(atxlv, 0), 1, 5
 				matgetmain random_material(atxlv, 0), 1, 5
 				matgetmain random_material(atxlv, 0), 1, 5
 			}
@@ -166,18 +160,25 @@
 			}
 			skillexp SKILL_NORMAL_DETECTION, CHARA_PLAYER, 50
 			gdata(GDATA_GATHERING_ATTEMPS)++
 		}
 		if ( rnd(5 + trait(TRAIT_RACE_BONUS_MATERIAL) * 2) + 4 < gdata(GDATA_GATHERING_ATTEMPS) ) {
+			if ( feat(1) != CELL_FEATURE_SAMPLING_SPOT_MINING & feat(1) != CELL_FEATURE_SAMPLING_SPOT_FISHING & feat(1) != CELL_FEATURE_SAMPLING_SPOT_GARDENING ) {
+				snd SOUNDLIST_DIG2
+			}
 			s = lang("もう何もない。", "You can't find anything else.")
 			if ( feat(1) == CELL_FEATURE_SAMPLING_SPOT_FISHING ) {
+				snd SOUNDLIST_WATER
+				snd SOUNDLIST_FISH_CAST
 				s = lang("泉は干上がった。", "The spring has dried up.")
 			}
 			if ( feat(1) == CELL_FEATURE_SAMPLING_SPOT_MINING ) {
+				snd SOUNDLIST_DIG1
 				s = lang("鉱石を掘りつくした。", "There's no more ore around.")
 			}
 			if ( feat(1) == CELL_FEATURE_SAMPLING_SPOT_GARDENING ) {
+				snd SOUNDLIST_BUSH1
 				s = lang("もう目ぼしい植物は見当たらない。", "There are no more plants around.")
 			}
 			await 300
 			txt s
 			gdata(GDATA_GATHERING_ATTEMPS) = 0
@@ -409,11 +410,11 @@
 					}
 					cell_featset movx, movy, 0
 				}
 				if ( feat(2) == CELL_SUB_FEATURE_TRAP_BLADE_STRINGS | feat(2) == CELL_SUB_FEATURE_TRAP_HOSTILE_BLADE_STRINGS ) {
 					txtef COLOR_SKY_BLUE
-					txt lang(name(cc) + "は鋭い糸に突っ込んだ。", name(cc) + " were torn up in the sharp strings.")
+					txt lang(name(cc) + "は鋭い糸に突っ込んだ。", name(cc) + " " + was(cc) + " torn up in the sharp strings.")
 					snd SOUNDLIST_STAB
 					if ( feat(2) == CELL_SUB_FEATURE_TRAP_HOSTILE_BLADE_STRINGS ) {
 						hostileaction CHARA_PLAYER, cc
 					}
 					cell_featset movx, movy, 0
@@ -811,11 +812,11 @@
 	if ( cdata(CDATA_PERFORM_GOLD, cc) != 0 ) {
 
 		/********** ORIGINAL - BEGINNING **********
 
 		if ( synccheck(cc, -1) ) {
-			txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + "gp.")
+			txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + " gold pieces.")
 		}
 
 		 ********** ORIGINAL - ENDING **********/
 
 		/********** ANNA CUSTOM - BEGINNING **********/ // Share Gold For Group Performance.
@@ -846,15 +847,15 @@
 						cdata(CDATA_GOLD, cnt) += cdata(CDATA_PERFORM_GOLD, cc) / TCount1
 						cdata(CDATA_GOLD, CHARA_PLAYER) -= cdata(CDATA_PERFORM_GOLD, cc) / TCount1
 					}
 				loop
 
-				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives your party a total of " + cdata(CDATA_PERFORM_GOLD, cc) + "gp. You keep " + cdata(CDATA_PERFORM_GOLD, cc)/TCount1 + " and share the rest with your allies.")
+				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives your party a total of " + cdata(CDATA_PERFORM_GOLD, cc) + " gold pieces. You keep " + cdata(CDATA_PERFORM_GOLD, cc)/TCount1 + " and share the rest with your allies.")
 				EnsembleStart = 0
 			}
 			else {
-				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + "gp.")
+				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + " gold pieces.")
 			}
 		}
 
 		/********** ANNA CUSTOM - ENDING **********/
 
@@ -1033,11 +1034,11 @@
 	if ( cdata(CDATA_PERFORM_GOLD, cc) != 0 ) {
 
 		/********** ORIGINAL - BEGINNING **********
 
 		if ( synccheck(cc, -1) ) {
-			txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + "gp.")
+			txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + " gold pieces.")
 		}
 
 		 ********** ORIGINAL - ENDING **********/
 
 		/********** ANNA CUSTOM - BEGINNING **********/ // Share Gold For Group Performance.
@@ -1068,15 +1069,15 @@
 						cdata(CDATA_GOLD, cnt) += cdata(CDATA_PERFORM_GOLD, cc)/TCount1
 						cdata(CDATA_GOLD, CHARA_PLAYER) -= cdata(CDATA_PERFORM_GOLD, cc)/TCount1
 					}
 				loop
 
-				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives your party a total of " + cdata(CDATA_PERFORM_GOLD, cc) + "gp. You keep " + cdata(CDATA_PERFORM_GOLD, cc)/TCount1 + " and share the rest with your allies.")
+				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives your party a total of " + cdata(CDATA_PERFORM_GOLD, cc) + " gold pieces. You keep " + cdata(CDATA_PERFORM_GOLD, cc)/TCount1 + " and share the rest with your allies.")
 				EnsembleStart = 0
 			}
 			else {
-				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + "gp.")
+				txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のおひねりを貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + " gold pieces.")
 			}
 		}
 
 		/********** ANNA CUSTOM - ENDING **********/
 
@@ -1409,11 +1410,11 @@
 		}
 		return
 	}
 	if ( cdata(CDATA_PERFORM_GOLD, cc) != 0 ) {
 		if ( synccheck(cc, -1) ) {
-			txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のお布施を貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + "gp.")
+			txt lang(name(cc) + "は合計 " + cdata(CDATA_PERFORM_GOLD, cc) + strgold + "のお布施を貰った。", "The audience gives " + name(cc) + " total of " + cdata(CDATA_PERFORM_GOLD, cc) + " gold pieces.")
 		}
 	}
 	rowactend cc
 	rew1 = limit(cdata(CDATA_PERFORM_SCORE, cc) / 2 + 20, 20, 500)
 	skillexp SKILL_NORMAL_FAITH, cc, rew1, 0, 0
@@ -1566,13 +1567,15 @@
 					txt lang(name(tc) + "は動揺した。", name(tc) + " is upset.")
 					if ( cdata(CDATA_CONDITION_CONFUSE, tc) == 0 ) {
 						cdata(CDATA_CONDITION_CONFUSE, tc) = 1
 					}
 				}
-				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-					skillexp SKILL_ATTR_WIL, cc, 20
-					skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+					if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+						skillexp SKILL_ATTR_WIL, cc, 20
+						skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+					}
 				}
 				talkfix = 1
 				if ( cdata(CDATA_SP, tc) < cdata(CDATA_MAX_SP, tc) / 2 ) {
 					talkfix = 2
 				}
@@ -1627,11 +1630,11 @@
 		cdata(CDATA_ROW_ACT, cc) = ACTION_PECULIAR_JOKE
 		cdata(CDATA_ACTION_PERIOD, cc) = 5
 		customtalk cc, DBMODE_FLAVOR_BTALK
 		gosub *convert_word
 		if ( gdata(GDATA_CUSTOM_TALK) == 100 ) {
-			txt lang(name(cc) + "は全力で笑わせにかかった。", name(cc) + " start peculiar joke.")
+			txt lang(name(cc) + "は全力で笑わせにかかった。", name(cc) + " started telling a peculiar joke.")
 		}
 		return
 	}
 	if ( cdata(CDATA_ACTION_PERIOD, cc) > 0 & gdata(GDATA_TIME_STOP_TIME) == 0 ) {
 		repeat MAX_CHARA_TOTAL
@@ -1674,13 +1677,15 @@
 					txt lang(name(tc) + "は腹筋崩壊した。", name(tc) + " couldn't help laughing out loud.")
 					if ( cdata(CDATA_CONDITION_PARALYZE, tc) == 0 ) {
 						cdata(CDATA_CONDITION_PARALYZE, tc) = 1
 					}
 				}
-				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-					skillexp SKILL_ATTR_PER, cc, 20
-					skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+					if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+						skillexp SKILL_ATTR_PER, cc, 20
+						skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+					}
 				}
 				talkfix = 1
 				if ( cdata(CDATA_POWER_GAUGE, tc) < 50 ) {
 					talkfix = 2
 				}
@@ -1773,13 +1778,15 @@
 					txt lang(name(tc) + "は嘘を信じて不安になった。", name(tc) + " believed the lie and became uneasy.")
 					if ( cdata(CDATA_CONDITION_ATROPHY, tc) == 0 ) {
 						cdata(CDATA_CONDITION_ATROPHY, tc) = 1
 					}
 				}
-				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-					skillexp SKILL_ATTR_DEX, cc, 20
-					skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+					if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+						skillexp SKILL_ATTR_DEX, cc, 20
+						skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+					}
 				}
 				talkfix = 1
 				if ( cdata(CDATA_MP, tc) < cdata(CDATA_MAX_MP, tc) * 9 / 10 ) {
 					talkfix = 2
 				}
@@ -1896,13 +1903,15 @@
 					txt lang(name(tc) + "は恐怖した。", name(tc) + " was frightened.")
 					if ( cdata(CDATA_CONDITION_FEAR, tc) == 0 ) {
 						cdata(CDATA_CONDITION_FEAR, tc) = 1
 					}
 				}
-				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-					skillexp SKILL_ATTR_STR, cc, 20
-					skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+					if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+						skillexp SKILL_ATTR_STR, cc, 20
+						skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+					}
 				}
 				talkfix = 1
 				if ( cdata(CDATA_HP, tc) < cdata(CDATA_MAX_HP, tc) * 9 / 10 ) {
 					talkfix = 2
 				}
@@ -2019,13 +2028,15 @@
 					txt lang(name(tc) + "は感激した。", name(tc) + " was deeply impressed.")
 					if ( cdata(CDATA_CONDITION_PARALYZE, tc) == 0 ) {
 						cdata(CDATA_CONDITION_PARALYZE, tc) = 1
 					}
 				}
-				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-					skillexp SKILL_ATTR_MAG, cc, 20
-					skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+					if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+						skillexp SKILL_ATTR_MAG, cc, 20
+						skillexp SKILL_NORMAL_NEGOTIATION, cc, 20
+					}
 				}
 				talkfix = 1
 				if ( cdata(CDATA_POWER_GAUGE, tc) > 50 ) {
 					talkfix = 2
 				}
@@ -2985,11 +2996,10 @@
 	gosub *sleep_draw
 	gdata(GDATA_SLEEP_GENE) = 0
 	mode = MODELIST_MAIN
 	wake_up
 	cdata(CDATA_HUNGER, cc) -= 1500 / (trait(TRAIT_RACE_SLOW_DIGESTION) + 1)
-	cdata(CDATA_THIRST, cc) -= 1500 / 2
 	item_find ITEM_ID_MANIS_ALARM_CLOCK, 3, 1
 	if ( stat != (-1) ) {
 		ci = stat
 		if ( inv(INV_ITEM_NUM, ci) >= 1 ) {
 			kaiwa = rnd(4)
@@ -3007,11 +3017,10 @@
 			}
 		}
 	}
 	txtef COLOR_GREEN
 	txt lang("" + timeslept + "時間眠った。あなたはリフレッシュした。", "You have slept for " + timeslept + " hours. You are refreshed.")
-	gdata(GDATA_FLAG_SLEEP_PREVENTION) = 0
 	gdata(GDATA_FLAG_HOURS_SLEPT) += timeslept
 	f = 0
 	if ( cdata(CDATA_ITEM_USING, CHARA_PLAYER) == (-1) ) {
 		f = 1
 	}
@@ -3203,11 +3212,11 @@
 	gosub *music_play
 	autosave = 1 * (gdata(GDATA_AREA) != AREA_SHOW_HOUSE)
 	if ( gdata(GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE) == 100 ) {
 		gdata(GDATA_FLAG_INSIDE_DEEP_SEA_CASTLE) = 0
 	}
-	gdata(STARTING_GDATA_FLAG + 376) = gdata(GDATA_HOUR) + gdata(GDATA_DAY) * 24 + gdata(GDATA_MONTH) * 24 * 30 + gdata(GDATA_YEAR) * 24 * 30 * 12
+	gdata(STARTING_GDATA_FLAG + 376) = 0
 	breakfast = 0
 	if ( gdata(GDATA_HOUR) >= 4 & gdata(GDATA_HOUR) <= 9 ) {
 		breakfast = 100
 		gosub *random_event
 	}
@@ -3244,18 +3253,12 @@
 		if ( gdata(STARTING_GDATA_FLAG + 380) == 1 ) {
 			gdata(GDATA_FLAG_RAGNAROK_STARTED)++
 			gdata(GDATA_WEATHER) = WEATHER_ETHER
 			envonly = 1
 			gosub *music_play
-			if ( gdata(STARTING_GDATA_FLAG + 373) < 9999 & gdata(STARTING_GDATA_FLAG + 373) >= 0 ) {
-				txt lang("終末の日が訪れた。", "Let's Ragnarok!")
-				msg_halt
-			}
-			if ( gdata(STARTING_GDATA_FLAG + 373) >= 9999 | gdata(STARTING_GDATA_FLAG + 373) < 0 ) {
-				txt lang("*カーテンコール*", " *Curtain Call* ")
-				await 2000
-			}
+			txt lang("終末の日が訪れた。", "Let's Ragnarok!")
+			msg_halt
 			animeid = ANIMATION_RAGNA
 			gosub *anime
 			repeat 200
 				repeat 2
 					x = rnd(mdata(MDATA_WIDTH))
@@ -3444,11 +3447,10 @@
 			txtef COLOR_RED
 			txt lang("砂漠の熱気が体力を奪う。", "The desert heat robs me of my strength."), lang("太陽が容赦なく照りつける…。", "The sun shines mercilessly...")
 			cdata(CDATA_CONDITION_WET, CHARA_PLAYER) = 0
 			dmgcon cc, CONDITION_DIM, 200
 			cdata(CDATA_SP, CHARA_PLAYER) -= 30
-			cdata(CDATA_THIRST, CHARA_PLAYER) -= 3000
 			dmghp CHARA_PLAYER, rnd(10) + cdata(CDATA_MAX_HP, CHARA_PLAYER) / 20 + 1, DAMAGE_FROM_DESERT
 		}
 	}
 	if ( gdata(GDATA_WEATHER) == WEATHER_HARD_RAIN ) {
 		if ( gdata(GDATA_RES_WEATHER) == 0 ) {
@@ -3575,11 +3577,11 @@
 			snd SOUNDLIST_WATER2
 			snd SOUNDLIST_FISH_GET
 			gosub *choose_fish
 			gosub *get_fish
 			rowactend cc
-			cdata(CDATA_SP, cc) -= 15
+			cdata(CDATA_SP, cc) -= 3
 			if ( rnd(10) == 0 ) {
 				gosub *expFishing
 			}
 			return
 		}
@@ -3674,11 +3676,11 @@
 			rowactend cc
 			gosub *get_fish
 			gosub *expFishing
 			cdata(CDATA_EMO_ICON, CHARA_PLAYER) = 6 + 100 * 3
 		}
-		if ( rnd(10) == 0 ) {
+		if ( rnd(50) == 0 ) {
 			dmgsp cc, 1
 		}
 		return
 	}
 	txt lang("何も釣れなかった…", "A waste of time...")
@@ -4699,11 +4701,10 @@
 		}
 	}
 	if ( potionspill | potionthrow ) {
 		potionspill = 0
 		potionthrow = 0
-		cdata(CDATA_THIRST, tc) += 400
 		cdata(CDATA_HUNGER, tc) += 30
 	}
 	else {
 		if ( obvious == 1 ) {
 			if ( tc == CHARA_PLAYER ) {
@@ -4717,23 +4718,17 @@
 		else {
 			if ( tc == CHARA_PLAYER ) {
 				gosub *calcBurdenPc
 			}
 		}
-		cdata(CDATA_THIRST, tc) += 2000
 		cdata(CDATA_HUNGER, tc) += 150
 	}
 	if ( cdata(CDATA_HUNGER, tc) > 12000 * 2 ) {
 		if ( rnd(5) == 0 ) {
 			chara_vomit tc
 		}
 	}
-	if ( cdata(CDATA_THIRST, tc) >= 12000 * 2 ) {
-		if ( rnd(5) == 0 ) {
-			chara_morasi tc
-		}
-	}
 	return 1
 
 *drinkWell
 	if ( inv(INV_ITEM_PARAM1, ci) < (-5) | inv(INV_ITEM_PARAM3, ci) >= 20 | (inv(INV_ITEM_ID, ci) == ITEM_ID_HOLY_WELL & gdata(GDATA_FLAG_HOLY_WELL) <= 0) ) {
 		valn = itemname(ci)
@@ -4926,11 +4921,10 @@
 		cdata(CDATA_HUNGER, cc) += 4000
 	}
 	else {
 		cdata(CDATA_HUNGER, cc) += 500
 	}
-	cdata(CDATA_THIRST, cc) += 2000
 	if ( inv(INV_ITEM_ID, ci) == ITEM_ID_HOLY_WELL ) {
 		gdata(GDATA_FLAG_HOLY_WELL)--
 	}
 	else {
 		inv(INV_ITEM_PARAM1, ci) -= rnd(3)
@@ -5030,12 +5024,14 @@
 				item_separate ci
 				inv(INV_ITEM_CHARGE, ci)++
 				efp = efp * 7 / 10 + 1
 				txtef COLOR_GREEN
 				txt lang(name(cc) + "は杖を一時複製した。", name(cc) + " duplicated replica of " + itemname(ci) + ".")
-				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 & cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 ) {
-					skillexp SKILL_NORMAL_ALCHEMY, cc, 80
+				if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 ) {
+					if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+						skillexp SKILL_NORMAL_ALCHEMY, cc, 80
+					}
 				}
 			}
 		}
 		if ( cc == CHARA_PLAYER & gdata(GDATA_FLAG_DUPLICANE) == 100 & cdata(CDATA_SP, CHARA_PLAYER) > 0 ) {
 			item_separate ci
@@ -5043,12 +5039,14 @@
 			inv(INV_ITEM_CHARGE, ci)++
 			efp = efp * 7 / 10 + 1
 			txtef COLOR_GREEN
 			txt lang(name(cc) + "は杖を一時複製した。", name(cc) + " duplicated replica of " + itemname(ci) + ".")
 			item_stack CHARA_PLAYER, ci, 1
-			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 & cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 ) {
-				skillexp SKILL_NORMAL_ALCHEMY, cc, 40
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 ) {
+				if (cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					skillexp SKILL_NORMAL_ALCHEMY, cc, 40
+				}
 			}
 			dmgsp CHARA_PLAYER, 3
 		}
 	}
 	if ( synccheck(cc, -1) ) {
@@ -6479,11 +6477,23 @@
 				}
 				if ( efid == SKILL_SPACT_TOUCH_OF_SLEEP ) {
 					dmgcon tc, CONDITION_SLEEP, elep
 				}
 				if ( efid == SKILL_SPACT_TOUCH_OF_HUNGER ) {
-					addbuff tc, BUFF_CURSE_OF_HUNGER, 9999999, 100
+					if ( findbuff(r1, BUFF_CURSE_OF_HUNGER) != (-1) ) {
+						cdata(CDATA_HUNGER, tc) -= 8 * 100
+						if ( synccheck(tc, -1) ) {
+							txtmore
+							txtef COLOR_PURPLE
+							txt lang(name(tc) + "はお腹が減った。", "Suddenly, " + name(tc) + " feel" + _s(tc) + " hungry.")
+						}
+						r1 = tc
+						gosub *calcHunger
+					}
+					else {
+						addbuff tc, BUFF_CURSE_OF_HUNGER, 9999999, 100
+					}
 				}
 				if ( efid == SKILL_SPACT_TOUCH_OF_WEAKNESS ) {
 					if ( cdata(CDATA_QUALITY, tc) >= FIX_QUALITY_MIRACLE ) {
 						txt lang(name(tc) + "は弱くならない。", name(tc) + " won't weaken.")
 					}
@@ -6956,11 +6966,11 @@
 						p = 0
 					}
 					if ( p != 0 ) {
 						snd SOUNDLIST_PAYGOLD1
 						cdata(CDATA_GOLD, tc) -= p
-						txt lang(name(cc) + "は" + name(tc) + "から" + p + "枚の金貨を奪った。", name(cc) + " steal" + _s(cc) + " " + p + "gp from " + name(tc) + ".")
+						txt lang(name(cc) + "は" + name(tc) + "から" + p + "枚の金貨を奪った。", name(cc) + " steal" + _s(cc) + " " + p + " gold pieces from " + name(tc) + ".")
 						cdata(CDATA_GOLD, cc) += p
 					}
 					tc = cc
 					if ( gdata(GDATA_RIDER) != 0 ) {
 						if ( gdata(GDATA_RIDER) == tc ) {
@@ -6997,11 +7007,10 @@
 							cdata(CDATA_Y_NEW, cc) = teley + rnd(cnt / 8 + 2) - rnd(cnt / 8 + 2)
 							cell_check cdata(CDATA_X_NEW, cc), cdata(CDATA_Y_NEW, cc)
 						}
 						else {
 							if ( efidprev == SKILL_SPACT_DISPATCH_FLYING_BEAST ) {
-								cdata(CDATA_CHAIN_ATTACK_COUNT, tc) = 0
 								cdata(CDATA_X_NEW, tc) = telex
 								cdata(CDATA_Y_NEW, tc) = teley
 								if ( cdata(CDATA_AI_DISTANCE, tc) >= 2 ) {
 									hosei = rnd(12)
 									if ( hosei == 0 ) {
@@ -7091,14 +7100,12 @@
 								break
 							}
 							if ( zero2 != 200 ) {
 								animeid = ANIMATION_ATTACK
 								gosub *anime
-								shadow = 100
 								gosub *act_melee
 							}
-							shadow = 0
 							break
 						}
 						else {
 							if ( efidprev == SKILL_SPACT_DRAW_SHADOW ) {
 								if ( synccheck(cc, -1) ) {
@@ -7520,11 +7527,11 @@
 		if ( inv(INV_ITEM_PARAM3, ci) == 2 & gdata(GDATA_AREA) != AREA_SOUTH_TYRIS ) {
 			txt lang("これはサウスティリスの地図だ。サウスティリスで読もう。", "You should move to South Tyris to read this map.")
 			goto *effect_end
 		}
 		if ( inv(INV_ITEM_PARAM3, ci) == 3 & gdata(GDATA_AREA) != AREA_LOST_YLVA ) {
-			txt lang("これはロストイルヴァの地図だ。ロストイルヴァで読もう。", "You should move to Lost Ylva to read this map.")
+			txt lang("これはロストイルヴァの地図だ。ロストイルヴァで読もう。", "You should move to Lost Irva to read this map.")
 			goto *effect_end
 		}
 		txt lang("何かの場所を記した地図のようだ…", "There's a mark on the map...")
 		snd SOUNDLIST_BOOK1
 		gsel 4
@@ -7829,11 +7836,11 @@
 	if ( _switch_val == SKILL_EFFECT_POTION_DISASTER | _switch_sw ) {
 		_switch_sw = 0
 		if ( synccheck(tc, -1) ) {
 			snd SOUNDLIST_CURSE3
 			animeload ANIMATION_CRUSH, tc
-			txt lang("災いが" + name(tc) + "に降りかかった！", "A catastrophe has befallen " + name(tc) + "!")
+			txt lang("災いが" + name(tc) + "に降りかかった！", "A disaster has befallen " + name(tc) + "!")
 		}
 		dmgcon tc, CONDITION_SLEEP, 100 + limit(gdata(GDATA_LEVEL) * 2, 50, 400)
 		dmgcon tc, CONDITION_POISON, 100 + limit(gdata(GDATA_LEVEL) * 2, 50, 400)
 		dmgcon tc, CONDITION_PARALYZE, 100 + limit(gdata(GDATA_LEVEL) * 2, 50, 400)
 		dmgcon tc, CONDITION_CONFUSE, 100 + limit(gdata(GDATA_LEVEL) * 2, 50, 400)
@@ -7844,12 +7851,14 @@
 		p = SKILL_ATTR_STR, SKILL_ATTR_CON, SKILL_ATTR_DEX, SKILL_ATTR_CHA, SKILL_ATTR_SPD, SKILL_ATTR_LER, SKILL_ATTR_PER, SKILL_ATTR_MAG, SKILL_ATTR_WIL, SKILL_ATTR_LUC, -1
 		repeat
 			if ( p(cnt) == (-1) ) {
 				break
 			}
-			i = p(cnt) + STARTING_CDATA_ATTR - STARTING_SKILL_ATTR
-			cdata(i, tc) = sorg(p(cnt), tc) * (-1) / 10 - 5
+			if ( encfind(tc, ENCHANT_SUSTAIN * EXT_ENCHANTMENT + p(cnt)) == (-1) ) {
+				i = p(cnt) + STARTING_CDATA_ATTR - STARTING_SKILL_ATTR
+				cdata(i, tc) = sorg(p(cnt), tc) * (-1) / 10 - 5
+			}
 		loop
 		r1 = tc
 		gosub *charaRefresh
 		goto *effect_end
 	}
@@ -9104,11 +9113,11 @@
 		loop
 		if ( efstatus >= 0 ) {
 			if ( synccheck(tc, -1) ) {
 				snd SOUNDLIST_DING2
 				txtef COLOR_GREEN
-				txt lang(name(tc) + "のスキルの潜在能力が上昇した。", "The potentials of " + name(tc) + "'s skills increases.")
+				txt lang(name(tc) + "のスキルの潜在能力が上昇した。", "The potentials of " + name(tc) + your(tc) + " skills increase" + _s(tc) + ".")
 			}
 		}
 		else {
 			if ( synccheck(tc, -1) ) {
 				snd SOUNDLIST_CURSE3
@@ -9387,16 +9396,18 @@
 		snd SOUNDLIST_PUNISH1
 		weap = sdata(SKILL_NORMAL_CASTING, cc)
 		if ( sdata(SKILL_NORMAL_CASTING, cc) < sdata(SKILL_NORMAL_MAGIC_DEVICE, cc) ) {
 			weap = sdata(SKILL_NORMAL_MAGIC_DEVICE, cc)
 		}
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			if ( sdata(SKILL_NORMAL_CASTING, cc) < sdata(SKILL_NORMAL_MAGIC_DEVICE, cc) ) {
-				skillexp SKILL_NORMAL_MAGIC_DEVICE, cc, 400
-			}
-			else {
-				skillexp SKILL_NORMAL_CASTING, cc, 400 // As far as I can understand this is what this is supposed to be, rather than trying to give experience to magic device in either case, since it uses the skill with highest level
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				if ( sdata(SKILL_NORMAL_CASTING, cc) < sdata(SKILL_NORMAL_MAGIC_DEVICE, cc) ) {
+					skillexp SKILL_NORMAL_MAGIC_DEVICE, cc, 400
+				}
+				else {
+					skillexp SKILL_NORMAL_CASTING, cc, 400 // As far as I can understand this is what this is supposed to be, rather than trying to give experience to magic device in either case, since it uses the skill with highest level
+				}
 			}
 		}
 		if ( synccheck(tc, -1) ) {
 			txtmore
 			if ( tc >= MAX_CHARA_FOLLOWER ) {
@@ -9435,21 +9446,18 @@
 	}
 	if ( _switch_val == SKILL_SPACT_DECAPITATION | _switch_sw ) {
 		_switch_sw = 0
 		snd SOUNDLIST_STAB
 		txt lang(name(cc) + "は" + name(tc) + "の首を狙って攻撃した。", name(cc) + " aim" + _s(cc) + " at " + name(tc) + your(tc) + " head and attack" + _s(cc) + ".")
-		dmghp tc, limit(sdata(SKILL_ATTR_DEX, cc) * 3 + rnd(sdata(SKILL_ATTR_DEX, cc)) - cdata(CDATA_PV, tc), 1, 99999), cc
 		if ( cdatan(CDATAN_CLASS, cc) == "farmer" ) {
 			ha = 1
 		}
 		else {
 			ha = 0
 		}
 		if ( cdata(CDATA_HP, tc) > cdata(CDATA_MAX_HP, tc) / (8 - ha) ) {
-			if ( cdata(CDATA_CONDITION_SUFFOCATION, tc) < 10 ) {
-				cdata(CDATA_CONDITION_SUFFOCATION, tc) += 3
-			}
+			gosub *act_melee
 			goto *effect_end
 		}
 		if ( attackskill == SKILL_WEAPON_FIREARM ) {
 			if ( synccheck(tc, -1) ) {
 				snd SOUNDLIST_ATKSWORD
@@ -9729,20 +9737,22 @@
 			cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
 			gdata(GDATA_TEMPORARY_FLAGS3) = 1500
 			attackrange = 1
 			extraattack = 0
 			gosub *act_attack
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-				skillexp SKILL_NORMAL_MARKSMAN, cc, 400
-				if ( attackskill == SKILL_WEAPON_BOW ) {
-					skillexp SKILL_WEAPON_BOW, cc, 400
-				}
-				if ( attackskill == SKILL_WEAPON_FIREARM ) {
-					skillexp SKILL_WEAPON_FIREARM, cc, 400
-				}
-				if ( attackskill == SKILL_WEAPON_CROSSBOW ) {
-					skillexp SKILL_WEAPON_CROSSBOW, cc, 400
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					skillexp SKILL_NORMAL_MARKSMAN, cc, 400
+					if ( attackskill == SKILL_WEAPON_BOW ) {
+						skillexp SKILL_WEAPON_BOW, cc, 400
+					}
+					if ( attackskill == SKILL_WEAPON_FIREARM ) {
+						skillexp SKILL_WEAPON_FIREARM, cc, 400
+					}
+					if ( attackskill == SKILL_WEAPON_CROSSBOW ) {
+						skillexp SKILL_WEAPON_CROSSBOW, cc, 400
+					}
 				}
 			}
 			if ( cc == CHARA_PLAYER | cc != gdata(GDATA_RIDER) ) {
 				if ( cdata(CDATA_IN_TAGTEAM, cc) != 1 ) {
 					if ( rnd(2) == 0 ) {
@@ -9813,13 +9823,15 @@
 			gdata(GDATA_TEMPORARY_FLAGS) = 100
 			attackrange = 1
 			extraattack = 0
 			gosub *act_attack
 		}
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 400
-			skillexp SKILL_WEAPON_THROWING, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 400
+				skillexp SKILL_WEAPON_THROWING, cc, 400
+			}
 		}
 		gdata(GDATA_TEMPORARY_FLAGS) = 0
 		weap = 0
 		goto *effect_end
 	}
@@ -9837,11 +9849,11 @@
 			txtef COLOR_GREEN
 			txt lang(name(cc) + "は次の攻撃に意識を集中させた！", "You put all of your strength into the next blow!")
 		}
 		else {
 			cdata(CDATA_EVOLUTION_STAGE, CHARA_PLAYER) = 0
-			txt lang(name(cc) + "は次の攻撃に意識を集中させていたが、やっぱりやめた。", "You start to put all of your strength into the next blow, but then decide to stop.")
+			txt lang(name(cc) + "は次の攻撃に意識を集中させていたが、やっぱりやめた。", "You decide not to put all of your strength into the next blow.")
 		}
 		snd SOUNDLIST_ENC
 		animeload ANIMATION_CHAOS_CHILD, cc
 		return 0
 	}
@@ -9871,11 +9883,11 @@
 		txtef COLOR_GREEN
 		txt lang(name(cc) + "は鎌で大きく薙ぎ払った！", name(cc) + " mow" + _s(cc) + " " + name(tc) + " down!")
 		if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_SICKLE & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 			if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 				txtef COLOR_YELLOW
-				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
+				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
 				snd SOUNDLIST_AMMO
 				goto *effect_end
 			}
 			txtef COLOR_RED
 			txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を防いだ！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
@@ -9900,13 +9912,15 @@
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmgmp tc, limit(limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) / 5, 1, cdata(CDATA_MAX_MP, tc) / 2)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 400
-			skillexp SKILL_WEAPON_SCYTHE, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 400
+				skillexp SKILL_WEAPON_SCYTHE, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
 		weap = 0
@@ -9940,11 +9954,11 @@
 		snd SOUNDLIST_THROW1
 		if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_LONGSWORD | cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_SHORTSWORD | cdata(WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_SWORDCANE ) {
 			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 				if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 					txtef COLOR_YELLOW
-					txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
+					txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
 					snd SOUNDLIST_AMMO
 					goto *effect_end
 				}
 				txtef COLOR_RED
 				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を防いだ！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
@@ -9971,22 +9985,24 @@
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
 		eqlv = 0
 		eqbui = 0
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_LONGSWORD ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_WEAPON_LONGSWORD, cc, 400
-			}
-			if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_SHORTSWORD ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_WEAPON_SHORTSWORD, cc, 400
-			}
-			if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_SWORDCANE ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_WEAPON_STAVE, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc | TweakData(52, 2) == 1) != 1 ) {
+				if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_LONGSWORD ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_WEAPON_LONGSWORD, cc, 400
+				}
+				if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_SHORTSWORD ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_WEAPON_SHORTSWORD, cc, 400
+				}
+				if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_SWORDCANE ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_WEAPON_STAVE, cc, 400
+				}
 			}
 		}
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
 		if ( cdata(CDATA_POWER_GAUGE, tc) > 0 ) {
 			cdata(CDATA_POWER_GAUGE, tc) = cdata(CDATA_POWER_GAUGE, tc) / 2
@@ -10021,11 +10037,11 @@
 		txt lang(name(cc) + "は武器を逆手で振り上げると" + name(tc) + "に勢いよく突き刺した！", name(cc) + " hold" + _s(cc) + " " + his(cc) + " weapon overhead in a reverse grip and vigorously stab" + _s(cc) + " " + name(tc) + "!")
 		snd SOUNDLIST_THROW1
 		if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_SHORTSWORD2 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 			if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 				txtef COLOR_YELLOW
-				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
+				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
 				snd SOUNDLIST_AMMO
 				goto *effect_end
 			}
 			txtef COLOR_RED
 			txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を防いだ！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
@@ -10049,13 +10065,15 @@
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 400
-			skillexp SKILL_WEAPON_SHORTSWORD, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 400
+				skillexp SKILL_WEAPON_SHORTSWORD, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		if ( cdata(CDATA_CONDITION_FEAR, tc) == 0 ) {
 			cdata(CDATA_CONDITION_FEAR, tc) = 5
@@ -10091,11 +10109,11 @@
 		txt lang(name(cc) + "は重さを乗せた斬撃を" + name(tc) + "に叩き込んだ！", name(cc) + " drive" + _s(cc) + " a heavy slash into " + name(tc) + "!")
 		if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_LONGSWORD2 | cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_AXE ) {
 			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 				if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 					txtef COLOR_YELLOW
-					txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
+					txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
 					snd SOUNDLIST_AMMO
 					goto *effect_end
 				}
 				txtef COLOR_RED
 				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を防いだ！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
@@ -10120,18 +10138,20 @@
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_LONGSWORD2 ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_WEAPON_LONGSWORD, cc, 400
-			}
-			if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_AXE ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_WEAPON_AXE, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_LONGSWORD2 ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_WEAPON_LONGSWORD, cc, 400
+				}
+				if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_AXE ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_WEAPON_AXE, cc, 400
+				}
 			}
 		}
 		eqlv = 0
 		eqbui = 0
 		if ( cdata(CDATA_CONDITION_BLEED, tc) < 15 ) {
@@ -10244,13 +10264,15 @@
 				}
 			}
 		loop
 		eqlv = 0
 		eqbui = 0
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_MARKSMAN, cc, 400
-			skillexp SKILL_WEAPON_BOW, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_MARKSMAN, cc, 400
+				skillexp SKILL_WEAPON_BOW, cc, 400
+			}
 		}
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
 		weap = 0
 		tc = tcbk
 		goto *effect_end
@@ -10306,13 +10328,15 @@
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_MARKSMAN, cc, 400
-			skillexp SKILL_WEAPON_CROSSBOW, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_MARKSMAN, cc, 400
+				skillexp SKILL_WEAPON_CROSSBOW, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		if ( cdata(CDATA_CONDITION_PARALYZE, tc) < 2 ) {
 			cdata(CDATA_CONDITION_PARALYZE, tc) = 2
@@ -10383,13 +10407,15 @@
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_MARKSMAN, cc, 400
-			skillexp SKILL_WEAPON_FIREARM, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_MARKSMAN, cc, 400
+				skillexp SKILL_WEAPON_FIREARM, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		if ( cdata(CDATA_CONDITION_INVERT, tc) < 2 ) {
 			cdata(CDATA_CONDITION_INVERT, tc) = 2
@@ -10456,13 +10482,15 @@
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_MARKSMAN, cc, 400
-			skillexp SKILL_WEAPON_FIREARM, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_MARKSMAN, cc, 400
+				skillexp SKILL_WEAPON_FIREARM, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		if ( cdata(CDATA_PROT_PENALTY, tc) < 3 ) {
 			cdata(CDATA_PROT_PENALTY, tc) = 3
@@ -10578,13 +10606,15 @@
 					}
 				}
 			}
 		loop
 		weap = 0
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_MARKSMAN, cc, 400
-			skillexp SKILL_WEAPON_FIREARM, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_MARKSMAN, cc, 400
+				skillexp SKILL_WEAPON_FIREARM, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
 		weap = 0
@@ -10617,11 +10647,11 @@
 		txt lang(name(cc) + "は力任せの豪快な一撃を" + name(tc) + "に叩き込んだ！", name(cc) + " drive" + _s(cc) + " a heroic blow into " + name(tc) + " with all " + his(cc) + " might!")
 		snd SOUNDLIST_THROW1
 		if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_BLUDGEON & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 			if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 				txtef COLOR_YELLOW
-				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
+				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
 				snd SOUNDLIST_AMMO
 				goto *effect_end
 			}
 			txtef COLOR_RED
 			txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を防いだ！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
@@ -10645,13 +10675,15 @@
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 400
-			skillexp SKILL_WEAPON_BLUNT, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 400
+				skillexp SKILL_WEAPON_BLUNT, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		cdata(CDATA_PROT_PENALTY, tc) = 4
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
@@ -10685,11 +10717,11 @@
 		txt lang(name(cc) + "は一点に狙いを定め" + name(tc) + "を突き刺した！", name(cc) + " aim" + _s(cc) + " at one point and pierce" + _s(cc) + " " + name(tc) + "!")
 		if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_POLEARM | cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_STAVE ) {
 			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 				if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 					txtef COLOR_YELLOW
-					txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
+					txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
 					snd SOUNDLIST_AMMO
 					goto *effect_end
 				}
 				txtef COLOR_RED
 				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を防いだ！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " weapon!")
@@ -10714,18 +10746,20 @@
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
 		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_POLEARM ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_WEAPON_POLEARM, cc, 400
-			}
-			if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_STAVE ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_WEAPON_STAVE, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_POLEARM ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_WEAPON_POLEARM, cc, 400
+				}
+				if ( cdata(CDATA_WEAPON_STYLE_TYPE, cc) == WEAPON_STYLE_STAVE ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_WEAPON_STAVE, cc, 400
+				}
 			}
 		}
 		eqlv = 0
 		eqbui = 0
 		if ( cdata(CDATA_CONDITION_DIM, tc) < 10 ) {
@@ -10761,11 +10795,11 @@
 		txtef COLOR_GREEN
 		txt lang(name(cc) + "は" + name(tc) + "に怒涛の連続攻撃を仕掛けた！", name(cc) + " hit" + _s(cc) + " " + name(tc) + " with a furious succession of attacks!")
 		if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == WEAPON_STYLE_STAVE2 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 			if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 				txtef COLOR_YELLOW
-				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attacks with " + his(tc) + " weapon!")
+				txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を弾いた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attacks with " + his(tc) + " weapon!")
 				snd SOUNDLIST_AMMO
 				goto *effect_end
 			}
 			txtef COLOR_RED
 			txt lang(name(tc) + "は咄嗟に武器で" + name(cc) + "の攻撃を防いだ！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attacks with " + his(tc) + " weapon!")
@@ -10799,13 +10833,15 @@
 			snd SOUNDLIST_ATK2
 			dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 16, 2500) / 16 * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap / 10 + 1), cc, SKILL_SPACT_DANCE_OF_BLOW
 		loop
 		eqlv = 0
 		eqbui = 0
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 400
-			skillexp SKILL_WEAPON_STAVE, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 400
+				skillexp SKILL_WEAPON_STAVE, cc, 400
+			}
 		}
 		snd SOUNDLIST_BOLT1
 		cdata(CDATA_EVASION_PENALTY, tc) = 5
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
 		weap = 0
@@ -10866,13 +10902,15 @@
 			dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) / 2 * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
 			dmgcon tc, CONDITION_DIM, 50 + int(sqrt(sdata(SKILL_NORMAL_SHIELD, cc))) * 15 + cbit(CHARA_BIT_BREAK_WALLS, cc) * 30
 			if ( cdata(CDATA_CONDITION_PARALYZE, tc) == 0 ) {
 				cdata(CDATA_CONDITION_PARALYZE, tc) += rnd(2) + cbit(CHARA_BIT_BREAK_WALLS, cc)
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-				skillexp SKILL_NORMAL_TACTICS, cc, 400
-				skillexp SKILL_NORMAL_SHIELD, cc, 400
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					skillexp SKILL_NORMAL_TACTICS, cc, 400
+					skillexp SKILL_NORMAL_SHIELD, cc, 400
+				}
 			}
 			weap = 0
 		}
 		goto *effect_end
 	}
@@ -10905,16 +10943,16 @@
 			if ( cdata(CDATA_WEAPON_STYLE_TYPE, tc) == 0 ) {
 				if ( cdata(CDATA_SHIELD_STYLE_TYPE, tc) == 0 ) {
 					if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
 						if ( rnd(sdata(SKILL_NORMAL_GREATER_EVASION, tc) + 1000) > rnd(2000) ) {
 							txtef COLOR_YELLOW
-							txt lang(name(tc) + "は咄嗟に闘気をぶつけ" + name(cc) + "の攻撃を逸らした！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " own unleashed fighting spirit!")
+							txt lang(name(tc) + "は咄嗟に闘気をぶつけ" + name(cc) + "の攻撃を受け止めた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " own unleashed fighting spirit!")
 							snd SOUNDLIST_PUNISH1
 							goto *effect_end
 						}
 						txtef COLOR_RED
-						txt lang(name(tc) + "は咄嗟に闘気をぶつけ" + name(cc) + "の攻撃を受け止めた！", name(tc) + " stop" + _s(tc) + " " + name(cc) + your(cc) + " attack with " + his(tc) + " own unleashed fighting spirit!")
+						txt lang(name(tc) + "は咄嗟に闘気をぶつけ" + name(cc) + "の攻撃を逸らした！", name(tc) + " fend" + _s(tc) + " off " + name(cc) + your(cc) + " attack with " + his(tc) + " own unleashed fighting spirit!")
 						snd SOUNDLIST_PUNISH1
 						weap = limit(weap - sdata(SKILL_NORMAL_GREATER_EVASION, tc), 1, 2000)
 					}
 				}
 			}
@@ -10936,14 +10974,32 @@
 		}
 		if ( eqbui <= 0 ) {
 			eqbui = 1
 		}
 		eqlv = limit(eqlv / eqbui * 3, 3, 30)
-		dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 400
-			skillexp SKILL_WEAPON_MARTIAL_ARTS, cc, 400
+		cdata(444, cc) = limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1)
+		if ( TweakData(50, 4) > 0 & cdata(444, cc) >= cdata(CDATA_HP, tc) ) {
+			txtef COLOR_YELLOW
+			switch TweakData(50, 4)
+				case 1
+					txt "「お前はもう死んでいる。」"
+					swbreak
+				case 2
+					txt cnvtalk("You are already dead.")
+					swbreak
+				default
+					txt cnvtalk("Omae wa mou shindeiru.")
+					swbreak
+			swend
+			msg_halt
+		}
+		dmghp tc, cdata(444, cc), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 400
+				skillexp SKILL_WEAPON_MARTIAL_ARTS, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		cdata(CDATA_POWER_GAUGE, cc) += 16
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
@@ -13153,10 +13209,11 @@
 		invsubroutine = 1
 		invctrl = 23, 12
 		snd SOUNDLIST_INV
 		gosub *com_inventory
 		if ( stat == 1 ) {
+			studybuddy = ""
 			repeat MAX_CHARA_TOTAL
 				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 					continue
 				}
 				if ( cc == cnt ) {
@@ -13179,20 +13236,26 @@
 					continue
 				}
 				if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
 					continue
 				}
+				if ( studybuddy == "" ) {
+					studybuddy = name(tc)
+				}
+				else {
+					studybuddy = "your friends"
+				}
 				ens2 += limit((sdata(SKILL_NORMAL_LITERACY, tc) + sdata(SKILL_NORMAL_MEMORIZATION, tc) + 1) / 2, 3, 3 + sdata(SKILL_NORMAL_LITERACY, cc) / 5)
 			loop
 			if ( ens2 > 100 ) {
 				ens2 = 100
 			}
 			if ( ens2 == 0 ) {
 				txt lang("あなたはひとりぼっちだ…。", "You're all alone.")
 				goto *effect_end
 			}
-			txt lang("あなたと仲間たちは読書会を始めた。", "You started a reading party with your friends.")
+			txt lang("あなたと仲間たちは読書会を始めた。", "You started a reading party with " + studybuddy + ".")
 			gosub *readSpellbook
 		}
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_LOCK_BREAK | _switch_sw ) {
@@ -13239,36 +13302,26 @@
 						snd SOUNDLIST_BASH1
 						await 100
 						snd SOUNDLIST_BASH1
 						await 100
 						snd SOUNDLIST_BALL1
-						redraw 0
-						gosub *screen_draw
-						gosub *screen_fade
-						gsel 4
-						pos 0, 0
-						picload exedir + "graphic\\face1" + devfile + ".bmp", 1
-						gsel 0
 						if ( breakstr / 2 < inv(INV_ITEM_PARAM2, ci) ) {
-							breakstr = 0
 							txtef COLOR_BLUE
-							txt lang("…力任せでも無理だということがわかった。", "...You realize it is impossible to force it open.")
+							txt lang("…力任せでも無理だということがわかった。", "...It's impossible to open.")
 							goto *effect_end
 						}
 						if ( rnd(rnd(breakstr + 1) + 1) < inv(INV_ITEM_PARAM2, ci) ) {
-							breakstr = 0
 							txtef COLOR_BLUE
 							txt lang("…なかなか頑丈だ。", "...It's quite sturdy.")
 							goto *effect_end
 						}
 						snd SOUNDLIST_CRUSH1
 						txtef COLOR_GREEN
 						txt lang("錠の破壊に成功した！", "You succeeded in destroying the lock!")
 						ri = ci
 						cc = CHARA_PLAYER
 						gosub *open_chest
-						breakstr = 0
 						skillexp SKILL_ATTR_STR, CHARA_PLAYER, 50
 						skillexp SKILL_NORMAL_LOCK_PICKING, CHARA_PLAYER, 40 + inv(INV_ITEM_PARAM2, ci) / 3
 						repeat MAX_CHARA_FOLLOWER - 1, 1
 							if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 								continue
@@ -13986,11 +14039,11 @@
 		efp = 0
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_MEGID_FLAME | _switch_sw ) {
 		_switch_sw = 0
-		txt lang(name(cc) + "は祝福を焼き尽くす波動を放った。", name(cc) + " sends out a wave of blessed purging flames.")
+		txt lang(name(cc) + "は祝福を焼き尽くす波動を放った。", name(cc) + " released a wave of dispelling flames.")
 		animeid = ANIMATION_RAGNA
 		gosub *anime
 		repeat MAX_CHARA_TOTAL
 			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 				continue
@@ -14203,27 +14256,27 @@
 							}
 							p--
 							inv(INV_ITEM_EQUIP, p) = 0
 							cdata(cnt, CHARA_PLAYER) = cdata(cnt, CHARA_PLAYER) / EXT_EQUIP_SLOTS * EXT_EQUIP_SLOTS
 							txtef COLOR_PURPLE
-							txt lang(name(CHARA_PLAYER) + "は" + name(cc) + "に言われるがまま、装備を外してしまった。", name(cc) + " removes " + his(cc) + " equipment as commanded by " + name(CHARA_PLAYER) + ".")
+							txt lang(name(CHARA_PLAYER) + "は" + name(cc) + "に言われるがまま、装備を外してしまった。", name(tc) + " " + was(tc) + " brainwashed into removing " + his(tc) + " equipment.")
 						}
 					loop
 					cdata(CDATA_CONDITION_BRAINWASH, CHARA_PLAYER) = limit(sdata(SKILL_ATTR_CHA, cc) / 5 - sdata(SKILL_ATTR_WIL, CHARA_PLAYER) / 5, 5, 25)
 					r1 = CHARA_PLAYER
 					gosub *charaRefresh
 				}
 				else {
 					txtef COLOR_GREEN
-					txt lang("あなたは" + name(cc) + "の洗脳を跳ね除けた。", "You brush aside " + name(cc) + "'s brainwashing.")
+					txt lang("あなたは" + name(cc) + "の洗脳を跳ね除けた。", "You resist " + name(cc) + "'s brainwashing.")
 				}
 				continue
 			}
 			sennnou = limit(cdata(CDATA_IMPRESSION, tc), 1, 300)
 			if ( rnd(sennnou + sdata(SKILL_ATTR_CHA, CHARA_PLAYER)) > 50 + rnd(sdata(SKILL_ATTR_CHA, cc)) | findbuff(tc, BUFF_TAG_FORCE) != (-1) ) {
 				txtef COLOR_GREEN
-				txt lang(name(tc) + "は" + name(cc) + "の洗脳を跳ね除けた。", name(tc) + " brush aside " + name(cc) + "'s brainwashing.")
+				txt lang(name(tc) + "は" + name(cc) + "の洗脳を跳ね除けた。", name(tc) + " resists " + name(cc) + "'s brainwashing.")
 				continue
 			}
 			animeload ANIMATION_FIZZLE, tc
 			cdata(CDATA_CONDITION_BRAINWASH, tc) = limit((300 - cdata(CDATA_IMPRESSION, tc)) * 1 / 10, 2, 15)
 			cdata(CDATA_AI_AGGRO, tc) = 5
@@ -14639,10 +14692,11 @@
 	if ( _switch_val == SKILL_SPACT_ENSEMBLE | _switch_sw ) {
 		_switch_sw = 0
 		ens = 0
 		txtef COLOR_BLUE
 		txt lang("アンサンブル！", "Ensemble!")
+		performerpal = ""
 		repeat MAX_CHARA_TOTAL
 			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 				continue
 			}
 			if ( cc == cnt ) {
@@ -14665,20 +14719,26 @@
 				continue
 			}
 			if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
 				continue
 			}
+			if ( performerpal == "" ) {
+				performerpal = name(tc)
+			}
+			else {
+				performerpal = "your friends"
+			}
 			ens += limit(sdata(SKILL_NORMAL_PERFORMER, tc), 3, 3 + sdata(SKILL_NORMAL_PERFORMER, cc) / 5)
 		loop
 		if ( ens > 200 ) {
 			ens = 200
 		}
 		if ( ens == 0 ) {
 			txt lang("あなたはひとりぼっちだ…。", "You're all alone.")
 			goto *effect_end
 		}
-		txt lang("あなたと仲間たちはアンサンブルを始めた。", "You started the ensemble with your friends.")
+		txt lang("あなたと仲間たちはアンサンブルを始めた。", "You started the ensemble with " + performerpal + ".")
 
 		/********** ANNA CUSTOM - BEGINNING **********/
 
 		EnsembleStart = 1
 
@@ -14931,12 +14991,14 @@
 			}
 			cdata(CDATA_CONDITION_GRAVITY, tc) += 30
 			if ( cdata(CDATA_CONDITION_BIND, tc) == 0 ) {
 				cdata(CDATA_CONDITION_BIND, tc)++
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-				f = 1
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					f = 1
+				}
 			}
 			dmghp tc, dmg, cc, SKILL_RES_MAGIC, 1000
 		loop
 		if ( f == 1 ) {
 			f = 0
@@ -15704,42 +15766,44 @@
 			animeid = ANIMATION_UNISON_IMPACT3
 			anic = tc
 			gosub *anime
 		}
 		dmghp tc, dmg, cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			repeat MAX_CHARA_TOTAL
-				if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
-					continue
-				}
-				if ( cdata(CDATA_POWER_GAUGE, cnt) < 0 ) {
-					continue
-				}
-				if ( cdata(CDATA_RELATION, cnt) == 10 | cc == CHARA_PLAYER ) {
-					if ( cdata(CDATA_RELATION, cnt) < 10 ) {
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				repeat MAX_CHARA_TOTAL
+					if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
 						continue
 					}
-				}
-				if ( cdata(CDATA_RELATION, cnt) < 10 & cc != CHARA_PLAYER ) {
-					if ( cdata(CDATA_RELATION, cc) != cdata(CDATA_RELATION, cnt) ) {
+					if ( cdata(CDATA_POWER_GAUGE, cnt) < 0 ) {
 						continue
 					}
-				}
-				ovtc = cnt
-				dx = cdata(CDATA_X, ovtc)
-				dy = cdata(CDATA_Y, ovtc)
-				if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) > sdataref(SKILL_DATAREF_TG_RANGE, SKILL_SPACT_CHEER) \ EXT_SDATAREF + 1 ) {
-					continue
-				}
-				if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
-					continue
-				}
-				skillexp SKILL_NORMAL_TACTICS, ovtc, 200
-				skillexp SKILL_NORMAL_MARKSMAN, ovtc, 200
-				skillexp SKILL_NORMAL_CASTING, ovtc, 200
-				skillexp SKILL_NORMAL_MAGIC_DEVICE, ovtc, 200
-			loop
+					if ( cdata(CDATA_RELATION, cnt) == 10 | cc == CHARA_PLAYER ) {
+						if ( cdata(CDATA_RELATION, cnt) < 10 ) {
+							continue
+						}
+					}
+					if ( cdata(CDATA_RELATION, cnt) < 10 & cc != CHARA_PLAYER ) {
+						if ( cdata(CDATA_RELATION, cc) != cdata(CDATA_RELATION, cnt) ) {
+							continue
+						}
+					}
+					ovtc = cnt
+					dx = cdata(CDATA_X, ovtc)
+					dy = cdata(CDATA_Y, ovtc)
+					if ( dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) > sdataref(SKILL_DATAREF_TG_RANGE, SKILL_SPACT_CHEER) \ EXT_SDATAREF + 1 ) {
+						continue
+					}
+					if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
+						continue
+					}
+					skillexp SKILL_NORMAL_TACTICS, ovtc, 200
+					skillexp SKILL_NORMAL_MARKSMAN, ovtc, 200
+					skillexp SKILL_NORMAL_CASTING, ovtc, 200
+					skillexp SKILL_NORMAL_MAGIC_DEVICE, ovtc, 200
+				loop
+			}
 		}
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_PURGE | _switch_sw ) {
 		_switch_sw = 0
@@ -15949,24 +16013,20 @@
 		gdata(GDATA_ROW_ACT) = ACTION_CUT_TREE
 		gosub *generalAct
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_PERSUASION | _switch_sw ) {
-		_switch_sw = 0
-		_switch_sw++
+		_switch_sw = 1
 	}
 	if ( _switch_val == SKILL_SPACT_PECULIAR_JOKE | _switch_sw ) {
-		_switch_sw = 0
-		_switch_sw++
+		_switch_sw = 1
 	}
 	if ( _switch_val == SKILL_SPACT_BLENDED_LIE | _switch_sw ) {
-		_switch_sw = 0
-		_switch_sw++
+		_switch_sw = 1
 	}
 	if ( _switch_val == SKILL_SPACT_INTIMIDATION | _switch_sw ) {
-		_switch_sw = 0
-		_switch_sw++
+		_switch_sw = 1
 	}
 	if ( _switch_val == SKILL_SPACT_MYSTERIOUS_SONG | _switch_sw ) {
 		_switch_sw = 0
 		if ( cc == CHARA_PLAYER ) {
 			talking = 0
@@ -16394,11 +16454,11 @@
 		if ( cc == CHARA_PLAYER & (cbit(CHARA_BIT_LIVESTOCK, tc) == 1 | getworker(gdata(GDATA_AREA)) == tc) & adata(ADATA_ID, gdata(GDATA_AREA)) == AREA_RANCH ) {
 			if ( cbit(CHARA_BIT_SQUEEZED, tc) == 1 ) {
 				txt lang("まだ乳が溜まってない。", name(tc) + " has not accumulated milk yet.")
 				goto *effect_end
 			}
-			if ( cdata(CDATA_SPRITE_SIZE_MILK, tc) != 0 ) {
+			if ( TweakData(54, 2) == 1 & cdata(CDATA_SPRITE_SIZE_MILK, tc) != 0 ) {
 				txt lang("乳を搾れるほど成長していない。", name(tc) + " is not old enough to produce milk.")
 				goto *effect_end
 			}
 			if ( sorg(SKILL_ATTR_LIFE, tc) <= 2 ) {
 				txtef COLOR_RED
@@ -16419,11 +16479,16 @@
 				}
 				flt
 				itemcreate -1, ITEM_ID_BOTTLE_MILK, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 				if ( stat ) {
 					inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, tc)
-					inv(INV_ITEM_LEVEL, ci) = cdata(CDATA_BRUSH_LEVEL, tc) + milkp + 5 + cdata(CDATA_SPRITE_SIZE_MILK, tc) + rnd(limit(sdata(SKILL_ATTR_DEX, CHARA_PLAYER) / 100, 0, 2) + 1)
+					if ( TweakData(54, 2) == 1 ) {
+						inv(INV_ITEM_LEVEL, ci) = cdata(CDATA_BRUSH_LEVEL, tc) + milkp + 5 + cdata(CDATA_SPRITE_SIZE_MILK, tc) + rnd(limit(sdata(SKILL_ATTR_DEX, CHARA_PLAYER) / 100, 0, 2) + 1)
+					}
+					else {
+						inv(INV_ITEM_LEVEL, ci) = cdata(CDATA_BRUSH_LEVEL, tc) + 2 + milkp + rnd(limit(sdata(SKILL_ATTR_DEX, CHARA_PLAYER) / 50, 0, 5) + 1)
+					}
 				}
 				milkp = 0
 				cbitmod CHARA_BIT_SQUEEZED, tc, 1
 				evadd EVENT_SQUEEZE, tc
 				goto *effect_end
@@ -16439,11 +16504,16 @@
 			}
 			flt
 			itemcreate -1, ITEM_ID_BOTTLE_MILK, cdata(CDATA_X, CHARA_PLAYER), cdata(CDATA_Y, CHARA_PLAYER), 0
 			if ( stat ) {
 				inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, tc)
-				inv(INV_ITEM_LEVEL, ci) = cdata(CDATA_BRUSH_LEVEL, tc) + milkp + 5 + cdata(CDATA_SPRITE_SIZE_MILK, tc) + rnd(limit(sdata(SKILL_ATTR_DEX, CHARA_PLAYER) / 100, 0, 2) + 1)
+				if ( TweakData(54, 2) == 1 ) {
+					inv(INV_ITEM_LEVEL, ci) = cdata(CDATA_BRUSH_LEVEL, tc) + milkp + 5 + cdata(CDATA_SPRITE_SIZE_MILK, tc) + rnd(limit(sdata(SKILL_ATTR_DEX, CHARA_PLAYER) / 100, 0, 2) + 1)
+				}
+				else {
+					inv(INV_ITEM_LEVEL, ci) = cdata(CDATA_BRUSH_LEVEL, tc) + 2 + milkp + rnd(limit(sdata(SKILL_ATTR_DEX, CHARA_PLAYER) / 50, 0, 5) + 1)
+				}
 			}
 			milkp = 0
 			txtef COLOR_GREEN
 			txt lang(name(tc) + "から濃厚な乳を搾り取った。", "You squeezed milk from " + name(tc) + ".")
 			txtef COLOR_PINK
@@ -16541,24 +16611,24 @@
 					cdata(CDATA_ITEM_USING, CHARA_PLAYER) = -1
 					goto *sleep
 				}
 			}
 		}
-		if ( cdata(CDATA_IMPRESSION, tc) < 100 ) {
+		if ( ( cc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, tc) < 100 ) | ( tc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, cc) < 100 ) ) {
 			txt lang(name(cc) + "は" + name(tc) + "をきつく締め上げた。", name(cc) + " squeezed " + name(tc) + ".")
 		}
-		if ( cc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, tc) >= 100 ) {
+		if ( ( cc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, tc) >= 100 ) | ( tc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, cc) >= 100 ) ) {
 			txt lang(name(cc) + "は" + name(tc) + "をきつく抱きしめた。", name(cc) + " hugged " + name(tc) + " tightly.")
 		}
 		if ( cc == CHARA_PLAYER & tc == CHARA_PLAYER ) {
 			txt lang("痛い！", "What?")
 			goto *effect_end
 		}
 		if ( cdata(CDATA_CONDITION_BIND, tc) == 0 ) {
 			cdata(CDATA_CONDITION_BIND, tc) = 1
 		}
-		if ( cdata(CDATA_IMPRESSION, tc) < 100 | cc != CHARA_PLAYER ) {
+		if ( ( cc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, tc) < 100 ) | ( tc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, cc) < 100 ) ) {
 			if ( cdata(CDATA_CONDITION_JIU_JITSU, cc) == 100 ) {
 				txtef COLOR_RED
 				txt lang("さらに、" + name(tc) + "に極め技を仕掛けた。", "Further, " + name(cc) + " attacked " + name(tc) + " by kiwame-waza.")
 			}
 			if ( jp ) {
@@ -16570,43 +16640,43 @@
 			await 100
 			snd SOUNDLIST_DRINK1
 			dmghp tc, limit(sdata(SKILL_ATTR_STR, cc) / 20 * (sdata(SKILL_ATTR_STR, cc) / 20 + rnd(sdata(SKILL_ATTR_STR, cc) / 20 + 2)) - sdata(SKILL_ATTR_STR, tc) * 2, sdata(SKILL_ATTR_STR, cc), 100000), cc
 			if ( cdata(CDATA_CONDITION_JIU_JITSU, cc) == 100 ) {
 				dmghp tc, limit(sdata(SKILL_ATTR_DEX, cc) / 10 * (sdata(SKILL_WEAPON_MARTIAL_ARTS, cc) + 1) / 10 + rnd(sdata(SKILL_ATTR_DEX, cc) * 2) - sdata(SKILL_ATTR_CON, tc) * 2, sdata(SKILL_ATTR_DEX, cc), 100000), cc
-				if ( cdata(CDATA_CONDITION_BIND, tc) == 1 ) {
-					cdata(CDATA_CONDITION_BIND, tc) = 2
-				}
 				if ( cdata(CDATA_CONDITION_BIND, cc) < 2 ) {
 					cdata(CDATA_CONDITION_BIND, cc) = 2
 				}
 			}
 			hostileaction cc, tc
 			goto *effect_end
 		}
-		if ( cc == CHARA_PLAYER ) {
-			if ( cdata(CDATA_IMPRESSION, tc) >= 200 ) {
-				cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
-				if ( cdata(CDATA_CONDITION_BRAINWASH, tc) > 1 ) {
-					cdata(CDATA_CONDITION_BRAINWASH, tc) = 1
-				}
+		if ( ( cc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, tc) >= 200 ) | ( tc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, cc) >= 200 ) ) {
+			cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
+			if ( cdata(CDATA_CONDITION_BRAINWASH, tc) > 1 ) {
+				cdata(CDATA_CONDITION_BRAINWASH, tc) = 1
+			}
+			if (tc != CHARA_PLAYER) {
 				customtalk tc, DBMODE_FLAVOR_HUG
-				gosub *convert_word
-				if ( gdata(GDATA_CUSTOM_TALK) == 100 ) {
-					if ( jp ) {
-						txt name(tc) + "は無言で抱きしめ返してきた。", "「あたたかい…」", "「幸せな気分" + _dana(3) + "」"
-					}
-				}
 			}
-			if ( cdata(CDATA_HP, cc) > cdata(CDATA_MAX_HP, cc) / 10 + 1 ) {
-				if ( cdata(CDATA_HP, tc) != cdata(CDATA_MAX_HP, tc) ) {
-					animeid = ANIMATION_HEAL_FAST
-					gosub *anime
-					dmghp cc, limit(cdata(CDATA_MAX_HP, cc) / 10, 1, cdata(CDATA_MAX_HP, tc) - cdata(CDATA_HP, tc)),
-					healhp tc, cdata(CDATA_MAX_HP, cc) / 10
+			else {
+				customtalk cc, DBMODE_FLAVOR_HUG
+			}
+			gosub *convert_word
+			if ( gdata(GDATA_CUSTOM_TALK) == 100 ) {
+				if ( jp ) {
+					txt name(tc) + "は無言で抱きしめ返してきた。", "「あたたかい…」", "「幸せな気分" + _dana(3) + "」"
 				}
 			}
 		}
+		if ( cdata(CDATA_HP, cc) > cdata(CDATA_MAX_HP, cc) / 10 + 1 ) {
+			if ( cdata(CDATA_HP, tc) != cdata(CDATA_MAX_HP, tc) ) {
+				animeid = ANIMATION_HEAL_FAST
+				gosub *anime
+				dmghp cc, limit(cdata(CDATA_MAX_HP, cc) / 10, 1, cdata(CDATA_MAX_HP, tc) - cdata(CDATA_HP, tc)), 
+				healhp tc, cdata(CDATA_MAX_HP, cc) / 10
+			}
+		}
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_MAGIC_KISS | _switch_sw ) {
 		_switch_sw = 0
 		if ( cdata(CDATA_ID, tc) == CREATURE_ID_JURE | cdata(CDATA_ID, tc) == CREATURE_ID_BLESSED_JURE ) {
@@ -16624,10 +16694,31 @@
 		if ( cc == CHARA_PLAYER & tc == CHARA_PLAYER ) {
 			txt lang("えっ。", "What?")
 			goto *effect_end
 		}
 		txt lang(name(cc) + "は" + name(tc) + "に口づけした。", name(cc) + " kissed " + name(tc) + ".")
+		if ( ( cc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, tc) >= 200 ) | ( tc == CHARA_PLAYER & cdata(CDATA_IMPRESSION, cc) >= 200 ) ) {
+			cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
+			if ( cdata(CDATA_CONDITION_BRAINWASH, tc) > 1 ) {
+				cdata(CDATA_CONDITION_BRAINWASH, tc) = 1
+			}
+			if ( cc == CHARA_PLAYER) {
+				customtalk tc, DBMODE_FLAVOR_KISS
+			}
+			else {
+				customtalk cc, DBMODE_FLAVOR_KISS
+			}
+			gosub *convert_word
+			if ( gdata(GDATA_CUSTOM_TALK) == 100 ) {
+				if ( jp ) {
+					txt "「大好き♪1」", "「んっ…♪」", "「もっと…して」", "「キスだけじゃいや…」"
+				}
+			}
+			dmgmp cc, sdata(SKILL_ATTR_CHA, cc) / 20 + 1
+			healmp tc, sdata(SKILL_ATTR_CHA, cc) / 10 + 1
+			goto *effect_end
+		}
 		if ( cc == CHARA_PLAYER ) {
 			if ( cdata(CDATA_IMPRESSION, tc) < 100 ) {
 				if ( jp ) {
 					txt "「ヘンタイ！」", "「殺してやる」", "「うげぇ…ぺっぺっ」", "「ひどい…」"
 				}
@@ -16644,26 +16735,10 @@
 				modimp tc, -10
 				dmgmp tc, sdata(SKILL_ATTR_CHA, cc) / 10 + 1
 				healmp cc, sdata(SKILL_ATTR_CHA, cc) / 20 + 1
 				goto *effect_end
 			}
-			if ( cdata(CDATA_IMPRESSION, tc) >= 200 ) {
-				cdata(CDATA_EMO_ICON, tc) = 17 + 100 * 3
-				if ( cdata(CDATA_CONDITION_BRAINWASH, tc) > 1 ) {
-					cdata(CDATA_CONDITION_BRAINWASH, tc) = 1
-				}
-				customtalk tc, DBMODE_FLAVOR_KISS
-				gosub *convert_word
-				if ( gdata(GDATA_CUSTOM_TALK) == 100 ) {
-					if ( jp ) {
-						txt "「大好き♪1」", "「んっ…♪」", "「もっと…して」", "「キスだけじゃいや…」"
-					}
-				}
-				dmgmp cc, sdata(SKILL_ATTR_CHA, cc) / 10 + 1
-				healmp tc, sdata(SKILL_ATTR_CHA, cc) / 10 + 1
-				goto *effect_end
-			}
 			if ( jp ) {
 				txt "「いきなり何を！？」", "「冗談はやめてよ」", "「そういう関係になりたいの？」", "「責任とってよ！」"
 			}
 			if ( tc >= MAX_CHARA_FOLLOWER ) {
 				cdata(CDATA_RELATION, tc) = -3
@@ -16671,18 +16746,17 @@
 			if ( cdata(CDATA_CONDITION_BRAINWASH, tc) > 1 ) {
 				if ( rnd(2) == 0 ) {
 					cdata(CDATA_CONDITION_BRAINWASH, tc) = 1
 				}
 			}
-			dmgmp tc, sdata(SKILL_ATTR_CHA, cc) / 20 + 1
+			dmgmp tc, sdata(SKILL_ATTR_CHA, cc) / 10 + 1
 			healmp cc, sdata(SKILL_ATTR_CHA, cc) / 10 + 1
 			modkarma CHARA_PLAYER, -2
+			goto *effect_end
 		}
-		else {
-			dmgmp tc, rnd(sdata(SKILL_ATTR_CHA, cc) / 10 + 30) + 10
-			healmp cc, rnd(sdata(SKILL_ATTR_CHA, cc) / 10 + 30) + 10
-		}
+		dmgmp tc, rnd(sdata(SKILL_ATTR_CHA, cc) / 10 + 30) + 10
+		healmp cc, rnd(sdata(SKILL_ATTR_CHA, cc) / 10 + 30) + 10
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_HYPER_DASH | _switch_sw ) {
 		_switch_sw = 0
 		if ( cc == CHARA_PLAYER ) {
@@ -16707,11 +16781,11 @@
 		animeload ANIMATION_MP_BREATH, cc
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_KILLING_DANCE | _switch_sw ) {
 		_switch_sw = 0
-		addbuff tc, BUFF_KILLING_DANCE, 13, 13
+		addbuff tc, BUFF_KILLING_DANCE, 44, 44
 		snd SOUNDLIST_ATK_MIND
 		animeload 43, cc
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_SPACE_RETENTION | _switch_sw ) {
@@ -16946,12 +17020,14 @@
 		snd SOUNDLIST_CHEER
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_MISTELTEIN | _switch_sw ) {
 		_switch_sw = 0
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-			f = 1
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				f = 1
+			}
 		}
 		txtef COLOR_GREEN
 		txt lang(name(cc) + "はヤドリギを投げつけた。", name(cc) + " threw the mistletoe.")
 		animeid = ANIMATION_SPORE
 		gosub *anime
@@ -17027,17 +17103,19 @@
 				continue
 			}
 			if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
 				continue
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-				f = 1
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					f = 1
+				}
 			}
-			dmg = (sdata(SKILL_ATTR_LER, cc) / 5 + 2) * ((sdata(SKILL_NORMAL_GARDENING, cc) + 1) / 5 + 2) + rnd(sdata(SKILL_ATTR_LER, cc) + 5)
+			dmg = (sdata(SKILL_ATTR_LER, cc) / 5 + 2) * ((sdata(SKILL_NORMAL_GARDENING, cc) + 1) / 2 + 2) + rnd(sdata(SKILL_ATTR_LER, cc) + 5)
 			dmghp tc, dmg, cc, SKILL_RES_POISON, 1000
 			if ( cdata(CDATA_CONDITION_BIND, tc) == 0 ) {
-				cdata(CDATA_CONDITION_BIND, tc) += 1
+				cdata(CDATA_CONDITION_BIND, tc) += 3
 				if ( synccheck(tc, -1) ) {
 					txt lang(name(tc) + "は蔓に束縛された。", name(tc) + " was bound.")
 				}
 			}
 		loop
@@ -17079,12 +17157,14 @@
 				continue
 			}
 			if ( fov_los(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), dx, dy) == 0 ) {
 				continue
 			}
-			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-				f = 1
+			if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+				if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+					f = 1
+				}
 			}
 			dmg = limit((sdata(SKILL_ATTR_CON, cc) / 8 + 2) * ((sdata(SKILL_NORMAL_GENE_ENGINEER, cc) + 1) / 8 + 2) + rnd(cdata(CDATA_CONDITION_POISON, tc) + 5), 2, 40000)
 			if ( cdata(CDATA_CONDITION_POISON, tc) >= 25 & cdata(CDATA_CONDITION_POISON, tc) < 50 ) {
 				dmg = dmg * 2
 			}
@@ -17325,43 +17405,10 @@
 		txt lang(name(cc) + "はすっきりした。", name(cc) + " calm" + _s(cc) + " down.")
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_GRAND_FINALE | _switch_sw ) {
 		_switch_sw = 0
-		if ( gdata(STARTING_GDATA_FLAG + 373) >= 0 ) {
-			goto *effect_end
-		}
-		txtef COLOR_RED2
-		txt_skillname
-		repeat MAX_CHARA_TOTAL
-			if ( cdata(CDATA_EXIST, cnt) != CHAR_STATE_ALIVE ) {
-				continue
-			}
-			if ( cnt >= MAX_CHARA_FOLLOWER ) {
-				continue
-			}
-			tc = cnt
-			repeat MAX_BLESSINGS + MAX_HEXES
-				i = MAX_BLESSINGS + MAX_HEXES - cnt - 1
-				if ( bdataref(0, cdata(STARTING_CDATA_BUFF + i * ARRAY_CDATA_BUFF, tc)) != 1 ) {
-					continue
-				}
-				if ( cdata(STARTING_CDATA_BUFF + i * ARRAY_CDATA_BUFF, tc) == BUFF_PUNISHMENT ) {
-					continue
-				}
-				if ( cdata(STARTING_CDATA_BUFF + i * ARRAY_CDATA_BUFF, tc) == 0 ) {
-					continue
-				}
-				delbuff tc, i
-				continue cnt
-			loop
-			cdata(CDATA_HP, cnt) = 0
-			cdata(CDATA_MP, cnt) = 0
-			cdata(CDATA_SP, cnt) = 0
-			cdata(CDATA_IMMUNE_DAMAGE, tc) = 0
-			dmghp tc, cdata(CDATA_MAX_HP, tc), cc
-		loop
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_TUIN_DER_LUSTEN | _switch_sw ) {
 		_switch_sw = 0
 		if ( synccheck(cc, -1) ) {
@@ -17917,41 +17964,10 @@
 		gosub *effect
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_MARKING | _switch_sw ) {
 		_switch_sw = 0
-		if ( cdata(CDATA_THIRST, cc) < 10000 ) {
-			txt_nothinghappens
-			goto *effect_end
-		}
-		if ( tc == cc | (cc != CHARA_PLAYER & dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) > 1) ) {
-			if ( mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
-				goto *effect_end
-			}
-			snd SOUNDLIST_WATERM
-			cdata(CDATA_THIRST, cc) = 5000
-			txt lang(name(cc) + "はマーキングを始めた。*ジョロロロ*　", name(cc) + " began marking. *slop around* ")
-			if ( cfg_dust_select == 0 ) {
-				flt
-				itemcreate -1, ITEM_ID_URINE, tlocx, tlocy, 0
-				if ( stat != 0 ) {
-					if ( cc != CHARA_PLAYER ) {
-						inv(INV_ITEM_SUB_NAME, ci) = cdata(CDATA_ID, cc)
-					}
-				}
-			}
-			goto *effect_end
-		}
-		snd SOUNDLIST_WATERM
-		cdata(CDATA_THIRST, cc) = 5000
-		txt lang(name(cc) + "はマーキングを始めた。*ジョロロロ*　", name(cc) + " began marking. *slop around* ")
-		if ( synccheck(tc, -1) ) {
-			txtef COLOR_BLUE
-			txt lang(name(tc) + "はあまりの屈辱に体を奮わせた！", name(tc) + " " + is(tc) + " engulfed in fury!")
-		}
-		cdata(CDATA_CONDITION_ANGRY, tc) += 3
-		cdata(CDATA_CONDITION_WET, tc) += 3
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_BLADE_STRINGS | _switch_sw ) {
 		_switch_sw = 0
 		if ( tc == cc | (cc != CHARA_PLAYER & dist(cdata(CDATA_X, cc), cdata(CDATA_Y, cc), cdata(CDATA_X, tc), cdata(CDATA_Y, tc)) > 1) ) {
@@ -17986,12 +18002,14 @@
 				attackskill = SKILL_WEAPON_LONGSWORD
 				efid = SKILL_SPACT_DECAPITATION2
 				gosub *effect
 			}
 		}
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 & tc != CHARA_PLAYER ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 40
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & tc != CHARA_PLAYER ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 40
+			}
 		}
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_THREAD_OF_INNERVATION | _switch_sw ) {
 		_switch_sw = 0
@@ -18192,23 +18210,11 @@
 		snd SOUNDLIST_BOLT1
 		animeload ANIMATION_PARTICLE_CANNON, tc
 		if ( synccheck(tc, -1) ) {
 			txt lang(name(tc) + "は重力の球に押しつぶされた。", name(tc) + " was pressed by super Gravity.")
 		}
-		dmg = limit(sdata(SKILL_ATTR_CON, cc) * sdata(SKILL_ATTR_MAG, cc) / 40, 2, 200000) / 2 + limit(gdata(GDATA_LEVEL) * (gdata(GDATA_LEVEL) + 100) / 50, 1, 29999) + rnd(gdata(GDATA_LEVEL) + 5)
-		if ( cdata(CDATA_CONDITION_GRAVITY, tc) >= 50 & cdata(CDATA_CONDITION_GRAVITY, tc) < 100 ) {
-			dmg = dmg * 3 / 2
-		}
-		if ( cdata(CDATA_CONDITION_GRAVITY, tc) >= 100 & cdata(CDATA_CONDITION_GRAVITY, tc) < 150 ) {
-			dmg = dmg * 2
-		}
-		if ( cdata(CDATA_CONDITION_GRAVITY, tc) >= 150 & cdata(CDATA_CONDITION_GRAVITY, tc) < 200 ) {
-			dmg = dmg * 5 / 2
-		}
-		if ( cdata(CDATA_CONDITION_GRAVITY, tc) >= 200 ) {
-			dmg = dmg * 3
-		}
+		dmg = sdata(SKILL_ATTR_CON, cc) * sdata(SKILL_ATTR_CON, cc) / 50 + limit(gdata(GDATA_LEVEL) * (gdata(GDATA_LEVEL) + 100) / 50, 1, 29999) + rnd(gdata(GDATA_LEVEL) + 5)
 		if ( findbuff(tc, BUFF_FEATHER) != (-1) ) {
 			dmg = dmg / 10
 		}
 		addbuff tc, BUFF_SLOW, sdata(SKILL_ATTR_CON, cc) / 2 + 150, 5
 		cdata(CDATA_CONDITION_GRAVITY, tc) += limit(gdata(GDATA_LEVEL) / 10, 1, 50) + 10 + rnd(10)
@@ -18284,11 +18290,11 @@
 		txt_skillname
 		if ( cc == CHARA_PLAYER ) {
 			cdata(CDATA_EVOLUTION_STAGE, CHARA_PLAYER) = 0
 		}
 		if ( weap == 0 ) {
-			weap = limit((sdata(SKILL_ATTR_CON, cc) + sqrt(gdata(GDATA_LEVEL) + 1) * 2) / 2, 1, 2000)
+			weap = limit((sdata(SKILL_ATTR_CON, cc) + gdata(GDATA_LEVEL)) / 2, 1, 2000)
 		}
 		snd SOUNDLIST_ENC
 		animeload ANIMATION_UNISON_IMPACT2, cc
 		customtalk cc, DBMODE_FLAVOR_SPECIAL
 		gosub *convert_word
@@ -18375,13 +18381,15 @@
 					addbuff tc, BUFF_SLOW, sdata(SKILL_ATTR_CON, cc) + 150, 5
 					dmghp tc, dmg, cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
 				}
 			}
 		loop
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_NORMAL_TACTICS, cc, 400
-			skillexp SKILL_NORMAL_MAGIC_CAPACITY, cc, 400
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_NORMAL_TACTICS, cc, 400
+				skillexp SKILL_NORMAL_MAGIC_CAPACITY, cc, 400
+			}
 		}
 		eqlv = 0
 		eqbui = 0
 		cdata(CDATA_GAUGE_COOLDOWN, cc) = 1
 		weap = 0
@@ -18533,11 +18541,11 @@
 						}
 						p--
 						inv(INV_ITEM_EQUIP, p) = 0
 						cdata(cnt, CHARA_PLAYER) = cdata(cnt, CHARA_PLAYER) / EXT_EQUIP_SLOTS * EXT_EQUIP_SLOTS
 						txtef COLOR_PURPLE
-						txt lang(name(CHARA_PLAYER) + "は" + name(cc) + "に言われるがまま、装備を外してしまった。", name(cc) + " removes " + his(cc) + " equipment as commanded by " + name(CHARA_PLAYER) + ".")
+						txt lang(name(CHARA_PLAYER) + "は" + name(cc) + "に言われるがまま、装備を外してしまった。", name(tc) + " was brainwashed into removing " + his(tc) + " equipment.")
 					}
 				loop
 				cdata(CDATA_CONDITION_BRAINWASH, CHARA_PLAYER) = limit(sdata(SKILL_ATTR_CHA, cc) / 5 - sdata(SKILL_ATTR_WIL, CHARA_PLAYER) / 5, 10, 50)
 				r1 = CHARA_PLAYER
 				gosub *charaRefresh
@@ -19028,12 +19036,14 @@
 		if ( cdata(CDATA_EXIST, tc) == CHAR_STATE_ALIVE ) {
 			dmghp tc, (sdata(SKILL_ATTR_MAG, cc) / 10 + 1) * sqrt(sdata(SKILL_ATTR_WIL, cc)) * eqlv, cc, SKILL_RES_MIND, sdata(SKILL_ATTR_MAG, cc) + 100
 		}
 		eqlv = 0
 		eqbui = 0
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_ATTR_MAG, cc, 200
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_ATTR_MAG, cc, 200
+			}
 		}
 		weap = 0
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_SPACT_DATA_DELETE | _switch_sw ) {
@@ -19140,28 +19150,28 @@
 		if ( cdata(CDATA_EXIST, tc) == CHAR_STATE_ALIVE ) {
 			dmghp tc, limit(cdata(CDATA_DAMAGE_FIX, cc) + (weap + 1) / 2, 2, 2500) * sqrt(weap) * sqrt(eqlv - 2) + rnd(weap + 1), cc, SKILL_SPACT_FLASH_OF_SWIFTNESS
 		}
 		eqlv = 0
 		eqbui = 0
-		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 & cbit(CHARA_BIT_SANDBAG, tc) != 1 ) {
-			skillexp SKILL_ATTR_WIL, cc, 100
-			skillexp SKILL_ATTR_MAG, cc, 100
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) != 1 & cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) != 1 & cbit(CHARA_BIT_SUMMONED, tc) != 1 & cbit(CHARA_BIT_LIVESTOCK, tc) != 1 & cbit(CHARA_BIT_NECRO, tc) != 1 ) {
+			if ( cbit(CHARA_BIT_SANDBAG, tc) != 1 | TweakData(52, 2) == 1 ) {
+				skillexp SKILL_ATTR_WIL, cc, 100
+				skillexp SKILL_ATTR_MAG, cc, 100
+			}
 		}
 		weap = 0
 		goto *effect_end
 	}
 	if ( _switch_val == SKILL_EFFECT_POTION_COFFEE | _switch_sw ) {
 		_switch_sw = 0
 		if ( synccheck(tc, -1) ) {
 			txt lang(name(tc) + "の眠気が和らいだ。", "" + name(tc) + your(tc) + " drowsiness fades away.")
 		}
 		if ( tc == CHARA_PLAYER ) {
-			gdata(GDATA_FLAG_SLEEP_PREVENTION) += 15 + rnd(11)
-		}
-		else {
-			cdata(CDATA_CONDITION_SLEEP, tc) = 0
+			gdata(GDATA_SLEEP) -= 20
 		}
+		cdata(CDATA_CONDITION_SLEEP, tc) = 0
 		if ( ibit(ITEM_BIT_ACIDPROOF, ci) == 1 ) {
 			if ( synccheck(tc, -1) ) {
 				snd SOUNDLIST_ATK_ELEC
 			}
 			if ( efstatus >= 1 ) {
diff -U5 --recursive 1.90.4-custom/scene.hsp 1.90.4.2-custom-g/scene.hsp
--- 1.90.4-custom/scene.hsp	2021-09-02 12:55:06.669942600 -0700
+++ 1.90.4.2-custom-g/scene.hsp	2021-09-02 12:55:07.080436900 -0700
@@ -415,12 +415,13 @@
 		await 1000
 		goto *scene_loop
 	}
 	font lang(cfg_font1, cfg_font2), 16 - en * 2, 0
 	x = 44
+    y3 = (windowh / 2) - ((noteinfo(0) * 20) / 2) - y1
 	repeat noteinfo(0)
-		y = y1 + 31 + (9 - noteinfo(0) / 2 + cnt) * 20
+		y = y3 + 31 + cnt * 20
 		noteget s, cnt
 		x = windoww / 2 - strlen(s) * 4
 		dx = 80 + strlen(s) * 8
 		if ( dx < 180 ) {
 			dx = 0
@@ -430,11 +431,11 @@
 		grotate 3, 456, 144, 0, dx, 72
 		color 20, 20, 20
 	loop
 	x = 40
 	repeat noteinfo(0)
-		y = y1 + 28 + (9 - noteinfo(0) / 2 + cnt) * 20
+		y = y3 + 28 + cnt * 20
 		noteget s, cnt
 		x = windoww / 2 - strlen(s) * 4
 		color 10, 10, 10
 		pos x, y
 		bmes s, 240, 240, 240
diff -U5 --recursive 1.90.4-custom/screen.hsp 1.90.4.2-custom-g/screen.hsp
--- 1.90.4-custom/screen.hsp	2021-09-02 12:55:06.699880800 -0700
+++ 1.90.4.2-custom-g/screen.hsp	2021-09-02 12:55:07.099089700 -0700
@@ -7,13 +7,10 @@
 	inf_verh = inf_barh + inf_msgh
 	inf_msgline = 4
 	inf_raderx = 1
 	inf_raderw = 136
 	inf_screenw = windoww / inf_tiles + (windoww \ inf_tiles != 0)
-	if ( windowh > 868 ) {
-		windowh = 868
-	}
 	inf_screenh = (windowh - inf_verh) / inf_tiles
 	if ( (windowh - inf_verh) \ inf_tiles != 0 ) {
 		inf_screenh++
 	}
 	if ( inf_vertype == 0 ) {
@@ -341,11 +338,11 @@
 	sx = 8
 	sy = inf_ver - 50
 	if ( cdata(CDATA_HUNGER, CHARA_PLAYER) >= 12000 ) {
 		color 0, 0, 0
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _hunger(12)
 		sy -= 20
 	}
 	else {
@@ -356,451 +353,418 @@
 			else {
 				color 0, 0, 0
 			}
 			if ( _hunger(cdata(CDATA_HUNGER, CHARA_PLAYER) / 1000) != "" ) {
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _hunger(cdata(CDATA_HUNGER, CHARA_PLAYER) / 1000)
 				sy -= 20
 			}
 		}
 		else {
 			color 250, 0, 0
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _hunger(0)
 			sy -= 20
 		}
 	}
-	if ( cdata(CDATA_THIRST, CHARA_PLAYER) >= 12000 ) {
-		color 0, 0, 80
-		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
-		pos sx + 6, sy + 1
-		mes _thirsty(12)
-		sy -= 20
-	}
-	else {
-		if ( cdata(CDATA_THIRST, CHARA_PLAYER) >= 1000 ) {
-			if ( cdata(CDATA_THIRST, CHARA_PLAYER) <= 4000 ) {
-				color 200, 0, 0
-			}
-			else {
-				color 0, 0, 80
-			}
-			if ( _thirsty(cdata(CDATA_THIRST, CHARA_PLAYER) / 1000) != "" ) {
-				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
-				pos sx + 6, sy + 1
-				mes _thirsty(cdata(CDATA_THIRST, CHARA_PLAYER) / 1000)
-				sy -= 20
-			}
-		}
-		else {
-			color 250, 0, 0
-			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
-			pos sx + 6, sy + 1
-			mes _thirsty(0)
-			sy -= 20
-		}
-	}
 	if ( cdata(CDATA_CONDITION_SICK, CHARA_PLAYER) != 0 ) {
 		color 80, 120, 0
 		if ( cdata(CDATA_CONDITION_SICK, CHARA_PLAYER) >= 30 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _consick(1)
 			sy -= 20
 		}
 		else {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _consick
 			sy -= 20
 		}
 	}
 	if ( cdata(CDATA_CONDITION_POISON, CHARA_PLAYER) != 0 ) {
 		color 0, 150, 0
 		if ( cdata(CDATA_CONDITION_POISON, CHARA_PLAYER) >= 30 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conpoison(1)
 			sy -= 20
 		}
 		else {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conpoison
 			sy -= 20
 		}
 	}
 	if ( cdata(CDATA_CONDITION_MPOISON, CHARA_PLAYER) != 0 ) {
 		color 0, 0, 100
 		if ( cdata(CDATA_CONDITION_MPOISON, CHARA_PLAYER) >= 30 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conmpoison(1)
 			sy -= 20
 		}
 		else {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conmpoison
 			sy -= 20
 		}
 	}
 	if ( cdata(CDATA_CONDITION_SLEEP, CHARA_PLAYER) > 0 ) {
 		color 0, 50, 50
 		if ( cdata(CDATA_CONDITION_SLEEP, CHARA_PLAYER) >= 30 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _consleep(1)
 			sy -= 20
 		}
 		else {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _consleep
 			sy -= 20
 		}
 	}
 	if ( cdata(CDATA_CONDITION_BLIND, CHARA_PLAYER) != 0 ) {
 		color 100, 100, 0
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conblind
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_PARALYZE, CHARA_PLAYER) != 0 ) {
 		color 0, 100, 100
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conparalyze
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_SUFFOCATION, CHARA_PLAYER) != 0 ) {
 		color 0, 100, 100
 		if ( cdata(CDATA_CONDITION_SUFFOCATION, CHARA_PLAYER) >= 15 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conmochi(1)
 			sy -= 20
 		}
 		else {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conmochi
 			sy -= 20
 		}
 	}
 	if ( cdata(CDATA_CONDITION_CONFUSE, CHARA_PLAYER) != 0 ) {
 		color 100, 0, 100
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conconfuse
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_FEAR, CHARA_PLAYER) != 0 ) {
 		color 100, 0, 100
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _confear
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_DIM, CHARA_PLAYER) != 0 ) {
 		color 0, 100, 100
 		if ( cdata(CDATA_CONDITION_DIM, CHARA_PLAYER) >= 60 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _condim(2)
 			sy -= 20
 		}
 		else {
 			if ( cdata(CDATA_CONDITION_DIM, CHARA_PLAYER) >= 30 ) {
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _condim(1)
 				sy -= 20
 			}
 			else {
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _condim
 				sy -= 20
 			}
 		}
 	}
 	if ( cdata(CDATA_CONDITION_ANGRY, CHARA_PLAYER) != 0 ) {
 		color 150, 0, 0
 		if ( cdata(CDATA_CONDITION_ANGRY, CHARA_PLAYER) >= 30 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conangry(1)
 			sy -= 20
 		}
 		else {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conangry
 			sy -= 20
 		}
 	}
 	if ( cdata(CDATA_CONDITION_METAL, CHARA_PLAYER) != 0 ) {
 		color 0, 0, 160
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conmatou
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_BLEED, CHARA_PLAYER) != 0 ) {
 		color 150, 0, 0
 		if ( cdata(CDATA_CONDITION_BLEED, CHARA_PLAYER) >= 20 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conbleed(2)
 			sy -= 20
 		}
 		else {
 			if ( cdata(CDATA_CONDITION_BLEED, CHARA_PLAYER) >= 10 ) {
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _conbleed(1)
 				sy -= 20
 			}
 			else {
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _conbleed
 				sy -= 20
 			}
 		}
 	}
 	if ( cdata(CDATA_CONDITION_INSANE, CHARA_PLAYER) != 0 ) {
 		color 150, 100, 0
 		if ( cdata(CDATA_CONDITION_INSANE, CHARA_PLAYER) >= 50 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _coninsane(2)
 			sy -= 20
 		}
 		else {
 			if ( cdata(CDATA_CONDITION_INSANE, CHARA_PLAYER) >= 25 ) {
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _coninsane(1)
 				sy -= 20
 			}
 			else {
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _coninsane
 				sy -= 20
 			}
 		}
 	}
 	if ( cdata(CDATA_CONDITION_DRUNK, CHARA_PLAYER) != 0 ) {
 		color 100, 0, 100
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _condrunk
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_ATROPHY, CHARA_PLAYER) != 0 ) {
 		color 100, 0, 100
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conbrowbeat
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_BRAINWASH, CHARA_PLAYER) != 0 ) {
 		color 100, 0, 100
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conwash
 		sy -= 20
 	}
 	if ( gdata(GDATA_FLAG_DUPLICANE) != 0 ) {
 		color 0, 0, 160
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _condupli
 		sy -= 20
 	}
 	if ( gdata(GDATA_FLAG_INVULNERABLE_TURNS) != 0 ) {
 		color 100, 80, 0
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conmuteki
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_JIU_JITSU, CHARA_PLAYER) != 0 ) {
 		color 10, 10, 10
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conjudo
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_WINCE, CHARA_PLAYER) != 0 ) {
 		color 160, 0, 0
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conkaen
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_CHILLS, CHARA_PLAYER) != 0 ) {
 		color 0, 0, 160
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conreiki
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_BIND, CHARA_PLAYER) != 0 ) {
 		color 0, 150, 0
 		if ( cdata(CDATA_CONDITION_BIND, CHARA_PLAYER) >= 20 ) {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conbind(1)
 			sy -= 20
 		}
 		else {
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _conbind
 			sy -= 20
 		}
 	}
 	if ( cdata(CDATA_CONDITION_OIL, CHARA_PLAYER) != 0 ) {
 		color 160, 0, 0
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conoil
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_INVERT, CHARA_PLAYER) != 0 ) {
 		color 80, 30, 30
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _coninvert
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_WET, CHARA_PLAYER) != 0 ) {
 		color 0, 0, 160
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _conwet
 		sy -= 20
 	}
 	if ( cdata(CDATA_CONDITION_GRAVITY, CHARA_PLAYER) != 0 ) {
 		color 0, 80, 80
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _congravity
 		sy -= 20
 	}
 	if ( gdata(GDATA_SLEEP) >= 15 ) {
 		if ( gdata(GDATA_SLEEP) >= 50 ) {
 			color 255, 0, 0
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _sleep(2)
 			sy -= 20
 		}
 		else {
 			if ( gdata(GDATA_SLEEP) >= 30 ) {
 				color 100, 100, 0
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _sleep(1)
 				sy -= 20
 			}
 			else {
 				color 0, 0, 0
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _sleep
 				sy -= 20
 			}
 		}
 	}
 	if ( cdata(CDATA_SP, CHARA_PLAYER) < 50 ) {
 		if ( cdata(CDATA_SP, CHARA_PLAYER) < 0 ) {
 			color 120, 120, 0
 			pos sx, sy
-			gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+			gcopy 3, 0, 416, 65 + en * 15, 15
 			pos sx + 6, sy + 1
 			mes _confatigue(2)
 			sy -= 20
 		}
 		else {
 			if ( cdata(CDATA_SP, CHARA_PLAYER) < 25 ) {
 				color 80, 80, 0
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _confatigue(1)
 				sy -= 20
 			}
 			else {
 				color 60, 60, 0
 				pos sx, sy
-				gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+				gcopy 3, 0, 416, 65 + en * 15, 15
 				pos sx + 6, sy + 1
 				mes _confatigue
 				sy -= 20
 			}
 		}
 	}
 	if ( cdata(CDATA_BURDEN, CHARA_PLAYER) != 0 ) {
 		color 0, cdata(CDATA_BURDEN, CHARA_PLAYER) * 40, cdata(CDATA_BURDEN, CHARA_PLAYER) * 40
 		pos sx, sy
-		gcopy 3, 0 + en * 84, 416, 65 + en * 30, 15
+		gcopy 3, 0, 416, 65 + en * 15, 15
 		pos sx + 6, sy + 1
 		mes _burden(cdata(CDATA_BURDEN, CHARA_PLAYER))
 		sy -= 20
 	}
 	color 0
@@ -841,14 +805,14 @@
 	bmes _time(gdata(GDATA_HOUR) / 4) + " " + _weather(gdata(GDATA_WEATHER)), 255, 255, 255
 	if ( gdata(GDATA_WIZARD) == 1 ) {
 		pos inf_clockw + 6, inf_clocky + 50
 		color 0, 0, 0
 		bmes "*debug*", 235, 235, 235
+		pos inf_clockw + 80, inf_clocky + 17
+		color 0, 0, 0
+		bmes "loop" + looplev + "、sub" + sublev + " ", 235, 235, 235
 	}
-	pos inf_clockw + 80, inf_clocky + 17
-	color 0, 0, 0
-	bmes "loop" + looplev + "、sub" + sublev + " ", 235, 235, 235
 	if ( gdata(STARTING_GDATA_FLAG + 353) == 100 ) {
 		pos 10, 0
 		gcopy 3, 1338, 385, 120, 100
 	}
 	if ( gdata(GDATA_AREA) == AREA_PET_ARENA ) {
@@ -861,34 +825,10 @@
 			pos inf_clockw + 380, inf_clocky + 37
 			color 0, 0, 0
 			bmes "You can surrender by pressing the ESC key.", 235, 235, 235
 		}
 	}
-	if ( gdata(STARTING_GDATA_FLAG + 373) > 9999 * 2 / 3 & gdata(STARTING_GDATA_FLAG + 373) <= 9999 ) {
-		if ( jp ) {
-			pos inf_clockw + 380, inf_clocky + 17
-			color 0, 0, 0
-			bmes "早くこの場を離れたほうがいい気がする…", 235, 35, 35
-		}
-		else {
-			pos inf_clockw + 380, inf_clocky + 17
-			color 0, 0, 0
-			bmes "You had better leave this place as soon as possible.", 235, 35, 35
-		}
-	}
-	if ( gdata(STARTING_GDATA_FLAG + 373) < 0 ) {
-		if ( jp ) {
-			pos inf_clockw + 380, inf_clocky + 17
-			color 0, 0, 0
-			bmes "*カーテンコール*", 235, 35, 35
-		}
-		else {
-			pos inf_clockw + 380, inf_clocky + 17
-			color 0, 0, 0
-			bmes "*Curtain Call*", 235, 35, 35
-		}
-	}
 	ap3 = 0
 	repeat 15
 
 		/********** ORIGINAL - BEGINNING **********
 
@@ -4319,12 +4259,12 @@
 *expLiteracy
 	skillexp SKILL_NORMAL_LITERACY, CHARA_PLAYER, 15, 10, 100
 	return
 
 *expTrade
-	if ( r2 >= limit((sdata(SKILL_NORMAL_NEGOTIATION, r1) + 10) * (sdata(SKILL_NORMAL_NEGOTIATION, r1) + 10), 1, 15000) ) {
-		skillexp SKILL_NORMAL_NEGOTIATION, r1, limit(r2 / (limit(sdata(SKILL_NORMAL_NEGOTIATION, r1), 1, 100) + 10), 10, 300), 10
+	if ( r2 >= (sdata(SKILL_NORMAL_NEGOTIATION, r1) + 10) * (sdata(SKILL_NORMAL_NEGOTIATION, r1) + 10) ) {
+		skillexp SKILL_NORMAL_NEGOTIATION, r1, limit(r2 * r2 / (sdata(SKILL_NORMAL_NEGOTIATION, r1) * 5 + 10), 10, 1000), 10
 	}
 	return
 
 *expOpenLock
 	skillexp SKILL_NORMAL_LOCK_PICKING, r1, 100
@@ -4334,11 +4274,14 @@
 	skillexp SKILL_NORMAL_DETECTION, cc, gdata(GDATA_LEVEL) * 2 + 20
 	return
 
 *expCasting
 	if ( tc != (-1) ) {
-		if ( cbit(CHARA_BIT_SANDBAG, tc) | cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) | cbit(CHARA_BIT_NECRO, tc) | cbit(CHARA_BIT_SUMMONED, tc) | cbit(CHARA_BIT_LIVESTOCK, tc) ) {
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) | cbit(CHARA_BIT_NECRO, tc) | cbit(CHARA_BIT_SUMMONED, tc) | cbit(CHARA_BIT_LIVESTOCK, tc) ) {
+			return
+		}
+		if ( cbit(CHARA_BIT_SANDBAG, tc) & TweakData(52, 2) == 0 ) {
 			return
 		}
 	}
 	if ( r1 == CHARA_PLAYER ) {
 		skillexp r2, r1, sdataref(SKILL_DATAREF_COST, r2) * 4 + 20, 4, 5
@@ -4442,11 +4385,14 @@
 	}
 	return
 
 *expMagicDevice
 	if ( tc != (-1) ) {
-		if ( cbit(CHARA_BIT_SANDBAG, tc) | cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) | cbit(CHARA_BIT_NECRO, tc) | cbit(CHARA_BIT_SUMMONED, tc) | cbit(CHARA_BIT_LIVESTOCK, tc) ) {
+		if ( cbit(CHARA_BIT_SPLIT_KEEP_EFFECT, tc) | cbit(CHARA_BIT_SPLIT_NO_EFFECT, tc) | cbit(CHARA_BIT_NECRO, tc) | cbit(CHARA_BIT_SUMMONED, tc) | cbit(CHARA_BIT_LIVESTOCK, tc) ) {
+			return
+		}
+		if ( cbit(CHARA_BIT_SANDBAG, tc) & TweakData(52, 2) == 0 ) {
 			return
 		}
 	}
 	skillexp SKILL_NORMAL_MAGIC_DEVICE, cc, 40
 	return
@@ -4591,15 +4537,10 @@
 		}
 	}
 	if ( calcattackhit_arg1 == 1 ) {
 		return tohit
 	}
-	if ( shadow == 100 ) {
-		if ( tohit > 0 ) {
-			tohit /= 2
-		}
-	}
 	evade = sdata(SKILL_ATTR_PER, tc) / 6 + sdata(SKILL_NORMAL_EVASION, tc) + cdata(CDATA_DV, tc) * 2 * 7 / 4 + 25 - cdata(CDATA_EVASION_PENALTY, tc) * 100
 	if ( evade <= 0 ) {
 		evade = 1
 	}
 	if ( cbit(CHARA_BIT_AWAKE_NEAR_DEATH_EVASION, tc) ) {
@@ -4718,11 +4659,11 @@
 				critical = 1
 				return 1
 			}
 		}
 	}
-	if ( rnd(5000) * (extraattack + 1) < sdata(SKILL_ATTR_PER, cc) + 50 ) {
+	if ( rnd(5000) < sdata(SKILL_ATTR_PER, cc) + 50 ) {
 		if ( findbuff(tc, BUFF_EMERGENCY_EVASION) != (-1) & cdata(CDATA_EQUIP_WEIGHT, tc) < 15000 ) {
 			if ( synccheck(cc, -1) ) {
 				txtef COLOR_YELLOW
 				txt lang("*緊急回避*", "*Emergency Evade*")
 				critical = 0
@@ -4744,11 +4685,10 @@
 		cr = 20
 	}
 	else {
 		cr = 0
 	}
-	creva = 400
 	if ( attackskill == SKILL_WEAPON_MARTIAL_ARTS ) {
 		creva = 100
 	}
 	else {
 		if ( ammo != (-1) ) {
@@ -4756,11 +4696,11 @@
 		}
 		else {
 			creva = limit(inv(INV_ITEM_WEIGHT, cw) / 10, 1, 400) / 2
 		}
 	}
-	if ( cdata(CDATA_CRIT_CHANCE, cc) * 4 + cr + 10 > (rnd(400) + rnd(creva + 2) + cdata(CDATA_DEC_ENEMY_CRIT_CHANCE, tc) * 2) * (extraattack + 1) ) {
+	if ( cdata(CDATA_CRIT_CHANCE, cc) * 4 + cr + 10 > (rnd(400) + rnd(creva + 2) + cdata(CDATA_DEC_ENEMY_CRIT_CHANCE, tc) * 2) ) {
 		if ( findbuff(tc, BUFF_EMERGENCY_EVASION) != (-1) & cdata(CDATA_EQUIP_WEIGHT, tc) < 15000 ) {
 			if ( synccheck(cc, -1) ) {
 				txtef COLOR_YELLOW
 				txt lang("*緊急回避*", "*Emergency Evade*")
 				critical = 0
@@ -4943,17 +4883,11 @@
 	if ( tc == CHARA_PLAYER ) {
 		if ( trait(TRAIT_ETHER_VIOLENCE) ) {
 			dmgfix += limit(5 + cdata(CDATA_LEVEL, CHARA_PLAYER) * 2 / 3, 0, 100) / 4
 		}
 	}
-	cdata(CDATA_DAMAGE_FIX, cc) = 0
 	cdata(CDATA_DAMAGE_FIX, cc) = dmgfix
-	if ( attacknum > 2 ) {
-		repeat attacknum - 2
-			dmgfix = dmgfix * 3 / 5
-		loop
-	}
 	if ( calcattackdmg_arg1 == 1 ) {
 		return damage
 	}
 	prot = cdata(CDATA_PV, tc) + limit(limit(sdata(carmor(tc), tc), 0, 300) - cdata(CDATA_PROT_PENALTY, tc) * 100, 0, 300) + sdata(SKILL_ATTR_DEX, tc) / 10
 	if ( calcattackdmg_arg1 == 0 ) {
@@ -5042,11 +4976,11 @@
 				customtalk cc, DBMODE_FLAVOR_CHARGE_A
 				gosub *convert_word
 			}
 			if ( synccheck(cc, -1) ) {
 				txtef COLOR_RED
-				txt lang(name(cc) + "の渾身の一撃が炸裂した。", name(cc) + " attacked by full power.")
+				txt lang(name(cc) + "の渾身の一撃が炸裂した。", name(cc) + " attacked with full power.")
 				txtmore
 			}
 			if ( encharge == 100 ) {
 				animeload 59, tc
 				snd SOUNDLIST_ATK_SOUND
diff -U5 --recursive 1.90.4-custom/sound.hsp 1.90.4.2-custom-g/sound.hsp
--- 1.90.4-custom/sound.hsp	2021-09-02 12:55:06.702470400 -0700
+++ 1.90.4.2-custom-g/sound.hsp	2021-09-02 12:55:07.101226100 -0700
@@ -747,17 +747,17 @@
 				DMLOADFNAME musicfolder + musicfile(music), 0
 				DMPLAY musicloop, 0
 			}
 		}
 
-
+		 ********** ORIGINAL - ENDING **********/
 
 		/********** ANNA CUSTOM - BEGINNING **********/ // Enable Random Start For MP3
 
 		if ( music != (-1) ) {
 			if ( cfg_music == 2 | mp3 == 1 ) {
-				if ( mp3 == 1 & TweakData(TWEAK_MISC_RANDOM_START_MP3, TWEAK_CATEGORY_MISC) == 1 ) {
+				if ( mp3 == 1 & TweakData(TWEAK_MISC_RANDOM_START_MP3, TWEAK_CATEGORY_MISC) != 0 ) {
 					mci "open \"" + musicfolder + musicfile(music) + "\" alias music"
 					mci "set music time format milliseconds"
 					mci "status music length"
 					mci "seek music to " + rnd(stat)
 					mci "play music repeat"
diff -U5 --recursive 1.90.4-custom/system.hsp 1.90.4.2-custom-g/system.hsp
--- 1.90.4-custom/system.hsp	2021-09-02 12:55:06.707022300 -0700
+++ 1.90.4.2-custom-g/system.hsp	2021-09-02 12:55:07.106221900 -0700
@@ -624,20 +624,10 @@
 			if ( int(gettime(3)) <= 25 ) {
 				kamen3 = 100
 			}
 		}
 	}
-	if ( gdata(GDATA_VERSION) < 3050 ) {
-		repeat MAX_CHARA_SAVE
-			if ( cnt == CHARA_PLAYER ) {
-				cdata(CDATA_THIRST, cnt) = 9000
-			}
-			else {
-				cdata(CDATA_THIRST, cnt) = 6000 - 1000 + rnd(4000)
-			}
-		loop
-	}
 	if ( gdata(GDATA_VERSION) < 3060 ) {
 		repeat STARTING_RANDOM_AREA - STARTING_USER_AREA, STARTING_USER_AREA
 			if ( adata(ADATA_ID, cnt) != AREA_SHOP ) {
 				continue
 			}
@@ -5664,10 +5654,12 @@
 
 	mes "ElonaPlus Custom originally created by AnnaBannana"
 	pos 20, 56
 	mes "ElonaPlus Custom maintained by AnnaBannana & BloodyShade, contributions by Hebiko, Glyphy, Jehmil, et al"
 	pos 20, 74
+	mes "Elona+ Custom-G mod created by Glyphy"
+	pos 20, 92
 
 	/********** ANNA CUSTOM - ENDING **********/
 
 	if ( jp ) {
 		mes "Contributor MSL / View the credits for more"
diff -U5 --recursive 1.90.4-custom/tcg.hsp 1.90.4.2-custom-g/tcg.hsp
--- 1.90.4-custom/tcg.hsp	2021-09-02 12:55:06.710283000 -0700
+++ 1.90.4.2-custom-g/tcg.hsp	2021-09-02 12:55:07.109029700 -0700
@@ -1,8 +1,9 @@
 #include "db_card.hsp"
 
 #module tcg
+
 #defcfunc cdbit int cdbit_bit, int cdbit_charid
 	HMMBITCHECK@ card@tcg(30 + cdbit_bit / 32, cdbit_charid), cdbit_bit \ 32
 	return abs(stat)
 
 #deffunc cdbitmod int cdbitmod_bit, int cdbitmod_charid, int cdbitmod_seton
diff -U5 --recursive 1.90.4-custom/text.hsp 1.90.4.2-custom-g/text.hsp
--- 1.90.4-custom/text.hsp	2021-09-02 12:55:06.724312600 -0700
+++ 1.90.4.2-custom-g/text.hsp	2021-09-02 12:55:07.119607800 -0700
@@ -7,14 +7,14 @@
 #define global txt_saving txt lang(" *保存* ", " *saving* ")
 #define global txt_globalarea txt lang("その行為は、ワールドマップにいる間はできない。", "You can't do that while you're in a global area.")
 #define global txt_impossible txt lang("それは無理だ。", "It's impossible.")
 #define global txt_shortcut txt lang("{" + sc + "}キーにショートカットを割り当てた。", "You have assigned the shortcut to {" + sc + "} key.")
 #define global txt_createitem txt lang(itemname(ci, 1) + "の作成に成功した！", "You successfully create " + itemname(ci, 1) + "!")
-#define global txt_skillname txt "*" + skillname(efid) + "* "
+#define global txt_skillname txt "*" + skillname(efid) + lang("* ", "*")
 #define global txt_guard txt lang(name(tc) + "は" + name(cdata(CDATA_TAGTEAM_PARTNER, tc)) + "をかばった！", name(tc) + " guarded " + name(cdata(CDATA_TAGTEAM_PARTNER, tc)) + ".")
-#define global txt_invfull txt lang("バックパックが一杯だ。", "Your backpack is full.")
-#define global txt_invfull2 txt lang("バックパックには、もうアイテムを入れる余裕がない。", "You can't afford to put any more items in your backpack.")
+#define global txt_invfull txt lang("バックパックが一杯だ。", "Your inventory is full.")
+#define global txt_invfull2 txt lang("バックパックには、もうアイテムを入れる余裕がない。", "Your inventory is full.")
 #define global txt_nospace txt lang("充分なスペースがない。", "There's not enough space.")
 #define global txt_exhausted txt lang("疲労し過ぎて失敗した！", "You are too exhausted!")
 #define global txt_nodrop txt lang("それはあなたの大事なものだ。<調べる>メニューから解除できる。", "It's set as no-drop. You can reset it from the <examine> menu.")
 #define global txt_preciousally txt lang("それはあなたの大事な仲間だ。会話メニューから解除できる。", "It's set as a precious ally.")
 #define global txt_activateitem txt lang(itemname(ci, 1) + "を始動させた。", "You activate " + itemname(ci, 1) + ".")
@@ -22,11 +22,10 @@
 #define global txt_freshwater txt lang("この水は清涼だ。", "Phew, fresh water tastes good.")
 #define global txt_hittarget txt lang(name(tc) + "に見事に命中した！", "It hits " + name(tc) + "!")
 #define global txt_noteleport txt lang("魔法の力がテレポートを防いだ。", "Magical field prevents teleportation.")
 #define global txt_cantusehere txt lang("ここでは使えない。", "You can't use it here.")
 #define global txt_targetwho txt lang("誰を対象にする？", "Who is the target?")
-#define global txt_unfair txt lang("それは反則すぎて装備できない。", "It's too unfair to equip.")
 #define global txt_notyours txt lang("それはあなたの物ではない。", "It's not your property."), lang("盗むなんてとんでもない。", "You can't just take it."), lang("それは拾えない。", "It's not yours.")
 
 #deffunc text_set
 	sdim bodyn, 4, 15
 	bodyn = "", "頭", "首", "背中", "胴体", "手", "指", "腕", "腰", "足", "遠隔", "矢弾"
@@ -144,12 +143,12 @@
 	strscroll = lang("巻物", "scroll")
 	strstaff = lang("魔法棒", "rod")
 	strfix = lang("修正", "bonus")
 	strsex = lang("性別", "sex")
 	strdoomed = lang("堕落した", "doomed")
-	strgold = lang(" gold", "gp")
-	strplat = lang(" plat", "pp")
+	strgold = lang(" gold", " gp")
+	strplat = lang(" plat", " platinum pieces")
 	strweight = "s"
 	stryes = lang("ああ", "Yes")
 	strno = lang("いや…", "No..")
 	strblank = lang("", " ")
 	return
@@ -364,11 +363,11 @@
 		p(cnt) = p(i)
 		p(i) = cnt
 	loop
 	repeat txtsetwinwordc_arg1
 		if ( p(cnt) == 0 ) {
-			s(cnt) = lang("神は死んだ", "God is dead!")
+			s(cnt) = lang("神は死んだ", "Killed a god!")
 		}
 		if ( p(cnt) == 1 ) {
 			s(cnt) = lang("終わった…", "It's finally over...")
 		}
 		if ( p(cnt) == 2 ) {
@@ -1248,14 +1247,14 @@
 		p(cnt) = p(i)
 		p(i) = cnt
 	loop
 	repeat txtsettamer_arg1
 		if ( p(cnt) == 0 ) {
-			s(cnt) = lang("拾い食いの禁止/解除", "Prohibit of eating picked up food")
+			s(cnt) = lang("拾い食いの禁止/解除", "Prohibit eating picked up food")
 		}
 		if ( p(cnt) == 1 ) {
-			s(cnt) = lang("アイテム拾いの禁止/解除", "Prohibit of picking up items")
+			s(cnt) = lang("アイテム拾いの禁止/解除", "Prohibit picking up items")
 		}
 		if ( p(cnt) == 2 ) {
 			s(cnt) = lang("喋り方を変える", "Change the tone")
 		}
 		if ( p(cnt) == 3 ) {
@@ -1941,17 +1940,17 @@
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_CYBER_DOME ) {
 		s = lang("アクリ・テオラ", "Cyber Dome"), lang("何やら奇妙な建物がある。", "You see a very strange building.")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_BEAST_FORT ) {
-		s = lang("混沌の城《獣》", "Fort of Chaos <Beast>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は80階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 80)")
+		s = lang("混沌の城《獣》", "Fort of Chaos <Beast>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は80階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 666)")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_MACHINE_FORT ) {
-		s = lang("混沌の城《機甲》", "Fort of Chaos <Machine>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は80階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 80)")
+		s = lang("混沌の城《機甲》", "Fort of Chaos <Machine>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は80階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 666)")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_COLLAPSED_FORT ) {
-		s = lang("混沌の城《奇形》", "Fort of Chaos <Collapsed>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は80階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 80)")
+		s = lang("混沌の城《奇形》", "Fort of Chaos <Collapsed>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は80階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 666)")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_PET_ARENA ) {
 		s = lang("コロシアム", "Pet Arena")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_MUSEUM ) {
@@ -2055,17 +2054,17 @@
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_RASKILIS ) {
 		s = lang("ラスキリスの谷間・南", "South Raskilis Valley"), lang("谷の奥に街道が見える。", "You see the way to the back of the valley.")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_LOST_YLVA ) {
-		s = lang("ロストイルヴァ", "Lost Ylva")
+		s = lang("ロストイルヴァ", "Lost Irva")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_ULM_LESON ) {
 		s = lang("ウールム・レゾン", "Ulm-Leson"), lang("森の奥に謎の遺跡が見える。", "You see a ruin in the depths of the forest.")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_YLVA_LIBRARY ) {
-		s = lang("イルヴァ神立図書館", "Sacred Library of Ylva"), lang("山間に図書館がある。表にはイルヴァ神立図書館と書かれている。", "You see the library of gods.")
+		s = lang("イルヴァ神立図書館", "Sacred Library of Irva"), lang("山間に図書館がある。表にはイルヴァ神立図書館と書かれている。", "You see the library of gods.")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_BLIMP ) {
 		s = lang("エウダーナ魔導船", "Eulderna blimp"), lang("巨大な飛行船の周りに大勢の魔法使いの姿が見える。", "You see eulderna magicians around blimp.")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_AMUR_CAGE ) {
@@ -2154,11 +2153,11 @@
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_GRAVITY_VALLEY ) {
 		s = lang("重力谷", "the Gravity Valley")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_MOUNTAIN_RUIN ) {
-		s = lang("山麓遺跡", "the Foothills Ruins")
+		s = lang("山麓遺跡", "the Foothill Ruins")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_MOUNTAIN_PASS_WINDY ) {
 		s = lang("風の山道", "the Windy Mountain Pass")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_ANCIENT_GARDEN ) {
@@ -2172,24 +2171,24 @@
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_DOJO ) {
 		s = lang("道場", "Dojo")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_DESTRUCTION_FORT ) {
-		s = lang("混沌の城《破壊》", "Fort of Chaos <Destruction>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は200階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 200) ")
+		s = lang("混沌の城《破壊》", "Fort of Chaos <Destruction>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は200階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 999) ")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_WEAPONS_FORT ) {
-		s = lang("混沌の城《機皇》", "Fort of Chaos <Weapons>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は200階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 200) ")
+		s = lang("混沌の城《機皇》", "Fort of Chaos <Weapons>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は200階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 999) ")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_HELL_FORT ) {
-		s = lang("混沌の城《地獄》", "Fort of Chaos <Hell>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は200階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 200) ")
+		s = lang("混沌の城《地獄》", "Fort of Chaos <Hell>"), lang("不気味な城がある。絶対に入ってはいけない予感がする。(危険度は200階相当)", "You see an unearthly fort. Your instinct warns you not to go there. (Approximate danger level: 999) ")
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_QUEST ) {
 		if ( gdata(GDATA_QUEST) == QUEST_TYPE_HUNT ) {
-			s = lang("街近辺", "the Outskirts")
+			s = lang("街近辺", "The outskirts")
 		}
 		if ( gdata(GDATA_QUEST) == QUEST_TYPE_HUNTEX | gdata(GDATA_QUEST) == QUEST_TYPE_CONQUER ) {
-			s = lang("市街地", "Urban Area")
+			s = lang("市街地", "Urban area")
 		}
 	}
 	if ( adata(ADATA_ID, mapname_mapid) == AREA_RANDOM_DUNGEON ) {
 		s = mapnamerd(adata(ADATA_NAME, mapname_mapid), limitmax(adata(ADATA_MIN_LEVEL, mapname_mapid) / 5, length2(mapnamerd) - 1))
 		if ( adata(ADATA_TYPE, mapname_mapid) == MAP_TYPE_DUNGEON ) {
@@ -4462,97 +4461,10 @@
 			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_kimi_arg1)
 		}
 	}
 	return locvar__yoro__tone
 
-#defcfunc _miruna int _miruna_arg1
-	if ( cdata(CDATA_TONE, tc) == 0 ) {
-		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
-			locvar__yoro__tone = "み、見ないでください…", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-		else {
-			locvar__yoro__tone = "うぅ…見ないでください…", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-	}
-	if ( cdata(CDATA_TONE, tc) == 1 ) {
-		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
-			locvar__yoro__tone = "くっ…！見るなっ！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-		else {
-			locvar__yoro__tone = "見るなっ！見るなぁぁ…！！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-	}
-	if ( cdata(CDATA_TONE, tc) == 2 ) {
-		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
-			locvar__yoro__tone = "ごめん…こっち見ないで！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-		else {
-			locvar__yoro__tone = "ひっ！？駄目っ…！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-	}
-	if ( cdata(CDATA_TONE, tc) == 3 ) {
-		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
-			locvar__yoro__tone = "わ、わああああっ…！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-		else {
-			locvar__yoro__tone = "いやぁぁあ…！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-	}
-	if ( cdata(CDATA_TONE, tc) == 4 ) {
-		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
-			locvar__yoro__tone = "ううっ…なんということ…", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-		else {
-			locvar__yoro__tone = "み…見世物ではないぞよ…！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-	}
-	if ( cdata(CDATA_TONE, tc) == 5 ) {
-		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
-			locvar__yoro__tone = "なんたる不覚ッ…！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-		else {
-			locvar__yoro__tone = "ど、どうか見ないでくださいまし…！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-	}
-	if ( cdata(CDATA_TONE, tc) == 6 ) {
-		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
-			locvar__yoro__tone = "み…見ないでほしいッス…", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-		else {
-			locvar__yoro__tone = "見るにゃあああ…！", "", "", "", ""
-			locvar__yoro_p = 1 + ("" != "") + ("" != "") + ("" != "") + ("" != "")
-			locvar__yoro__tone = locvar__yoro__tone(rnd(locvar__yoro_p)) + _mark(_miruna_arg1)
-		}
-	}
-	return locvar__yoro__tone
-
 #defcfunc _ru int _ru_arg1
 	if ( cdata(CDATA_TONE, tc) == 0 ) {
 		if ( cdata(CDATA_TONE_SEX, tc) == 1 ) {
 			locvar__yoro__tone = "ます", "ますよ", "", "", ""
 			locvar__yoro_p = 1 + ("ますよ" != "") + ("" != "") + ("" != "") + ("" != "")
@@ -5866,14 +5778,10 @@
 			}
 			if ( s == "しろ" ) {
 				s = _siro(3)
 				break
 			}
-			if ( s == "見るな" ) {
-				s = _miruna(3)
-				break
-			}
 			if ( s == "onii" ) {
 				if ( jp ) {
 					if ( cdata(CDATA_SEX, CHARA_PLAYER) == 0 ) {
 						s = "お兄"
 					}
@@ -5980,11 +5888,15 @@
 		}
 		if ( cdata(CDATA_INTEREST, tc) <= 0 ) {
 			p = instr(buff, 0, "%BORED," + lang("JP", "EN"))
 			break
 		}
-		if ( tc < MAX_CHARA_FOLLOWER | cbit(CHARA_BIT_LIVESTOCK, tc) == 1 ) {
+		if ( tc < MAX_CHARA_FOLLOWER ) {
+			p = instr(buff, 0, "%ALLY_DEFAULT," + lang("JP", "EN"))
+			break
+		}
+		if ( cbit(CHARA_BIT_LIVESTOCK, tc) == 1 & TweakData(54, 2) == 1 ) {
 			p = instr(buff, 0, "%ALLY_DEFAULT," + lang("JP", "EN"))
 			break
 		}
 		if ( cdata(CDATA_ID, tc) == CREATURE_ID_YOUNGER_SISTER2 ) {
 			if ( gdata(GDATA_MONTH) == 4 ) {
@@ -6301,14 +6213,14 @@
 	}
 	if ( gdata(GDATA_FLAG_MAIN) == 366 ) {
 		s1 = lang("メルガスでガベラに話をきこう。", "I should go see Gavela in his lab in Melugas.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 367 & gdata(GDATA_FLAG_MAIN) < 370 ) {
-		s1 = lang("古の庭園からメルガストでロストイルヴァへ行き、調査してまわろう。", "I need to take the Melugast from the Ancient Garden to Lost Ylva so that I can continue my investigation.")
+		s1 = lang("古の庭園からメルガストでロストイルヴァへ行き、調査してまわろう。", "I need to take the Melugast from the Ancient Garden to Lost Irva so that I can continue my investigation.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) == 370 ) {
-		s1 = lang("ロストイルヴァの調査をしつつ神の間を目指そう。", "I should investigate Lost Ylva while aiming for The Eternal Seal.")
+		s1 = lang("ロストイルヴァの調査をしつつ神の間を目指そう。", "I should investigate Lost Irva while aiming for The Eternal Seal.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 370 & gdata(GDATA_FLAG_MAIN) < 400 ) {
 		s1 = lang("混沌の巨城の最深層、神の間を目指そう。", "I should try to reach the Eternal Seal, located at the lowest level of the Cradle of Chaos.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 378 & gdata(GDATA_FLAG_MAIN) < 382 ) {
@@ -6316,11 +6228,11 @@
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 382 & gdata(GDATA_FLAG_MAIN) < 394 ) {
 		s1 = lang("混沌の巨城の最深層、神の間を目指そう。", "I should try to reach the Eternal Seal, located at the lowest level of the Cradle of Chaos.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 394 & gdata(GDATA_FLAG_MAIN) < 396 ) {
-		s1 = lang("本当にノルンの言うとおりにノースティリスと行き来が出来るのか確かめよう。", "I need to find out if I can really get back and forth between North Tyris and Lost Ylva like Norne said.")
+		s1 = lang("本当にノルンの言うとおりにノースティリスと行き来が出来るのか確かめよう。", "I need to find out if I can really get back and forth between North Tyris and Lost Irva like Norne said.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 396 & gdata(GDATA_FLAG_MAIN) < 398 ) {
 		s1 = lang("サウスティリスの方向から、何かに呼ばれているような感覚がする。", "I feel as if I'm being called by something in South Tyris.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 398 & gdata(GDATA_FLAG_MAIN) < 400 ) {
@@ -6340,17 +6252,17 @@
 	}
 	if ( gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) >= 100 & gdata(GDATA_FLAG_SUB_REGULUS_MAYROON) < 1000 ) {
 		s1 = lang("メイルーンの悪魔の討伐をエリステアに報告しよう。", "I've defeated the demon in Mayroon. I should report to Erystia in Palmia.")
 	}
 	if ( gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) > 0 & gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) < 100 ) {
-		s1 = lang("ロストイルヴァの魔導船にいるライゼルとともにエウダーナへ悪魔討伐に向かおう。", "I need to join forces with Raizel at the Eulderna Blimp in Lost Ylva in order to face the demon of Vengeance that's assaulting Eulderna.")
+		s1 = lang("ロストイルヴァの魔導船にいるライゼルとともにエウダーナへ悪魔討伐に向かおう。", "I need to join forces with Raizel at the Eulderna Blimp in Lost Irva in order to face the demon of Vengeance that's assaulting Eulderna.")
 	}
 	if ( gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) >= 100 & gdata(GDATA_FLAG_SUB_REGULUS_EULDERNA) < 1000 ) {
 		s1 = lang("エウダーナの悪魔の討伐をエリステアに報告しよう。", "The demon in Eulderna has been defeated. I should report to Erystia in Palmia.")
 	}
 	if ( gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) > 0 & gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) < 100 ) {
-		s1 = lang("ロストイルヴァ北端に存在する神艦から傭兵と一緒にキッカスへ悪魔討伐に向かおう。", "I need to join forces with the mercenary waiting at the God's Warship in the northern reaches of Lost Ylva to face the demon attacking Kikkasu.")
+		s1 = lang("ロストイルヴァ北端に存在する神艦から傭兵と一緒にキッカスへ悪魔討伐に向かおう。", "I need to join forces with the mercenary waiting at the God's Warship in the northern reaches of Lost Irva to face the demon attacking Kikkasu.")
 	}
 	if ( gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) >= 100 & gdata(GDATA_FLAG_SUB_REGULUS_KIKKASU) < 1000 ) {
 		s1 = lang("キッカスの悪魔の討伐をエリステアに報告しよう。", "The demon in Kikkasu has been defeated. I should report to Erystia in Palmia.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 440 & gdata(GDATA_FLAG_MAIN) < 455 ) {
@@ -6364,23 +6276,23 @@
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 490 & gdata(GDATA_FLAG_MAIN) < 685 ) {
 		s1 = lang("混沌の巨城の最深層、神の間を目指そう。", "I should try to reach the Eternal Seal, located at the lowest level of the Cradle of Chaos.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 685 & gdata(GDATA_FLAG_MAIN) < 695 ) {
-		s1 = lang("神立図書館でソピアーと話そう。", "I have to talk with <Sophia> at the Sacred Library of Ylva.")
+		s1 = lang("神立図書館でソピアーと話そう。", "I have to talk with <Sophia> at the Sacred Library of Irva.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 695 & gdata(GDATA_FLAG_MAIN) < 700 ) {
 		s1 = lang("混沌の巨城の最深層、神の間を目指そう。", "I should aim for the bottom of the Cradle of Chaos.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 700 & gdata(GDATA_FLAG_MAIN) < 720 ) {
-		s1 = lang("混沌の神を倒す時が来た。", "It is time to beat the God of Chaos.")
+		s1 = lang("混沌の神を倒す時が来た。", "It is time to beat the god of chaos.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 720 & gdata(GDATA_FLAG_MAIN) < 760 ) {
 		s1 = lang("混沌の超児を無力化しよう。", "I have to neutralize the Chaos Child.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 760 & gdata(GDATA_FLAG_MAIN) < 770 ) {
-		s1 = lang("ロストイルヴァは平和になっただろうか？", "Did Lost Ylva become peaceful?")
+		s1 = lang("ロストイルヴァは平和になっただろうか？", "Did Lost Irva become peaceful?")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 770 & gdata(GDATA_FLAG_MAIN) < 780 ) {
 		s1 = lang("気が向いたらノルンの頼み通りヴェルニースに向かおう。", "If I have some spare time, I should visit Vernis as Norne requested.")
 	}
 	if ( gdata(GDATA_FLAG_MAIN) >= 780 & gdata(GDATA_FLAG_MAIN) < 800 ) {
@@ -6422,11 +6334,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_ROGUE) != 0 ) {
-		s = lang("お酒泥棒 Lv2相当", "[Lv. 2] Booze Thief")
+		s = lang("お酒泥棒 Lv2相当", "[Lv. 2] Booze Thieves")
 		p = gdata(GDATA_FLAG_SUB_ROGUE)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6590,11 +6502,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_WIFE) != 0 ) {
-		s = lang("嫁泥棒 Lv3相当", "[Lv. 3] Bride Thief")
+		s = lang("嫁泥棒 Lv3相当", "[Lv. 3] Wife Collector")
 		p = gdata(GDATA_FLAG_SUB_WIFE)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6634,11 +6546,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_WAR) != 0 ) {
-		s = lang("防衛戦線の死闘 Lv17相当", "[Lv. 17] Struggle to the Death in the Defense Line")
+		s = lang("防衛戦線の死闘 Lv17相当", "[Lv. 17] Defense Line")
 		p = gdata(GDATA_FLAG_SUB_WAR)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6668,11 +6580,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_YEEK) != 0 ) {
-		s = lang("騎士昇格試験の手伝い Lv8相当", "[Lv. 8] Helping with the Knight Promotion Exam")
+		s = lang("騎士昇格試験の手伝い Lv8相当", "[Lv. 8] Novice Knight")
 		p = gdata(GDATA_FLAG_SUB_YEEK)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6746,11 +6658,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_VEIN) != 0 ) {
-		s = lang("幻の絵本 Lv12相当", "[Lv. 12] Illusory Books")
+		s = lang("幻の絵本 Lv12相当", "[Lv. 12] Rare Books")
 		p = gdata(GDATA_FLAG_SUB_VEIN)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6764,11 +6676,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_PYRAMID) != 0 ) {
-		s = lang("ピラミッドからの挑戦状 Lv16相当", "[Lv. 16] Pyramid's Trial")
+		s = lang("ピラミッドからの挑戦状 Lv16相当", "[Lv. 16] Challenge of the Pyramid")
 		p = gdata(GDATA_FLAG_SUB_PYRAMID)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6808,11 +6720,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_BIOLOGIST) != 0 ) {
-		s = lang("生化学者の野望 Lv5相当", "[Lv. 5] Ambitious Biochemist")
+		s = lang("生化学者の野望 Lv5相当", "[Lv. 5] Biochemist's Ambition")
 		p = gdata(GDATA_FLAG_SUB_BIOLOGIST)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6826,11 +6738,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_SEWER) != 0 ) {
-		s = lang("下水道大作戦 Lv23相当", "[Lv. 23] Sewer Grand Strategy")
+		s = lang("下水道大作戦 Lv23相当", "[Lv. 23] Sewer Sweeping")
 		p = gdata(GDATA_FLAG_SUB_SEWER)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6852,11 +6764,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_GUILD_MAGE) != 0 ) {
-		s = lang("魔術士ギルド審査", "[Lv. Any] Joining the Mages Guild")
+		s = lang("魔術士ギルド審査", "Joining the Mages Guild")
 		p = gdata(GDATA_FLAG_SUB_GUILD_MAGE)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6870,11 +6782,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_GUILD_THIEF) != 0 ) {
-		s = lang("盗賊ギルド審査", "[Lv. Any] Joining the Thieves Guild")
+		s = lang("盗賊ギルド審査", "Joining the Thieves Guild")
 		p = gdata(GDATA_FLAG_SUB_GUILD_THIEF)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6888,11 +6800,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_GUILD_FIGHTER) != 0 ) {
-		s = lang("戦士ギルド審査", "[Lv. Any] Joining the Fighters Guild")
+		s = lang("戦士ギルド審査", "Joining the Fighters Guild")
 		p = gdata(GDATA_FLAG_SUB_GUILD_FIGHTER)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6906,11 +6818,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_MAGE_1) != 0 ) {
-		s = lang("魔術士ギルドノルマ", "[Lv. Any] The Mages Guild Quota")
+		s = lang("魔術士ギルドノルマ", "The Mages Guild Quota")
 		p = gdata(GDATA_FLAG_SUB_MAGE_1)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6924,11 +6836,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_FIGHTER_1) != 0 ) {
-		s = lang("戦士ギルドノルマ", "[Lv. Any] The Fighters Guild Quota")
+		s = lang("戦士ギルドノルマ", "The Fighters Guild Quota")
 		p = gdata(GDATA_FLAG_SUB_FIGHTER_1)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -6942,21 +6854,21 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_THIEF_1) != 0 ) {
-		s = lang("盗賊ギルドノルマ", "[Lv. Any] The Thieves Guild Quota")
+		s = lang("盗賊ギルドノルマ", "The Thieves Guild Quota")
 		p = gdata(GDATA_FLAG_SUB_THIEF_1)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
 		}
 	}
 	if ( val == 0 ) {
 		if ( p == 1 ) {
-			s1 = lang("盗賊ギルドのランクを上げるためには、あと金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚分の盗品を売りさばき、ダルフィのギルドの番人に話しかける必要がある。", "To raise the rank in the Thieves Guild, I need to sell stolen goods worth total of " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "gp and talk to the guild guard in Derphy.")
+			s1 = lang("盗賊ギルドのランクを上げるためには、あと金貨" + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + "枚分の盗品を売りさばき、ダルフィのギルドの番人に話しかける必要がある。", "To raise the rank in the Thieves Guild, I need to sell stolen goods worth total of " + gdata(GDATA_FLAG_GUILD_THIEF_NORMA) + " gold pieces and talk to the guild guard in Derphy.")
 			talk_conv s1, 40 - en * 4
 			buff += "(" + s + ")\n" + s1
 			noteadd ""
 		}
 	}
@@ -7474,11 +7386,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD) != 0 ) {
-		s = lang("この世界に生きる者 Lv50相当", "[Lv. 50] The Life in This World")
+		s = lang("この世界に生きる者 Lv50相当", "[Lv. 50] The Life of This World")
 		p = gdata(GDATA_FLAG_SUB_THE_LIFE_IN_THIS_WORLD)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -7502,19 +7414,19 @@
 			}
 		}
 	}
 	if ( val == 0 ) {
 		if ( p == gdata(GDATA_FLAG_SUB_THE_TRUE_APPEARANCE) * (gdata(GDATA_FLAG_SUB_THE_TRUE_APPEARANCE) < 5) + (gdata(GDATA_FLAG_SUB_THE_TRUE_APPEARANCE) == 0) ) {
-			s1 = lang("神立図書館のマリアからアイテム集めを頼まれている。", "Maria in the Sacred Library of Ylva has asked me to collect some items for her.")
+			s1 = lang("神立図書館のマリアからアイテム集めを頼まれている。", "Maria in the Sacred Library of Irva has asked me to collect some items for her.")
 			talk_conv s1, 40 - en * 4
 			buff += "(" + s + ")\n" + s1
 			noteadd ""
 		}
 	}
 	if ( val == 0 ) {
 		if ( p == 5 ) {
-			s1 = lang("神立図書館のアリスに薬をあげよう。", "I need to give the medicine to Alice at the Sacred Library of Ylva.")
+			s1 = lang("神立図書館のアリスに薬をあげよう。", "I need to give the medicine to Alice at the Sacred Library of Irva.")
 			talk_conv s1, 40 - en * 4
 			buff += "(" + s + ")\n" + s1
 			noteadd ""
 		}
 	}
@@ -7644,11 +7556,11 @@
 					}
 				}
 			}
 			if ( val == 0 ) {
 				if ( p == gdata(GDATA_FLAG_SUB_SOPHIA_THE_WISE) ) {
-					s1 = lang("神立図書館にいるソピアーに手伝えることはないか尋ねよう。", "I need to help out Sophia in the Sacred Library of Ylva.")
+					s1 = lang("神立図書館にいるソピアーに手伝えることはないか尋ねよう。", "I need to help out Sophia in the Sacred Library of Irva.")
 					talk_conv s1, 40 - en * 4
 					buff += "(" + s + ")\n" + s1
 					noteadd ""
 				}
 			}
@@ -7728,11 +7640,11 @@
 			}
 		}
 	}
 	if ( val == 0 ) {
 		if ( p == 1 ) {
-			s1 = lang("ルストール仙窟のイルマが武具作成の技法についての情報を知りたがっている。", "Irma in the Enchanted Cave in Lost Ylva wants to know the hill's ancient forging techniques.")
+			s1 = lang("ルストール仙窟のイルマが武具作成の技法についての情報を知りたがっている。", "Irma in the Enchanted Cave in Lost Irva wants to know the hill's ancient forging techniques.")
 			talk_conv s1, 40 - en * 4
 			buff += "(" + s + ")\n" + s1
 			noteadd ""
 		}
 	}
@@ -7776,27 +7688,27 @@
 			noteadd ""
 		}
 	}
 	if ( val == 0 ) {
 		if ( p == 7 ) {
-			s1 = lang("日を改めてまたルストール仙窟を訪れよう。", "I should go visit the Enchanted Cave in Lost Ylva on another day.")
+			s1 = lang("日を改めてまたルストール仙窟を訪れよう。", "I should go visit the Enchanted Cave in Lost Irva on another day.")
 			talk_conv s1, 40 - en * 4
 			buff += "(" + s + ")\n" + s1
 			noteadd ""
 		}
 	}
 	if ( val == 0 ) {
 		if ( p == 8 ) {
-			s1 = lang("ルストール仙窟真北の山のふもとにある廃屋でイルマ・サリムと合流しよう。", "I should go visit Irma and Thalia at the old house due north from the Enchanted Cave in Lost Ylva.")
+			s1 = lang("ルストール仙窟真北の山のふもとにある廃屋でイルマ・サリムと合流しよう。", "I should go visit Irma and Thalia at the old house due north from the Enchanted Cave in Lost Irva.")
 			talk_conv s1, 40 - en * 4
 			buff += "(" + s + ")\n" + s1
 			noteadd ""
 		}
 	}
 	if ( val == 0 ) {
 		if ( p == 9 ) {
-			s1 = lang("ルストール仙窟真北の山のふもとにある廃屋でイルマ・サリムと合流しよう。", "I should go visit Irma and Thalia at the old house due north from the Enchanted Cave in Lost Ylva.")
+			s1 = lang("ルストール仙窟真北の山のふもとにある廃屋でイルマ・サリムと合流しよう。", "I should go visit Irma and Thalia at the old house due north from the Enchanted Cave in Lost Irva.")
 			talk_conv s1, 40 - en * 4
 			buff += "(" + s + ")\n" + s1
 			noteadd ""
 		}
 	}
@@ -7852,11 +7764,11 @@
 			noteadd ""
 		}
 	}
 	p = 0
 	if ( gdata(GDATA_FLAG_SUB_RESEARCH_DESTRUCTION_CRISIS) != 0 ) {
-		s = lang("調査隊壊滅の危機 Lv180相当", "[Lv. 180] Research Destruction Crisis")
+		s = lang("調査隊壊滅の危機 Lv180相当", "[Lv. 180] Researcher Crisis")
 		p = gdata(GDATA_FLAG_SUB_RESEARCH_DESTRUCTION_CRISIS)
 		if ( val == 1 ) {
 			if ( p >= 1000 ) {
 				noteadd lang("[達成]", "[Done]") + s
 			}
@@ -7979,11 +7891,11 @@
 				qname(qdata(QDATA_DEST_CLIENT, rq)) = cdatan(CDATAN_NAME, qdata(QDATA_CLIENT, qdata(QDATA_DEST_CLIENT, rq)))
 			}
 		}
 	}
 	s(6) = ""
-	s(5) = lang("金貨" + qdata(QDATA_REWARD, rq) + "枚", "" + qdata(QDATA_REWARD, rq) + "gp")
+	s(5) = lang("金貨" + qdata(QDATA_REWARD, rq) + "枚", "" + qdata(QDATA_REWARD, rq) + " gold pieces")
 	if ( qdata(QDATA_REWARD_ITEM, rq) != QUEST_REWARD_NONE ) {
 		if ( qdata(QDATA_REWARD_ITEM, rq) < FILTER_WEAPON ) {
 			s(5) += lang("と", " and ") + _reward(qdata(QDATA_REWARD_ITEM, rq))
 		}
 		else {
@@ -8272,14 +8184,10 @@
 			}
 			if ( s == "くれ" ) {
 				s = _kure(3)
 				break
 			}
-			if ( s == "見るな" ) {
-				s = _miruna(3)
-				break
-			}
 			if ( s == "onii" ) {
 				if ( jp ) {
 					if ( cdata(CDATA_SEX, CHARA_PLAYER) == 0 ) {
 						s = "お兄"
 					}
@@ -8501,11 +8409,11 @@
 		}
 		if ( txtgod_godid == GOD_YACATECT ) {
 			txt lang("「やっと帰ってきたんやな！さぁ、今日もバリバリ稼ぐんやで！」", cnvtalk("You finally came back! Let's get to work making money!"))
 		}
 		if ( txtgod_godid == GOD_KUMIROMI ) {
-			txt lang("「おかえり…待っていた」", cnvtalk("Welcome back...I was...waiting for you."))
+			txt lang("「おかえり…待っていた」", cnvtalk("Welcome back... I was... waiting for you."))
 		}
 	}
 	if ( txtgod_flavor == GOD_TEXT_JOIN ) {
 		if ( txtgod_godid == GOD_MANI ) {
 			txt lang("「入信者か。私の名を貶めないよう励むがいい」", cnvtalk("Oh, someone comes to me finally. Devote yourself to my tasks, you'll be rewarded greatly, maybe."))
diff -U5 --recursive 1.90.4-custom/trait.hsp 1.90.4.2-custom-g/trait.hsp
--- 1.90.4-custom/trait.hsp	2021-09-02 12:55:06.729756600 -0700
+++ 1.90.4.2-custom-g/trait.hsp	2021-09-02 12:55:07.123822500 -0700
@@ -924,11 +924,11 @@
 		if ( traitmode == 0 ) {
 			traitref = 3, -3, 0, 1, 0, 100, -1
 			if ( trait(tid) < 0 ) {
 				traitrefn(2) = "", lang("あなたは重力を生み出している[重量+10%]", "You generate gravity. [Weight+10%]"), lang("あなたは大きな重力を生み出している[重量+20%]", "You generate heavy gravity. [Weight+20%]"), lang("あなたはとてつもない重力を生み出している[重量+30%]", "You generate massive gravity. [Weight+30%]")
 			}
-			traitrefn = lang("あなたの周りの重力は軽減した。", "You weight less."), lang("あなたは重力を発するようになった。", "You start to generate gravity.")
+			traitrefn = lang("あなたの周りの重力は軽減した。", "The gravity around you has diminished."), lang("あなたは重力を発するようになった。", "You start to generate gravity.")
 			return 1
 		}
 		return 1
 	}
 	if ( tid == TRAIT_ETHER_SORE_FACE ) {
@@ -1167,5 +1167,6 @@
 	if ( cdatan(CDATAN_RACE, CHARA_PLAYER) == "fairy" ) {
 		trait(TRAIT_RACE_BONUS_RESISTANCE) = 1
 		trait(TRAIT_RACE_WEAK) = 1
 	}
 	return
+
Only in 1.90.4.2-custom-g/: water.hpi
Only in 1.90.4.2-custom-g/: z.hpi
