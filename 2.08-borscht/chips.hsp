#deffunc create_pcpic int create_pcpic_arg1, int create_pcpic_arg2
	buffer 10 + create_pcpic_arg1, 384, 198
	color 0, 0, 0
	boxf
	if ( pcc(PCC_BODY, create_pcpic_arg1) == 0 ) {
		pcc(PCC_BODY, create_pcpic_arg1) = cdata(CDATA_SEX, create_pcpic_arg1) + 1
		pcc(PCC_EYE, create_pcpic_arg1) = cdata(CDATA_SEX, create_pcpic_arg1) + 7
		pcc(PCC_HAIR, create_pcpic_arg1) = 2 + rnd(31) * 1000
		pcc(PCC_CLOTH, create_pcpic_arg1) = 1 + rnd(31) * 1000
		pcc(PCC_PANTS, create_pcpic_arg1) = 1 + rnd(31) * 1000
		pcc(PCC_RIDE, create_pcpic_arg1) = 1
	}
	if ( create_pcpic_arg2 == 1 ) {
		pcc(PCC_MANTLE, create_pcpic_arg1) = 0
		pcc(PCC_CHEST, create_pcpic_arg1) = 0
		pcc(PCC_BOOTS, create_pcpic_arg1) = 0
		pcc(PCC_LEG, create_pcpic_arg1) = 0
		pcc(PCC_GLOVE, create_pcpic_arg1) = 0
		pcc(PCC_BELT, create_pcpic_arg1) = 0
		repeat 30, 100
			if ( cdata(cnt, create_pcpic_arg1) \ EXT_EQUIP_SLOTS != 0 ) {
				locvar_create_pcpic_i = cdata(cnt, create_pcpic_arg1) \ EXT_EQUIP_SLOTS - 1
				locvar_create_pcpic_body = iequiploc(locvar_create_pcpic_i)
				gosub *pcc_wear
			}
		loop
	}
	if ( gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_KIND) > 0 & mdata(MDATA_TYPE) == MAP_TYPE_WORLD ) {
		if ( create_pcpic_arg1 == 0 ) {
			exist exedir + "\\graphic\\PCCs\\pcc_" + "world" + "_" + gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_PIC) \ 1000 + ".bmp"
			if ( strsize != (-1) ) {
				pos 128, 0
				picload exedir + "\\graphic\\PCCs\\pcc_" + "world" + "_" + gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_PIC) \ 1000 + ".bmp", 1
				color 0, 0, 0
				boxf 256, 0, 384, 198
				gmode 4, , , 256
				color 43, 133, 133
				pget 128, 0
				pos 256, 0
				gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
				pos 256, 0
				gfini 128, 198
				gfdec2 c_col(0, gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_PIC) / 1000), c_col(1, gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_PIC) / 1000), c_col(2, gdata(GDATA_FLAG_WORLD_MAP_VEHICLE_PIC) / 1000)
				gmode 2
				color 0, 0, 0
				pos 0, 0
				gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
			}
		}
	}
	else {
		pcc(PCC_SUB_HAIR, create_pcpic_arg1) = pcc(PCC_HAIR, create_pcpic_arg1) / 1000 * 1000 + pcc(PCC_SUB_HAIR, create_pcpic_arg1) \ COLOR_TINT_MULT
		pcc(PCC_EYE, create_pcpic_arg1) = pcc(PCC_BODY, create_pcpic_arg1) / 1000 * 1000 + pcc(PCC_EYE, create_pcpic_arg1) \ COLOR_TINT_MULT
		if ( create_pcpic_arg2 != 0 ) {
			if ( pcc(PCC_HIDE_MANTLE, create_pcpic_arg1) == 0 ) {
				exist exedir + "\\graphic\\PCCs\\pcc_" + "mantle" + "_" + pcc(PCC_MANTLE, create_pcpic_arg1) \ 1000 + ".bmp"
				if ( strsize != (-1) ) {
					pos 128, 0
					picload exedir + "\\graphic\\PCCs\\pcc_" + "mantle" + "_" + pcc(PCC_MANTLE, create_pcpic_arg1) \ 1000 + ".bmp", 1
					color 0, 0, 0
					boxf 256, 0, 384, 198
					gmode 4, , , 256
					color 43, 133, 133
					pget 128, 0
					pos 256, 0
					gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
					pos 256, 0
					gfini 128, 198
					gfdec2 c_col(0, pcc(PCC_MANTLE, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_MANTLE, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_MANTLE, create_pcpic_arg1) / 1000)
					gmode 2
					color 0, 0, 0
					pos 0, 0
					gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
				}
			}
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "hairbk" + "_" + pcc(PCC_HAIR, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "hairbk" + "_" + pcc(PCC_HAIR, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_HAIR, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_HAIR, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_HAIR, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
		if ( create_pcpic_arg1 == 0 & gdata(GDATA_RIDER) != 0 & pcc(PCC_RIDE, create_pcpic_arg1) != 0 ) {
			exist exedir + "\\graphic\\PCCs\\pcc_" + "ridebk" + "_" + pcc(PCC_RIDE, create_pcpic_arg1) \ 1000 + ".bmp"
			if ( strsize != (-1) ) {
				pos 128, 0
				picload exedir + "\\graphic\\PCCs\\pcc_" + "ridebk" + "_" + pcc(PCC_RIDE, create_pcpic_arg1) \ 1000 + ".bmp", 1
				color 0, 0, 0
				boxf 256, 0, 384, 198
				gmode 4, , , 256
				color 43, 133, 133
				pget 128, 0
				pos 256, 0
				gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
				pos 256, 0
				gfini 128, 198
				gfdec2 c_col(0, pcc(PCC_RIDE, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_RIDE, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_RIDE, create_pcpic_arg1) / 1000)
				gmode 2
				color 0, 0, 0
				pos 0, 0
				gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
			}
		}
		else {
			exist exedir + "\\graphic\\PCCs\\pcc_" + "body" + "_" + pcc(PCC_BODY, create_pcpic_arg1) \ 1000 + ".bmp"
			if ( strsize != (-1) ) {
				pos 128, 0
				picload exedir + "\\graphic\\PCCs\\pcc_" + "body" + "_" + pcc(PCC_BODY, create_pcpic_arg1) \ 1000 + ".bmp", 1
				color 0, 0, 0
				boxf 256, 0, 384, 198
				gmode 4, , , 256
				color 43, 133, 133
				pget 128, 0
				pos 256, 0
				gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
				pos 256, 0
				gfini 128, 198
				gfdec2 c_col(0, pcc(PCC_BODY, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_BODY, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_BODY, create_pcpic_arg1) / 1000)
				gmode 2
				color 0, 0, 0
				pos 0, 0
				gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
			}
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "eye" + "_" + pcc(PCC_EYE, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "eye" + "_" + pcc(PCC_EYE, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_EYE, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_EYE, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_EYE, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
		if ( create_pcpic_arg1 == 0 & gdata(GDATA_RIDER) != 0 & pcc(PCC_RIDE, create_pcpic_arg1) != 0 ) {
		}
		else {
			exist exedir + "\\graphic\\PCCs\\pcc_" + "pants" + "_" + pcc(PCC_PANTS, create_pcpic_arg1) \ 1000 + ".bmp"
			if ( strsize != (-1) ) {
				pos 128, 0
				picload exedir + "\\graphic\\PCCs\\pcc_" + "pants" + "_" + pcc(PCC_PANTS, create_pcpic_arg1) \ 1000 + ".bmp", 1
				color 0, 0, 0
				boxf 256, 0, 384, 198
				gmode 4, , , 256
				color 43, 133, 133
				pget 128, 0
				pos 256, 0
				gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
				pos 256, 0
				gfini 128, 198
				gfdec2 c_col(0, pcc(PCC_PANTS, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_PANTS, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_PANTS, create_pcpic_arg1) / 1000)
				gmode 2
				color 0, 0, 0
				pos 0, 0
				gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
			}
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "cloth" + "_" + pcc(PCC_CLOTH, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "cloth" + "_" + pcc(PCC_CLOTH, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_CLOTH, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_CLOTH, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_CLOTH, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
		if ( create_pcpic_arg2 != 0 ) {
			if ( pcc((20 /*!!!@[PCC_HIDE_CHEST @@@ STARTING_PCC_HIDE]@!!! */), create_pcpic_arg1) == 0 ) {
				exist exedir + "\\graphic\\PCCs\\pcc_" + "chest" + "_" + pcc(PCC_CHEST, create_pcpic_arg1) \ 1000 + ".bmp"
				if ( strsize != (-1) ) {
					pos 128, 0
					picload exedir + "\\graphic\\PCCs\\pcc_" + "chest" + "_" + pcc(PCC_CHEST, create_pcpic_arg1) \ 1000 + ".bmp", 1
					color 0, 0, 0
					boxf 256, 0, 384, 198
					gmode 4, , , 256
					color 43, 133, 133
					pget 128, 0
					pos 256, 0
					gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
					pos 256, 0
					gfini 128, 198
					gfdec2 c_col(0, pcc(PCC_CHEST, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_CHEST, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_CHEST, create_pcpic_arg1) / 1000)
					gmode 2
					color 0, 0, 0
					pos 0, 0
					gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
				}
			}
			if ( create_pcpic_arg1 == 0 & gdata(GDATA_RIDER) != 0 & pcc(PCC_RIDE, create_pcpic_arg1) != 0 ) {
			}
			else {
				if ( pcc(PCC_HIDE_LEG, create_pcpic_arg1) == 0 ) {
					exist exedir + "\\graphic\\PCCs\\pcc_" + "leg" + "_" + pcc(PCC_LEG, create_pcpic_arg1) \ 1000 + ".bmp"
					if ( strsize != (-1) ) {
						pos 128, 0
						picload exedir + "\\graphic\\PCCs\\pcc_" + "leg" + "_" + pcc(PCC_LEG, create_pcpic_arg1) \ 1000 + ".bmp", 1
						color 0, 0, 0
						boxf 256, 0, 384, 198
						gmode 4, , , 256
						color 43, 133, 133
						pget 128, 0
						pos 256, 0
						gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
						pos 256, 0
						gfini 128, 198
						gfdec2 c_col(0, pcc(PCC_LEG, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_LEG, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_LEG, create_pcpic_arg1) / 1000)
						gmode 2
						color 0, 0, 0
						pos 0, 0
						gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
					}
				}
			}
			if ( pcc(PCC_HIDE_BELT, create_pcpic_arg1) == 0 ) {
				exist exedir + "\\graphic\\PCCs\\pcc_" + "belt" + "_" + pcc(PCC_BELT, create_pcpic_arg1) \ 1000 + ".bmp"
				if ( strsize != (-1) ) {
					pos 128, 0
					picload exedir + "\\graphic\\PCCs\\pcc_" + "belt" + "_" + pcc(PCC_BELT, create_pcpic_arg1) \ 1000 + ".bmp", 1
					color 0, 0, 0
					boxf 256, 0, 384, 198
					gmode 4, , , 256
					color 43, 133, 133
					pget 128, 0
					pos 256, 0
					gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
					pos 256, 0
					gfini 128, 198
					gfdec2 c_col(0, pcc(PCC_BELT, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_BELT, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_BELT, create_pcpic_arg1) / 1000)
					gmode 2
					color 0, 0, 0
					pos 0, 0
					gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
				}
			}
			if ( pcc(PCC_HIDE_GLOVE, create_pcpic_arg1) == 0 ) {
				exist exedir + "\\graphic\\PCCs\\pcc_" + "glove" + "_" + pcc(PCC_GLOVE, create_pcpic_arg1) \ 1000 + ".bmp"
				if ( strsize != (-1) ) {
					pos 128, 0
					picload exedir + "\\graphic\\PCCs\\pcc_" + "glove" + "_" + pcc(PCC_GLOVE, create_pcpic_arg1) \ 1000 + ".bmp", 1
					color 0, 0, 0
					boxf 256, 0, 384, 198
					gmode 4, , , 256
					color 43, 133, 133
					pget 128, 0
					pos 256, 0
					gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
					pos 256, 0
					gfini 128, 198
					gfdec2 c_col(0, pcc(PCC_GLOVE, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_GLOVE, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_GLOVE, create_pcpic_arg1) / 1000)
					gmode 2
					color 0, 0, 0
					pos 0, 0
					gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
				}
			}
		}
		if ( create_pcpic_arg1 == 0 ) {
			if ( gdata(GDATA_RIDER) != 0 ) {
				exist exedir + "\\graphic\\PCCs\\pcc_" + "ride" + "_" + pcc(PCC_RIDE, create_pcpic_arg1) \ 1000 + ".bmp"
				if ( strsize != (-1) ) {
					pos 128, 0
					picload exedir + "\\graphic\\PCCs\\pcc_" + "ride" + "_" + pcc(PCC_RIDE, create_pcpic_arg1) \ 1000 + ".bmp", 1
					color 0, 0, 0
					boxf 256, 0, 384, 198
					gmode 4, , , 256
					color 43, 133, 133
					pget 128, 0
					pos 256, 0
					gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
					pos 256, 0
					gfini 128, 198
					gfdec2 c_col(0, pcc(PCC_RIDE, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_RIDE, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_RIDE, create_pcpic_arg1) / 1000)
					gmode 2
					color 0, 0, 0
					pos 0, 0
					gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
				}
			}
		}
		if ( create_pcpic_arg2 != 0 ) {
			if ( pcc(PCC_HIDE_MANTLE, create_pcpic_arg1) == 0 ) {
				exist exedir + "\\graphic\\PCCs\\pcc_" + "mantlebk" + "_" + pcc(PCC_MANTLE, create_pcpic_arg1) \ 1000 + ".bmp"
				if ( strsize != (-1) ) {
					pos 128, 0
					picload exedir + "\\graphic\\PCCs\\pcc_" + "mantlebk" + "_" + pcc(PCC_MANTLE, create_pcpic_arg1) \ 1000 + ".bmp", 1
					color 0, 0, 0
					boxf 256, 0, 384, 198
					gmode 4, , , 256
					color 43, 133, 133
					pget 128, 0
					pos 256, 0
					gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
					pos 256, 0
					gfini 128, 198
					gfdec2 c_col(0, pcc(PCC_MANTLE, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_MANTLE, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_MANTLE, create_pcpic_arg1) / 1000)
					gmode 2
					color 0, 0, 0
					pos 0, 0
					gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
				}
			}
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "hair" + "_" + pcc(PCC_HAIR, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "hair" + "_" + pcc(PCC_HAIR, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_HAIR, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_HAIR, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_HAIR, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "subhair" + "_" + pcc(PCC_SUB_HAIR, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "subhair" + "_" + pcc(PCC_SUB_HAIR, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_SUB_HAIR, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_SUB_HAIR, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_SUB_HAIR, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "etc" + "_" + pcc(PCC_ETC1, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "etc" + "_" + pcc(PCC_ETC1, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_ETC1, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_ETC1, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_ETC1, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "etc" + "_" + pcc(PCC_ETC2, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "etc" + "_" + pcc(PCC_ETC2, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_ETC2, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_ETC2, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_ETC2, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
		exist exedir + "\\graphic\\PCCs\\pcc_" + "etc" + "_" + pcc(PCC_ETC3, create_pcpic_arg1) \ 1000 + ".bmp"
		if ( strsize != (-1) ) {
			pos 128, 0
			picload exedir + "\\graphic\\PCCs\\pcc_" + "etc" + "_" + pcc(PCC_ETC3, create_pcpic_arg1) \ 1000 + ".bmp", 1
			color 0, 0, 0
			boxf 256, 0, 384, 198
			gmode 4, , , 256
			color 43, 133, 133
			pget 128, 0
			pos 256, 0
			gcopy 10 + create_pcpic_arg1, 128, 0, 128, 198
			pos 256, 0
			gfini 128, 198
			gfdec2 c_col(0, pcc(PCC_ETC3, create_pcpic_arg1) / 1000), c_col(1, pcc(PCC_ETC3, create_pcpic_arg1) / 1000), c_col(2, pcc(PCC_ETC3, create_pcpic_arg1) / 1000)
			gmode 2
			color 0, 0, 0
			pos 0, 0
			gcopy 10 + create_pcpic_arg1, 256, 0, 128, 198
		}
	}
	gsel BUFFER_SCREEN
	return

*pcc_wear
	locvar_create_pcpic_p = refitem(inv(INV_ITEM_ID, locvar_create_pcpic_i), DBSPEC_PCC)
	if ( locvar_create_pcpic_p == 0 ) {
		locvar_create_pcpic_p = 1
	}
	if ( locvar_create_pcpic_body == 1 ) {
		return
	}
	if ( locvar_create_pcpic_body == 3 ) {
		pcc(PCC_MANTLE, create_pcpic_arg1) = locvar_create_pcpic_p + inv(INV_ITEM_COL, locvar_create_pcpic_i) * 1000
		return
	}
	if ( locvar_create_pcpic_body == 4 ) {
		pcc(PCC_CHEST, create_pcpic_arg1) = locvar_create_pcpic_p + inv(INV_ITEM_COL, locvar_create_pcpic_i) * 1000
		return
	}
	if ( locvar_create_pcpic_body == 9 ) {
		pcc(PCC_LEG, create_pcpic_arg1) = locvar_create_pcpic_p + inv(INV_ITEM_COL, locvar_create_pcpic_i) * 1000
		return
	}
	if ( locvar_create_pcpic_body == 7 ) {
		pcc(PCC_GLOVE, create_pcpic_arg1) = locvar_create_pcpic_p + inv(INV_ITEM_COL, locvar_create_pcpic_i) * 1000
		return
	}
	if ( locvar_create_pcpic_body == 8 ) {
		pcc(PCC_BELT, create_pcpic_arg1) = locvar_create_pcpic_p + inv(INV_ITEM_COL, locvar_create_pcpic_i) * 1000
		return
	}
	return

*label_0456
	goto *cloud_init

#deffunc addefmap int addefmap_arg1, int addefmap_arg2, int addefmap_arg3, int addefmap_arg4, int addefmap_arg5, int addefmap_arg6
	efmap(0, addefmap_arg1, addefmap_arg2) = addefmap_arg3, addefmap_arg4, addefmap_arg5, addefmap_arg6
	return

*cloud_init
	repeat 12
		if ( rnd(2) == 0 ) {
			cloud(CLOUD_PX, cnt) = 288, 1040, 208, 160
		}
		else {
			cloud(CLOUD_PX, cnt) = 0, 976, 288, 224
		}
		cloud(CLOUD_X, cnt) = rnd(100) + cnt * 200 + 100000
		cloud(CLOUD_Y, cnt) = rnd(100) + cnt / 5 * 200 + 100000
	loop
	return

*mapchip_init
	dim chipm, 8, 33 * 25
	if ( mdata(MDATA_TILE_FILE) == 0 ) {
		chipm(CHIPM_F, xy2pic(2, 7)) = 0, 0
		repeat 9, 17
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_WATER
		loop
		repeat 7, 26
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SNOW
		loop
		chipm(CHIPM_ROLE, xy2pic(11, 1)) = MAP_CHIP_ROLE_WATER
		repeat 5, 58
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_WATER
		loop
		chipm(CHIPM_ROLE, xy2pic(7, 17)) = MAP_CHIP_ROLE_SNOW
		chipm(CHIPM_ROLE, xy2pic(8, 17)) = MAP_CHIP_ROLE_SNOW
		chipm(CHIPM_ROLE, xy2pic(9, 17)) = MAP_CHIP_ROLE_SNOW
		repeat 33, 99
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SAND
		loop
		repeat 21, 165
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SAND_HARD
		loop
		repeat 20, 198
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SNOW
		loop
		repeat 5, 594
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SAND
		loop
		repeat 5, 599
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SAND_HARD
		loop
		repeat 12, 107
			chipm(CHIPM_ROLE_SUB, cnt) = MAP_CHIP_ROLE_COAST
		loop
		repeat 12, 173
			chipm(CHIPM_ROLE_SUB, cnt) = MAP_CHIP_ROLE_COAST
		loop
		repeat 12, 206
			chipm(CHIPM_ROLE_SUB, cnt) = MAP_CHIP_ROLE_COAST
		loop
		chipm(CHIPM_ROLE, xy2pic(10, 18)) = MAP_CHIP_ROLE_SAND_WATER
		repeat 12, 605
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SAND_WATER
			chipm(CHIPM_ROLE_SUB, cnt) = MAP_CHIP_ROLE_COAST
		loop
		repeat 13 * 33, 396
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_SEE_OR_PASS
		loop
		repeat 18, 246
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_PASS
		loop
		repeat 9, 321
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_PASS
		loop
		repeat 10, 573
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_PASS
		loop
		repeat 33, 264
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_PASS
		loop
		chipm(CHIPM_F, xy2pic(3, 4)) = 8
		chipm(CHIPM_F, xy2pic(5, 4)) = 16
		chipm(CHIPM_F, xy2pic(8, 4)) = 6
		chipm(CHIPM_F, xy2pic(13, 4)) = 16
		chipm(CHIPM_F, xy2pic(17, 4)) = 16
	}
	if ( mdata(MDATA_TILE_FILE) == 1 ) {
		repeat 13 * 33, 396
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_SEE_OR_PASS
		loop
		chipm(CHIPM_F, xy2pic(2, 7)) = 56, 48
		chipm(CHIPM_ATTRIB, xy2pic(19, 12)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 12)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(19, 13)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 13)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(12, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(13, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(18, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(19, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(21, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(22, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(23, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(24, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(0, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(0, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(1, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(10, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(15, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(16, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(15, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(16, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(7, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(8, 21)) = CHIPM_ATTRIB_CANT_PASS
		repeat 61 - 45, 45
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SNOW
		loop
		chipm(CHIPM_ROLE, xy2pic(16, 2)) = MAP_CHIP_ROLE_SNOW
		chipm(CHIPM_ROLE, xy2pic(17, 2)) = MAP_CHIP_ROLE_SNOW
		chipm(CHIPM_ROLE, xy2pic(18, 2)) = MAP_CHIP_ROLE_SNOW
		repeat (495 - 462) * 2, 462
			chipm(CHIPM_WALL, cnt) = 1
			chipm(CHIPM_WALL, cnt - 66) = 1
		loop
		repeat 6, 23
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SAND
		loop
		repeat 33, 462
			chipm(CHIPM_WALL, cnt) = 2
			chipm(CHIPM_WALL, cnt - 66) = 2
		loop
		chipm(CHIPM_ROLE, xy2pic(29, 0)) = MAP_CHIP_ROLE_DRYROCK
		chipm(CHIPM_ROLE, xy2pic(30, 0)) = MAP_CHIP_ROLE_CROP
		chipm(CHIPM_ROLE, xy2pic(31, 0)) = MAP_CHIP_ROLE_CROP
		chipm(CHIPM_ROLE, xy2pic(20, 10)) = MAP_CHIP_ROLE_COMPOST
		chipm(CHIPM_ROLE, xy2pic(22, 10)) = MAP_CHIP_ROLE_GRATING
		chipm(CHIPM_ROLE, xy2pic(0, 11)) = MAP_CHIP_ROLE_PIANO1
		chipm(CHIPM_ROLE, xy2pic(1, 11)) = MAP_CHIP_ROLE_PIANO2B
		chipm(CHIPM_ROLE, xy2pic(2, 11)) = MAP_CHIP_ROLE_PIANO3
		chipm(CHIPM_ROLE, xy2pic(3, 11)) = MAP_CHIP_ROLE_PIANO4B
		chipm(CHIPM_ROLE, xy2pic(4, 11)) = MAP_CHIP_ROLE_PIANO5
		chipm(CHIPM_ROLE, xy2pic(5, 11)) = MAP_CHIP_ROLE_PIANO6
		chipm(CHIPM_ROLE, xy2pic(6, 11)) = MAP_CHIP_ROLE_PIANO7B
		chipm(CHIPM_ROLE, xy2pic(7, 11)) = MAP_CHIP_ROLE_PIANO8
		chipm(CHIPM_ROLE, xy2pic(8, 11)) = MAP_CHIP_ROLE_PIANO9B
		chipm(CHIPM_ROLE, xy2pic(9, 11)) = MAP_CHIP_ROLE_PIANO10
		chipm(CHIPM_ROLE, xy2pic(10, 11)) = MAP_CHIP_ROLE_PIANO11B
		chipm(CHIPM_ROLE, xy2pic(11, 11)) = MAP_CHIP_ROLE_PIANO12
		chipm(CHIPM_ROLE, xy2pic(12, 11)) = MAP_CHIP_ROLE_PIANO13
		chipm(CHIPM_ROLE, xy2pic(13, 11)) = MAP_CHIP_ROLE_PIANO14B
		chipm(CHIPM_ROLE, xy2pic(14, 11)) = MAP_CHIP_ROLE_PIANO15
		chipm(CHIPM_ROLE, xy2pic(15, 11)) = MAP_CHIP_ROLE_PIANO16B
		chipm(CHIPM_ROLE, xy2pic(16, 11)) = MAP_CHIP_ROLE_PIANO17
		chipm(CHIPM_ROLE, xy2pic(17, 11)) = MAP_CHIP_ROLE_PIANO18
		chipm(CHIPM_ROLE, xy2pic(18, 11)) = MAP_CHIP_ROLE_PIANO19B
		chipm(CHIPM_ROLE, xy2pic(19, 11)) = MAP_CHIP_ROLE_PIANO20
		chipm(CHIPM_ROLE, xy2pic(20, 11)) = MAP_CHIP_ROLE_PIANO21B
		chipm(CHIPM_ROLE, xy2pic(21, 11)) = MAP_CHIP_ROLE_PIANO22
		chipm(CHIPM_ROLE, xy2pic(22, 11)) = MAP_CHIP_ROLE_PIANO23B
		chipm(CHIPM_ROLE, xy2pic(23, 11)) = MAP_CHIP_ROLE_PIANO24
		chipm(CHIPM_ROLE, xy2pic(24, 11)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(19, 12)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(20, 12)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(19, 13)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(20, 13)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(2, 14)) = MAP_CHIP_ROLE_HARD_WALL
		chipm(CHIPM_ANIM, xy2pic(22, 16)) = 2
		chipm(CHIPM_WALL, xy2pic(22, 16)) = 1
		chipm(CHIPM_ROLE, xy2pic(19, 9)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(19, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(0, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(3, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(3, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(6, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE_SUB, xy2pic(6, 5)) = MAP_CHIP_ROLE_MOUNTAIN_WATER
		chipm(CHIPM_ANIM, xy2pic(6, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(9, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(9, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(5, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(5, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(8, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(8, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(11, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(11, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(14, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(14, 9)) = 3
		chipm(CHIPM_ANIM, xy2pic(11, 8)) = 5
		chipm(CHIPM_ROLE, xy2pic(17, 9)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(18, 9)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 17)) = 3
		chipm(CHIPM_ROLE, xy2pic(0, 18)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 18)) = 3
		chipm(CHIPM_ROLE, xy2pic(17, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(18, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(19, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(20, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(21, 17)) = MAP_CHIP_ROLE_WATER
	}
	if ( mdata(MDATA_TILE_FILE) == 2 ) {
		repeat 11
			cnt2 = cnt
			repeat 13
				chipm(CHIPM_ROLE, cnt2 * 33 + cnt + 20) = MAP_CHIP_ROLE_SNOW
			loop
		loop
		repeat 33, 33
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SNOW
		loop
		repeat 13 * 33, 396
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_SEE_OR_PASS
		loop
		chipm(CHIPM_F, xy2pic(2, 7)) = 56, 48
		chipm(CHIPM_ATTRIB, xy2pic(0, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(0, 18)) = CHIPM_ATTRIB_CANT_PASS
		repeat (495 - 462) * 2, 462
			chipm(CHIPM_WALL, cnt) = 1
			chipm(CHIPM_WALL, cnt - 66) = 1
		loop
		repeat 33, 462
			chipm(CHIPM_WALL, cnt) = 2
			chipm(CHIPM_WALL, cnt - 66) = 2
		loop
		chipm(CHIPM_ROLE, xy2pic(0, 11)) = MAP_CHIP_ROLE_PIANO1
		chipm(CHIPM_ROLE, xy2pic(1, 11)) = MAP_CHIP_ROLE_PIANO2B
		chipm(CHIPM_ROLE, xy2pic(2, 11)) = MAP_CHIP_ROLE_PIANO3
		chipm(CHIPM_ROLE, xy2pic(3, 11)) = MAP_CHIP_ROLE_PIANO4B
		chipm(CHIPM_ROLE, xy2pic(4, 11)) = MAP_CHIP_ROLE_PIANO5
		chipm(CHIPM_ROLE, xy2pic(5, 11)) = MAP_CHIP_ROLE_PIANO6
		chipm(CHIPM_ROLE, xy2pic(6, 11)) = MAP_CHIP_ROLE_PIANO7B
		chipm(CHIPM_ROLE, xy2pic(7, 11)) = MAP_CHIP_ROLE_PIANO8
		chipm(CHIPM_ROLE, xy2pic(8, 11)) = MAP_CHIP_ROLE_PIANO9B
		chipm(CHIPM_ROLE, xy2pic(9, 11)) = MAP_CHIP_ROLE_PIANO10
		chipm(CHIPM_ROLE, xy2pic(10, 11)) = MAP_CHIP_ROLE_PIANO11B
		chipm(CHIPM_ROLE, xy2pic(11, 11)) = MAP_CHIP_ROLE_PIANO12
		chipm(CHIPM_ROLE, xy2pic(12, 11)) = MAP_CHIP_ROLE_PIANO13
		chipm(CHIPM_ROLE, xy2pic(13, 11)) = MAP_CHIP_ROLE_PIANO14B
		chipm(CHIPM_ROLE, xy2pic(14, 11)) = MAP_CHIP_ROLE_PIANO15
		chipm(CHIPM_ROLE, xy2pic(15, 11)) = MAP_CHIP_ROLE_PIANO16B
		chipm(CHIPM_ROLE, xy2pic(16, 11)) = MAP_CHIP_ROLE_PIANO17
		chipm(CHIPM_ROLE, xy2pic(17, 11)) = MAP_CHIP_ROLE_PIANO18
		chipm(CHIPM_ROLE, xy2pic(18, 11)) = MAP_CHIP_ROLE_PIANO19B
		chipm(CHIPM_ROLE, xy2pic(19, 11)) = MAP_CHIP_ROLE_PIANO20
		chipm(CHIPM_ROLE, xy2pic(20, 11)) = MAP_CHIP_ROLE_PIANO21B
		chipm(CHIPM_ROLE, xy2pic(21, 11)) = MAP_CHIP_ROLE_PIANO22
		chipm(CHIPM_ROLE, xy2pic(22, 11)) = MAP_CHIP_ROLE_PIANO23B
		chipm(CHIPM_ROLE, xy2pic(23, 11)) = MAP_CHIP_ROLE_PIANO24
		chipm(CHIPM_ROLE, xy2pic(24, 11)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(19, 12)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(20, 12)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(19, 13)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(20, 13)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ANIM, xy2pic(22, 16)) = 2
		chipm(CHIPM_WALL, xy2pic(22, 16)) = 1
		chipm(CHIPM_ROLE, xy2pic(19, 9)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(19, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(0, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(3, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(3, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(6, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE_SUB, xy2pic(6, 5)) = MAP_CHIP_ROLE_MOUNTAIN_WATER
		chipm(CHIPM_ANIM, xy2pic(6, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(9, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(9, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(5, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(5, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(8, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(8, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(11, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(11, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(14, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(14, 9)) = 3
		chipm(CHIPM_ANIM, xy2pic(0, 17)) = 3
		chipm(CHIPM_ROLE, xy2pic(0, 18)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 18)) = 3
		chipm(CHIPM_WALL, xy2pic(14, 14)) = 0
		chipm(CHIPM_WALL, 476 + 33) = 0
	}
	if ( mdata(MDATA_TILE_FILE) == 3 ) {
		repeat 13 * 33, 396
			chipm(CHIPM_ATTRIB, cnt) = CHIPM_ATTRIB_CANT_SEE_OR_PASS
		loop
		chipm(CHIPM_ATTRIB, xy2pic(19, 12)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 12)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(19, 13)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 13)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(12, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(13, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(18, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(19, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(21, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(22, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(23, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(24, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(0, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(0, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(5, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(6, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(7, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(8, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(9, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(10, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(12, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(13, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(15, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(16, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(18, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(19, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(21, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(22, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(23, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(24, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(25, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(30, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(31, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(32, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(26, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(27, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(28, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(29, 17)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(26, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(27, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(28, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(29, 18)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(18, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(19, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(21, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(22, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(23, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(24, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(25, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(26, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(27, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(28, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(29, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(12, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(13, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(15, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(16, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(18, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(19, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(20, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(21, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(22, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(23, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(24, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(25, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(26, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(27, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(28, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(12, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(13, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(15, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(16, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(18, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(27, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(28, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(0, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(1, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(2, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(3, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(4, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(5, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(6, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(7, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(8, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(9, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(10, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(32, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(32, 21)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(32, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ANIM, xy2pic(14, 23)) = 3
		chipm(CHIPM_ATTRIB, xy2pic(14, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ANIM, xy2pic(17, 23)) = 3
		chipm(CHIPM_ATTRIB, xy2pic(17, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ANIM, xy2pic(20, 23)) = 3
		chipm(CHIPM_ATTRIB, xy2pic(20, 23)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(1, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(10, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(15, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(16, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 19)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(14, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(15, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(16, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(17, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(7, 22)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(11, 20)) = CHIPM_ATTRIB_CANT_PASS
		chipm(CHIPM_ATTRIB, xy2pic(8, 21)) = CHIPM_ATTRIB_CANT_PASS
		repeat 61 - 45, 45
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SNOW
		loop
		repeat (495 - 462) * 2, 462
			chipm(CHIPM_WALL, cnt) = 1
			chipm(CHIPM_WALL, cnt - 66) = 1
		loop
		repeat 6, 23
			chipm(CHIPM_ROLE, cnt) = MAP_CHIP_ROLE_SAND
		loop
		repeat 33, 462
			chipm(CHIPM_WALL, cnt) = 2
			chipm(CHIPM_WALL, cnt - 66) = 2
		loop
		chipm(CHIPM_ROLE, xy2pic(29, 0)) = MAP_CHIP_ROLE_DRYROCK
		chipm(CHIPM_ROLE, xy2pic(30, 0)) = MAP_CHIP_ROLE_CROP
		chipm(CHIPM_ROLE, xy2pic(31, 0)) = MAP_CHIP_ROLE_CROP
		chipm(CHIPM_ROLE, xy2pic(20, 10)) = MAP_CHIP_ROLE_COMPOST
		chipm(CHIPM_ROLE, xy2pic(22, 10)) = MAP_CHIP_ROLE_GRATING
		chipm(CHIPM_ROLE, xy2pic(0, 11)) = MAP_CHIP_ROLE_PIANO1
		chipm(CHIPM_ROLE, xy2pic(1, 11)) = MAP_CHIP_ROLE_PIANO2B
		chipm(CHIPM_ROLE, xy2pic(2, 11)) = MAP_CHIP_ROLE_PIANO3
		chipm(CHIPM_ROLE, xy2pic(3, 11)) = MAP_CHIP_ROLE_PIANO4B
		chipm(CHIPM_ROLE, xy2pic(4, 11)) = MAP_CHIP_ROLE_PIANO5
		chipm(CHIPM_ROLE, xy2pic(5, 11)) = MAP_CHIP_ROLE_PIANO6
		chipm(CHIPM_ROLE, xy2pic(6, 11)) = MAP_CHIP_ROLE_PIANO7B
		chipm(CHIPM_ROLE, xy2pic(7, 11)) = MAP_CHIP_ROLE_PIANO8
		chipm(CHIPM_ROLE, xy2pic(8, 11)) = MAP_CHIP_ROLE_PIANO9B
		chipm(CHIPM_ROLE, xy2pic(9, 11)) = MAP_CHIP_ROLE_PIANO10
		chipm(CHIPM_ROLE, xy2pic(10, 11)) = MAP_CHIP_ROLE_PIANO11B
		chipm(CHIPM_ROLE, xy2pic(11, 11)) = MAP_CHIP_ROLE_PIANO12
		chipm(CHIPM_ROLE, xy2pic(12, 11)) = MAP_CHIP_ROLE_PIANO13
		chipm(CHIPM_ROLE, xy2pic(13, 11)) = MAP_CHIP_ROLE_PIANO14B
		chipm(CHIPM_ROLE, xy2pic(14, 11)) = MAP_CHIP_ROLE_PIANO15
		chipm(CHIPM_ROLE, xy2pic(15, 11)) = MAP_CHIP_ROLE_PIANO16B
		chipm(CHIPM_ROLE, xy2pic(16, 11)) = MAP_CHIP_ROLE_PIANO17
		chipm(CHIPM_ROLE, xy2pic(17, 11)) = MAP_CHIP_ROLE_PIANO18
		chipm(CHIPM_ROLE, xy2pic(18, 11)) = MAP_CHIP_ROLE_PIANO19B
		chipm(CHIPM_ROLE, xy2pic(19, 11)) = MAP_CHIP_ROLE_PIANO20
		chipm(CHIPM_ROLE, xy2pic(20, 11)) = MAP_CHIP_ROLE_PIANO21B
		chipm(CHIPM_ROLE, xy2pic(21, 11)) = MAP_CHIP_ROLE_PIANO22
		chipm(CHIPM_ROLE, xy2pic(22, 11)) = MAP_CHIP_ROLE_PIANO23B
		chipm(CHIPM_ROLE, xy2pic(23, 11)) = MAP_CHIP_ROLE_PIANO24
		chipm(CHIPM_ROLE, xy2pic(24, 11)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(19, 12)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(20, 12)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(19, 13)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(20, 13)) = MAP_CHIP_ROLE_DISPLAY_SPACE
		chipm(CHIPM_ROLE, xy2pic(2, 14)) = MAP_CHIP_ROLE_HARD_WALL
		chipm(CHIPM_ANIM, xy2pic(22, 16)) = 2
		chipm(CHIPM_WALL, xy2pic(22, 16)) = 1
		chipm(CHIPM_ROLE, xy2pic(19, 9)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(19, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(0, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(3, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(3, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(6, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE_SUB, xy2pic(6, 5)) = MAP_CHIP_ROLE_MOUNTAIN_WATER
		chipm(CHIPM_ANIM, xy2pic(6, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(9, 5)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(9, 5)) = 3
		chipm(CHIPM_ROLE, xy2pic(5, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(5, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(8, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(8, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(11, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(11, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(14, 9)) = MAP_CHIP_ROLE_SAND
		chipm(CHIPM_ANIM, xy2pic(14, 9)) = 3
		chipm(CHIPM_ROLE, xy2pic(17, 9)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(18, 9)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 17)) = 3
		chipm(CHIPM_ROLE, xy2pic(0, 18)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ANIM, xy2pic(0, 18)) = 3
		chipm(CHIPM_ROLE, xy2pic(17, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(18, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(19, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(20, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(21, 17)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(32, 20)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(32, 21)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ROLE, xy2pic(32, 22)) = MAP_CHIP_ROLE_WATER
		chipm(CHIPM_ATTRIB, xy2pic(23, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(24, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(25, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(26, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(27, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(28, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(29, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(30, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(31, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(32, 7)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(3, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(4, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(5, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(6, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(7, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(8, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(9, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(10, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(11, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(12, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(13, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(14, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(15, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(16, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(17, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(18, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(19, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(22, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(23, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(24, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(25, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(26, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(27, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(28, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(29, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(30, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(31, 8)) = CHIPM_ATTRIB_DEFAULT
		chipm(CHIPM_ATTRIB, xy2pic(32, 8)) = CHIPM_ATTRIB_DEFAULT
	}
	return

*chip_init
	dim cloud, 6, 12
	dim mefsubref, 6, 6
	mefsubref(MEFSUBREF_X, MAP_EFFECT_RIPPLE) = 144, 624
	mefsubref(MEFSUBREF_X, MAP_EFFECT_FOOT) = 272, 624, MAP_EFFECT_TYPE_FOOT
	mefsubref(MEFSUBREF_X, MAP_EFFECT_SNOW) = 304, 624, MAP_EFFECT_TYPE_FOOT
	mefsubref(MEFSUBREF_X, MAP_EFFECT_SPLASH) = 368, 624
	mefsubref(MEFSUBREF_X, MAP_EFFECT_SPLASH2) = 464, 624
	dim lightdata, 10, 21
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_LANTERN) = 3, 0, 80, 0, 6, 40
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_LAMP) = 3, 0, 100, 30, 8, 20
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_TORCH) = 1, 1, 50, 8, 8, 50, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_TORCH_LAMP) = 1, 1, 70, 28, 8, 70, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_TOWN_LIGHT) = 11, 0, 140, 48, 10, 20
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_PORT_LIGHT) = 0, 0, 140, 62, 10, 20
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_PORT_LIGHT_SNOW) = 11, 0, 100, 72, 10, 20
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_STOVE) = 5, 1, 170, 4, 2, 80, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_CRYSTAL) = 9, 1, 30, 8, 2, 80, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_SAKURA) = 14, 5, 300, 20, 2, 80, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_CRYSTAL_MIDDLE) = 9, 1, 30, 24, 2, 80, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_CRYSTAL_HIGH) = 9, 1, 30, 50, 5, 80, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_TOWN) = 8, 0, 120, 0, 15, 15
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_ITEM) = 7, 0, 35, 4, 1, 40, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_ITEM_MIDDLE) = 7, 0, 35, 24, 1, 40, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_GATE) = 12, 0, 20, 32, 2, 30, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_CANDLE) = 4, 0, 50, 48, 5, 70, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_CANDLE_LOW) = 4, 0, 50, 16, 5, 70, 1
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_WINDOW) = 12, 0, 100, 24, 3, 10
	lightdata(LIGHTDATA_PIC, LIGHT_TYPE_WINDOW_RED) = 13, 0, 70, 35, 3, 10
	sdim tname, 16, 38
	tname(MAP_CHIP_ROLE_DRYROCK) = lang("日干し岩", "a dryrock")
	tname(MAP_CHIP_ROLE_CROP) = lang("畑", "a field")
	tname(MAP_CHIP_ROLE_COMPOST) = lang("コンポスト", "a Compost")
	dim chipc, 6, 33 * 34 + 240
	dim chipi, 8, 33 * 38
	repeat 33 * 34
		chipc(CHIPC_X, cnt) = cnt \ 33 * inf_tiles, cnt / 33 * inf_tiles, inf_tiles, inf_tiles, 16
	loop
	repeat 33 * 38
		chipi(CHIPI_X, cnt) = cnt \ 33 * inf_tiles, cnt / 33 * inf_tiles, inf_tiles, inf_tiles, 0
		chipi(CHIPI_S, cnt) = 8
		chipi(CHIPI_SH, cnt) = 40
	loop
	repeat 240, 33 * 34
		chipc(CHIPC_X, cnt) = cnt \ 33 * inf_tiles, cnt / 33 * inf_tiles, inf_tiles, inf_tiles, 16
	loop
	chipi(CHIPI_F, xy2pic(24, 0)) = 16
	chipi(CHIPI_F, xy2pic(30, 0)) = 16
	chipi(CHIPI_F, xy2pic(6, 2)) = 22
	chipi(CHIPI_F, xy2pic(7, 2)) = 22
	chipi(CHIPI_F, xy2pic(8, 2)) = 22
	chipi(CHIPI_F, xy2pic(9, 2)) = 22
	chipi(CHIPI_F, xy2pic(10, 2)) = 22, 28
	chipi(CHIPI_F, xy2pic(12, 2)) = 22
	chipi(CHIPI_F, xy2pic(14, 2)) = 22
	chipi(CHIPI_F, xy2pic(19, 2)) = 8, 8, 150
	chipi(CHIPI_F, xy2pic(21, 2)) = 22
	chipi(CHIPI_F, xy2pic(22, 2)) = 22
	chipi(CHIPI_F, xy2pic(25, 2)) = 22
	chipi(CHIPI_F, xy2pic(29, 2)) = 22
	chipi(CHIPI_F, xy2pic(30, 2)) = 22, 18
	chipi(CHIPI_F, xy2pic(31, 2)) = 22
	chipi(CHIPI_F, xy2pic(0, 3)) = 22
	chipi(CHIPI_F, xy2pic(32, 2)) = 22
	chipi(CHIPI_F, xy2pic(1, 3)) = 22
	chipi(CHIPI_F, xy2pic(3, 3)) = 22
	chipi(CHIPI_F, xy2pic(4, 3)) = 22
	chipi(CHIPI_F, xy2pic(5, 3)) = 22
	chipi(CHIPI_F, xy2pic(8, 3)) = 22
	chipi(CHIPI_F, xy2pic(17, 3)) = 22
	chipi(CHIPI_F, xy2pic(18, 3)) = 22
	chipi(CHIPI_F, xy2pic(24, 3)) = 12
	chipi(CHIPI_F, xy2pic(26, 3)) = 12
	chipi(CHIPI_F, xy2pic(31, 3)) = 12
	chipi(CHIPI_F, xy2pic(0, 4)) = 22
	chipi(CHIPI_F, xy2pic(2, 4)) = 12
	chipi(CHIPI_F, xy2pic(4, 4)) = 12
	chipi(CHIPI_F, xy2pic(5, 4)) = 22
	chipi(CHIPI_F, xy2pic(6, 4)) = 22
	chipi(CHIPI_F, xy2pic(7, 4)) = 22
	chipi(CHIPI_F, xy2pic(10, 4)) = 22, 36
	chipi(CHIPI_F, xy2pic(11, 4)) = 22, 36
	chipi(CHIPI_F, xy2pic(13, 4)) = 22
	chipi(CHIPI_F, xy2pic(14, 4)) = 22
	chipi(CHIPI_F, xy2pic(15, 4)) = 22
	chipi(CHIPI_F, xy2pic(18, 4)) = 22, 8, 70
	chipi(CHIPI_F, xy2pic(19, 4)) = 22
	chipi(CHIPI_F, xy2pic(24, 4)) = 8, 20, 150
	chipi(CHIPI_F, xy2pic(26, 4)) = 8, 24, 150
	chipi(CHIPI_F, xy2pic(27, 4)) = 8, 24, 150
	chipi(CHIPI_F, xy2pic(28, 4)) = 22
	chipi(CHIPI_F, xy2pic(31, 4)) = 22, 16
	chipi(CHIPI_F, xy2pic(32, 4)) = 22
	chipi(CHIPI_F, xy2pic(19, 3)) = 22
	chipi(CHIPI_F, xy2pic(1, 5)) = 22
	chipi(CHIPI_F, xy2pic(32, 5)) = 22, 24
	chipi(CHIPI_F, xy2pic(1, 7)) = 22
	chipi(CHIPI_F, xy2pic(17, 7)) = 22
	chipi(CHIPI_F, xy2pic(3, 7)) = 22, 24
	chipi(CHIPI_F, xy2pic(4, 7)) = 22, 36
	chipi(CHIPI_F, xy2pic(5, 7)) = 22
	chipi(CHIPI_F, xy2pic(11, 7)) = 22, 8, 250
	chipi(CHIPI_F, xy2pic(28, 7)) = 8, 12
	chipi(CHIPI_F, xy2pic(29, 7)) = 22, 22
	chipi(CHIPI_F, xy2pic(31, 7)) = 22
	chipi(CHIPI_F, xy2pic(32, 7)) = 22
	chipi(CHIPI_F, xy2pic(0, 8)) = 22
	chipi(CHIPI_F, xy2pic(2, 8)) = 22, 24
	chipi(CHIPI_F, xy2pic(6, 8)) = 22
	chipi(CHIPI_F, xy2pic(8, 8)) = 22, 34
	chipi(CHIPI_F, xy2pic(9, 8)) = 22
	chipi(CHIPI_F, xy2pic(12, 8)) = 22
	chipi(CHIPI_F, xy2pic(13, 8)) = 8
	chipi(CHIPI_F, xy2pic(14, 8)) = 22
	chipi(CHIPI_F, xy2pic(15, 8)) = 22
	chipi(CHIPI_F, xy2pic(17, 8)) = 22, 40
	chipi(CHIPI_F, xy2pic(18, 8)) = 22
	chipi(CHIPI_F, xy2pic(21, 8)) = 22
	chipi(CHIPI_F, xy2pic(22, 8)) = 22
	chipi(CHIPI_F, xy2pic(24, 8)) = 22, 18
	chipi(CHIPI_F, xy2pic(27, 8)) = 22
	chipi(CHIPI_F, xy2pic(28, 8)) = 22, 32
	chipi(CHIPI_F, xy2pic(29, 8)) = 22
	chipi(CHIPI_F, xy2pic(31, 8)) = 22
	chipi(CHIPI_F, xy2pic(32, 8)) = 22
	chipi(CHIPI_F, xy2pic(2, 9)) = 22, 8, 250
	chipi(CHIPI_F, xy2pic(3, 9)) = 22
	chipi(CHIPI_F, xy2pic(23, 9)) = 22
	chipi(CHIPI_F, xy2pic(24, 9)) = 22
	chipi(CHIPI_F, xy2pic(28, 9)) = 22
	chipi(CHIPI_F, xy2pic(30, 9)) = 22
	chipi(CHIPI_F, xy2pic(1, 10)) = 22
	chipi(CHIPI_F, xy2pic(2, 10)) = 22
	chipi(CHIPI_F, xy2pic(18, 10)) = 22
	chipi(CHIPI_F, xy2pic(23, 10)) = 48
	chipi(CHIPI_S, xy2pic(24, 10)) = 8, 20
	chipi(CHIPI_F, xy2pic(30, 10)) = 0, 2, 1
	chipi(CHIPI_F, xy2pic(1, 11)) = 22, 8, 250
	chipi(CHIPI_F, xy2pic(4, 11)) = 22
	chipi(CHIPI_F, xy2pic(5, 11)) = 22
	chipi(CHIPI_F, xy2pic(7, 11)) = 8
	chipi(CHIPI_F, xy2pic(9, 11)) = 22
	chipi(CHIPI_F, xy2pic(10, 11)) = 22
	chipi(CHIPI_F, xy2pic(12, 11)) = 22
	chipi(CHIPI_F, xy2pic(13, 11)) = 22
	chipi(CHIPI_F, xy2pic(14, 11)) = 22
	chipi(CHIPI_F, xy2pic(32, 11)) = 22
	chipi(CHIPI_F, xy2pic(15, 11)) = 48
	chipi(CHIPI_F, xy2pic(16, 11)) = 48
	chipi(CHIPI_F, xy2pic(17, 11)) = 8
	chipi(CHIPI_F, xy2pic(18, 11)) = 22
	chipi(CHIPI_F, xy2pic(19, 11)) = 48
	chipi(CHIPI_F, xy2pic(21, 11)) = 22
	chipi(CHIPI_F, xy2pic(13, 13)) = 8, 24, 100
	chipi(CHIPI_F, xy2pic(12, 15)) = 22
	chipi(CHIPI_F, xy2pic(13, 15)) = 22
	chipi(CHIPI_F, xy2pic(11, 15)) = 22
	chipi(CHIPI_F, xy2pic(15, 15)) = 22
	chipi(CHIPI_F, xy2pic(16, 15)) = 22, 28
	chipi(CHIPI_F, xy2pic(17, 15)) = 22
	chipi(CHIPI_F, xy2pic(18, 15)) = 22
	chipi(CHIPI_F, xy2pic(13, 16)) = 22, 36
	chipi(CHIPI_F, xy2pic(15, 16)) = 22
	chipi(CHIPI_F, xy2pic(16, 16)) = 48
	chipi(CHIPI_F, xy2pic(17, 16)) = 0, 0, 0
	chipi(CHIPI_F, xy2pic(0, 19)) = 22
	chipi(CHIPI_F, xy2pic(10, 19)) = 22
	chipi(CHIPI_F, xy2pic(12, 19)) = 48
	chipi(CHIPI_F, xy2pic(13, 19)) = 22, 34
	chipi(CHIPI_F, xy2pic(14, 19)) = 22
	chipi(CHIPI_F, xy2pic(15, 19)) = 22
	chipi(CHIPI_F, xy2pic(16, 19)) = 22
	chipi(CHIPI_F, xy2pic(17, 19)) = 32
	chipi(CHIPI_F, xy2pic(19, 19)) = 22
	chipi(CHIPI_F, xy2pic(20, 19)) = 22
	chipi(CHIPI_F, xy2pic(21, 19)) = 22
	chipi(CHIPI_F, xy2pic(23, 19)) = 22
	chipi(CHIPI_F, xy2pic(24, 19)) = 48
	chipi(CHIPI_F, xy2pic(25, 19)) = 48
	chipi(CHIPI_F, xy2pic(26, 19)) = 32
	chipi(CHIPI_F, xy2pic(28, 19)) = 22
	chipi(CHIPI_F, xy2pic(32, 19)) = 22
	chipi(CHIPI_F, xy2pic(2, 20)) = 22
	chipi(CHIPI_SH, xy2pic(4, 20)) = 0
	chipi(CHIPI_SH, xy2pic(5, 20)) = 0
	chipi(CHIPI_SH, xy2pic(7, 20)) = 0
	chipi(CHIPI_F, xy2pic(8, 20)) = 8
	chipi(CHIPI_F, xy2pic(9, 20)) = 8
	chipi(CHIPI_F, xy2pic(12, 20)) = 38
	chipi(CHIPI_F, xy2pic(14, 20)) = 22, 24
	chipi(CHIPI_F, xy2pic(15, 20)) = 16
	chipi(CHIPI_F, xy2pic(16, 20)) = 40
	chipi(CHIPI_F, xy2pic(17, 20)) = 16, 8, 50
	chipi(CHIPI_SH, xy2pic(19, 20)) = 1
	chipi(CHIPI_F, xy2pic(8, 35)) = 22, 28
	chipi(CHIPI_SH, xy2pic(0, 25)) = -1
	chipi(CHIPI_SH, xy2pic(1, 25)) = -1
	chipi(CHIPI_SH, xy2pic(2, 25)) = -1
	chipi(CHIPI_SH, xy2pic(3, 25)) = -1
	chipi(CHIPI_SH, xy2pic(6, 25)) = -1
	chipi(CHIPI_SH, xy2pic(7, 25)) = -1
	chipi(CHIPI_SH, xy2pic(8, 25)) = -1
	chipi(CHIPI_SH, xy2pic(9, 25)) = -1
	chipi(CHIPI_SH, xy2pic(12, 25)) = -1
	chipi(CHIPI_SH, xy2pic(13, 25)) = -1
	chipi(CHIPI_SH, xy2pic(15, 25)) = -1
	chipi(CHIPI_SH, xy2pic(18, 25)) = -1
	chipi(CHIPI_SH, xy2pic(19, 25)) = -1
	chipi(CHIPI_SH, xy2pic(20, 25)) = -1
	chipi(CHIPI_SH, xy2pic(21, 25)) = -1
	chipi(CHIPI_SH, xy2pic(24, 25)) = -1
	chipi(CHIPI_SH, xy2pic(25, 25)) = -1
	chipi(CHIPI_SH, xy2pic(26, 25)) = -1
	chipi(CHIPI_SH, xy2pic(27, 25)) = -1
	chipi(CHIPI_SH, xy2pic(30, 25)) = -1
	chipi(CHIPI_SH, xy2pic(31, 25)) = -1
	chipi(CHIPI_SH, xy2pic(32, 25)) = -1
	chipi(CHIPI_SH, xy2pic(0, 26)) = -1
	chipi(CHIPI_SH, xy2pic(13, 26)) = -1
	chipi(CHIPI_SH, xy2pic(21, 9)) = -1
	chipi(CHIPI_SH, xy2pic(20, 9)) = -1
	chipi(CHIPI_SH, xy2pic(19, 9)) = -1
	chipi(CHIPI_SH, xy2pic(18, 9)) = -1
	chipi(CHIPI_SH, xy2pic(17, 9)) = -1
	chipi(CHIPI_SH, xy2pic(16, 9)) = -1
	chipi(CHIPI_SH, xy2pic(15, 9)) = -1
	chipi(CHIPI_SH, xy2pic(14, 9)) = -1
	chipi(CHIPI_SH, xy2pic(13, 9)) = -1
	chipi(CHIPI_SH, xy2pic(12, 9)) = -1
	chipi(CHIPI_SH, xy2pic(18, 35)) = -1
	chipi(CHIPI_SH, xy2pic(19, 35)) = -1
	chipi(CHIPI_SH, xy2pic(31, 35)) = -1
	chipi(CHIPI_HEIGHT, xy2pic(1, 15)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(28, 15)) = inf_tiles * 2, inf_tiles + 16, 40, 6
	chipi(CHIPI_HEIGHT, xy2pic(29, 15)) = inf_tiles * 2, inf_tiles + 16, 65
	chipi(CHIPI_HEIGHT, xy2pic(30, 15)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(31, 15)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(32, 15)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(3, 16)) = inf_tiles * 2, inf_tiles + 16, 40
	chipi(CHIPI_HEIGHT, xy2pic(2, 17)) = inf_tiles * 2, inf_tiles + 15
	chipi(CHIPI_HEIGHT, xy2pic(4, 17)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(5, 17)) = inf_tiles * 2, inf_tiles + 12
	chipi(CHIPI_HEIGHT, xy2pic(6, 17)) = inf_tiles * 2, inf_tiles + 12
	chipi(CHIPI_HEIGHT, xy2pic(7, 17)) = inf_tiles * 2, inf_tiles + 12
	chipi(CHIPI_HEIGHT, xy2pic(8, 17)) = inf_tiles * 2, inf_tiles + 12, 70, 6
	chipi(CHIPI_HEIGHT, xy2pic(9, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(10, 17)) = inf_tiles * 2, inf_tiles + 20, 64
	chipi(CHIPI_HEIGHT, xy2pic(11, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(12, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(13, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(14, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(15, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(16, 17)) = inf_tiles * 2, inf_tiles + 20, 48, 6
	chipi(CHIPI_HEIGHT, xy2pic(17, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(18, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(19, 17)) = inf_tiles * 2, inf_tiles + 20, 40, 6
	chipi(CHIPI_HEIGHT, xy2pic(20, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(21, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(22, 17)) = inf_tiles * 2, inf_tiles + 20, 44, 6
	chipi(CHIPI_HEIGHT, xy2pic(23, 17)) = inf_tiles * 2, inf_tiles + 20, 40, 6
	chipi(CHIPI_HEIGHT, xy2pic(24, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(25, 17)) = inf_tiles * 2, inf_tiles + 20, 44, 6
	chipi(CHIPI_HEIGHT, xy2pic(26, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(27, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(28, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(29, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(30, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(31, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(32, 17)) = inf_tiles * 2, inf_tiles + 20
	chipi(CHIPI_HEIGHT, xy2pic(1, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(20, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(21, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(22, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(23, 20)) = inf_tiles * 2, inf_tiles + 22, 50
	chipi(CHIPI_HEIGHT, xy2pic(25, 20)) = inf_tiles * 2, inf_tiles + 52, 50, 18
	chipi(CHIPI_HEIGHT, xy2pic(24, 20)) = inf_tiles * 2, inf_tiles + 52, 50, 18
	chipi(CHIPI_HEIGHT, xy2pic(26, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(27, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(28, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(29, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(30, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(31, 20)) = inf_tiles * 2, inf_tiles + 16, 48
	chipi(CHIPI_HEIGHT, xy2pic(32, 20)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(5, 22)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(6, 22)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(20, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(21, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(22, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(23, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(24, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(25, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(26, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(27, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(28, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(29, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(30, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(31, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(32, 27)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(8, 28)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(17, 34)) = inf_tiles * 2, inf_tiles + 16
	chipi(CHIPI_HEIGHT, xy2pic(30, 33)) = inf_tiles * 2, inf_tiles + 16, 40
	chipi(CHIPI_HEIGHT, xy2pic(18, 36)) = inf_tiles * 2, inf_tiles + 16, 40
	chipi(CHIPI_ANIM, xy2pic(4, 0)) = 2
	chipi(CHIPI_ANIM, xy2pic(19, 0)) = 2
	chipi(CHIPI_ANIM, xy2pic(24, 0)) = 3
	chipi(CHIPI_ANIM, xy2pic(27, 0)) = 3
	chipi(CHIPI_ANIM, xy2pic(30, 0)) = 2
	chipi(CHIPI_ANIM, xy2pic(19, 10)) = 3
	chipi(CHIPI_ANIM, xy2pic(25, 10)) = 3
	chipi(CHIPI_ANIM, xy2pic(6, 29)) = 2
	chipc(CHIPC_F, xy2pic(11, 5)) = 8
	chipc(CHIPC_F, xy2pic(27, 6)) = 29
	chipc(CHIPC_F, xy2pic(32, 6)) = 12
	chipc(CHIPC_F, xy2pic(25, 7)) = 16
	chipc(CHIPC_F, xy2pic(13, 8)) = 29
	chipc(CHIPC_HEIGHT, xy2pic(3, 6)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 6)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(0, 7)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(1, 7)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(2, 7)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(0, 9)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(4, 7)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(16, 8)) = inf_tiles * 2, inf_tiles + 32
	chipc(CHIPC_HEIGHT, xy2pic(8, 10)) = inf_tiles * 2, inf_tiles + 32
	chipc(CHIPC_HEIGHT, xy2pic(9, 10)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(11, 10)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(12, 10)) = inf_tiles * 2, inf_tiles + 12
	chipc(CHIPC_HEIGHT, xy2pic(13, 10)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(19, 10)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(21, 10)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(26, 11)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(28, 11)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 11)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(2, 12)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(6, 12)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(8, 12)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(9, 12)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(12, 12)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(17, 12)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(0, 13)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(1, 13)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(3, 13)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(4, 13)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(7, 13)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(10, 13)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(13, 13)) = inf_tiles * 2, inf_tiles + 8
	chipc(CHIPC_HEIGHT, xy2pic(18, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(20, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(21, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(22, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(23, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(24, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(25, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(26, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(27, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(28, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(29, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(31, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(32, 13)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(0, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(1, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(2, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(3, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(7, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(26, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(27, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(28, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(29, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(31, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(32, 15)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(15, 16)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(17, 16)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(0, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(1, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(4, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(10, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(16, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(18, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(22, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(28, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(29, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(31, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(32, 17)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(1, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(2, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(3, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(11, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(12, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(13, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(14, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(15, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(16, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(17, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(18, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(19, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(20, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(21, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(22, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(23, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(24, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(25, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(26, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(27, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(28, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(29, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(31, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(32, 19)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(16, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(17, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(18, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(19, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(20, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(21, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(22, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(23, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(24, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(25, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(26, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(27, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(28, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(29, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(31, 21)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(15, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(16, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(17, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(18, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(20, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(22, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(29, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 26)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(0, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(1, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(2, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(3, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(4, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(5, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(6, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(7, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(8, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(9, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(10, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(11, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(12, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(14, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(18, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(19, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(20, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(21, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(23, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(25, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(26, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(29, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(30, 28)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(0, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(7, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(8, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(13, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(14, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(17, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(18, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(19, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(20, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(21, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(22, 31)) = inf_tiles * 2, inf_tiles + 16
	chipc(CHIPC_HEIGHT, xy2pic(23, 31)) = inf_tiles * 2, inf_tiles + 16
	dim deco, 3, 300
	repeat 16
		deco(0, 1 + cnt * 16) = 0, 1
		deco(0, 2 + cnt * 16) = 1, 2
		deco(0, 4 + cnt * 16) = 1, 0
		deco(0, 6 + cnt * 16) = -1, 21
		deco(0, 7 + cnt * 16) = -1, 30
		deco(0, 8 + cnt * 16) = 2, 1
		deco(0, 9 + cnt * 16) = -1, 20
		deco(0, 10 + cnt * 16) = 2, 2
		deco(0, 11 + cnt * 16) = -1, 33
		deco(0, 12 + cnt * 16) = 2, 0
		deco(0, 13 + cnt * 16) = -1, 32
		deco(0, 14 + cnt * 16) = -1, 31
		deco(0, 15 + cnt * 16) = 3, 1
		deco(0, 16 + cnt * 16) = -1, -1
		deco(0, 19 + cnt * 16) = 0, 2
	loop
	deco(2, 49) = 2
	deco(2, 52) = 2
	deco(2, 53) = 2
	deco(2, 97) = 2
	deco(2, 113) = 2
	deco(2, 117) = 2
	deco(2, 164) = 2
	deco(2, 180) = 2
	deco(2, 181) = 2
	deco(2, 145) = 4
	deco(2, 162) = 4
	deco(2, 194) = 4
	deco(2, 195) = 4
	deco(2, 209) = 4
	deco(2, 226) = 4
	deco(2, 243) = 4
	deco(2, 84) = 3
	deco(2, 104) = 3
	deco(2, 196) = 3
	deco(2, 200) = 3
	deco(2, 204) = 3
	deco(2, 212) = 3
	deco(2, 220) = 3
	deco(2, 232) = 3
	deco(2, 236) = 3
	deco(2, 24) = 1
	deco(2, 50) = 1
	deco(2, 56) = 1
	deco(2, 58) = 1
	deco(2, 82) = 1
	deco(2, 114) = 1
	deco(2, 122) = 1
	deco(2, 152) = 1
	deco(2, 184) = 1
	deco(2, 186) = 1
	deco(2, 178) = 8
	deco(2, 241) = 10
	deco(2, 242) = 8
	deco(2, 244) = 7
	deco(0, 16) = -1, 1
	deco(0, 32) = -1, 2
	deco(0, 64) = -1, 3
	deco(0, 128) = -1, 4
	deco(0, 48) = -1, 5
	deco(0, 192) = -1, 6
	deco(0, 96) = -1, 7
	deco(0, 144) = -1, 8
	deco(0, 80) = -1, 9
	deco(0, 160) = -1, 10
	deco(0, 91) = 0, 1
	deco(0, 93) = 0, 1
	deco(0, 21) = 0, 0
	deco(0, 85) = 0, 0
	deco(0, 213) = 0, 0
	deco(0, 149) = 0, 0
	gosub *mapchip_init
	return
	goto *label_0535








