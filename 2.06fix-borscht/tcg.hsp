#defcfunc cdbit int cdbit_bit, int cdbit_charid
	HMMBITCHECK locvar_cdbit_card(30 + cdbit_bit / 32, cdbit_charid), cdbit_bit \ 32
	return stat

#deffunc cdbitmod int cdbitmod_bit, int cdbitmod_charid, int cdbitmod_seton
	if ( cdbitmod_seton == 0 ) {
		HMMBITOFF locvar_cdbit_card(30 + cdbitmod_bit / 32, cdbitmod_charid), cdbitmod_bit \ 32
		return
	}
	HMMBITON locvar_cdbit_card(30 + cdbitmod_bit / 32, cdbitmod_charid), cdbitmod_bit \ 32
	return
	return

#deffunc cpflip
	if ( locvar_cpflip_cp == 1 ) {
		locvar_cpflip_cp = 0
		locvar_cpflip_tp = 1
		locvar_cpflip_cl = 1
		locvar_cpflip_tl = 3
		locvar_cpflip_ch = 0
		locvar_cpflip_th = 3
	}
	else {
		locvar_cpflip_cp = 1
		locvar_cpflip_tp = 0
		locvar_cpflip_cl = 2
		locvar_cpflip_tl = 1
		locvar_cpflip_ch = 3
		locvar_cpflip_th = 0
	}
	return

#deffunc cpisplayer
	if ( locvar_cpisplayer_player == 0 ) {
		locvar_cpflip_cp = 0
		locvar_cpflip_tp = 1
		locvar_cpflip_cl = 1
		locvar_cpflip_tl = 3
		locvar_cpflip_ch = 0
		locvar_cpflip_th = 3
	}
	else {
		locvar_cpflip_cp = 1
		locvar_cpflip_tp = 0
		locvar_cpflip_cl = 2
		locvar_cpflip_tl = 1
		locvar_cpflip_ch = 3
		locvar_cpflip_th = 0
	}
	return

#deffunc cpisme
	if ( locvar_cpisme_ct == 0 ) {
		locvar_cpflip_cp = 0
		locvar_cpflip_tp = 1
		locvar_cpflip_cl = 1
		locvar_cpflip_tl = 3
		locvar_cpflip_ch = 0
		locvar_cpflip_th = 3
	}
	else {
		locvar_cpflip_cp = 1
		locvar_cpflip_tp = 0
		locvar_cpflip_cl = 2
		locvar_cpflip_tl = 1
		locvar_cpflip_ch = 3
		locvar_cpflip_th = 0
	}
	return

#deffunc cpisenemy
	if ( locvar_cpisme_ct == 0 ) {
		locvar_cpflip_cp = 1
		locvar_cpflip_tp = 0
		locvar_cpflip_cl = 2
		locvar_cpflip_tl = 1
		locvar_cpflip_ch = 3
		locvar_cpflip_th = 0
	}
	else {
		locvar_cpflip_cp = 0
		locvar_cpflip_tp = 1
		locvar_cpflip_cl = 1
		locvar_cpflip_tl = 3
		locvar_cpflip_ch = 0
		locvar_cpflip_th = 3
	}
	return

#defcfunc cnvrare int cnvrare_arg1
	locvar_cnvrare_s = ""
	repeat limit(5 - cnvrare_arg1 / 20, 1, 5)
		locvar_cnvrare_s += "*"
	loop
	return locvar_cnvrare_s

#deffunc card_ref int card_ref_arg1
	cardrefcost = 0
	cardrefhp = 0
	cardrefattack = 0
	cardrefdomain = 0
	cardrefrare = 100
	dbid = card_ref_arg1
	gosub *db_card
	if ( cardreftype == 0 ) {
		cardreftype = 10
		cardrefdomain = 7
	}
	rtvaln = cardrefn
	if ( cardreftype == 10 ) {
		cardrefbg = cardrefdomain
		rtvaln += lang("  No.", "  No.") + cardrefrace
	}
	if ( cardreftype == 30 ) {
		cardrefbg = 6
		rtvaln += lang(" <土地>", " <Land>")
	}
	if ( cardreftype == 20 ) {
		cardrefbg = 5
		rtvaln += lang(" <スペル>", " <Spell>")
	}
	rtvaln += lang("  ランク:", "  Rank:") + cardrefcost
	rtvaln += lang("  レア度:", "  Rare:") + cnvrare(cardrefrare)
	locvar_cnvrare_s = ""
	locvar_cnvrare_s += lang("情報:", "data:") + cardrefskill
	if ( gdata(GDATA_QUICK_USE) == 1 ) {
		talk_conv locvar_cnvrare_s, 95
	}
	else {
		talk_conv locvar_cnvrare_s, 100
	}
	rtvaln += "\n" + locvar_cnvrare_s
	return dbid

#deffunc dbghit

*dbghit_WHILE1
	if ( 1 == 0 ) {
		goto *dbghit_WEND1
	}
	await
	stick locvar_dbghit_a
	if ( locvar_dbghit_a ) {
		return
	}
	goto *dbghit_WHILE1

*dbghit_WEND1

#deffunc makecardlist
	dim locvar_makecardlist_clist, 10, 7
	dim locvar_makecardlist_clistmax, 7
	repeat 2
		locvar_makecardlist_cnt2 = cnt
		locvar_makecardlist_lmax = 0
		if ( cnt == 0 ) {
			locvar_makecardlist_p = 0
		}
		else {
			locvar_makecardlist_p = 3
		}
		repeat locvar_makecardlist_maxcard
			if ( locvar_cdbit_card(1, cnt) != locvar_makecardlist_cnt2 ) {
				continue
			}
			if ( locvar_cdbit_card(0, cnt) != 2 ) {
				continue
			}
			locvar_makecardlist_clist(locvar_makecardlist_lmax, locvar_makecardlist_p) = cnt
			locvar_makecardlist_lmax++
		loop
		locvar_makecardlist_clist(locvar_makecardlist_lmax, locvar_makecardlist_p) = -1
		locvar_makecardlist_clistmax(locvar_makecardlist_p) = locvar_makecardlist_lmax
		locvar_makecardlist_lmax = 0
		if ( cnt == 0 ) {
			locvar_makecardlist_p = 1
		}
		else {
			locvar_makecardlist_p = 2
		}
		repeat locvar_makecardlist_maxcard
			if ( locvar_cdbit_card(1, cnt) != locvar_makecardlist_cnt2 ) {
				continue
			}
			if ( locvar_cdbit_card(0, cnt) != 1 ) {
				continue
			}
			locvar_makecardlist_clist(locvar_makecardlist_lmax, locvar_makecardlist_p) = cnt
			locvar_makecardlist_lmax++
		loop
		locvar_makecardlist_clist(locvar_makecardlist_lmax, locvar_makecardlist_p) = -1
		locvar_makecardlist_clistmax(locvar_makecardlist_p) = locvar_makecardlist_lmax
	loop
	repeat 7
		locvar_makecardlist_p = cnt
		repeat
			locvar_makecardlist_f = 0
			repeat locvar_makecardlist_clistmax(locvar_makecardlist_p)
				locvar_makecardlist_c1 = locvar_makecardlist_clist(cnt, locvar_makecardlist_p)
				locvar_makecardlist_c2 = locvar_makecardlist_clist(cnt + 1, locvar_makecardlist_p)
				if ( locvar_makecardlist_c2 == (-1) ) {
					continue
				}
				if ( locvar_cdbit_card(4, locvar_makecardlist_c2) < locvar_cdbit_card(4, locvar_makecardlist_c1) ) {
					locvar_makecardlist_i = locvar_makecardlist_clist(cnt, locvar_makecardlist_p)
					locvar_makecardlist_clist(cnt, locvar_makecardlist_p) = locvar_makecardlist_clist(cnt + 1, locvar_makecardlist_p)
					locvar_makecardlist_clist(cnt + 1, locvar_makecardlist_p) = locvar_makecardlist_i
					locvar_makecardlist_f = 1
					break
				}
			loop
			if ( locvar_makecardlist_f == 0 ) {
				break
			}
		loop
	loop
	gosub *ai_evaluate
	return

#deffunc cardhelp str cardhelp_arg1, int cardhelp_arg2
	if ( locvar_cardhelp_helpdur > 1 ) {
		if ( cardhelp_arg2 == 0 ) {
			locvar_cardhelp_helpdur--
			return
		}
	}
	if ( cardhelp_arg2 == 0 ) {
		locvar_cardhelp_dur = 1
	}
	else {
		locvar_cardhelp_dur = cardhelp_arg2
	}
	locvar_cardhelp_helpmsg = cardhelp_arg1
	locvar_cardhelp_helpdur = locvar_cardhelp_dur
	return

#deffunc tcgdrawcard int tcgdrawcard_arg1, int tcgdrawcard_arg2
	locvar_tcgdrawcard_selected = 0
	if ( tcgdrawcard_arg2 == 0 ) {
		if ( locvar_tcgdrawcard_cursor ) {
			if ( locvar_tcgdrawcard_cs != (-1) ) {
				if ( locvar_makecardlist_clist(locvar_tcgdrawcard_cs, locvar_tcgdrawcard_csline) == tcgdrawcard_arg1 ) {
					locvar_tcgdrawcard_selected = 1
				}
			}
		}
	}
	else {
		if ( tcgdrawcard_arg1 == locvar_tcgdrawcard_dlist(0, locvar_tcgdrawcard_dsc) ) {
			locvar_tcgdrawcard_selected = 1
		}
	}
	if ( locvar_tcgdrawcard_selected ) {
		gmode 2
		pos locvar_cdbit_card(2, tcgdrawcard_arg1) - 5, locvar_cdbit_card(3, tcgdrawcard_arg1) - 5
		gcopy BUFFER_PIC, 168, 144, 82, 106
		if ( debug | cdbit(1, tcgdrawcard_arg1) == 1 | locvar_cdbit_card(1, tcgdrawcard_arg1) == 0 ) {
			cardhelp locvar_tcgdrawcard_carddetailn(tcgdrawcard_arg1)
		}
		else {
			cardhelp ""
		}
	}
	repeat 1 + (locvar_tcgdrawcard_selected == 1)
		locvar_tcgdrawcard_x = locvar_cdbit_card(2, tcgdrawcard_arg1)
		locvar_tcgdrawcard_y = locvar_cdbit_card(3, tcgdrawcard_arg1)
		if ( cnt == 1 ) {
			if ( locvar_cdbit_card(6, tcgdrawcard_arg1) != 0 ) {
				break
			}
			locvar_tcgdrawcard_x = locvar_tcgdrawcard_basex + 20
			locvar_tcgdrawcard_y = locvar_tcgdrawcard_basey + 490
			gmode 6, , , 140
			pos locvar_tcgdrawcard_x - 6, locvar_tcgdrawcard_y - 6
			gcopy BUFFER_PIC, 168, 144, 82, 106
		}
		gmode 2
		if ( locvar_cdbit_card(6, tcgdrawcard_arg1) == 2 ) {
			gmode 4, , , locvar_cdbit_card(7, tcgdrawcard_arg1) * 15
		}
		pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
		if ( cdbit(1, tcgdrawcard_arg1) == 1 | (locvar_cdbit_card(1, tcgdrawcard_arg1) == 0 & cnt == 1) ) {
			if ( locvar_cdbit_card(17, tcgdrawcard_arg1) > 0 ) {
				gcopy BUFFER_PIC, 72 + locvar_cdbit_card(19, tcgdrawcard_arg1) * 72, 0, 72, 96
				if ( locvar_cdbit_card(18, tcgdrawcard_arg1) != 343 ) {
					locvar_makecardlist_p = locvar_cdbit_card(17, tcgdrawcard_arg1) \ 1000 + locvar_cdbit_card(24, tcgdrawcard_arg1) * 1000
					chara_preparepic locvar_makecardlist_p, (locvar_cdbit_card(17, tcgdrawcard_arg1) - locvar_cdbit_card(24, tcgdrawcard_arg1) * 1000) / 1000
				}
				else {
					locvar_makecardlist_p = 1
					chara_preparepic locvar_makecardlist_p, 0
				}
				color 0, 0, 0
				pos locvar_tcgdrawcard_x + 13, locvar_tcgdrawcard_y + 32 - chipc(CHIPC_F, locvar_makecardlist_p) + chipc(CHIPC_HEIGHT, locvar_makecardlist_p) / 6
				gcopy BUFFER_CHR, 0, 960, chipc(CHIPC_WIDTH, locvar_makecardlist_p), chipc(CHIPC_HEIGHT, locvar_makecardlist_p)
			}
			else {
				locvar_makecardlist_p = abs(locvar_cdbit_card(17, tcgdrawcard_arg1))
				pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
				gcopy BUFFER_MAP, locvar_makecardlist_p \ 22 * 72, locvar_makecardlist_p / 22 * 96, 72, 96
			}
			color 255, 255, 255
			if ( locvar_cdbit_card(9, tcgdrawcard_arg1) == 10 ) {
			}
		}
		else {
			gcopy BUFFER_PIC, 0, 0, 72, 96
		}
		if ( cnt == 0 ) {
			if ( locvar_cdbit_card(0, tcgdrawcard_arg1) == 1 ) {
				if ( cdbit(1, tcgdrawcard_arg1) ) {
					if ( locvar_cdbit_card(9, tcgdrawcard_arg1) == 10 ) {
						if ( locvar_cdbit_card(14, tcgdrawcard_arg1) == (-1) ) {
							pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y + 18
							gcopy BUFFER_PIC, 288, 120, 24, 24
						}
						if ( locvar_cdbit_card(14, tcgdrawcard_arg1) == (-2) ) {
							pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y + 18
							gcopy BUFFER_PIC, 312, 120, 24, 24
						}
						if ( locvar_cdbit_card(14, tcgdrawcard_arg1) == (-3) ) {
							pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y + 18
							gcopy BUFFER_PIC, 264, 120, 24, 24
						}
						if ( locvar_cdbit_card(14, tcgdrawcard_arg1) == (-4) ) {
							pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y + 18
							gcopy BUFFER_PIC, 240, 120, 24, 24
						}
					}
				}
			}
		}
	loop
	return

#deffunc tcgdraw
	if ( debug ) {
		title " L:" + looplev + " S:" + sublev
	}

*tcgdraw_WHILE1
	if ( 1 == 0 ) {
		goto *tcgdraw_WEND1
	}
	locvar_tcgdraw_t++
	redraw 0
	gosub *tcg_drawInterface
	locvar_tcgdraw_anime = 0
	font lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0
	color 255, 255, 255
	gmode 2
	repeat 2
		locvar_tcgdrawcard_x = locvar_tcgdraw_holderix(cnt) - locvar_tcgdraw_holderspace
		locvar_tcgdrawcard_y = locvar_tcgdraw_holderiy(cnt)
		pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
		gcopy BUFFER_PIC, 96, 144, 72, 96
		pos locvar_tcgdrawcard_x + 14, locvar_tcgdrawcard_y + 75
		mes "" + locvar_tcgdraw_cpdata(7, cnt) + "/" + locvar_tcgdraw_cpdata(8, cnt)
	loop
	font lang(cfg_font1, cfg_font2), 13 + en - en * 2, 0
	repeat locvar_makecardlist_maxcard
		locvar_tcgdraw_c = locvar_makecardlist_maxcard - cnt - 1
		if ( locvar_tcgdraw_cc != 0 ) {
			if ( locvar_tcgdraw_c == 0 ) {
				locvar_tcgdraw_c = locvar_tcgdraw_cc
			}
			else {
				if ( locvar_tcgdraw_c == locvar_tcgdraw_cc ) {
					locvar_tcgdraw_c = 0
				}
			}
		}
		if ( locvar_cdbit_card(0, locvar_tcgdraw_c) <= 0 ) {
			if ( locvar_cdbit_card(7, locvar_tcgdraw_c) == 0 ) {
				continue
			}
		}
		if ( locvar_cdbit_card(0, locvar_tcgdraw_c) == 4 ) {
			continue
		}
		if ( locvar_cdbit_card(2, locvar_tcgdraw_c) != locvar_cdbit_card(4, locvar_tcgdraw_c) | locvar_cdbit_card(3, locvar_tcgdraw_c) != locvar_cdbit_card(5, locvar_tcgdraw_c) | locvar_cdbit_card(7, locvar_tcgdraw_c) > 0 ) {
			locvar_tcgdraw_anime = 1
			locvar_makecardlist_p = 0
			if ( locvar_cdbit_card(2, locvar_tcgdraw_c) != locvar_cdbit_card(4, locvar_tcgdraw_c) ) {
				locvar_makecardlist_p = (locvar_cdbit_card(4, locvar_tcgdraw_c) - locvar_cdbit_card(2, locvar_tcgdraw_c)) / 6
				if ( locvar_cdbit_card(2, locvar_tcgdraw_c) > locvar_cdbit_card(4, locvar_tcgdraw_c) ) {
					locvar_makecardlist_p--
				}
				else {
					locvar_makecardlist_p++
				}
			}
			locvar_cdbit_card(2, locvar_tcgdraw_c) += locvar_makecardlist_p
			locvar_makecardlist_p = 0
			if ( locvar_cdbit_card(3, locvar_tcgdraw_c) != locvar_cdbit_card(5, locvar_tcgdraw_c) ) {
				locvar_makecardlist_p = (locvar_cdbit_card(5, locvar_tcgdraw_c) - locvar_cdbit_card(3, locvar_tcgdraw_c)) / 6
				if ( locvar_cdbit_card(3, locvar_tcgdraw_c) > locvar_cdbit_card(5, locvar_tcgdraw_c) ) {
					locvar_makecardlist_p--
				}
				else {
					locvar_makecardlist_p++
				}
			}
			locvar_cdbit_card(3, locvar_tcgdraw_c) += locvar_makecardlist_p
			if ( locvar_cdbit_card(7, locvar_tcgdraw_c) > 0 ) {
				locvar_cdbit_card(7, locvar_tcgdraw_c)--
			}
		}
		tcgdrawcard locvar_tcgdraw_c
	loop
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	color 255, 255, 255
	gmode 2
	if ( locvar_tcgdrawcard_cursor ) {
		if ( locvar_tcgdrawcard_cs == (-1) ) {
			if ( locvar_tcgdraw_phase == 2 ) {
				if ( locvar_tcgdraw_selectmode == 0 ) {
					cardhelp lang("メインフェイズを終了する。", "End your main phase.")
				}
				else {
					cardhelp lang("ブロックしない。", "No blocker.")
				}
			}
			pos locvar_tcgdraw_holderix - locvar_tcgdraw_holderspace - 5, locvar_tcgdraw_holderiy - 5
			gcopy BUFFER_PIC, 168, 144, 82, 106
		}
	}
	if ( locvar_tcgdraw_chaintime > 0 ) {
		if ( locvar_tcgdraw_chaintime == cfg_chaintime ) {
			dim locvar_tcgdraw_star, 2, 10
			repeat 10
				locvar_tcgdraw_star(0, cnt) = rnd(72) - 32, rnd(40) - 32
			loop
		}
		if ( locvar_tcgdraw_chaintime > 5 ) {
			gmode 5, , , limit(locvar_tcgdraw_chaintime * 3 - 40, 0, 255)
			color 0, 0, 0
			locvar_makecardlist_cnt2 = cnt
			repeat 10
				pos locvar_tcgdraw_chainx + locvar_tcgdraw_star(0, cnt), locvar_tcgdraw_chainy + locvar_tcgdraw_star(1, cnt)
				gcopy BUFFER_PIC, 64 * limit(17 - locvar_tcgdraw_chaintime / 3, 0, 8), 416, 64, 64
				locvar_tcgdraw_star(1, cnt) += 2
			loop
		}
		repeat 3
			locvar_makecardlist_p = (locvar_tcgdraw_t / 4 + cnt) \ 7
			color locvar_makecardlist_p * 20, 25 + locvar_makecardlist_p * 20, 60 + locvar_makecardlist_p * 20
			boxl locvar_tcgdraw_chainx - locvar_makecardlist_p, locvar_tcgdraw_chainy - locvar_makecardlist_p, locvar_tcgdraw_chainx + 72 + locvar_makecardlist_p, locvar_tcgdraw_chainy + 96 + locvar_makecardlist_p
		loop
	}
	repeat locvar_tcgdraw_efllistmax
		if ( locvar_tcgdraw_efllist(4, cnt) <= 0 ) {
			continue
		}
		locvar_tcgdraw_efllist(4, cnt)--
		if ( locvar_tcgdraw_efllist(0, cnt) == 1 ) {
			font lang(cfg_font1, cfg_font2), 20 - en * 2, 1
			color 0, 0, 0
			pos locvar_tcgdraw_efllist(5, cnt) + 11, locvar_tcgdraw_efllist(6, cnt) + locvar_tcgdraw_efllist(4, cnt) / 3 + 21
			mes abs(locvar_tcgdraw_efllist(1, cnt))
			color 255, 100, 100
			pos locvar_tcgdraw_efllist(5, cnt) + 10, locvar_tcgdraw_efllist(6, cnt) + locvar_tcgdraw_efllist(4, cnt) / 3 + 20
			mes abs(locvar_tcgdraw_efllist(1, cnt))
			font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
			gmode 5, , , (locvar_tcgdraw_efllist(4, cnt) - 30) * 8
			color 0, 0, 0
			pos locvar_tcgdraw_efllist(5, cnt) - 12, locvar_tcgdraw_efllist(6, cnt) + 10
			gcopy BUFFER_PIC, 64 * limit(10 - (locvar_tcgdraw_efllist(4, cnt) - 30) / 3, 0, 8), 360, 48, 64
		}
		if ( locvar_tcgdraw_efllist(0, cnt) == 2 ) {
			font lang(cfg_font1, cfg_font2), 20 - en * 2, 1
			color 0, 0, 0
			pos locvar_tcgdraw_efllist(2, cnt) + 31, locvar_tcgdraw_efllist(3, cnt) + locvar_tcgdraw_efllist(4, cnt) / 3 + 26
			mes abs(locvar_tcgdraw_efllist(1, cnt))
			color 100, 100, 255
			pos locvar_tcgdraw_efllist(2, cnt) + 30, locvar_tcgdraw_efllist(3, cnt) + locvar_tcgdraw_efllist(4, cnt) / 3 + 25
			mes abs(locvar_tcgdraw_efllist(1, cnt))
			font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
			color 255, 255, 255
			gmode 5, , , (locvar_tcgdraw_efllist(4, cnt) - 30) * 8
			color 0, 0, 0
			pos locvar_tcgdraw_efllist(5, cnt), locvar_tcgdraw_efllist(6, cnt) + 24
			gcopy BUFFER_PIC, 64 * limit(10 - (locvar_tcgdraw_efllist(4, cnt) - 30) / 3, 0, 8), 416, 64, 64
			pos locvar_tcgdraw_efllist(2, cnt), locvar_tcgdraw_efllist(3, cnt) + 24
			gcopy BUFFER_PIC, 64 * limit(10 - (locvar_tcgdraw_efllist(4, cnt) - 30) / 3, 0, 8), 416, 64, 64
		}
	loop
	gmode 2
	if ( locvar_tcgdraw_screenupdate == (-1) ) {
		locvar_tcgdraw_screenupdate = 0
		goto *tcgdraw_WEND1
	}
	else {
		await 15
		redraw 1
	}
	if ( locvar_tcgdraw_anime == 0 ) {
		goto *tcgdraw_WEND1
	}
	goto *tcgdraw_WHILE1

*tcgdraw_WEND1
	return

#deffunc efllistadd int efllistadd_arg1, int efllistadd_arg2, int efllistadd_arg3, int efllistadd_arg4, int efllistadd_arg5, int efllistadd_arg6
	repeat locvar_tcgdraw_efllistmax
		if ( locvar_tcgdraw_efllist(4, cnt) <= 0 ) {
			locvar_tcgdraw_efllist(0, cnt) = efllistadd_arg1
			locvar_tcgdraw_efllist(1, cnt) = efllistadd_arg2
			if ( efllistadd_arg1 == 1 ) {
				locvar_tcgdraw_efllist(4, cnt) = 60
				locvar_tcgdraw_efllist(5, cnt) = efllistadd_arg3 + rnd(30), efllistadd_arg4 + rnd(20)
			}
			if ( efllistadd_arg1 == 2 ) {
				locvar_tcgdraw_efllist(4, cnt) = 60
				locvar_tcgdraw_efllist(5, cnt) = efllistadd_arg3, efllistadd_arg4
				locvar_tcgdraw_efllist(2, cnt) = efllistadd_arg5, efllistadd_arg6
			}
			break
		}
	loop
	return

#deffunc create_card int create_card_arg1, int create_card_arg2
	card_ref create_card_arg2
	locvar_cdbit_card(18, create_card_arg1) = stat
	locvar_cdbit_card(9, create_card_arg1) = cardreftype
	locvar_cdbit_card(10, create_card_arg1) = cardrefcost
	locvar_cdbit_card(16, create_card_arg1) = cardrefhp
	locvar_cdbit_card(11, create_card_arg1) = cardrefattack
	locvar_create_card_cardn(1, create_card_arg1) = cardrefskill
	locvar_cdbit_card(17, create_card_arg1) = cardrefpic
	locvar_cdbit_card(19, create_card_arg1) = cardrefbg
	locvar_tcgdrawcard_carddetailn(create_card_arg1) = rtvaln
	locvar_create_card_cardn(0, create_card_arg1) = cardrefrace
	locvar_cdbit_card(20, create_card_arg1) = cardrefskillcost
	locvar_cdbit_card(23, create_card_arg1) = cardrefdomain
	locvar_cdbit_card(24, create_card_arg1) = cardrefcost
	return create_card_arg1

#deffunc cardpos int cardpos_arg1, int cardpos_arg2
	if ( cardpos_arg1 == 0 ) {
		locvar_cardpos_l = 1
	}
	else {
		locvar_cardpos_l = 2
	}
	locvar_makecardlist_p = -1
	locvar_cardpos_spotlistmax = locvar_makecardlist_clistmax(locvar_cardpos_l)
	repeat locvar_cardpos_spotlistmax
		locvar_cardpos_spotlist(cnt) = locvar_makecardlist_clist(cnt, locvar_cardpos_l)
		if ( locvar_makecardlist_p == (-1) ) {
			if ( locvar_cdbit_card(9, locvar_makecardlist_clist(cnt, locvar_cardpos_l)) != 10 ) {
				locvar_makecardlist_p = cnt
			}
		}
	loop
	if ( cardpos_arg2 != (-1) ) {
		if ( locvar_makecardlist_p != (-1) ) {
			repeat locvar_cardpos_spotlistmax - locvar_makecardlist_p
				locvar_cardpos_spotlist(locvar_cardpos_spotlistmax - cnt) = locvar_cardpos_spotlist(locvar_cardpos_spotlistmax - cnt - 1)
			loop
			locvar_cardpos_spotlist(locvar_makecardlist_p) = cardpos_arg2
		}
		else {
			locvar_cardpos_spotlist(locvar_cardpos_spotlistmax) = cardpos_arg2
		}
		locvar_cardpos_spotlistmax++
	}
	locvar_cardpos_x2 = locvar_cardpos_spotspace
	locvar_tcgdrawcard_x = locvar_tcgdrawcard_basex + 466 - locvar_cardpos_spotlistmax * locvar_cardpos_x2 / 2
	repeat locvar_cardpos_spotlistmax
		locvar_makecardlist_p = locvar_cardpos_spotlist(cnt)
		locvar_cdbit_card(4, locvar_makecardlist_p) = locvar_tcgdrawcard_x + cnt * locvar_cardpos_x2, locvar_cardpos_spotiy(cardpos_arg1)
	loop
	return

#deffunc gravecard int gravecard_arg1
	if ( locvar_cdbit_card(0, gravecard_arg1) == 1 ) {
		repeat locvar_makecardlist_maxcard
			if ( locvar_cdbit_card(0, cnt) != 1 ) {
				continue
			}
			if ( locvar_cdbit_card(1, cnt) != locvar_cdbit_card(1, gravecard_arg1) ) {
				continue
			}
			if ( locvar_cdbit_card(2, cnt) > locvar_cdbit_card(2, gravecard_arg1) ) {
				locvar_cdbit_card(4, cnt) -= locvar_cardpos_spotspace
			}
		loop
	}
	locvar_cdbit_card(0, gravecard_arg1) = -2
	locvar_tcgdraw_cpdata(8, locvar_cdbit_card(1, gravecard_arg1))++
	locvar_gravecard_n = locvar_cdbit_card(1, gravecard_arg1)
	if ( locvar_gravecard_gravesum(locvar_gravecard_n) > 2 ) {
		repeat 2
			locvar_gravecard_gravelist(cnt, locvar_gravecard_n) = locvar_gravecard_gravelist(cnt + 1, locvar_gravecard_n)
		loop
		locvar_gravecard_gravelist(2, locvar_gravecard_n) = gravecard_arg1
	}
	else {
		locvar_gravecard_gravelist(locvar_gravecard_gravesum(locvar_gravecard_n), locvar_gravecard_n) = gravecard_arg1
		locvar_gravecard_gravesum(locvar_gravecard_n)++
	}
	makecardlist
	cardpos locvar_cdbit_card(1, gravecard_arg1), -1
	gosub *refresh_bg
	return

#deffunc dmgcard int dmgcard_arg1, int dmgcard_arg2
	if ( dmgcard_arg2 > 0 ) {
		snd SOUNDLIST_ATK1
	}
	efllistadd 1, -dmgcard_arg2, locvar_cdbit_card(2, dmgcard_arg1), locvar_cdbit_card(3, dmgcard_arg1)
	locvar_cdbit_card(12, dmgcard_arg1) -= dmgcard_arg2
	if ( locvar_cdbit_card(12, dmgcard_arg1) < 0 ) {
		locvar_cdbit_card(12, dmgcard_arg1) = 0
	}
	if ( locvar_cdbit_card(12, dmgcard_arg1) <= 0 ) {
		locvar_cdbit_card(6, dmgcard_arg1) = 2, 18
		tcgdraw
		gravecard dmgcard_arg1
	}
	return

#deffunc dmgplayer int dmgplayer_arg1, int dmgplayer_arg2
	if ( dmgplayer_arg2 > 0 ) {
		snd SOUNDLIST_ATK1
	}
	efllistadd 1, -dmgplayer_arg2, locvar_dmgplayer_cpx(dmgplayer_arg1), locvar_dmgplayer_cpy(dmgplayer_arg1)
	locvar_tcgdraw_cpdata(4, dmgplayer_arg1) -= dmgplayer_arg2
	if ( locvar_tcgdraw_cpdata(4, dmgplayer_arg1) < 0 ) {
		locvar_tcgdraw_cpdata(4, dmgplayer_arg1) = 0
	}
	return

#deffunc delbottomcard int delbottomcard_arg1
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(1, cnt) != delbottomcard_arg1 ) {
			continue
		}
		if ( locvar_cdbit_card(0, cnt) == 2 ) {
			locvar_cdbit_card(4, cnt) -= locvar_tcgdraw_holderspace
			if ( locvar_cdbit_card(4, cnt) < locvar_tcgdraw_holderix(delbottomcard_arg1) ) {
				locvar_cdbit_card(6, cnt) = 2, 18
				locvar_delbottomcard_delcard = cnt
			}
		}
	loop
	tcgdraw
	gravecard locvar_delbottomcard_delcard
	return

#defcfunc gameover
	if ( locvar_tcgdraw_cpdata(4, 1) <= 0 ) {
		return 2
	}
	if ( locvar_tcgdraw_cpdata(4, 0) <= 0 ) {
		return 1
	}
	return 0

#defcfunc getholdersum int getholdersum_arg1
	locvar_makecardlist_p = 0
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(1, cnt) != getholdersum_arg1 ) {
			continue
		}
		if ( locvar_cdbit_card(0, cnt) == 2 ) {
			locvar_makecardlist_p++
		}
	loop
	return locvar_makecardlist_p

#defcfunc getspotsum int getspotsum_arg1
	locvar_makecardlist_p = 0
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(1, cnt) != getspotsum_arg1 ) {
			continue
		}
		if ( locvar_cdbit_card(0, cnt) == 1 ) {
			locvar_makecardlist_p++
		}
	loop
	return locvar_makecardlist_p

#defcfunc getdecksum int getdecksum_arg1
	locvar_makecardlist_p = 0
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(1, cnt) != getdecksum_arg1 ) {
			continue
		}
		if ( locvar_cdbit_card(0, cnt) == (-1) ) {
			locvar_makecardlist_p++
		}
	loop
	return locvar_makecardlist_p

#defcfunc cardcandeclareattack int cardcandeclareattack_arg1
	if ( locvar_cdbit_card(0, cardcandeclareattack_arg1) != 1 ) {
		return 0
	}
	if ( locvar_cdbit_card(9, cardcandeclareattack_arg1) != 10 ) {
		return 0
	}
	if ( cdbit(0, cardcandeclareattack_arg1) ) {
		return 0
	}
	return 1

#defcfunc cardcanblock int cardcanblock_arg1
	if ( locvar_cdbit_card(0, cardcanblock_arg1) != 1 ) {
		return 0
	}
	if ( locvar_cdbit_card(9, cardcanblock_arg1) != 10 ) {
		return 0
	}
	if ( cdbit(0, cardcanblock_arg1) ) {
		if ( locvar_cdbit_card(14, cardcanblock_arg1) != (-4) ) {
			return 0
		}
	}
	return 1

#defcfunc cardcanuseskill int cardcanuseskill_arg1
	if ( locvar_cdbit_card(0, cardcanuseskill_arg1) != 1 ) {
		return 0
	}
	if ( locvar_cdbit_card(9, cardcanuseskill_arg1) != 10 ) {
		return 0
	}
	if ( cdbit(0, cardcanuseskill_arg1) ) {
		return 0
	}
	if ( locvar_cdbit_card(20, cardcanuseskill_arg1) == 0 ) {
		return 0
	}
	if ( locvar_cdbit_card(20, cardcanuseskill_arg1) > locvar_tcgdraw_cpdata(5, locvar_cdbit_card(1, cardcanuseskill_arg1)) ) {
		return 0
	}
	return 1

#deffunc getrandomcard int getrandomcard_arg1
	if ( getdecksum(getrandomcard_arg1) == 0 ) {
		locvar_tcgdraw_cpdata(4, getrandomcard_arg1) = 0
		return
	}
	locvar_makecardlist_p = getholdersum(getrandomcard_arg1)

*getrandomcard_WHILE1
	if ( 1 == 0 ) {
		goto *getrandomcard_WEND1
	}
	locvar_tcgdraw_c = rnd(locvar_makecardlist_maxcard)
	if ( locvar_cdbit_card(0, locvar_tcgdraw_c) == (-1) ) {
		if ( locvar_cdbit_card(1, locvar_tcgdraw_c) == getrandomcard_arg1 ) {
			goto *getrandomcard_WEND1
		}
	}
	goto *getrandomcard_WHILE1

*getrandomcard_WEND1
	locvar_cdbit_card(0, locvar_tcgdraw_c) = 2, getrandomcard_arg1, locvar_getrandomcard_deckix(getrandomcard_arg1), locvar_getrandomcard_deckiy(getrandomcard_arg1), locvar_tcgdraw_holderix(getrandomcard_arg1) + locvar_makecardlist_p * locvar_tcgdraw_holderspace, locvar_tcgdraw_holderiy(getrandomcard_arg1), 0, 0
	locvar_cdbit_card(12, locvar_tcgdraw_c) = locvar_cdbit_card(16, locvar_tcgdraw_c)
	locvar_tcgdraw_cpdata(7, getrandomcard_arg1)--
	if ( getrandomcard_arg1 == 0 ) {
		cdbitmod 1, locvar_tcgdraw_c, 1
	}
	else {
		cdbitmod 1, locvar_tcgdraw_c, 0
	}
	if ( getholdersum(getrandomcard_arg1) > 7 ) {
		delbottomcard getrandomcard_arg1
	}
	makecardlist
	return

#deffunc saccard int saccard_arg1, int saccard_arg2
	snd SOUNDLIST_FEAT
	locvar_saccard_sac++
	if ( saccard_arg2 == 0 ) {
		cardhelp lang("カードを捧げた。", "You sacrifice the card."), 40
	}
	else {
		cardhelp lang("相手はカードを捧げた。", "The opponent sacrifices the card."), 40
	}
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(1, cnt) != saccard_arg2 ) {
			continue
		}
		if ( locvar_cdbit_card(0, cnt) != 2 ) {
			continue
		}
		if ( locvar_cdbit_card(2, cnt) <= locvar_cdbit_card(2, saccard_arg1) ) {
			continue
		}
		locvar_cdbit_card(4, cnt) -= locvar_tcgdraw_holderspace
	loop
	locvar_tcgdraw_cpdata(6, saccard_arg2)++
	locvar_tcgdraw_cpdata(5, saccard_arg2)++
	card_ref 500 + locvar_cdbit_card(23, saccard_arg1) * 2 + rnd(2)
	create_card saccard_arg1, stat
	cdbitmod 1, saccard_arg1, 1
	locvar_cdbit_card(4, saccard_arg1) = locvar_saccard_landix(saccard_arg2) + locvar_saccard_landsum(saccard_arg2) * limit(locvar_saccard_landspace - locvar_saccard_landsum(saccard_arg2) / 2, 4, locvar_saccard_landspace)
	locvar_cdbit_card(5, saccard_arg1) = locvar_saccard_landiy(saccard_arg2)
	locvar_saccard_landlist(locvar_saccard_landsum(saccard_arg2), saccard_arg2) = saccard_arg1
	locvar_saccard_landsum(saccard_arg2)++
	tcgdraw
	makecardlist
	locvar_cdbit_card(0, saccard_arg1) = 4
	makecardlist
	gosub *refresh_bg
	efllistadd 2, 1, locvar_cdbit_card(2, saccard_arg1), locvar_cdbit_card(3, saccard_arg1), locvar_dmgplayer_cpx(saccard_arg2), locvar_dmgplayer_cpy(saccard_arg2)
	return
	locvar_cdbit_card(0, saccard_arg1) = -2
	locvar_cdbit_card(6, saccard_arg1) = 2, 18
	locvar_tcgdraw_cpdata(8, saccard_arg2)++
	efllistadd 2, 1, locvar_cdbit_card(2, saccard_arg1), locvar_cdbit_card(3, saccard_arg1), locvar_dmgplayer_cpx(saccard_arg2), locvar_dmgplayer_cpy(saccard_arg2)
	tcgdraw
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(1, cnt) != saccard_arg2 ) {
			continue
		}
		if ( locvar_cdbit_card(0, cnt) != 2 ) {
			continue
		}
		if ( locvar_cdbit_card(2, cnt) < locvar_cdbit_card(2, saccard_arg1) ) {
			continue
		}
		locvar_cdbit_card(4, cnt) -= locvar_tcgdraw_holderspace
	loop
	makecardlist
	return

#deffunc opencard int opencard_arg1
	snd SOUNDLIST_CARD1
	cdbitmod 1, opencard_arg1, 1
	tcgdraw
	return

*label_4929
	return

#deffunc activatecard int activatecard_arg1, int activatecard_arg1
	efllistadd 3, 0, locvar_cdbit_card(2, activatecard_arg1), locvar_cdbit_card(3, activatecard_arg1)
	locvar_cdbit_card(6, activatecard_arg1) = 4, 60
	tcgdraw
	return

#deffunc actionchain
	locvar_actionchain_chainmode = 1
	locvar_actionchain_chaincontinue = 0

*actionchain_WHILE1
	if ( 1 == 0 ) {
		goto *actionchain_WEND1
	}
	tcgdraw
	locvar_tcgdraw_chaintime--
	if ( locvar_tcgdraw_chaintime == 0 ) {
		goto *actionchain_WEND1
	}
	await 15
	stick locvar_dbghit_a
	key_check
	repeat 2
		if ( cnt == locvar_cpisplayer_player ) {
			if ( key != "" ) {
				snd SOUNDLIST_FAIL1
				locvar_tcgdraw_chaintime = 1
				cpisplayer
				locvar_tcgdrawcard_cs = -1
				locvar_actionchain_selectmodebk = locvar_tcgdraw_selectmode
				locvar_tcgdraw_selectmode = 2
				gosub *card_player
				locvar_tcgdraw_selectmode = locvar_actionchain_selectmodebk
				break
			}
		}
		else {
			if ( locvar_tcgdraw_chaintime == cfg_chaintime / 2 ) {
				if ( cnt != locvar_cpflip_cp ) {
					cpflip
				}
				gosub *card_ai
				break
			}
		}
	loop
	if ( locvar_actionchain_chaincontinue ) {
		goto *actionchain_WEND1
	}
	goto *actionchain_WHILE1

*actionchain_WEND1
	locvar_tcgdraw_chaintime = 0
	locvar_actionchain_chainmode = 0
	cpisme
	return locvar_actionchain_chaincontinue

#deffunc actionproc
	locvar_actionproc_spellused = 0

*actionproc_WHILE1
	if ( 1 == 0 ) {
		goto *actionproc_WEND1
	}
	if ( locvar_actionproc_stack > 0 ) {
		locvar_tcgdraw_cc = locvar_actionproc_cardstack(0, locvar_actionproc_stack - 1)
		if ( locvar_actionproc_spellused == 0 ) {
			if ( locvar_actionproc_cardstack(1, locvar_actionproc_stack - 1) == (-1) ) {
				if ( locvar_cpflip_cp == 0 ) {
					locvar_cdbit_card(5, locvar_tcgdraw_cc) -= 25
				}
				else {
					locvar_cdbit_card(5, locvar_tcgdraw_cc) += 25
				}
				locvar_cdbit_card(14, locvar_tcgdraw_cc) = -1
				cdbitmod 0, locvar_tcgdraw_cc, 1
				tcgdraw
				locvar_actionproc_attacktarget = -1
				cpisenemy
				locvar_actionchain_chainmode = 1
				if ( locvar_cpflip_cp == locvar_cpisplayer_player ) {
					locvar_tcgdrawcard_cs = -1
					repeat locvar_makecardlist_clistmax(locvar_cpflip_cl)
						locvar_tcgdraw_c = locvar_makecardlist_clist(cnt, locvar_cpflip_cl)
						if ( cdbit(0, locvar_tcgdraw_c) == 0 | locvar_cdbit_card(14, locvar_tcgdraw_c) == (-4) ) {
							locvar_tcgdrawcard_cs = cnt
							locvar_tcgdrawcard_csline = locvar_cpflip_cl
							break
						}
					loop
					locvar_tcgdraw_selectmode = 1
					gosub *card_player
					locvar_tcgdraw_selectmode = -1
				}
				else {
					locvar_actionproc_aiblock = 1
					gosub *card_ai
					locvar_actionproc_aiblock = 0
				}
				locvar_actionchain_chainmode = 0
				if ( locvar_actionproc_spellused ) {
					goto *actionproc_WHILE1_CONTINUE
				}
			}
		}
	}
	locvar_actionproc_stack--
	if ( locvar_actionproc_stack < 0 ) {
		goto *actionproc_WEND1
	}
	locvar_actionproc_ac = locvar_actionproc_cardstack(0, locvar_actionproc_stack)
	locvar_actionproc_act = locvar_actionproc_cardstack(1, locvar_actionproc_stack)
	locvar_actionproc_ap = locvar_actionproc_cardstack(2, locvar_actionproc_stack)
	if ( locvar_actionproc_ap != locvar_cpflip_cp ) {
		cpflip
	}
	if ( locvar_actionproc_cardstack(1, locvar_actionproc_stack) == (-3) ) {
		locvar_actionproc_act = locvar_cdbit_card(13, locvar_actionproc_ac)
		locvar_cdbit_card(14, locvar_actionproc_ac) = -3
	}
	if ( locvar_cdbit_card(0, locvar_actionproc_ac) != 1 ) {
		goto *actionproc_WHILE1_CONTINUE
	}
	locvar_actionproc__switch_val = locvar_actionproc_act
	if ( 0 ) {
		locvar_actionproc__switch_sw++
	}
	if ( locvar_actionproc__switch_val == (-1) | locvar_actionproc__switch_sw ) {
		locvar_actionproc__switch_sw = 0
		locvar_actionproc_tc = locvar_actionproc_attacktarget
		if ( locvar_actionproc_tc != (-1) ) {
			locvar_cdbit_card(14, locvar_actionproc_tc) = -2
			cdbitmod 0, locvar_actionproc_tc, 1
			if ( locvar_cpflip_cp == 0 ) {
				locvar_cdbit_card(5, locvar_actionproc_tc) += 25
			}
			else {
				locvar_cdbit_card(5, locvar_actionproc_tc) -= 25
			}
			tcgdraw
			dmgcard locvar_actionproc_tc, locvar_cdbit_card(11, locvar_actionproc_ac)
			dmgcard locvar_actionproc_ac, locvar_cdbit_card(11, locvar_actionproc_tc)
			if ( locvar_cpflip_cp == 0 ) {
				locvar_cdbit_card(5, locvar_actionproc_tc) -= 25
			}
			else {
				locvar_cdbit_card(5, locvar_actionproc_tc) += 25
			}
		}
		else {
			dmgplayer locvar_cpflip_tp, locvar_cdbit_card(11, locvar_actionproc_ac)
		}
		if ( locvar_cpflip_cp == 0 ) {
			locvar_cdbit_card(5, locvar_actionproc_ac) += 25
		}
		else {
			locvar_cdbit_card(5, locvar_actionproc_ac) -= 25
		}
		tcgdraw
		goto *actionproc_SWEND1
		locvar_actionproc__switch_sw++
	}
	if ( locvar_actionproc__switch_val == locvar_actionproc_cddraw2card | locvar_actionproc__switch_sw ) {
		locvar_actionproc__switch_sw = 0
		getrandomcard locvar_actionproc_ap
		tcgdraw
		getrandomcard locvar_actionproc_ap
		tcgdraw
		goto *actionproc_SWEND1
		locvar_actionproc__switch_sw++
	}
	if ( locvar_actionproc__switch_val == locvar_actionproc_cdsummonrace | locvar_actionproc__switch_sw ) {
		locvar_actionproc__switch_sw = 0
		locvar_actionproc_deckmode = 1
		locvar_actionproc_deckrefn = locvar_create_card_cardn(0, locvar_actionproc_ac)
		gosub *select_deck
		goto *actionproc_SWEND1
		locvar_actionproc__switch_sw++
	}
	if ( locvar_actionproc__switch_val == locvar_actionproc_cdsummon | locvar_actionproc__switch_sw ) {
		locvar_actionproc__switch_sw = 0
		locvar_actionproc_deckmode = 2
		gosub *select_deck
		goto *actionproc_SWEND1
	}

*actionproc_SWEND1
	if ( locvar_cdbit_card(9, locvar_actionproc_ac) == 20 ) {
		locvar_cdbit_card(6, locvar_actionproc_ac) = 2, 18
		tcgdraw
		gravecard locvar_actionproc_ac
	}

*actionproc_WHILE1_CONTINUE
	goto *actionproc_WHILE1

*actionproc_WEND1
	locvar_actionproc_stack = 0
	return

#deffunc putcard int putcard_arg1, int putcard_arg2
	if ( getspotsum(putcard_arg2) >= 8 ) {
		if ( putcard_arg2 == locvar_cpisplayer_player ) {
			snd SOUNDLIST_FAIL1
			cardhelp lang("これ以上は場に出せない。", "Your field is full."), 40
		}
		return -1
	}
	if ( locvar_cdbit_card(10, putcard_arg1) > locvar_tcgdraw_cpdata(5, putcard_arg2) ) {
		if ( putcard_arg2 == locvar_cpisplayer_player ) {
			snd SOUNDLIST_FAIL1
			cardhelp lang("マナが足りない。", "You don't have enough mana."), 40
		}
		if ( debug == 0 ) {
			return -3
		}
	}
	locvar_tcgdraw_cpdata(5, putcard_arg2) -= locvar_cdbit_card(10, putcard_arg1)
	if ( putcard_arg2 == 0 ) {
		locvar_cdbit_card(5, putcard_arg1) -= 25
	}
	else {
		locvar_cdbit_card(5, putcard_arg1) += 25
	}
	tcgdraw
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(1, cnt) != putcard_arg2 ) {
			continue
		}
		if ( locvar_cdbit_card(0, cnt) != 2 ) {
			continue
		}
		if ( locvar_cdbit_card(2, cnt) <= locvar_cdbit_card(2, putcard_arg1) ) {
			continue
		}
		locvar_cdbit_card(4, cnt) -= locvar_tcgdraw_holderspace
	loop
	if ( locvar_cdbit_card(9, putcard_arg1) == 30 ) {
		cdbitmod 1, putcard_arg1, 1
		locvar_cdbit_card(4, putcard_arg1) = locvar_saccard_landix(putcard_arg2) + locvar_saccard_landsum(putcard_arg2) * limit(locvar_saccard_landspace - locvar_saccard_landsum(putcard_arg2) / 2, 4, locvar_saccard_landspace)
		locvar_cdbit_card(5, putcard_arg1) = locvar_saccard_landiy(putcard_arg2)
		locvar_saccard_landlist(locvar_saccard_landsum(putcard_arg2), putcard_arg2) = putcard_arg1
		locvar_saccard_landsum(putcard_arg2)++
		tcgdraw
		makecardlist
		locvar_cdbit_card(0, putcard_arg1) = 4
		makecardlist
		gosub *refresh_bg
		return 1
	}
	locvar_makecardlist_p = getspotsum(putcard_arg2)
	locvar_cdbit_card(0, putcard_arg1) = 1
	cdbitmod 1, putcard_arg1, 0
	locvar_cdbit_card(22, putcard_arg1) = 0
	locvar_cdbit_card(14, putcard_arg1) = -4
	cdbitmod 0, putcard_arg1, 1
	cardpos putcard_arg2, putcard_arg1
	tcgdraw
	makecardlist
	opencard putcard_arg1
	return 1

#deffunc tcgdrawbg
	redraw 0
	locvar_tcgdrawcard_x = 960
	locvar_tcgdrawcard_y = 96
	locvar_tcgdrawbg_w = 128
	locvar_tcgdrawbg_h = 128
	gmode 0
	repeat windowh / locvar_tcgdrawbg_h + 1
		locvar_makecardlist_cnt2 = cnt
		repeat windoww / locvar_tcgdrawbg_w + 1
			pos windoww - (cnt + 1) * locvar_tcgdrawbg_w, windowh - (locvar_makecardlist_cnt2 + 1) * locvar_tcgdrawbg_h
			gcopy BUFFER_INF, locvar_tcgdrawcard_x, locvar_tcgdrawcard_y, locvar_tcgdrawbg_w, locvar_tcgdrawbg_h
		loop
	loop
	gmode 2
	return

#deffunc tcginit
	locvar_tcginit_turn = 0
	locvar_tcgdraw_efllistmax = 10
	locvar_tcginit_cardmode = 0
	gosub *label_4929
	dim locvar_cdbit_card, 50, locvar_makecardlist_maxcard
	sdim locvar_create_card_cardn, 16, 2, locvar_makecardlist_maxcard
	dim locvar_tcgdraw_cpdata, 20, 2
	dim locvar_tcgdraw_efllist, 10, locvar_tcgdraw_efllistmax
	dim locvar_tcginit_elist, 10, 8 * 2 + 7
	dim locvar_gravecard_gravesum, 2
	dim locvar_saccard_landsum, 2
	dim locvar_saccard_landlist, locvar_makecardlist_maxcard, 2
	dim locvar_actionproc_cardstack, 5, 100
	dim locvar_gravecard_gravelist, 4, 2
	sdim locvar_tcgdrawcard_carddetailn, 200, locvar_makecardlist_maxcard
	sdim cardrefn
	sdim locvar_cardhelp_helpmsg
	dim deck, 1500
	sdim locvar_tcginit_domname, 20, 10
	locvar_tcginit_phasen = "Begin", "Draw", "Main", "End", ""
	locvar_tcginit_domname(0) = lang("0-150", "0-150")
	locvar_tcginit_domname(1) = lang("151-300", "151-300")
	locvar_tcginit_domname(2) = lang("301-450", "301-450")
	locvar_tcginit_domname(3) = lang("451-600", "451-600")
	locvar_tcginit_domname(4) = lang("601-750", "601-750")
	locvar_tcginit_domname(5) = lang("751-900", "751-900")
	locvar_tcginit_domname(6) = lang("901-   ", "901-   ")
	locvar_tcginit_domname(7) = lang("ALL", "All")
	locvar_tcgdraw_chainx = 0
	locvar_tcgdraw_chainy = 0
	cfg_chaintime = 50
	locvar_tcginit_basew = 800
	locvar_tcginit_baseh = 600
	locvar_tcgdrawcard_basex = (windoww - locvar_tcginit_basew) / 2
	locvar_tcgdrawcard_basey = (windowh - locvar_tcginit_baseh) / 2
	locvar_tcginit_graveix = locvar_tcgdrawcard_basex + 638, locvar_tcgdrawcard_basex + 638
	locvar_tcginit_graveiy = locvar_tcgdrawcard_basey + 315, locvar_tcgdrawcard_basey + 125
	locvar_tcginit_gravespace = 22
	locvar_saccard_landix = locvar_tcgdrawcard_basex + 150, locvar_tcgdrawcard_basex + 150
	locvar_saccard_landiy = locvar_tcgdrawcard_basey + 315, locvar_tcgdrawcard_basey + 125
	locvar_saccard_landspace = 22
	locvar_tcginit_spotix = locvar_tcgdrawcard_basex + 138, locvar_tcgdrawcard_basex + 138
	locvar_cardpos_spotiy = locvar_tcgdrawcard_basey + 290, locvar_tcgdrawcard_basey + 150
	locvar_cardpos_spotspace = 80
	locvar_tcgdraw_holderix = locvar_tcgdrawcard_basex + 222, locvar_tcgdrawcard_basex + 222
	locvar_tcgdraw_holderiy = locvar_tcgdrawcard_basey + 420, locvar_tcgdrawcard_basey + 20
	locvar_tcgdraw_holderspace = 80
	locvar_getrandomcard_deckix = locvar_tcgdrawcard_basex + 800, locvar_tcgdrawcard_basex + 800
	locvar_getrandomcard_deckiy = locvar_tcgdrawcard_basey + 420, locvar_tcgdrawcard_basey + 20
	locvar_tcgdraw_selectmode = -1
	gsel BUFFER_INF
	pos 960, 96
	picload exedir + "graphic\\deco_card.bmp", 1
	gsel BUFFER_PIC
	picload exedir + "graphic\\interface2.bmp"
	gsel BUFFER_MAP
	pos 0, 0
	picload exedir + "graphic\\card0.bmp", 1
	gsel BUFFER_BUF
	pos 0, 0
	picload exedir + "graphic\\bg_card.bmp", 1
	gosub *tcg_initBg
	tcgdrawbg
	return

#defcfunc calcstartcard int calcstartcard_arg1
	return 9 - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 2) - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 3) - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 4) - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 5) - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 6) - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 7) - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 8) - (locvar_tcgdraw_cpdata(9, calcstartcard_arg1) > 8)

#deffunc calcstartattb int calcstartattb_arg1
	locvar_tcgdraw_cpdata(4, calcstartattb_arg1) = 40 - locvar_tcgdraw_cpdata(9, calcstartattb_arg1) * 5
	locvar_tcgdraw_cpdata(6, calcstartattb_arg1) = 0
	return

#deffunc calcdomain
	repeat 2
		dim locvar_calcdomain_domain, 9
		locvar_makecardlist_p = cnt
		locvar_tcgdraw_cpdata(9, locvar_makecardlist_p) = 0
		repeat locvar_makecardlist_maxcard
			if ( locvar_cdbit_card(1, cnt) != locvar_makecardlist_p ) {
				continue
			}
			if ( locvar_calcdomain_domain(locvar_cdbit_card(23, cnt)) == 0 ) {
				locvar_calcdomain_domain(locvar_cdbit_card(23, cnt)) = 1
			}
		loop
		repeat 9
			if ( locvar_calcdomain_domain(cnt) ) {
				locvar_tcgdraw_cpdata(9, locvar_makecardlist_p)++
			}
		loop
		calcstartattb locvar_makecardlist_p
	loop
	return

#deffunc calcdecksize
	gdata(GDATA_DECK_SIZE + curdeck) = 0
	locvar_calcdecksize_cardsize = 0
	locvar_tcgdraw_cpdata(9, 0) = 0
	dim locvar_calcdomain_domain, 9
	repeat locvar_makecardlist_maxcard
		locvar_calcdecksize_cardsize += card(0, cnt)
		if ( deck(locvar_cdbit_card(18, cnt)) == 0 ) {
			continue
		}
		gdata(GDATA_DECK_SIZE + curdeck) += deck(locvar_cdbit_card(18, cnt))
		locvar_calcdomain_domain(locvar_cdbit_card(23, cnt)) = 1
	loop
	repeat 9
		if ( locvar_calcdomain_domain(cnt) ) {
			locvar_tcgdraw_cpdata(9, 0)++
		}
	loop
	calcstartattb 0
	return

#deffunc decktest
	dim card, 4, 1500
	dim deck, 1500
	repeat 1500
		dbid = cnt
		gosub *db_card
		if ( stat == 0 ) {
			continue
		}
		card(0, cnt) = 10
	loop
	return

#deffunc tcgdeck
	locvar_makecardlist_maxcard = 1500
	tcginit
	locvar_tcginit_cardmode = 1
	locvar_makecardlist_i = 0
	repeat 1500
		if ( card(0, cnt) == 0 ) {
			continue
		}
		create_card locvar_makecardlist_i, cnt
		locvar_cdbit_card(0, locvar_makecardlist_i) = -1, 0
		locvar_makecardlist_i++
	loop

*tcgDeck_loop
	tcgdrawbg
	locvar_cnvrare_s = lang("白", "White"), lang("青", "Blue"), lang("銀", "Silver"), lang("赤", "Red"), lang("黒", "Black")
	repeat 5
		locvar_cnvrare_s(cnt) += lang("のデッキ", " Deck")
		locvar_tcgdeck_file = "" + exedir + "tmp\\deck_" + cnt + ".s2"
		existwrapper locvar_tcgdeck_file
		if ( strsize == (-1) ) {
			locvar_cnvrare_s(cnt) += lang(" (新規作成)", " (New)")
		}
		else {
			if ( gdata(GDATA_DECK_SIZE + cnt) != 30 ) {
				locvar_cnvrare_s(cnt) += " (NG " + gdata(GDATA_DECK_SIZE + cnt) + "/" + 30 + ")"
			}
			if ( gdata(GDATA_DECK) == cnt ) {
				locvar_cnvrare_s(cnt) += " [Use]"
			}
		}
		promptl(0, promptmax) = locvar_cnvrare_s(cnt), "null", "" + promptmax
		promptmax++
	loop
	val = locvar_tcgdrawcard_basex + 400, locvar_tcgdrawcard_basey + 230, 300, 1
	gosub *prompt_key
	if ( rtval != (-1) ) {
		dim deck, 1500
		curdeck = rtval
		file = "" + exedir + "tmp\\deck_" + curdeck + ".s2"
		existwrapper file
		if ( strsize != (-1) ) {
			promptl(0, promptmax) = lang("デッキの構築", "Edit Deck"), "null", "" + promptmax
			promptmax++
			promptl(0, promptmax) = lang("メインデッキに設定", "Set as Main Deck"), "null", "" + promptmax
			promptmax++
			val = 400, locvar_tcgdrawcard_basey + 230, 240, 1
			gosub *prompt_key
			if ( rtval == (-1) ) {
				goto *tcgDeck_loop
			}
			if ( rtval == 1 ) {
				gdata(GDATA_DECK) = curdeck
				goto *tcgDeck_loop
			}
			if ( rtval == 0 ) {
				fmode = 24
				gosub *game_ctrlFile
			}
		}
		locvar_tcgdeck_decksizebk = gdata(GDATA_DECK_SIZE + curdeck)
		snd SOUNDLIST_WEAR
		calcdecksize
		locvar_actionproc_deckmode = 0, locvar_tcgdeck_rtval
		gosub *select_deck
		goto *tcgDeck_loop
	}
	return

#deffunc tcgmain
	locvar_makecardlist_maxcard = 40 * 2
	tcginit
	repeat 2
		locvar_tcgmain_rp = cnt
		locvar_dmgplayer_cpx(cnt) = locvar_tcgdrawcard_basex + 23
		locvar_dmgplayer_cpy(cnt) = locvar_tcgdrawcard_basey + 236 - cnt * 120
		locvar_tcgdraw_cpdata(4, cnt) = 30
		locvar_tcgdraw_cpdata(8, cnt) = 0
		locvar_tcgdraw_cpdata(7, cnt) = 30
		repeat 30
			locvar_tcgdraw_cc = locvar_tcgmain_rp * 40 + cnt
			card_ref rnd(1000)
			if ( cardrefcost == 0 ) {
				continue cnt
			}
			create_card locvar_tcgdraw_cc, stat
			locvar_cdbit_card(0, locvar_tcgdraw_cc) = -1, locvar_tcgmain_rp
		loop
	loop
	calcdomain
	repeat 2
		locvar_cpflip_cp = cnt
		repeat calcstartcard(cnt)
			getrandomcard locvar_cpflip_cp
		loop
	loop
	if ( debug ) {
	}
	locvar_cpisme_ct = 0
	locvar_cpisplayer_player = -1

*tcgmain_WHILE1
	if ( 1 == 0 ) {
		goto *tcgmain_WEND1
	}
	cpisme
	gosub *phase_begin
	if ( gameover() ) {
		goto *tcgmain_WEND1
	}
	gosub *phase_draw
	if ( gameover() ) {
		goto *tcgmain_WEND1
	}
	gosub *phase_main
	if ( gameover() ) {
		goto *tcgmain_WEND1
	}
	gosub *phase_end
	if ( locvar_cpisme_ct == 0 ) {
		locvar_cpisme_ct = 1
	}
	else {
		locvar_cpisme_ct = 0
	}
	goto *tcgmain_WHILE1

*tcgmain_WEND1
	return

*phase_begin
	locvar_tcgdraw_phase = 0
	locvar_tcginit_turn++
	tcgdraw
	await 50
	locvar_saccard_sac = 0
	locvar_tcgdraw_cpdata(5, locvar_cpflip_cp) = locvar_tcgdraw_cpdata(6, locvar_cpflip_cp)
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(0, cnt) != 1 ) {
			continue
		}
		if ( locvar_cdbit_card(1, cnt) != locvar_cpflip_cp ) {
			continue
		}
		locvar_cdbit_card(22, cnt)++
		locvar_cdbit_card(14, cnt) = 0
		locvar_cdbit_card(12, cnt) = locvar_cdbit_card(16, cnt)
		cdbitmod 0, cnt, 0
	loop
	return

*phase_draw
	locvar_tcgdraw_phase = 1
	tcgdraw
	await 50
	getrandomcard locvar_cpflip_cp
	tcgdraw
	return

*phase_main
	locvar_tcgdraw_phase = 2
	tcgdraw
	await 50
	if ( locvar_cpflip_cp == locvar_cpisplayer_player ) {
		locvar_tcgdraw_selectmode = 0
		gosub *card_player
	}
	else {
		locvar_tcgdraw_selectmode = -1
		gosub *card_ai
	}
	return

*phase_end
	locvar_tcgdraw_phase = 3
	if ( locvar_cpflip_cp == locvar_cpisplayer_player ) {
		locvar_tcgdraw_selectmode = 0
	}
	else {
		locvar_tcgdraw_selectmode = -1
	}
	repeat 5
		tcgdraw
	loop
	return

#deffunc csfix
	if ( locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) == 0 ) {
		if ( locvar_tcgdrawcard_csline != 0 ) {
			locvar_tcgdrawcard_cs = -1
			locvar_tcgdrawcard_csline = 0
		}
	}
	if ( locvar_tcgdrawcard_cs == (-1) ) {
		if ( locvar_tcgdrawcard_csline != 0 ) {
			locvar_tcgdrawcard_cs = 0
		}
	}
	if ( locvar_tcgdrawcard_cs >= locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) ) {
		if ( locvar_tcgdrawcard_csline == 0 ) {
			locvar_tcgdrawcard_cs = -1
		}
		else {
			locvar_tcgdrawcard_cs = 0
		}
	}
	if ( locvar_tcgdrawcard_cs < (-1) ) {
		locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
	}
	return

#deffunc cslineup
	locvar_cslineup_cslinebk = locvar_tcgdrawcard_csline
	repeat
		locvar_tcgdrawcard_csline++
		if ( locvar_tcgdrawcard_csline == 4 ) {
			break
		}
		if ( locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) != 0 ) {
			break
		}
	loop
	if ( locvar_tcgdrawcard_csline == 4 ) {
		locvar_tcgdrawcard_csline = 0
	}
	if ( locvar_tcgdrawcard_csline == 0 ) {
		locvar_tcgdrawcard_cs = -1
	}
	else {
		locvar_tcgdrawcard_cs = 0
	}
	if ( locvar_tcgdrawcard_cs >= locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) ) {
		locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
	}
	return

#deffunc cslinedown
	locvar_cslineup_cslinebk = locvar_tcgdrawcard_csline
	if ( locvar_tcgdrawcard_csline == 0 ) {
		locvar_tcgdrawcard_csline = 4
	}
	repeat
		locvar_tcgdrawcard_csline--
		if ( locvar_tcgdrawcard_csline == (-1) ) {
			break
		}
		if ( locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) != 0 ) {
			break
		}
	loop
	if ( locvar_tcgdrawcard_csline == (-1) ) {
		locvar_tcgdrawcard_csline = 0
	}
	if ( locvar_tcgdrawcard_csline == 0 ) {
		locvar_tcgdrawcard_cs = -1
	}
	else {
		locvar_tcgdrawcard_cs = 0
	}
	if ( locvar_tcgdrawcard_cs >= locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) ) {
		locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
	}
	return
	return

*refresh_bg
	gsel BUFFER_BUF
	pos 0, 0
	picload exedir + "graphic\\bg_card.bmp", 1
	gmode 2
	font lang(cfg_font1, cfg_font2), 14 - en * 2, 0
	color 255, 255, 255
	repeat 2
		gmode 0
		locvar_makecardlist_cnt2 = cnt
		dim locvar_cslinedown_mana, 10
		repeat locvar_saccard_landsum(locvar_makecardlist_cnt2)
			locvar_tcgdrawcard_x = locvar_saccard_landix(locvar_makecardlist_cnt2) + cnt * limit(locvar_saccard_landspace - locvar_saccard_landsum(locvar_makecardlist_cnt2) / 2, 4, locvar_saccard_landspace)
			locvar_tcgdrawcard_y = locvar_saccard_landiy(locvar_makecardlist_cnt2)
			locvar_cslinedown_m = locvar_saccard_landlist(cnt, locvar_makecardlist_cnt2)
			locvar_gravecard_n = abs(locvar_cdbit_card(17, locvar_cslinedown_m))
			locvar_cslinedown_mana(locvar_cdbit_card(23, locvar_cslinedown_m))++
			pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
			gcopy BUFFER_MAP, locvar_gravecard_n \ 22 * 72, locvar_gravecard_n / 22 * 96, 72, 96
		loop
		locvar_tcgdrawcard_y = locvar_saccard_landiy(locvar_makecardlist_cnt2) + (cnt == 0) * 80
		locvar_tcgdrawcard_x = locvar_saccard_landix(locvar_makecardlist_cnt2) - 16
		repeat 10
			if ( locvar_cslinedown_mana(cnt) == 0 ) {
				continue
			}
			pos locvar_tcgdrawcard_x - 15, locvar_tcgdrawcard_y - 2
			gcopy BUFFER_PIC, cnt * 12, 126, 12, 18
			pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
			mes locvar_cslinedown_mana(cnt)
			if ( locvar_makecardlist_cnt2 == 0 ) {
				locvar_tcgdrawcard_y -= 20
			}
			else {
				locvar_tcgdrawcard_y += 20
			}
		loop
		repeat locvar_gravecard_gravesum(locvar_makecardlist_cnt2)
			locvar_tcgdrawcard_x = locvar_tcginit_graveix(locvar_makecardlist_cnt2) + cnt * locvar_tcginit_gravespace
			locvar_tcgdrawcard_y = locvar_tcginit_graveiy(locvar_makecardlist_cnt2)
			locvar_cslinedown_m = locvar_gravecard_gravelist(cnt, locvar_makecardlist_cnt2)
			if ( locvar_cdbit_card(17, locvar_cslinedown_m) > 0 ) {
				gmode 2
				pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
				gcopy BUFFER_PIC, 72 + locvar_cdbit_card(19, locvar_cslinedown_m) * 72, 0, 72, 96
				if ( locvar_cdbit_card(18, locvar_cslinedown_m) != 343 ) {
					locvar_gravecard_n = locvar_cdbit_card(17, locvar_cslinedown_m) \ 1000 + locvar_cdbit_card(24, locvar_cslinedown_m) * 1000
					chara_preparepic locvar_gravecard_n, (locvar_cdbit_card(17, locvar_cslinedown_m) - locvar_cdbit_card(24, locvar_cslinedown_m) * 1000) / 1000
					gsel BUFFER_BUF
				}
				else {
					locvar_gravecard_n = 1
					chara_preparepic locvar_gravecard_n, 0
					gsel BUFFER_BUF
				}
				color 0, 0, 0
				pos locvar_tcgdrawcard_x + 13, locvar_tcgdrawcard_y + 32 - chipc(CHIPC_F, locvar_gravecard_n) + chipc(CHIPC_HEIGHT, locvar_gravecard_n) / 6
				gcopy BUFFER_CHR, 0, 960, chipc(CHIPC_WIDTH, locvar_gravecard_n), chipc(CHIPC_HEIGHT, locvar_gravecard_n)
			}
			else {
				gmode 0
				locvar_gravecard_n = abs(locvar_cdbit_card(17, locvar_cslinedown_m))
				pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
				gcopy BUFFER_MAP, locvar_gravecard_n \ 22 * 72, locvar_gravecard_n / 22 * 96, 72, 96
			}
		loop
	loop
	gsel BUFFER_SCREEN
	return

*tcg_drawDeck
	font lang(cfg_font1, cfg_font2), 10 + en - en * 2, 0
	color 255, 255, 255
	gmode 2
	repeat locvar_cslinedown_cfmax
		locvar_tcgdrawcard_x = locvar_tcgdrawcard_basex + 180 + cnt * 63
		locvar_tcgdrawcard_y = locvar_tcgdrawcard_basey + 26 + (locvar_cslinedown_ccf == cnt) * 3
		locvar_makecardlist_p = locvar_cslinedown_cflist(cnt)
		color 0, 0, 0
		if ( locvar_cslinedown_ccf == cnt ) {
			gmode 4, , , 255
			color 255, 255, 255
		}
		else {
			gmode 4, , , 120
			color 200, 200, 200
		}
		pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
		gcopy BUFFER_PIC, 360, 96, 63, 20
		gmode 2
		pos locvar_tcgdrawcard_x + 1, locvar_tcgdrawcard_y + 4
		mes locvar_cslinedown_cfname(locvar_makecardlist_p)
		if ( locvar_cslinedown_ccf == cnt ) {
			pos locvar_tcgdrawcard_x + 65, locvar_tcgdrawcard_y - 5
			gcopy BUFFER_PIC, 288, 96, 24, 24
		}
	loop
	font lang(cfg_font1, cfg_font2), 13 + en - en * 2, 0
	repeat 8 * 3
		locvar_makecardlist_p = locvar_cslinedown_page * 8 + cnt
		if ( locvar_makecardlist_p >= locvar_cslinedown_dlistmax ) {
			break
		}
		locvar_tcgdraw_c = locvar_tcgdrawcard_dlist(0, locvar_makecardlist_p)
		locvar_makecardlist_i = locvar_cdbit_card(18, locvar_tcgdraw_c)
		locvar_tcgdrawcard_x = locvar_tcgdrawcard_basex + 144 + cnt \ 8 * 80
		locvar_tcgdrawcard_y = locvar_tcgdrawcard_basey + 70 + cnt / 8 * 150
		if ( locvar_actionproc_deckmode == 0 ) {
			if ( deck(locvar_makecardlist_i) != 0 ) {
				locvar_cnvrare_s = "" + deck(locvar_makecardlist_i)
			}
			else {
				locvar_cnvrare_s = ""
			}
			locvar_cnvrare_s += "(" + card(0, locvar_makecardlist_i) + ")"
			color 0, 0, 0
			pos locvar_tcgdrawcard_x + 1, locvar_tcgdrawcard_y + 111
			mes locvar_cnvrare_s
			if ( deck(locvar_makecardlist_i) != 0 ) {
				color 150, 255, 150
			}
			else {
				color 200, 200, 200
			}
			pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y + 110
			mes locvar_cnvrare_s
		}
		locvar_cdbit_card(2, locvar_tcgdraw_c) = locvar_tcgdrawcard_x
		locvar_cdbit_card(3, locvar_tcgdraw_c) = locvar_tcgdrawcard_y
		tcgdrawcard locvar_tcgdraw_c, 1
	loop
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
	color 255, 255, 255
	pos locvar_tcgdrawcard_basex + 160, locvar_tcgdrawcard_basey + 510
	mes lang("" + key_next + "," + key_prev + ",Tab [フィルター切替]  決定ｷｰ [カード選択]  ｷｬﾝｾﾙｷｰ [終了]", "" + key_next + "," + key_prev + " [Change Filter]  Enter [Select]  Cancel [Exit]")
	pos locvar_tcgdrawcard_basex + 700, locvar_tcgdrawcard_basey + 510
	mes "Page " + locvar_tcgdrawcard_dsc / 8 / 3 + "/" + (locvar_cslinedown_dlistmax - 1) / 8 / 3
	return

*tcg_drawInterface
	gmode 0
	pos locvar_tcgdrawcard_basex, locvar_tcgdrawcard_basey
	gcopy BUFFER_BUF, 0, 0, locvar_tcginit_basew, locvar_tcginit_baseh
	font lang(cfg_font1, cfg_font2), 13 - en * 2, 0
	gmode 2
	pos locvar_tcgdrawcard_basex + 20, locvar_tcgdrawcard_basey + 22
	if ( locvar_tcginit_cardmode != 0 | locvar_cpisme_ct == locvar_cpisplayer_player ) {
		gcopy BUFFER_PIC, 360, 120, 88, 84
	}
	else {
		gcopy BUFFER_PIC, 456, 120, 88, 84
	}
	if ( locvar_tcginit_cardmode == 0 ) {
		color 0, 0, 0
		pos locvar_tcgdrawcard_basex + 39, locvar_tcgdrawcard_basey + 58
		mes "Turn " + locvar_tcginit_turn
		color 255, 255, 255
		pos locvar_tcgdrawcard_basex + 38, locvar_tcgdrawcard_basey + 57
		mes "Turn " + locvar_tcginit_turn
		repeat 2
			locvar_tcgdrawcard_x = locvar_dmgplayer_cpx(cnt)
			locvar_tcgdrawcard_y = locvar_dmgplayer_cpy(cnt)
			pos locvar_tcgdrawcard_x, locvar_tcgdrawcard_y
			gcopy BUFFER_PIC, 264, 144, 72, 120
			locvar_cnvrare_s = "" + locvar_tcgdraw_cpdata(4, cnt)
			pos locvar_tcgdrawcard_x + 36 - strlen(locvar_cnvrare_s) * 3, locvar_tcgdrawcard_y + 9 - en
			mes locvar_cnvrare_s
			if ( cnt != locvar_cpisplayer_player & debug == 0 ) {
				locvar_cnvrare_s = "?/" + locvar_tcgdraw_cpdata(6, cnt)
			}
			else {
				locvar_cnvrare_s = "" + locvar_tcgdraw_cpdata(5, cnt) + "/" + locvar_tcgdraw_cpdata(6, cnt)
			}
			pos locvar_tcgdrawcard_x + 36 - strlen(locvar_cnvrare_s) * 3, locvar_tcgdrawcard_y + 95 - en
			mes locvar_cnvrare_s
		loop
		repeat 8
			if ( cnt - 1 == locvar_tcgdraw_phase ) {
				pos locvar_tcgdrawcard_basex + 4, locvar_tcgdrawcard_basey + 370 + cnt * 20
				gcopy BUFFER_PIC, 360, 216, 106, 18
			}
			pos locvar_tcgdrawcard_basex + 36, locvar_tcgdrawcard_basey + 373 + cnt * 20
			if ( cnt == 0 ) {
				if ( locvar_cpisme_ct == locvar_cpisplayer_player ) {
					color 150, 150, 255
					mes "Player"
				}
				else {
					color 255, 150, 150
					mes "Opponent"
				}
				color 215, 215, 215
			}
			else {
				mes locvar_tcginit_phasen(cnt - 1)
			}
		loop
	}
	else {
		color 0, 0, 0
		pos locvar_tcgdrawcard_basex + 41, locvar_tcgdrawcard_basey + 53
		mes "Deck\n Editor"
		color 255, 255, 255
		pos locvar_tcgdrawcard_basex + 40, locvar_tcgdrawcard_basey + 52
		mes "Deck\n Editor"
		if ( gdata(GDATA_DECK_SIZE + curdeck) != 30 ) {
			color 255, 100, 100
		}
		else {
			color 100, 255, 100
		}
		pos locvar_tcgdrawcard_basex + 24, locvar_tcgdrawcard_basey + 120
		mes "Deck " + gdata(GDATA_DECK_SIZE + curdeck) + "/" + 30
		color 215, 215, 215
		pos locvar_tcgdrawcard_basex + 24, locvar_tcgdrawcard_basey + 140
		mes "Life " + locvar_tcgdraw_cpdata(4, 0)
		pos locvar_tcgdrawcard_basex + 24, locvar_tcgdrawcard_basey + 160
		mes "Mana " + locvar_tcgdraw_cpdata(6, 0)
		pos locvar_tcgdrawcard_basex + 24, locvar_tcgdrawcard_basey + 180
		mes "Card " + calcstartcard(0)
		pos locvar_tcgdrawcard_basex + 24, locvar_tcgdrawcard_basey + 220
		mes "Domain * " + locvar_tcgdraw_cpdata(9, 0)
		locvar_cnvrare_s = ""
		repeat 9
			if ( locvar_calcdomain_domain(cnt) ) {
				locvar_cnvrare_s += "" + locvar_tcginit_domname(cnt) + "\n"
			}
		loop
		pos locvar_tcgdrawcard_basex + 24, locvar_tcgdrawcard_basey + 240
		mes locvar_cnvrare_s
	}
	if ( gdata(GDATA_QUICK_USE) == 1 ) {
		font lang(cfg_font1, cfg_font2), 12 + en - en * 2, 0
		pos locvar_tcgdrawcard_basex + 125, locvar_tcgdrawcard_basey + 542
		mes locvar_cardhelp_helpmsg
	}
	else {
		font lang(cfg_font1, cfg_font2), 11 + en - en * 2, 0
		pos locvar_tcgdrawcard_basex + 120, locvar_tcgdrawcard_basey + 537
		mes locvar_cardhelp_helpmsg
	}
	return

*tcg_initBg
	gmode 4, , , 180
	redraw 0
	repeat 2
		locvar_makecardlist_cnt2 = cnt
		repeat 8
		loop
	loop
	gsel BUFFER_SCREEN
	return

*select_deck_pos
	if ( locvar_tcgdrawcard_dsc < 0 ) {
		locvar_tcgdrawcard_dsc = locvar_cslinedown_dlistmax - 1
	}
	if ( locvar_tcgdrawcard_dsc >= locvar_cslinedown_dlistmax ) {
		locvar_tcgdrawcard_dsc = 0
	}
	if ( locvar_tcgdrawcard_dsc >= (locvar_cslinedown_page + 3) * 8 ) {
		locvar_cslinedown_page = locvar_tcgdrawcard_dsc / 8
	}
	if ( locvar_tcgdrawcard_dsc < locvar_cslinedown_page * 8 ) {
		locvar_cslinedown_page = locvar_tcgdrawcard_dsc / 8
	}
	locvar_cslinedown_page = locvar_cslinedown_page - locvar_cslinedown_page \ 3
	return

*select_deck
	gsel BUFFER_BUF
	pos 0, 0
	picload exedir + "graphic\\bg_card.bmp", 1
	gsel BUFFER_SCREEN
	dim locvar_tcgdrawcard_dlist, 2, 400
	dim locvar_cslinedown_cflist, 10
	sdim locvar_cslinedown_cfname, 16, 10
	locvar_cslinedown_cfname = lang("候補", "List"), lang("デッキ", "Deck"), locvar_tcginit_domname(0), locvar_tcginit_domname(1), locvar_tcginit_domname(2), locvar_tcginit_domname(3), locvar_tcginit_domname(4), locvar_tcginit_domname(5), locvar_tcginit_domname(6), locvar_tcginit_domname(7), locvar_tcginit_domname(8), locvar_tcginit_domname(9)
	locvar_cslinedown_cflist = 0
	locvar_cslinedown_cfmax = 1
	locvar_cslinedown_ccf = 0
	if ( locvar_actionproc_deckmode == 0 ) {
		locvar_cslinedown_cflist = 1, 2, 3, 4, 5, 6, 7, 8, 9
		locvar_cslinedown_cfmax = 9
	}

*select_deck_loop
	locvar_cslinedown_dlistmax = 0
	locvar_tcgdrawcard_dsc = 0
	repeat locvar_makecardlist_maxcard
		if ( locvar_cdbit_card(0, cnt) != (-1) ) {
			continue
		}
		if ( locvar_cdbit_card(1, cnt) != locvar_cpflip_cp ) {
			continue
		}
		if ( locvar_cslinedown_cflist(locvar_cslinedown_ccf) == 1 ) {
			if ( deck(locvar_cdbit_card(18, cnt)) == 0 ) {
				continue
			}
		}
		if ( locvar_cslinedown_cflist(locvar_cslinedown_ccf) >= 2 ) {
			if ( locvar_cslinedown_cflist(locvar_cslinedown_ccf) <= 8 ) {
				if ( locvar_cdbit_card(23, cnt) != locvar_cslinedown_cflist(locvar_cslinedown_ccf) - 2 ) {
					continue
				}
			}
		}
		if ( locvar_actionproc_deckmode == 1 ) {
			if ( locvar_create_card_cardn(0, cnt) != locvar_actionproc_deckrefn ) {
				continue
			}
		}
		if ( locvar_actionproc_deckmode == 1 | locvar_actionproc_deckmode == 2 ) {
			locvar_makecardlist_f = 0
			locvar_makecardlist_cnt2 = cnt
			repeat locvar_cslinedown_dlistmax
				locvar_tcgdraw_c = locvar_tcgdrawcard_dlist(0, cnt)
				if ( locvar_cdbit_card(18, locvar_tcgdraw_c) == locvar_cdbit_card(18, locvar_makecardlist_cnt2) ) {
					locvar_makecardlist_f = 1
					break
				}
			loop
			if ( locvar_makecardlist_f ) {
				continue
			}
		}
		cdbitmod 1, cnt, 1
		locvar_tcgdrawcard_dlist(0, locvar_cslinedown_dlistmax) = cnt
		locvar_cslinedown_dlistmax++
	loop
	repeat
		locvar_makecardlist_f = 0
		if ( locvar_cslinedown_dlistmax == 0 ) {
			break
		}
		repeat locvar_cslinedown_dlistmax - 1
			locvar_makecardlist_p = locvar_cdbit_card(18, locvar_tcgdrawcard_dlist(0, cnt)), locvar_cdbit_card(18, locvar_tcgdrawcard_dlist(0, cnt + 1))
			if ( locvar_makecardlist_p > locvar_makecardlist_p(1) ) {
				locvar_makecardlist_f = 1
				locvar_makecardlist_p = locvar_tcgdrawcard_dlist(0, cnt), locvar_tcgdrawcard_dlist(1, cnt)
				locvar_tcgdrawcard_dlist(0, cnt) = locvar_tcgdrawcard_dlist(0, cnt + 1), locvar_tcgdrawcard_dlist(1, cnt + 1)
				locvar_tcgdrawcard_dlist(0, cnt + 1) = locvar_makecardlist_p, locvar_makecardlist_p(1)
			}
		loop
		if ( locvar_makecardlist_f == 0 ) {
			break
		}
	loop
	gosub *select_deck_pos

*select_deck_loop_WHILE1
	if ( 1 == 0 ) {
		goto *select_deck_loop_WEND1
	}
	redraw 0
	gosub *tcg_drawInterface
	gosub *tcg_drawDeck
	redraw 1
	await 30
	key_check
	if ( key == key_next ) {
		locvar_cslinedown_ccf++
		snd SOUNDLIST_CURSOR1
		if ( locvar_cslinedown_ccf >= locvar_cslinedown_cfmax ) {
			locvar_cslinedown_ccf = 0
		}
		goto *select_deck_loop
	}
	if ( key == key_prev ) {
		locvar_cslinedown_ccf--
		snd SOUNDLIST_CURSOR1
		if ( locvar_cslinedown_ccf < 0 ) {
			locvar_cslinedown_ccf = locvar_cslinedown_cfmax - 1
		}
		goto *select_deck_loop
	}
	if ( key == key_west ) {
		locvar_tcgdrawcard_dsc--
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_east ) {
		locvar_tcgdrawcard_dsc++
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_south ) {
		locvar_tcgdrawcard_dsc += 8
		snd SOUNDLIST_CURSOR1
	}
	if ( key == key_north ) {
		locvar_tcgdrawcard_dsc -= 8
		snd SOUNDLIST_CURSOR1
	}
	gosub *select_deck_pos



	if ( key == key_enter ) {
		if ( locvar_cslinedown_dlistmax == 0 ) {
			goto *select_deck_loop_WHILE1_CONTINUE
		}
		if ( locvar_actionproc_deckmode == 0 ) {
			if ( locvar_cdbit_card(9, locvar_tcgdrawcard_dlist(0, locvar_tcgdrawcard_dsc)) == 10 ) {
				if ( locvar_cdbit_card(10, locvar_tcgdrawcard_dlist(0, locvar_tcgdrawcard_dsc)) == 0 ) {
					snd SOUNDLIST_FAIL1
					cardhelp lang("未実装のカード", "The card isn't available in this version."), 40
					goto *select_deck_loop_WHILE1_CONTINUE
				}
			}
*select_deck_loop_WHILE2
			if ( 1 == 0 ) {
				goto *select_deck_loop_WEND2
			}
			redraw 0
			calcdecksize
			gosub *tcg_drawInterface
			gosub *tcg_drawDeck
			locvar_actionproc_act = 0, 0, 0
			locvar_tcgdraw_cc = locvar_tcgdrawcard_dlist(0, locvar_tcgdrawcard_dsc)
			if ( deck(locvar_cdbit_card(18, locvar_tcgdraw_cc)) < card(0, locvar_cdbit_card(18, locvar_tcgdraw_cc)) ) {
				locvar_actionproc_act(0) = 1
			}
			if ( deck(locvar_cdbit_card(18, locvar_tcgdraw_cc)) != 0 ) {
				locvar_actionproc_act(1) = 1
			}
			if ( locvar_actionproc_act(0) == 0 ) {
				if ( locvar_actionproc_act(1) == 0 ) {
					snd SOUNDLIST_FAIL1
					goto *select_deck_loop_WEND2
				}
			}
			gosub *select_action
			if ( locvar_makecardlist_f == 0 ) {
				if ( locvar_actionproc_act(0) ) {
					deck(locvar_cdbit_card(18, locvar_tcgdraw_cc))++
					snd SOUNDLIST_CARD1
					goto *select_deck_loop_WHILE2_CONTINUE
				}
			}
			if ( locvar_makecardlist_f == 1 ) {
				if ( locvar_actionproc_act(1) ) {
					deck(locvar_cdbit_card(18, locvar_tcgdraw_cc))--
					snd SOUNDLIST_CARD1
					goto *select_deck_loop_WHILE2_CONTINUE
				}
			}
			goto *select_deck_loop_WEND2
*select_deck_loop_WHILE2_CONTINUE
			goto *select_deck_loop_WHILE2
*select_deck_loop_WEND2
			calcdecksize
			goto *select_deck_loop_WHILE1_CONTINUE
		}
		locvar_tcgdeck_rtval = locvar_tcgdrawcard_dlist(0, locvar_tcgdrawcard_dsc)
		locvar_tcgdeck_rtval = 1
		goto *select_deck_loop_WEND1
	}
	if ( key == key_cancel ) {
		if ( locvar_actionproc_deckmode == 0 ) {
			promptl(0, promptmax) = lang("セーブして終了", "Save & Exit"), "null", "" + promptmax
			promptmax++
			promptl(0, promptmax) = lang("セーブしないで終了", "Just Exit"), "null", "" + promptmax
			promptmax++
			val = locvar_tcgdrawcard_basex + 420, locvar_tcgdrawcard_basey + 230, 240, 1
			gosub *prompt_key
			if ( rtval == 0 ) {
				file = "" + exedir + "tmp\\deck_" + curdeck + ".s2"
				fmode = 23
				gosub *game_ctrlFile
			}
			else {
				gdata(GDATA_DECK_SIZE + curdeck) = locvar_tcgdeck_decksizebk
			}
			if ( rtval == (-1) ) {
				goto *select_deck_loop_WHILE1_CONTINUE
			}
		}
		locvar_tcgdeck_rtval = 0
		goto *select_deck_loop_WEND1
	}

*select_deck_loop_WHILE1_CONTINUE
	goto *select_deck_loop_WHILE1

*select_deck_loop_WEND1
	gsel BUFFER_BUF
	pos 0, 0
	picload exedir + "graphic\\bg_card.bmp", 1
	gosub *tcg_initBg
	return locvar_tcgdeck_rtval

*card_player
	if ( locvar_tcgdraw_selectmode == 0 ) {
		locvar_tcgdrawcard_cs = -1
		locvar_tcgdrawcard_csline = 0
	}
	if ( locvar_tcgdraw_selectmode == 1 ) {
		if ( locvar_tcgdrawcard_cs == (-1) ) {
			locvar_tcgdrawcard_csline = 0
		}
		else {
			locvar_tcgdrawcard_csline = 1
		}
	}

*card_player_WHILE1
	if ( 1 == 0 ) {
		goto *card_player_WEND1
	}
	tcgdraw
	locvar_tcgdrawcard_cursor = 1
	await 15
	stick locvar_dbghit_a
	key_check
	if ( key == key_east ) {
		locvar_tcgdrawcard_cs++
		snd SOUNDLIST_CURSOR1
		if ( locvar_tcgdrawcard_cs == 0 ) {
			if ( locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) == 0 ) {
				cslineup
			}
		}
		csfix
	}
	if ( key == key_west ) {
		locvar_tcgdrawcard_cs--
		snd SOUNDLIST_CURSOR1
		if ( locvar_tcgdrawcard_cs == (-1) ) {
			if ( locvar_tcgdrawcard_csline != 0 ) {
				locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
			}
		}
		if ( locvar_tcgdrawcard_cs == (-2) ) {
			if ( locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) == 0 ) {
				cslinedown
			}
		}
		csfix
	}
	if ( key == key_north ) {
		cslineup
		snd SOUNDLIST_CURSOR1
		csfix
	}
	if ( key == key_south ) {
		cslinedown
		snd SOUNDLIST_CURSOR1
		csfix
	}
	if ( key == key_enter ) {
		if ( locvar_tcgdrawcard_cs == (-1) ) {
			goto *card_player_WEND1
		}
		locvar_actionproc_act = 0, 0, 0
		locvar_cnvrare_s = ""
		locvar_tcgdraw_cc = locvar_makecardlist_clist(locvar_tcgdrawcard_cs, locvar_tcgdrawcard_csline)
		if ( locvar_tcgdrawcard_csline == 0 | (locvar_tcgdrawcard_csline == 3 & debug == 1) ) {
			if ( locvar_cdbit_card(10, locvar_tcgdraw_cc) <= locvar_tcgdraw_cpdata(5, locvar_cpflip_cp) ) {
				if ( locvar_cdbit_card(9, locvar_tcgdraw_cc) == 20 | locvar_tcgdraw_selectmode == 0 ) {
					locvar_actionproc_act(0) = 1
					locvar_cnvrare_s += lang("↑   カードを出す。\n", "UP: Put the card.\n")
				}
			}
			if ( locvar_saccard_sac == 0 ) {
				if ( locvar_tcgdraw_selectmode == 0 ) {
					locvar_actionproc_act(1) = 1
					locvar_cnvrare_s += lang("↓   カードを捧げてマナを得る(1ターンに1回)。\n", "Down: Sacrifice the card.\n")
				}
			}
		}
		if ( locvar_tcgdrawcard_csline == 1 | (locvar_tcgdrawcard_csline == 2 & debug == 1) ) {
			if ( locvar_tcgdraw_selectmode == 0 ) {
				if ( locvar_cdbit_card(14, locvar_tcgdraw_cc) != (-1) ) {
					if ( cardcandeclareattack(locvar_tcgdraw_cc) ) {
						locvar_actionproc_act(0) = 1
						locvar_cnvrare_s += lang("↑   攻撃を宣言する。\n", "UP: Declare an attack.\n")
					}
				}
			}
			if ( locvar_tcgdraw_selectmode == 1 ) {
				if ( cardcanblock(locvar_tcgdraw_cc) ) {
					locvar_actionproc_act(0) = 1
					locvar_cnvrare_s += lang("↑   ブロックする。\n", "UP: Block.\n")
				}
			}
			if ( cardcanuseskill(locvar_tcgdraw_cc) ) {
				locvar_actionproc_act(2) = 1
				locvar_cnvrare_s += lang("決定 スキルを使用する。\n", "ENTER: Use the skill.\n")
			}
		}
		locvar_makecardlist_f = 0
		repeat 3
			if ( locvar_actionproc_act(cnt) != 0 ) {
				locvar_makecardlist_f = 1
				break
			}
		loop
		if ( locvar_makecardlist_f == 0 ) {
			if ( debug == 0 ) {
				snd SOUNDLIST_FAIL1
				cardhelp lang("可能な行動はない。", "There is no action available."), 40
				goto *card_player_WHILE1_CONTINUE
			}
		}
		snd SOUNDLIST_CLICK1
		cardhelp locvar_cnvrare_s, 10
		tcgdraw
		gosub *select_action
		locvar_tcgdraw_cc = locvar_makecardlist_clist(locvar_tcgdrawcard_cs, locvar_tcgdrawcard_csline)
		key = ""
		if ( locvar_makecardlist_f == (-1) ) {
			goto *card_player_WHILE1_CONTINUE
		}
		if ( locvar_actionproc_act(locvar_makecardlist_f) == 0 ) {
			if ( debug == 0 ) {
				goto *card_player_WHILE1_CONTINUE
			}
		}
		if ( locvar_tcgdrawcard_csline == 1 | (locvar_tcgdrawcard_csline == 2 & debug == 1) ) {
			if ( locvar_makecardlist_f == 0 ) {
				if ( locvar_tcgdraw_selectmode == 1 ) {
					locvar_actionproc_attacktarget = locvar_tcgdraw_cc
					goto *card_player_WEND1
				}
				locvar_actionproc_cardstack(0, locvar_actionproc_stack) = locvar_tcgdraw_cc, -1, locvar_cpflip_cp
				locvar_actionproc_stack++
				actionproc
				if ( gameover() ) {
					goto *card_player_WEND1
				}
				if ( locvar_tcgdrawcard_cs >= locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) ) {
					locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
				}
				csfix
				goto *card_player_WHILE1_CONTINUE
			}
			if ( locvar_makecardlist_f == 1 ) {
				locvar_cdbit_card(14, locvar_tcgdraw_cc) = 0
			}
			if ( locvar_makecardlist_f == 2 ) {
				locvar_actionproc_cardstack(0, locvar_actionproc_stack) = locvar_tcgdraw_cc, -3, locvar_cpflip_cp
				locvar_actionproc_stack++
				if ( locvar_actionchain_chainmode ) {
					locvar_actionchain_chaincontinue = 1
					locvar_actionproc_spellused = 1
					goto *card_player_WEND1
				}
				actionproc
				if ( gameover() ) {
					goto *card_player_WEND1
				}
			}
			if ( locvar_tcgdrawcard_cs >= locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) ) {
				locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
			}
			csfix
			goto *card_player_WHILE1_CONTINUE
		}
		if ( locvar_makecardlist_f == 1 ) {
			locvar_tcgdrawcard_cursor = 0
			saccard locvar_tcgdraw_cc, locvar_cpflip_cp + (locvar_tcgdrawcard_csline == 3)
			if ( locvar_tcgdrawcard_cs >= locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) ) {
				locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
			}
			csfix
			goto *card_player_WHILE1_CONTINUE
		}
		if ( locvar_makecardlist_f == 0 ) {
			locvar_tcgdrawcard_cursor = 0
			putcard locvar_tcgdraw_cc, locvar_cpflip_cp + (locvar_tcgdrawcard_csline == 3)
			if ( gameover() ) {
				goto *card_player_WEND1
			}
			if ( locvar_cdbit_card(9, locvar_tcgdraw_cc) == 20 ) {
				locvar_actionproc_cardstack(0, locvar_actionproc_stack) = locvar_tcgdraw_cc, -3, locvar_cpflip_cp
				locvar_actionproc_stack++
				if ( locvar_actionchain_chainmode ) {
					locvar_actionchain_chaincontinue = 1
					locvar_actionproc_spellused = 1
					goto *card_player_WEND1
				}
				actionproc
			}
			if ( gameover() ) {
				goto *card_player_WEND1
			}
		}
		if ( locvar_tcgdrawcard_cs >= locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) ) {
			locvar_tcgdrawcard_cs = locvar_makecardlist_clistmax(locvar_tcgdrawcard_csline) - 1
		}
		csfix
	}
	if ( key == key_cancel | key_escape ) {
		goto *card_player_WEND1
	}
	if ( key == "s" ) {
		promptl(0, promptmax) = lang("降参する", "Surrender"), "null", "" + promptmax
		promptmax++
		val = locvar_tcgdrawcard_basex + 420, locvar_tcgdrawcard_basey + 230, 200, 1
		gosub *prompt_key
		if ( rtval == 0 ) {
			locvar_tcgdraw_cpdata(4, 0) = 0
			locvar_tcgdrawcard_cursor = 0
			return
		}
	}
	if ( debug ) {
		getkey locvar_dbghit_a, 112
		if ( locvar_dbghit_a ) {
			repeat 5
				getrandomcard locvar_cpflip_cp
			loop
		}
		getkey locvar_dbghit_a, 113
		if ( locvar_dbghit_a ) {
			locvar_actionproc_deckmode = 0
			locvar_actionproc_deckrefn = "slime"
			gosub *select_deck
		}
	}

*card_player_WHILE1_CONTINUE
	goto *card_player_WHILE1

*card_player_WEND1
	locvar_tcgdrawcard_cursor = 0
	return

*select_action
	redraw 0
	locvar_makecardlist_p = 0
	locvar_makecardlist_i = 0
	locvar_makecardlist_f = 1

*select_action_WHILE1
	if ( 1 == 0 ) {
		goto *select_action_WEND1
	}
	locvar_makecardlist_p++
	locvar_makecardlist_i += locvar_makecardlist_f
	if ( locvar_makecardlist_i > 30 ) {
		locvar_makecardlist_f = -1
	}
	else {
		if ( locvar_makecardlist_i < 0 ) {
			locvar_makecardlist_f = 1
		}
	}
	repeat 3
		locvar_tcgdrawcard_x(cnt) = locvar_cdbit_card(2, locvar_tcgdraw_cc) + 20
		if ( cnt == 0 ) {
			locvar_tcgdrawcard_y(cnt) = locvar_cdbit_card(3, locvar_tcgdraw_cc) - limit(locvar_makecardlist_p * 3, 0, 16)
		}
		if ( cnt == 1 ) {
			locvar_tcgdrawcard_y(cnt) = locvar_cdbit_card(3, locvar_tcgdraw_cc) + 60 + limit(locvar_makecardlist_p * 3, 0, 16)
		}
		if ( cnt == 2 ) {
			locvar_tcgdrawcard_y(cnt) = locvar_cdbit_card(3, locvar_tcgdraw_cc) + 30
		}
		gmode 0
		gsel BUFFER_PIC
		pos cnt * 48, 264
		gcopy BUFFER_SCREEN, locvar_tcgdrawcard_x(cnt), locvar_tcgdrawcard_y(cnt), 36, 36
		gsel BUFFER_SCREEN
		if ( locvar_actionproc_act(cnt) == 0 ) {
			continue
		}
		color 0, 0, 0
		gmode 4, 0, 0, limit(locvar_makecardlist_p * 30 + 20, 0, 255)
		pos locvar_tcgdrawcard_x(cnt), locvar_tcgdrawcard_y(cnt)
		gcopy BUFFER_PIC, 192, 96, 36, 36
		gmode 4, 0, 0, 50 + locvar_makecardlist_i * 2
		pos locvar_tcgdrawcard_x(cnt) + 13, locvar_tcgdrawcard_y(cnt) + 11
		gcopy BUFFER_PIC, 336 + (cnt == 2) * 12, 96 + cnt \ 2 * 24, 12, 12
	loop
	redraw 1
	redraw 0
	gmode 0
	repeat 3
		if ( locvar_actionproc_act(cnt) == 0 ) {
			continue
		}
		pos locvar_tcgdrawcard_x(cnt), locvar_tcgdrawcard_y(cnt)
		gcopy BUFFER_PIC, cnt * 48, 264, 36, 36
	loop
	await 15
	key_check
	if ( key == key_north ) {
		locvar_makecardlist_f = 0
		goto *select_action_WEND1
	}
	if ( key == key_south ) {
		locvar_makecardlist_f = 1
		goto *select_action_WEND1
	}
	if ( key == key_enter ) {
		locvar_makecardlist_f = 2
		goto *select_action_WEND1
	}
	if ( key != "" ) {
		locvar_makecardlist_f = -1
		goto *select_action_WEND1
	}
	goto *select_action_WHILE1

*select_action_WEND1
	return























































































